msg,Id
Messages,7825
"09:57 pm March 8, 2017                             Scrum.org may, at its discretion, remove any post that it deems unsuitable for these forums. Unsuitable post content includes, but is not limited to, Scrum.org Professional-level assessment questions and answers, profanity, insults, racism or sexually explicit content. Using our forum as a platform for the marketing and solicitation of products or services is also prohibited. Forum members who post content deemed unsuitable by Scrum.org may have their access revoked at any time, without warning. Scrum.org may, but is not obliged to, monitor submissions.",7825
Log in to reply,7825
Messages,8228
"01:29 pm April 10, 2017                             Hi,I am a Scrum Master who has been working with a couple of different teams over the past few months.One of the teams I joined, from my observations and discussions in retro's, don't want to follow the basic rules of Scrum. eg. One of the developers sees no point to the Planning meeting, and is happy once the items have been Groomed in advance to figure it out himself once he picks it up - he has made it clear he sees himself as a prisoner in most of our meetings and does not want to go. Another developer sees anything process related as being a waste of time, and just wants to focus on coding. The team don't have a stable velocity, and there is no concern if stories don't get done within the sprint. We do retro's, and I try to explain the benefits and reasons we do these meetings, practices, etc. and I have given workshops on things like writing user stories, Agile values, etc. - its clear Scrum or Agile is not widely accepted by the team. Here's the thing: the Product Owner is happy, the team is happy with the way things are, and management aren't concerned or putting pressure on around things like predicability, as we have very long release cycles to our production environment (every 6 months). I find this a difficult position as a Scrum Master to work in and its not something I've experience with other teams before. Has anyone ever been in this situation as a Scrum Master, and if so, what did you do?",8228
"06:02 pm April 10, 2017                    If people are happy right now then that's great. Perhaps the organization faces little risk and complexity and don't actually need Scrum.Rather, the problem would lie in pretending to do Scrum. It's important to avoid using Scrum terminology where Scrum isn't happening. If I was you, that's where I'd start. I'd correct people when they use the terminology inappropriately. I'd explain what is needed for the words to hold true. Part of being a Scrum Master is being an organizational coach. If coaching is perceived negatively by the organization - and it might be - I'd want to flush the problem out.          Log in or register to post comments",8228
"11:03 am April 11, 2017                    Hi Ian,This is the feeling I get - the organisation doesn't see a risk of doing things wrong because they are quite far ahead of competitors.Any advice on flushing the problem around coaching perceptions out?           Log in or register to post comments",8228
Log in to reply,8228
Messages,8214
"08:01 pm April 8, 2017                             Hi CommunityI’m not a native English speaker, I’ve a goal to get my PSM 1 certification in first attempt. So here am I asking for the best advice, to be certified PSM 1.?Right now I’m reading the Scrum guide “2016-Scrum-Guide-US”Sooner I’ll test my knowledge on :http://mlapshin.com/index.php/2015/09/08/psm-exam/https://www.classmarker.com/online-test/start/?quiz=vek54a6ec10658efWhat do you think ?I do not have sufficient money to buy additional resource’s, so I’m searching what can help me to get this certification.Thanks for your answersYK ",8214
"09:03 pm April 10, 2017                    There are dozens of threads here in the forum on what worked for others.  In addition to what you have planned, I would advise spending a set amount of time every day reading this forum. As for additional resources, I don't know where you are located, but you should explore seeing what libraries you can access, especially online libraries.   You can probably find e-books, especially those authored by Schwaber and Sutherland.   There is a popular book, and one I advise, by Ali that I have heard is available as a free PDF, but I can't 100% say that is valid.  You should do some searching.   I don't have any insight into the link you provided, hopefully others can comment if it is good or not.  Be careful about using sources that are not strongly reccomended here in this forum.  For example, there is a book called something like ""The Scrum Book of Knowledge"" or something like that.  It is quite terrible and will cost you points on the exam. Mostly, read this forum and come up with a strategy.  Read the posts about how people passed, and other posts about specific uses of Scrum.  I see several posts just today that look like they came right off the exam. For what it is worth, here is the advice I posted in a thread a few days ago.  I achieved 78/80 on my first attempt. I came here to make a similar post, but perhaps by adding to the thread it will serve as a better resource for others. I also recently passed PSM-I.   Obviously there is some great advice in these forums, so I will try and not repeat those. In addition to the standards of reading the Scrum Guide and taking the Open Assessments for Scrum Master and Product Owner, I used the following resources - - Read the book ""Software"" in 30 Days- Read the book ""Scrum"" by Sutherland- Read the book ""Scrum Narrative and PSM Exam Guide"" by Mohammed Musthafa Soukath Ali (and read his associated pocket guide)- Subscribed for one week to BostonAgileTrainings Mock tests, which I believe was $10. I did not use their training material. - Used the practice tests at mlapshin.comThere are other resources out there, and you really need to be careful about what you use.  For example, I had a copy of the Scrum Master Training Manual from Mplaza that listed 6 Artifacts.  A different version I had showed the correct listing of Artifacts.   So, whatever your resources, make sure they are current and up to date. Advice on the forum is pretty solid all the way around.   Take the open assessments until you get 100% all the time. These not only give you a feel for the format of the test, but I probably had at least 10 or 15 questions that were straight from these open assessments, so those are pretty much free points. I really found the best resource to be the book by Ali.  He actually tries to guide te reader into an active learning process, which is what you need to do.  Essentially, for every sentence in the Scrum Guide, you need to ask yourself ""what does this mean in an applied setting, how would I actually use this?""  If you can begin to internalize that concept while reading it will take you a long ways.  Conversely, while taking a test, you invert this idea and ask ""what concept in the Scrum Guide does this question speak to?""   The test is very much asking you to apply Scrum principles. I advise reading the Scrum Guide and Ali's book before reading the ""Scrum"" and ""Software in 30 Days"" books.  I found the utility of the latter two books to be in the application and execution of Scrum, which is much easier to understand when you have the knowledge of the construction of Scrum.  Not to mention that they are fun reads and show actual successful transformations to Scrum, which gives an added real world view. I also advise picking two or three sample exams and doing them until you pass with 90% or better.  However, hold one set of sample exam in reserve.   So, if you pick 3 exam sources, practice 2 of the 3 regularly.  Then, right before taking the real exam is when you want to take the final set of practice exam.  The reason is that the more you practice anything, the more you will start to learn those questions, those answers and that style of question.  So, you might be scoring very high but that could be just because you are starting to learn the right answer.  Holding one test in reserve will force you to apply knowledge in an unfamiliar setting, which is what you want before the real exam.I also advise as you engage our learning process, start to build yourself a ""1 pager"" based intially on the Scrum Guide.  Sure, you can find plenty of one page slides online, but there is a part of learning that comes from your own captue and recreation of information.  After you make this one pager, keep it next to you as you read other materials and use it as a reference, making notes and updating the one pager through the process. As humans, we tend to prefer our learning to be specific, and fact based as opposed to concept based.  This will throw you during the real exam if you aren't careful.   You will see questions, and question patterns that look familiar but if you don't read every word, it will trip you up. For example, you might see a question that asks about Done for a Product Backlog Item, which might be different than Done for a Sprint Backlog item.   If you are disposed to thinking about DoD for Sprints and Sprint Backlog Items, you really need to think about this for a minute before answering. You need to read every word of a question and don't make the mistake of thinking that you recognize the question based on some key words and thus know the answer. Also for example, you might see a question about treatment of Non Functional Requirements and you think ""oh man, I read three books and not one of them mentioned NFRs, what do I do?"" Again, the answer is to apply the principles of Scrum.  I would argue that NFRs, Functional Requirements, or Whackadoo Blue Moon Chupacabra Requirements should all be treated the same way if they are delivering value to the customer. Finally, right before testing, re-read the Scrum Guide.  As many others have said, every word and every sentence is chosen carefully.  I did this and there were at least 3 questions on the exam that used language straight out of the Scrum Guide that I was able to recall because I had read it 10 minutes before. Well, that is a bit more than my 2 cents. I tried to give you some food for thought, but without revealing any testing specifics.   I hope this helps and is a unique perspective.          Log in or register to post comments",8214
Log in to reply,8214
Messages,5554
"05:37 am September 5, 2013                             We have endless discussions how to handle if the team is finishing the sprint to early. I  know that basically should be the sprint planned as a challenge. But we have from time to time situation when the team is finishing the sprint earlier as expected. My question is how should we handle the situation? Our Scrum Master tends ""to replan"" when we have the possibility to attach the new stories for the rest of the time to the current sprint. But we are running into the danger to ""destroy"" successfully completed sprint if we are not finishing the new stories. The next option could be end of the sprint and starting the new one. But the Scrum Master means that this is problem for the velocity measurement, what could be correct. What do you mean?",5554
"06:09 am September 5, 2013                    Be warned. Until now we failed to implement scrum so my opinions are purely theoretical. :-)  The problem with the velocity is, that your ""real"" velocity is higher than the number of points you had in the sprint, because you could have achived more. So if you plan the next sprint based on that number you will have not enough points in it and probably finish it to early, too. So I think your Scrum Master is correct.  The problem of ""refill"" or adding items to the running sprint is (albeit other problems) a psychological one. It destroys the feeling for ""achiving the goal"" and could lead to a kind of ""Sisyphos"" syndrome and surely demotivates the team to try to finish work to early next time.  I think it would be best (don't know if it is ""good"" scrum) to finish the sprint early and start the next and take into account that the velocity is actually a little bit higher, than the numbers tell you. Perhaps you could add some percentaged number based on the percentage of time you spent, but I think a rule of thumb will do either.           Log in or register to post comments",5554
"07:00 am September 5, 2013                    > Our Scrum Master tends ""to replan"" when we have the possibility to attach the new stories  > for the rest of the time to the current sprint.  That's good, and I hope he or she involves the rest of the Scrum Team. Continual replanning is good in Scrum. However, changing a Sprint Goal is not.  > But we are running into the danger to ""destroy"" successfully completed sprint if we are not  > finishing the new stories.  Nonsense. The Sprint Goal has been achieved. The problem seems to be one of underestimation and the reasons behind this should be explored in your next retrospective.  > I think it would be best (don't know if it is ""good"" scrum) to finish the sprint early and start the next   No, the Sprint must complete it's timebox. Replan and consider bringing work forward with the approval of the product owner, or paying back some technical debt or doing backlog grooming.          Log in or register to post comments",5554
"07:28 pm September 5, 2013                    I'd pull in more stories. The backlog should be groomed enough that the team is already familiar enough with the functionality to begin (and learn more as they delve into it).  The answer also depends on if you're deploying every sprint. If so, I could see potential danger in adding more, not completing them and not having a ""ready for prod"" product at the end of the sprint. If that's the case, I could see an argument for ending the sprint early. Even then, if you can have those incomplete stories still in a deployable state, I think its better to keep the sprints at the same rhythm.          Log in or register to post comments",5554
"08:43 am September 9, 2013                    Why only deploy at the end of the sprint? Why only deploy once a sprint or less? Why not a few times a sprint?           Log in or register to post comments",5554
"09:26 am September 9, 2013                    Everything has to be tested before it can go live. We can't push individual stories in our deployment setup, so we can't deploy until everything started is Done.          Log in or register to post comments",5554
"06:42 am September 10, 2013                    We fixed this with our branching model and can start in the sprint with next release features, and are still able to release the old version or make bugfixes in it to work immediatly on the feedback we get          Log in or register to post comments",5554
"08:19 am September 19, 2013                    The SM is correct to try to add.  However, keep in mind the following:  1. your committment for the sprint has been satisfied. whatever you add is ""bonus"".  2. unless you are delivering to actual production each sprint (not a good system, because it puts gratuituous pressure on the commitment), it doesn't really matter if you finish your addition (all that matters is that there is no idle time).  3. you should be easily capable of adding something realistic (eg: look at your story point burndown for the sprint and compare that against the remaining time to see which story to add).  If you do that, then the PO will be able to safely adjust the team's velocity.          Log in or register to post comments",5554
"08:39 am September 19, 2013                    Hello,  no, no no. SM is not correct an should read the scrum guide. Its not the task of the SM to add, but to help the team to learn and do good work.  In this case it is the team who have to decide what to do. The work is done. They can make a party, play silly games, may doing some further education, may doing some refactorings or ask the PO if there is something useful to do. They may pull, but nobody outside the team may push          Log in or register to post comments",5554
"02:56 pm September 19, 2013                    It is completely up to the Dev Team to decide how much work to take on in a sprint, and this includes the ownership of deciding when to take on more scope in a sprint.  If they do choose to take on more work, then the Dev Team decides ""how much"", and the PO decides ""which PBI"".  Ideally, it should be a PBI that can be finished by the end of the Sprint, because we want to make sure we are delivering a PRI(potentially releasable increment.)  However, there are other ways to achieve a PRI even with a PBI that carries over.  In general, if the ""finish"" is a day or two before sprint end, I tend to coach teams to spend the time either:  a) adding a small PBI  b) learning about test automation (as most Scrum teams have a deficiency in this area), or  c) investigating the upcoming PBI's -- but not starting work on them yet, or  d) working on some other sort of ""improvement"" activity, but never ""refactoring"".^1    If the finish is farther in advance than a day or two, then I coach that they should probably take on more work.  In all cases, I coach to inspect and adapt and be sure to discuss in the retro.    Some teams I've coached have decided to have a PBI or two already tasked out and ready to go ""on deck"" in case this happens.  A couple of rules on that though -- 1.  No one starts the on deck work without the normal discussion between Dev Team and PO -- and PO still has the right to select a different story to be brought in.  2. I coach the team and org what a sustainable pace means and that outside (outside the Dev Team) pressure to take on more than desired is a violation of Scrum.  ^1 I don't really believe in ""refactoring"" except when it involves the current PBI you are implementing, as part of TDD, with already existing automated tests.           Log in or register to post comments",5554
"12:20 pm October 3, 2013                    This is very interesting discussion! I agree with that underestimation should be discusses in the retrospective! But adding the new story is only allowed, when the story has the something to do with the Sprint goal and the Team is committed. Otherwise the Sprint cancellation.          Log in or register to post comments",5554
"07:35 am November 25, 2013                    The Scrum Guide is crystal clear : ""If the work turns out to be different than the Dev Team expected, they collaborate with the PO to negociate the scope of Sprint Backlog within the Sprint"".  For me, ""different"" means they overcommit or they undercommit. As soon as the Dev Team see they deviate from the goal, they should be transparent and negociate with the PO.          Log in or register to post comments",5554
"07:51 am November 26, 2013                     Posted By Olivier Ledru on 25 Nov 2013 07:35 AM  The Scrum Guide is crystal clear : ""If the work turns out to be different than the Dev Team expected, they collaborate with the PO to negociate the scope of Sprint Backlog within the Sprint"".    For me, ""different"" means they overcommit or they undercommit. As soon as the Dev Team see they deviate from the goal, they should be transparent and negociate with the PO.  Olivier, this has been a problematic point during my studies for PSM. I tough the Sprint Backlog may change in accordance with the PO, but only if the Dev Team may have overcommited the work to be done. Reading the other posts here, i understood that if the Dev Team has already finished all of his tasks for the Sprint, more work can be done, but it is a ""bonus"" and even if the Team fails to deliver this bonus, the Sprint Goal would be achieved. Am i correct?           Log in or register to post comments",5554
"08:53 am November 26, 2013                    > if the Dev Team has already finished all of his tasks for the Sprint, more  > work can be done, but it is a ""bonus"" and even if the Team fails to deliver  > this bonus, the Sprint Goal would be achieved. Am i correct?   Yes you are correct, assuming that any undone ""bonus"" work does not compromise the delivery of the increment.          Log in or register to post comments",5554
"10:14 am November 26, 2013                     Posted By Ian Mitchell on 26 Nov 2013 08:53 AM  > if the Dev Team has already finished all of his tasks for the Sprint, more    > work can be done, but it is a ""bonus"" and even if the Team fails to deliver    > this bonus, the Sprint Goal would be achieved. Am i correct?     Yes you are correct, assuming that any undone ""bonus"" work does not compromise the delivery of the increment.  Perfect Ian, thanks a lot!          Log in or register to post comments",5554
"09:06 pm February 14, 2014                    We just started on the tasks for the next Sprint (got a head start).  While in release planning we had many Sprints roughly planned out, we always had 2 or 3 Sprints planned in detail, though they could, of course, change until those later Sprints started (and sometimes did as we were agile about responding to the market, customers, etc., etc.).          Log in or register to post comments",5554
"04:55 pm February 21, 2017                    I'd like to weigh in on this and pretty much agree with Charles and his comments:  "" In general, if the ""finish"" is a day or two before sprint end, I tend to coach teams to spend the time either:      a) adding a small PBI      b) learning about test automation (as most Scrum teams have a deficiency in this area), or      c) investigating the upcoming PBI's -- but not starting work on them yet, or      d) working on some other sort of ""improvement"" activity, but never ""refactoring"".""I think also that the team makes a sprint commitment,  it's therefore a new commitment if they chose to bring in work and that commitment is to get stuff Done (done, done.)  It's not a great mindset to tell a team that they're getting bonus points, what they're doing is making a new commitment.  So it's good to be careful about that when you bring in new work - can you commit to getting it done?  If not, can you split the story to a smaller unit and get that done?  I know it sounds a bit hard, but self-organizing means self-disciplined. If the sprint boundaries begin to be degraded (oh i'll just start that new thing sooner) and blurry, then not only metrics get messy, but team mindset gets messy too.  There is always innovation, celebration, automation, dotting i's crossing t's, learning and tasking/preparation that can be served in the 36 hours leading to the end of the sprint.  best,k          Log in or register to post comments",5554
"06:53 pm April 10, 2017                    I am not sure if this thread is still alive but I did have a question that expanded on this topic. If the team has decided to work with the PO to add a user story to their sprint is this work still considered 'committed' or if it ends up not being completed is it alright for the team to say, ""It is okay, that was just adopted work.""?          Log in or register to post comments",5554
"08:38 pm April 10, 2017                    Should user stories on a Sprint Backlog ever be committed to at all, given that the backlog represents a plan and forecast of work for meeting the Sprint Goal? Wouldn't the Sprint Goal itself make a better commitment?          Log in or register to post comments",5554
Log in to reply,5554
Messages,8229
"01:55 pm April 10, 2017                             HiI wanted to know if it is feasible to implement scrum in a traditional waterfall project and what the challenges would be? If there are dependencies on work items due to the overall project, can scrum still work? ",8229
"06:13 pm April 10, 2017                    How would tested and integrated increments of genuine release quality be delivered each Sprint? How would a team inspect and adapt an emergent product and a collaborative way of working? Where would the transparency come from, and how would value and progress be evidenced?          Log in or register to post comments",8229
Log in to reply,8229
Messages,8220
"09:59 am April 10, 2017                             I want prepar The Certificied Scrum Master and wanted consultand webs where practice the Exam. I´m Spanish and would like take the Exam in English and on line from the Scrum. org Thanks!!! ",8220
Log in to reply,8220
Messages,8215
"10:14 pm April 8, 2017                             Help.. I am new to SCRUM.We have been doing scrum for a short amount of time. We have been struggling as the due to changing needs/issues in our corporate environment our stake holder were complaining that we always said we would deal with it in 4 to 9 weeks.   Also we had issues where we waited for another team before we could complete an item.We were kinda stuck until our scrum master left.  A former team lead suggested we (our team and Product owner) think about asking the other team if it was okay to tackle the task we were dependent on to minimize dependencies. He also suggested given the reaction of stakeholders when we say wait 4 to 6 weeks before we can tackle your issue,that we consider shortening the sprint durations to 2 weeks to allow more contact with stake holders.When I asked questions online.  I got from other Scrum Masters that Scrum does not deal with technical issues.  It is up to the team.  That we need a Scrum of Scrum or SAFE to solve our issues. Been really fustrated.  Scrum Master keeps saying SCRUM is agile.  But I feel that Scrum is a process (tool) to allow us to develop software in a more adaptable manner. But starting to feel like all it is a set of rituals that people who have letters after there name use to say we are Agile..  Help!!! ",8215
"08:05 am April 10, 2017                    Hello Yoshiichi,When I first wanted to learn about Scrum, I made a start by reading the ""Agile Manifesto"" & ""Scrum Guide"". If many teams are involved, one might also want to refer to the ""Nexus Guide"". Taking the Open Assessments helped me get a better idea of what Scrum is and what it is not. Consider looking up the ""Subway Map to Agile Practices"" as well for other practices not described in the Framework. I have refrained from listing down URL's, a quick web search for the keywords in double quotes should suffice.Other than the above, look at ways to have a discussion with Management to help reduce and remove some of the systemic impediments which cannot be addressed by the team.--Bhuvan.          Log in or register to post comments",8215
"09:04 am April 10, 2017                    Hi Yoshiichi. If Scrum had one purpose and one purpose only, what would that be? Moreover, I don't really understand what you wrote ""I got from other Scrum Masters that Scrum does not deal with technical issues."" What is the contect behind this quote?          Log in or register to post comments",8215
Log in to reply,8215
Messages,8198
"12:18 pm April 6, 2017                             I was going through a lot of articles and blogs but still i am unable to understand that if we really need test cases in scrum? Acceptance criteria is treated as test cases but those are not actually test cases in my opinion. What is the best practice we can follow or can we use test cases along with acceptance criteria in order make QA process more efficient.  ",8198
"01:22 pm April 6, 2017                    How about using test driven development, with automated regression testing, as a means to improve efficiency?          Log in or register to post comments",8198
"06:47 am April 7, 2017                    Thats more relevant to writing good code. In some scenarios the testers are not technical enough. So the testers will have to write descriptive statements like test cases or acceptance test. What will we do in that case?          Log in or register to post comments",8198
"12:56 pm April 7, 2017                    I worked on a program a few years ago that began to transition away from writing manual test cases by traditional QA testers and to writing automated UI tests in code instead.  It was a gradual process and they're still fully transitioning to that approach.  And you're right, the traditional QA tester was not technical enough to write coded UI tests.  So the QA test team was retrained to learn basic coding skills.  The developers setup the framework for the automated UI tests and supported the testers to use that framework.  If you setup a good framework that uses the page object design, then you'll find that writing the UI tests in code is actually very similar to writing it in English.          Log in or register to post comments",8198
"06:17 am April 8, 2017                    Testing should demonstrate that the increment meets requirements and is fit for release. The process of testing should not be aligned to skill silos such as ""writing good code"" or to sub-roles such as ""testers"". Rather, there may be a range of testing techniques which might be brought to bear, such as unit testing and BDD testing. Development Team members would be jointly accountable for implementing these tests, including any regression testing of work invested in prior increments.          Log in or register to post comments",8198
"08:58 am April 10, 2017                    Quality is multi-dimensional and may not be limited to any particular type of test cases. Scrum does not have any preference or bias towards any particular technique or practice. Team can decide what is useful and works for them and revisit it during Sprint Retrospective to improve (product) Quality. Accountability lies is with with the whole Development Team and not just the member with specialist testing skills.          Log in or register to post comments",8198
Log in to reply,8198
Messages,8212
"11:33 am April 8, 2017                             Lately I read the Scrum Guide over and over again. When I learn new things from another resources, I easily get confused. Here another one.* Product Backlog belongs to PO and ordering is done PO.* PBI estimats solely belong to DT.Assume that PO has the order of works A, B, C, D, E. (Most important to less). Each has same estimates. However, DT wants to select D and E for the first sprint. In mountaingoatsoftware.com it says The team then determines which items they can complete during the coming sprint. The team then moves items from the product backlog to the sprint backlog. Scrum Guide says The ""number"" of items selected from the Product Backlog for the Sprint is solely up to the Development Team. Only the Development Team can assess what it can accomplish over the upcoming Sprint.Both have same meanings? If so, does it mean that PBI items are selected by DT for the Sprint Backlog?Does it mean that ordering the product backlog items is actually nothing? Because PO's decision is not cared. On the other hand, If PO selects the first items to do, can we say that PO forces DT to do works according to Product Backlog order.Also I read many posts in the forum. Usually they say that items are selected by DT. Shouldn't it be ""number of items"" instead of items? ",8212
"07:00 pm April 9, 2017                    Atacan, during the Sprint Planning event, the development team works to project the functionality they feel they can and should accomplish.  But, how do they determine that?  The entire Scrum Team is at the Sprint Planning meeting.  What role do the Product Owner and Scrum Master play in the meeting if the Development Team is supposedly doing all the work?If the Product Backlog isn't aligned very closely with the work the developers are selecting, It sounds to me like perhaps the Sprint Goal isn't clearly defined or agreed upon by the team.I did also want to call out something as a sidebar.  You mentioned, ""can we say the PO forces DT to do the work according to Product Backlog order.""  Remember that neither the PO or the SM roles are managerial roles.  Demanding a self-directing team do specific work rather than supporting the team with the artifacts and events is pulling away from agile principles.          Log in or register to post comments",8212
"09:56 pm April 9, 2017                    The PO and Development Team should agree which items from the Product Backlog will be planned into the Sprint. However, the amount of work the Development Team take on is entirely up to them. Whatever is agreed must therefore be subject to that constraint.          Log in or register to post comments",8212
Log in to reply,8212
Messages,7814
"07:58 pm March 7, 2017                             Hello all.  I recently decided to sit for the PSM II exam with no prior scrum certifications, and was able to pass.  I’ve seen a few posts here about how to prepare for the gap between the two tests, but not a lot of people who might want to jump straight into an advanced certification without tackling the topics progressively.  It’s certainly not an easy route, but it’s a possible one.  I’d like to share my experience with all of you, and I’m happy to answer any questions.--------------------------------------------------------------------To start my routine off, I took the Scrum Open test.  Then I took the Developer Open test the next day, once I had forgotten the Scrum Open questions.  I did this without reading the Scrum Guide.  As expected, I bombed both of them horribly.  I think I scored around the 30% mark.  However I was able to get a feel for the kinds of questions asked, and an understanding of Scrum methods I’ve seen within my organization as well as vocabulary that were brand new to me.  Now I had a baseline for my knowledge, and I sat down and read through the Scrum Guide, twice.  At the end I tested with the Scrum Open again, getting a score of around a 70%.I then proceeded to take a 2-day Agile training seminar.  This offered through my work and was NOT a Scrum seminar, though it covered many Scrum practices.  Some of the information was dated or related to other methodologies, so terms like “Sprint 0” and “Hardening Sprint” were thrown around.  This turned out to be a blessing in disguise because as I continued to take the Scrum Open exams, I was forced to identify the differences between “Scrum” and “Agile.""  Once the seminar was over, I took the Scrum Open two more times, getting 95%+ each time.  This was the point I moved over to the Nexus Open and Nexus Guide.  I don’t have much to say on this one; it took me about a day to get to 95%+ mastery.  Nexus was a relatively easy concept after mastering the core Scrum Master topics.Finally, I looked up as much information as I could find on the PSM II.  In 2016 the PSM II exam was drastically changed, and most of the information I found was related to what has since become the PSM III.  Luckily a few blog writers have updated their articles to keep their information relevant to the correct exam.  This helped me understand what I was getting into a little better, and how the PSM II would differ from the Scrum Open.After all that, I took the PSM II, and...failed.For all the practice and preparation, the PSM II is difficult!  However, failure is not something that should be feared; it should encourage inspection and adaptation.  Since Scrum.org provided me the sections I was weak in, I had a general idea of what to look for.   Armed with these new questions and categories, I spent several hours doing research and filling in the knowledge gaps I identified.A few hours later, I retook the exam.  I did this within 24 hours of the first attempt.  This gave me time to quickly power through the questions I was confident on during the last attempt, and focus more time onto those I was less certain about or the new questions from the pool that weren’t on my previous attempt.This time I passed.  Would I recommend you follow in my footsteps and ignore the lower certifications?  No, not really.  Take the PSM I.  Take the SPS.  Then look towards the PSM II afterward.  Work your way up rather than throwing yourself right into the thick of things.  The PSM II builds off the other certifications so by taking them in order, you can build up your knowledge with checkpoints.  Additionally, it means you can walk away from a failed upper-level exam with existing certifications in hand.Best of luck with your next certification!--------------------------------------------------------------------So to recap my process:Scrum Open blindReview the Scrum GuideScrum Open to 70%Formal trainingScrum Open to 100%Nexus Open blindRead the Nexus GuideNexus Open to 100%PSM II – FailScrum Open, Nexus Open, ResearchPSM II – Pass  ",7814
"06:06 am March 8, 2017                    Great share          Log in or register to post comments",7814
"08:06 am April 9, 2017                    Thanks Jason for sharing this, it will be helpful.Would you suggest any books or content to required to appear for PSM IIThanks,          Log in or register to post comments",7814
"08:53 pm April 9, 2017                    Megha,For me the 2-day agile seminar was pivotal.  You could replace this with book learning and research, but since I didn't go that route I can't offer specific recommendations for readings.  In either case, I would still recommend some form of reading and practice outside of the Scrum Guide.  While the PSD I and PSPO I (and presumably, the PSM I) all focus around the Scrum Guide as it is written, the PSM II uses the Scrum Guide as a framework, and then asks more questions about how to handle problems, and fewer questions about definitions.I found that reading up on common Scrum methods like Activity Boards, how to write effective User Stories, and things like how to keep your Daily Scrum under 15 minutes (instead of just that you should) gave me a strong edge.  You'll have to dig around the forums and blogs, or even off-site for some of that information.  Learning how to enhance or maintain the Scrum framework will help you.And of course, I'd like to reiterate that the Nexus Guide is covered fairly substantially.  While you don't need to have an SPS level of mastery, it certainly wouldn't hurt.           Log in or register to post comments",7814
Log in to reply,7814
Messages,8213
"01:05 pm April 8, 2017                             Hi want to know if scrum allows the PO & SM to be part of development team? ",8213
"07:09 pm April 9, 2017                    Vaquas,There's nothing specifically prohibiting it, but there may be some problems with attempting to do it that way.  Clear separation of duties is very important, as is delegation of tasks.I'll give you a hypothetical that I've seen in other threads.  Let's say that you have a Scrum Master/Developer.  A problem pops up and they have to make a choice.  Do they act as a Scrum Master and facilitate the problem, at the same time failing to complete their sprint deliverables?  Or do they focus on the value-driven work, and let the problem fester?  Or, do they work 60 hour weeks to try to do it all?If it were you, how would you best handle that situation?          Log in or register to post comments",8213
Log in to reply,8213
Messages,8205
"08:26 am April 7, 2017                             Hi, I am currently studying for PSM I, and have a specific question re changing the Sprint BacklogSo, the basic premise is that a number of Product Backlog Items are selected for the Sprint Backlog, and that during the Sprint, at that level, they cannot Change (however, if the Development Team completes all items early, they can discuss with the Product Owner and address an Additional item - or at least that is my understanding)When the Development team breaks down the PBIs into Tasks, the Tasks themselves can change, and only the Development team can do this. This may sound pedantic, but there are conflicting messages in some online material re the term ""item"", and in fact one sample question states that Items can change in the Sprint Backlog ! For the PSM I exam, I understand the Sprint work is specifically called 'work', not 'items'.So my question is this - if a question comes up in the PSM I exam that mentions Items changing, I think the answer would be that this is not possible. However if it mentions Tasks or Work in the Sprint Backlog, then they can change.Hope this is clear !Thanks ",8205
"06:02 am April 8, 2017                    The Sprint Backlog is a forecast and a plan of the work needed to meet the Sprint Goal. The Goal should not change during the Sprint.Why then would a team refuse to replan any part of the Sprint Backlog if doing so allowed the Goal to be better met?          Log in or register to post comments",8205
"11:57 am April 9, 2017                    Hi LarryThis is quite interesting question. I comment it as I had issues with it during my studies.First thing what you already mentioned is to distinguish items from work/plan.  * Items - Product Owner order Product Backlog so most important/valuable items are on the top. Development Team decides how many items they can pull to the Sprint Backlog for the Sprint. * Work/plan can be changed by Development Team at any time during the sprint. They are owner of the Sprint Backlog so they decide how they do the work. Most important is that it must meet the definition of Done.Now some typical answers questions which you can find out. 1) In the middle of the Sprint, Development Team recognize that they have too many items and they won't manage to complete them by the end of the Sprint. In this case they should meet with Product Owner to discus which Items are most important and which of them are less important. This is quite clear for me, there is risk that they won't finish all items and from business point of view they decide which items are most important.2) They finished all items and they still have time left in the Sprint. In this case they pull items from Product Backlog to Sprint Backlog. I believe that Product Owner can check Product Backlog and reorder it so Development Team can pull item which can be done during the left time.3) Development team recognize that some work from the Sprint Backlog is not needed anymore or that they won't do it. They can just remove it as they are owner of the Sprint Backlog. Most important is that it meets the definition of Done. During my PSM exam there was question in which in my opinion all answers where wrong. The best answer in my opinion was: to work with Product Owner asap to remove some work or Product Backlog items. So looks like sometimes you need to select the Best answer.          Log in or register to post comments",8205
Log in to reply,8205
Messages,7291
"06:57 am August 17, 2016                             I just took the new PSM II assessment and thought I'd write down my thoughts while still fresh in memory.  As you may know scrum.org changed the assessments recently so what was previously PSM II is now PSM III and PSM II is an all new 30 question assessment with multiple choice, multiple answers, true/false questions just like PSM I.   Questions are quite long and often relate to real life scenarios. Typical question is ""situation X exists, how would you act in this situation?"" There are usually several answers that may seem right, and few alternatives that can be quickly ruled out as an incorrect answer. Some questions relate to scaling scrum so taking the open assessment for Nexus and some reading on scaling scrum is a good idea.  I think I had only one true/false question and most are multiple choice or multiple answers (about 50/50 I'd say). There are no/few questions like ""what is the time-box for the daily scrum"" that are clearly defined in the scrum guide. You have to reason to get to the right answer more than using the muscle-memory you may get from taking the open assessments. The total time allowed is 90 minutes for the 30 questions. I had time to answer and go through and double-check my answers but no more.  The good  I think this assessment is a good fit between PSM I and III. You can pass PSM I by just reading (and understanding) the scrum guide. PSM II requires some real life experience and more in-depth knowledge. I haven't taken the PSM III but by just reading about it and seeing how few that passed indicate that there's a huge difference in knowledge, both theoretical and practical required, from PSM I to III.   The bad  Some questions are unnecessarily complex. The essence of the questions could in many questions be phrased a lot shorter.  The language used could be simplified and on a few questions I think there are even grammatical errors. Although I am not a native English speaker I consider myself to be able to read and understand English well but I still had problems understanding some questions. This should not be a factor for being able to pass the test.  It would be valuable to be informed what questions that was answered incorrectly. If only for my own curiosity. You are informed about in what area you missed, but not what specific questions that were answered incorrectly.",7291
"02:51 pm August 17, 2016                    Thank you Fredrik for your feedback on the PSM II.  Do you know of any relevant practice exams that are similar to the types of questions posed in the PSM II exam?  Thanks.          Log in or register to post comments",7291
"06:41 am August 18, 2016                    Timothy,   I am afraid not. All other practice tests/exams that I have come across has either been too simplistic or full or errors and misconceptions so I cannot recommend them. Forums  like this as well as other forums on linkedin, yahoo groups etc.are excellent resources for discussing real-life scenarios and you get the input of others as well. Books/blogs are also useful but again, I think real life experience is needed.          Log in or register to post comments",7291
"01:25 pm August 18, 2016                    Thank you for sharing your experience and insights.          Log in or register to post comments",7291
"11:51 am August 24, 2016                    Thank you for the insights Fredrik. I have been planning to take PSM II sometime soon. I suppose the passing % for this would also be 85.          Log in or register to post comments",7291
"04:47 pm September 14, 2016                    Yes, passing score is 85%. All details are here  https://www.scrum.org/Assessments/Professional-Scrum-Master-Assessments…          Log in or register to post comments",7291
"05:47 pm September 14, 2016                    Thank you, Fredrik, and congratulations on acquiring your PSM II.          Log in or register to post comments",7291
"09:24 am September 17, 2016                    > Although I am not a native English speaker I consider myself  > to be able to read and understand English well but I still   > had problems understanding some questions. This should  > not be a factor for being able to pass the test.   Then again, being able to give timely responses to poorly expressed thoughts *is* a real-life Scrum Master skill. It's important to be able to see through the fog, to think quickly on your feet, and to get to the nub of the matter.          Log in or register to post comments",7291
"06:17 pm September 18, 2016                    @Anton, thank you!  @Ian  I fail to see how that applies to this test. I doubt that questions are intentionally poorly written but maybe it's just me.          Log in or register to post comments",7291
"07:03 pm September 18, 2016                    > I doubt that questions are intentionally poorly written but maybe it's just me  No, I also doubt that any questions will be *intentionally* poorly written.   However, I wouldn't be entirely surprised to find more advanced questions approaching those we find in real life.          Log in or register to post comments",7291
"04:21 pm September 21, 2016                    Hi everyone,   Congratulations Fredrick and thank you very much for sharing your insights.   I just cleared the PSM 1 exam and planning to go on with PSM 2.  A part from taking the open assessment for Nexus and some reading on scaling scrum, did you take some mock exams on the web or something? If so, would you provide some links please?  Thanks again  Amine          Log in or register to post comments",7291
"05:23 pm September 21, 2016                    Thanks Amine! No I did not try any mock exams. The ones that are out there are of *very* varying quality. Some very good and close to the scrum open assessments and some with many flay out incorrect questions and answers. Bottom line is that the best preparation is real life experience with scrum. No assessment or training can substitute the level of knowledge and experience that that brings.          Log in or register to post comments",7291
"12:49 pm September 29, 2016                    Could someone tell me which books are 'must reads' from this list?  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…           Log in or register to post comments",7291
"11:20 am October 13, 2016                    Nevermind, passed PSM II. :)          Log in or register to post comments",7291
"02:57 pm October 21, 2016                    Hey Tom  Could you provide any advice on self-study?          Log in or register to post comments",7291
"05:28 pm November 5, 2016                    Hey Tom, Many Congratulatiions.  I have passed PSM I and interested to take PSM Ii. Would you please provide some guidance, any material which will help me?          Log in or register to post comments",7291
"08:31 pm November 15, 2016                    Hi everyone, is there a set of official documentation to prepear for the PSM II this because in differents groups of Scrum adopters i read some topic than can be accept as a good practies but this is not accepted by Scrum.org, for example, in a gruop there was a discution about if de Product Owner has to attend the Daily Scrum or no, or if only if the Development team invited him. Someone said, "" According with the Scrum Guide and as I see in an Open assesment only the Developmet Team attent this event"", but i agree with other than the PO can be on it not for give anwser to the impediments in that moment, but to know the dynamic of the group and  for, if is possible, after the event start a new meetting to get into solve of impediments, this is a realy fast way to work on solve it. An other ambiguos position is the how de PO must be present on the Sprint, interacting with the Developement Team, for example I think if all the Backlog Items of the Sprint are well document, the are no questions about the backlog items and the PO is satisfied with the increments, i think this is enough to conclude than there was a good relation between both Roles and the time used for the Product Owner on create and detail the backlog item is enough.          Log in or register to post comments",7291
"08:32 pm November 16, 2016                    Hi Byron!   Ways to learn about Scrum:  https://www.scrum.org/Assessments/Ways-to-learn-about-Scrum  Regarding your specific question about the daily scrum, see the following thread:  https://www.scrum.org/Forums/aft/202          Log in or register to post comments",7291
"09:36 pm November 16, 2016                    I just failed the exam with 83.5% 2 times in a row now and I have to say I am totally not happy with some of the questions. Some of the questions are pretty streight forward. At least for me, it seems like the situtation is clear and there is a reasonable response.   But for some of them I think either the context is not clear enough to point out a ultimate golden bullet answer (that in my opinion is often a mix between several of the possibilities and not an extreme reaction) or there are several answers that could apply.   I am not sure if I am allowed to give examples here so I'll not do it for now. I'm anyway pretty sure I know which questions I, in your standards, answered wrong and I would be interested to discuss them, if there is a right place for that.          Log in or register to post comments",7291
"09:46 pm November 16, 2016                    Hello Till,  Thank you for your post and for your feedback. You are correct in that specific questions and answers from our Professional-level assessments for certification are not to be posted on or forums.  If you have specific feedback to provide, we ask that you please, kindly send it to support@scrum.org. Thank you, Till!          Log in or register to post comments",7291
"09:37 am November 17, 2016                    All I can say is that it's wise to invest time in reading books about coaching, training and facilitation.  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…           Log in or register to post comments",7291
"04:42 pm November 17, 2016                    Fredrik, thanks for sharing this. I'm also interested in taking PSM II at some point (although I feel that I need more real life experience first.  The part of not clearly understanding the questions due to not be a native speaker worries me a bit though, but I guess it's just to woman up and read as much blog posts, forum threads and books as possible.          Log in or register to post comments",7291
"03:38 pm November 18, 2016                    I thought that the way the questions were phrased was more problematic than the language.  Your strategy seems wise.          Log in or register to post comments",7291
"07:47 am April 9, 2017                    Hi @fredrick and TomCongratulations on clearing PSM IIWould you please suggest some must read areas (books, concepts, contents, etc..) needed to clear PSM II.I have cleared PSM I and looking forward to clear PSM II. It would be great help if you guys could guide on this.Thanks,          Log in or register to post comments",7291
Log in to reply,7291
Messages,7502
"08:25 am January 18, 2017                             Hello everybody,  I just passed PSM II and was wondering about the differences to PSM III. I know there are essay-style questions, so my understanding is that the questions presented there will be much more of the ""it depends""-style and that I should convey my thoughts how to approach the situation - is this correct?  Thanks in advance  Sven",7502
"04:08 pm January 18, 2017                    Don't expect to have the time to work through many ""it depends"" scenarios. What you need is the ability to appreciate the nature of a problem very quickly and to cut through to the nub of the matter. A rigorous understanding of Scrum is essential, almost to the point that your response becomes automatic, and is constrained more by the speed of your typing than your speed of reasoning. PSM III is anything but ponderous.          Log in or register to post comments",7502
"05:09 pm January 18, 2017                    Ok, thanks for the clarification Ian! Makes a lot of sense and sounds actually even more interesting than my initial thoughts ;)          Log in or register to post comments",7502
"10:08 am January 19, 2017                     Even attempting the PSM III is a good learning          Log in or register to post comments",7502
"09:43 am March 6, 2017                    Hello Sven, Congratulations for passing the PSM II! Could you please share with me/us how did you prepared for it? I passed the PSM I in January and I'm preparing for PSM II now. Best regards,Elena          Log in or register to post comments",7502
"07:33 am April 9, 2017                    Hi Sven,It will be really helpful if you could share your tips for preparation of PSMII Exam.I have cleared PSMI exam and looking forward for PSM II Exam.Thanks,Megha          Log in or register to post comments",7502
Log in to reply,7502
Messages,5713
"12:35 am January 20, 2014                             one of the metrics of software quality is defect rate/density  I would like to know from other practitioners how the quality metric is being tracked in scrum practice.  Assume there is a new product development is going on and features are being released quarterly to the customers.  in scrum there is only one product backlog, so I assume there is not separate PB for bugs.  the bugs/defects that are raised from customers will be added to product backlogs and based on priority they gets addressed in the upcoming sprints.  thanks",5713
"01:28 am January 20, 2014                    That's right, there is just one Product Backlog. There is no separate defects backlog, because once work has been accepted as meeting the Definition of Done it cannot be subsequently considered to be undone.   Any defects should be triaged as new requirements by the Product Owner, and the DoD should be revised to satisfy this change in scope.  Arguably, a more useful metric is to track waste incurred. Some defects (or newly discovered requirements if you prefer) are very serious and must be addressed immediately in-sprint. As such they pre-empt anything on the Product Backlog or which has been forecast for delivery in the current Sprint Backlog. Unplanned work is a form of waste, and it is important to capture metrics for this, because it can divert team effort from achieving Sprint Goals.          Log in or register to post comments",5713
"01:38 am January 20, 2014                    > the DoD should be revised to satisfy this change in scope.   I should point out that this is just one of the inspect & adapt opportunities. If releases occur quarterly as you suggest then this should be challenged, as more frequent releases would lower batch sizes, and potentially improve the team's response to defect discovery.           Log in or register to post comments",5713
"03:00 am January 20, 2014                    Hi Ian,  thanks for the explanation, still I'm not clear on the metrics of software quality in agile eco system  What you are saying to achieve highest quality during pre-production. in pre-production we have a goal or commitment of zero bugs.   The quality of the software that is measured only when the code is in production. some of the metrics would be bugs surfaced per year or something like that and customer satisfaction.   If someone wants to know how good the quality of product which was delivered,  what is the metric to look for ?    all the inspect and adapt is happening during pre-production.   Is tracking metrics, inspect and adapt during post production a characteristic of agile?           Log in or register to post comments",5713
"03:47 am January 20, 2014                    > If someone wants to know how good the   > quality of product which was delivered, what   > is the metric to look for ?   There are many to consider: ROI, customer churn rate, market share etc. The important thing is that metrics should be actionable - vanity metrics are to be avoided.  > all the inspect and adapt is happening during pre-production.   > Is tracking metrics, inspect and adapt during  > post production a characteristic of agile?   Yes it is, at least in agility at scale. The Scrum Guide doesn't have much to say about this but other documented approaches do, such as Lean Startup and Agility Path.           Log in or register to post comments",5713
"05:22 am January 20, 2014                    I believe there is no direct measure for quality. If the PO chose the wrong PBIs, but the dev team implemented them in a high quality, you will still have a low ROI etc.  Defect rate is slightly better, but the number alone doesn't say much.  You can complement this with metrics like test coverage, static code analysis etc.  You can also measure, how often an increment is really shippable, meaning there are no bugs left which prevent it from being shipped.  But in the end what counts is what the customers perceive as quality.          Log in or register to post comments",5713
"10:16 am January 20, 2014                    I agree with Ludwig. The metric that counts for measuring quality is customer perception about the product. For example, you can create less-user friendly product with zero defect. And that doesn't mean that the product is high-quality.          Log in or register to post comments",5713
"11:20 am January 20, 2014                    > The metric that counts for measuring quality   > is customer perception about the product.   We have to be careful here, because customer perception might not be an actionable metric. It can be a vanity measure depending upon how questions are framed, and even then the value of the data can be questionable. For example Steve Jobs was adamant that it isn't the customers' job to know what they want, and Eric Ries has taken a similar position.           Log in or register to post comments",5713
"09:29 am January 21, 2014                    I think you are right, Ian, however Steve Jobs' quote is missing context here. As far as I know, he said the customer doesn't know what he wants before he sees it (and knows that's not what he wanted). He quoted Henry Ford: ""If I had asked people, they would have told me they needed a faster horse"". This effect is the reason for Apple not doing market research, and it's also the reason for building shippable increments in Scrum.  So, I understand ""customer perception"" as perceiving the product (increment), and that is important for success, however it is difficult to measure.          Log in or register to post comments",5713
"04:08 pm January 25, 2014                    > I understand ""customer perception"" as   > perceiving the product (increment), and that is  >  important for success, however it is difficult to measure.  It's certainly very difficult to measure, or even to define satisfactorily. However, we may have a scrummish word for what is needed. In Welsh rugby there's a concept known as ""hwyl"", which is what happens when the team and supporting crowd get together, find their flow and common cause, and pull in the same direction.   All impossible to measure of course. Yet the most successful Scrum Teams I've seen all exhibit hwyl, even if they aren't familiar with the word, and their customers are in on the fun.           Log in or register to post comments",5713
"11:07 pm April 8, 2017                    Great discussion. Very helpful insight.  Thanks to all the participants.          Log in or register to post comments",5713
Log in to reply,5713
Messages,8181
"10:20 am April 5, 2017                             I got only 9 out of 15 for the follwoing practionaer exam.. Not sure wher i am wrong:(  Can someone please help me with the correct answers1) A multi-national company, which has five major products, is using Scrum for product development. Which statements are the two best alternatives for how many Product Owners exist? (Choose 2.)A)As many as are needed to communicate expectations and requirements with Development Teams.B)One specific Product Owner is responsible for all five products. This Product Owner may delegate to others for specific value, capabilities, and functionality within each product.C)One and only one. The Product Owner may not delegate to others for specific value, capabilities, and functionality.D)One specific Product Owner is responsible for each product. This Product Owner may delegate to others for specific value, capabilities, and functionality within the product.2)What is the purpose of a Scrum of Scrums?a)Align plans for different Scrum Teams by bringing the Scrum Masters together every day.b)Meet to report to stakeholders.c)Align Product Backlogs of related products by bringing their Product Owners together.d)Share cross-team experiences of different Scrum Masters.e)Align plans of different Development Teams working on the same productMy answer : d3) What are two good ways for a Scrum Team to ensure that security concerns are satisfied? Add a Sprint to specifically resolve all security concerns.a)Postpone the work until a specialist can perform a security audit and create a list of security-related Product Backlog items.b)Delegate the work to the concerned department.c)Add security concerns to the definition of ""Done"".d)Have the Scrum Team create Product Backlog items for each concern.-> Answer c) and d) 4)One of the Scrum events is the Daily Scrum. What are two outcomes of the Daily Scrum?a)A shared understanding of the most important work to be undertaken next to achieve the best possible progress toward the Sprint goalb)A status report indicating what each individual has done, will be doing, and what is impeding him/herc)A checklist of completed tasks and an update of the estimates for the remaining tasks that the Scrum Master can use to administer the development workd)An updated Scrum board to give visibility over the Sprint's progress for when the stakeholders come visit the development roome)An update of impediments for the Scrum Master to take care ofMy answers : a,e5) Self-organization works best when there are goals and boundaries. Select two requirements from the Scrum framework that are key for a Scrum master to teach teams to help them self-organize:a. Time-boxing events to manage risks b. Forming teams happens by the Product Ownder selecting each member c. Having an even number of team memebers to be able to do pair programming d. Creating a releasable Increment by the end of each Sprint e. Maintaining and preferably increasing velocity.Answer: a and d6) A Development Team selects a set of Product Backlog items for a Sprint Backlog with the intent to get the selected items ""Done"" by the end of the Sprint. Select two items that explains what done means a) no work left from the definition of Done.b)All work performed given the skills that are actually present in Devlopment teamc)Ready for functional testing by POd)Whatever the product owner defines as qualitye)Ready for integrationf) All work to create software usable by end users ->d and f7. You are part of a group of 500 developers that is responsible for building a large enterprise product. How should the architecture for the product be defined in order to effectively support this many developers working on the same product at the same time? a) A team should design and build architectural and platform structures that define how the functionality from each set of Scrum Teams must deliver and work with each other.b) Perform Subsystem Design. Teams should volunteer to develop specific areas of sub-system responsibility.c) The architecture will emerge during development through early Product Backlog itemsd) An architectural backlog should be created to ensure that architectural concerns are addressed in the product development process.My answer : A)8)Many Development Teams working in the same code creates coordination problems which can be sufficiently addressed with a comprehensive branching and merging model in shared version control.  > True  > False Answer:TrueQuestion 9: How should multiple Scrum Teams deliver a done, potentially shippable Increment in a Sprint for a project? a)Each Scrum Team provides a unique done Increment that includes the team's added functionality.   b)Each Scrum Team delivers done Increments of its own area of responsibility. These Increments are integrated into a whole product during stabilization prior to release.  c)Functionality not integrated with the work of other Scrum Teams may be delivered as unintegrated Increments. This demonstrates the value created by the Scrum Teams unable to completely integrate their Increments.   d)Each Sprint, all Scrum Teams have a done Increment that integrates with all of the other done Increments from all other Scrum teams on the initiative. The sum of all of Increments is the Increment for that initiative or project.Answer:b10) Which two ways of creating Development Teams are consistent with Scrum's values?a) The Chief Product Owner determines the new team structures and assignments. b) Bring all the developers together and let them self-organize into Development Teams. c) Managers personally re-assign current subordinates to new teams. d) Existing teams propose how they would like to go about organizing into the new structure. e) Managers collaborate to assign individuals to specific teams.-> b) and d) 11) Currently, your Development Teams are organized to address a single layer only (for example, front end, middle tier, back end, and interfaces). What are three things to consider when deciding to move away from such component teams toward feature teams?a) Productivity may suffer when making this kind of move.b) You cannot do Scrum without feature teams.c) With feature teams, it is easier to calculate the productivity per team.d) Feature teams have less communication overhead.e) Getting support from the business side first helps.->Answers: b d and e12)What three techniques should the Scrum Master use when the Scrum Team gets caught in an internal disagreement about which development techniques to apply? a)Involve the complete team. b)Ask an external technical specialist to make the decision.  c)Send every team member to the company's HR department to express their concerns. d)Use coaching techniques like open questions and active listening. e)Consult with team members individually, carefully listening.ANSWERS: a, d and e13 - To improve average velocity across multiple Scrum Teams, analysts are encouraged to employ a ""Definition of Ready"" to ensure all items selected during Sprint Planning meetings are actionable.? a) True b) FalseAnswer False14) Select two ways in which technical debt impacts transparency.a) It enhances transparency for the Product Owner as a Development Team is not allowed to do additional feature development in a Sprint as long as there is technical debt. b) As development progresses and code is added, the system becomes more difficult to stabilize, which results in future work being slowed down in unpredictable ways. c) It leads to false assumptions about the current state of the system, specifically of an Increment being releasable at the end of a Sprint. d) When calculated and estimated, the total amount of technical debt shows exactly how long until the Product Owner can release the Increment.-> a and c15) What are two ways that architecture and infrastructure are handled in Scrum?a)They are discussed during Product Backlog refinement and are developed only along with selected functionality.b)They are added to the Product Backlog and addressed in early Sprints, while always requiring at least some business functionality, no matter how small.c)They are built by a separate team through the creation of an architectural runway.d) They are discussed, determined, and documented before the actual feature development Sprints.--> a and b ",8181
"07:21 pm April 8, 2017                    Hi SmithaHere are my answers to your questions. It would have been nice next time to leave a space between each question and set of answers/ And also between question and answer sets for better readability. 1. b and c   (no answer given)2. a               (d wrong)3. Correct4. Correct5. Correct6. a and f      (d is wrong)7. Correct8. False       (True is wrong)9. d              (b is wrong)10. Correct11. a, d,and e   (b is wrong)12. Correct13. Correct14. b and c        (a is wrong)15. Correct               Log in or register to post comments",8181
Log in to reply,8181
Messages,8204
"11:35 pm April 6, 2017                             All,Happy to share the my PSM-1 certification results to further improve and contribute in the SCRUM.org forum. I have passed PSM-1 certification exam in first attempt with 86% today which is satisfactory, however my score is not very encouraging in Coaching and Facilitation subject area, there were many questions and of course not able to review the answers now, but would like to improve in this subject area to be appear in future PSM-2, any suggestions would be appreciated.Thanks,Shovindra",8204
"01:11 pm April 8, 2017                    Congrats Shovindra!What study material did you refer apart from SG & MPlaza free Scrum training manual?           Log in or register to post comments",8204
Log in to reply,8204
Messages,8211
"09:10 pm April 7, 2017                             I am trying to educate myself on Scrum as much as possible.  It says pretty clearly that there are only 3 roles on the team:- Scrum Master- Product Owner- Team MembersFor a software organization, I assume that the Team Members part of the team include developers, business analysts and testers.  But under the Scrum model, I believe that they are all supposed to pitch in and help each other.  For example, I assume that this means that a Developer on the team shouldn't say, ""I'm not helping with testing...that's your job"".  Rather, they should say, "" I would be happy to help with testing, and while I'm doing it I'll learn more about what it takes to do proper testing.  I'll also look for automation opportunities along the way."" I am assuming that one of the big benefits of Scrum is that everyone learns about each other's jobs and helps them out as much as possible and as much as needed. So, my question is this.  For big companies that have well defined job descriptions, do you literally change the agile team members' titles from something like ""Senior Application Developer"" to something like ""Agile Team Member""?  Or do the team members maintain their identity and specific job titles and just try to help each other out? I'm interested in hearing from both companies that let people keep their job titles and their role identity as well as those which strip it away from the employees (if there are any of those). I am also interested in knowing how important this aspect of Scrum is with respect to getting the full benefits of Scrum.  The Scrum books are pretty clear that you need to implement all of Scrum or else it's not really Scrum and if you don't implement all of it your not going to get the benefits.  I've heard this called ""pretending to do Scrum"". So, do we really need to say to the agile team members, ""Sorry, you're not developers, business analysts or testers anymore.  You're Scrum Team Members and you can and should self organize and work on whatever you need to in order to achieve your objectives.  There's an agile coach over there that can help you with this.  Have fun!"" ",8211
"09:55 pm April 7, 2017                    Speaking as a software developer, I would NOT expect my job title or description to change.  Perhaps you could add some detail in there to mention agile/scrum but really whether I'm doing scrum or Waterfall I'm still a Senior Software Developer.  I'm still responsible for requirements gathering, designing, coding, and ensuring good quality of code.  Applying scrum doesn't change any of that for a developer.Now for a QA tester and BA that's different.  In an ideal world, scrum team members cross train each other so anyone on the team can pickup any task on the board.  Since QA testers and BAs aren't typically trained technically their jobs would begin to change.  E.g. at one point we began incorporating our QA testers on our scrum teams.  Eventually they started to learn how to code automated UI tests instead of writing manually test cases which they manually conducted over and over again.  In that case their job responsibilities and required skillsets started to change.          Log in or register to post comments",8211
"02:07 am April 8, 2017                    In my organization, job roles still exist.  However, what actually happens is your job role in the organization may not directly align with your agile role.  You can be a tester and a scrum team member.  You can be a software developer and a scrum team member.  You can be a BA and a scrum team member.  Effectively, your job role is a specialization for your scrum role, but you hold both roles simultaneously.So yes.  You end up cross training.  Your developers pick up some testing skills and help with automation.  Your document writers learn to help out with testing during downtime.  Your developers help maintain documents.  But when a new document needs to be created, or an emergency bug fix needs to go out, it's owned and produced by the specialists relevant to the tasks, and supported by the other members of the team.  You don't want to hand your code tasks to your document guy and let your developers continue to develop test cases.  That wouldn't make much sense.           Log in or register to post comments",8211
"07:14 am April 8, 2017                    The message shouldn't be that from now on people lose their specialisms, because that would be a falsehood. Rather, the message should be that now they are expected to be joint members of a new role, which is that of the Development Team, and it is a role that has clear responsibilities. Organizational sponsorship of Scrum is often needed to make that expectation clear.          Log in or register to post comments",8211
Log in to reply,8211
Messages,8209
"07:25 pm April 7, 2017                             At the fairly large company where I work we have been doing Scrum for about a year on a few teams and we are looking to expand that.  We are also trying to bring on DevOps.Since we are still new to all of this, I am wondering how Agile/Scrum and DevOps work together.  I have found plenty of reading material on both, but not enough on the integration of these topics. More specifically, what should be done regarding breaking down the silos between Dev and Ops?  Today each Dev team needs the support of several ""Ops"" teams in order to get to production.  In fact, the development team might need to work with the VMware team, the Linux team, the storage team, the Websphere team, the network team, the firewall team, Information Security, the database team, our Release Management team and our Production Support team.  The Dev team needs to engage with all of these teams and get their approval before going to production.  Obviously we need to fix this.  We are in the process of looking at new tools for CI/CD as well as Cloud to accelerate provisioning and technologies like Docker. My question is more on the team front.  For example, I just spoke to a consulting vendor who has a lot of experience with Agile.  They said that they could easily stand up a new Agile team for us and they would recommend that it include 5 people:     - scrum master     - 2 developers     - business analyst     - QA testerThat sounds fine for Agile, but what about DevOps?  With DevOps, should we add one or more Ops people to each Agile team to help the team with all of the Ops workload and to focus on accelerating software builds, streamlining deployments, setting up monitors, etc?  And, if we don't add Ops people to the Agile teams, who is going to work on that stuff?  Furthermore, if we don't add Ops people to the Agile teams, how is that going to help with ""breaking down the silos""? Any help you could provide would be much appreciated!",8209
"08:21 pm April 7, 2017                    My current program has been doing Scrum for years now and about a year or so ago jumped on the DevOps movement.  We started out with multiple dev scrum teams each with a set of developers and a single QA tester.  Operations was split up into silo's like you're referring to: a server team, hosting team, etc.  If we needing something from an operations team it had to go through a formal Help Desk which was then routed to the correct operations team.  There was absolutely no direct communication between dev and ops it was all going through a help desk ticketing system.One thing we tried to do which I observed to be successful in breaking down the silos of the ops teams was that each scrum team was assigned a POC from each of the operations teams.  So as a developer on team 1 I would know if we had any hosting issues I would go talk directly with my hosting team POC.  That hosting guy wasn't necessarily a scrum team member that took tasks off our taskboard but they were part of our extended team that supported us.  If in the current sprint we didn't have any need for a hosting team member involvement then they wouldn't attend any daily scrums, planning meetings, etc.  Unless you have a lot of operations tasks that need to be done every sprint then it may not make sense to make them officially part of the team.          Log in or register to post comments",8209
"08:25 pm April 7, 2017                    Another way to think of this is perhaps add the ops person to your team initially.  Overtime they will cross train with the other members of the scrum team.  If operations hasn't worked with dev closely in the past there could be benefit to dev teaching ops a few things and vice versa.  Overtime, that dedicated ops person may no longer be needed as a scrum team member and they can be transitioned off the scrum team.          Log in or register to post comments",8209
"06:57 am April 8, 2017                    Many organizations are set up in such a way that they present two DevOps challenges:Firstly there is the problem of how a product ought to be supported following deployment. This is sometimes thought of as a BAU context. It typically involves some sort of handover to a ""DevOps"" team who can perform ongoing maintenance.Secondly there is the problem of having an in-team DevOps capability so increments can be deployed into production at all. This is the problem of meeting an adequate Definition of Done so increments are potentially releasable in the first place.Hence the nature of the Dev-Ops divide can vary, and an effective bridge might require a fundamental re-evaluation of the organization's operating model. How do they intend to structure their value streams? Do they want to support products, or retain the project as a vehicle for delivering value? Achieving a DevOps capability is more than moving a few team members around and having better automation.          Log in or register to post comments",8209
Log in to reply,8209
Messages,5960
"11:16 pm July 10, 2014                             Hi all,   The Sprit Goal is selected BEFORE or AFTER the Sprint Backlog is created ?  Thanks",5960
"12:28 am July 11, 2014                    Hello, Can anyone help on this question ?  Thanks a lot.          Log in or register to post comments",5960
"02:26 am July 11, 2014                    Scrum Guide is quite clear about that. ""After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a Sprint Goal."". This happends when team's answering the Topic One question What can be Done in the Sprint?          Log in or register to post comments",5960
"02:40 am July 11, 2014                    I agree with you that:  After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a Sprint Goal.  My confuse is: The activity  "" forecasts the Product Backlog items "" and ""create the Sprint Backlog"" are SAME or NOT ?  Can i understand that the flow as below ?             forecasts the Product Backlog items -> **create Sprint Goal ** ->  **create the Sprint Backlog ** !  Thanks.           Log in or register to post comments",5960
"02:44 am July 11, 2014                    No, it's not the same. Forecast is about PBI only, ""The Product Backlog items selected for this Sprint plus the plan for delivering them is called the Sprint Backlog."" Thus Sprint Goal is created before.          Log in or register to post comments",5960
"02:46 am July 11, 2014                    In addition, as the defination of ""Sprint Backlog"" :      = Selected Product Backlog item + **Plan to ""done"" them ***  That may mean: Sprint Backlog is made at the end of the first session of Sprint Planning meeting, after done some prior activities (including make its Goal)  Can anyone help to clearify about this ?          Log in or register to post comments",5960
"02:48 am July 11, 2014                    Thanks Illya.   So final answer is ""Sprint Goal is create BEFORE  Sprint Backlog ?          Log in or register to post comments",5960
"02:52 am July 11, 2014                    Sprint Backlog is the output of the ""How?"" topic of the planning, Sprint Goal is crafted during ""What?""  part which comes first.          Log in or register to post comments",5960
"02:56 am July 11, 2014                    I clear, thanks so much.          Log in or register to post comments",5960
"10:45 am July 11, 2014                    > So final answer is ""Sprint Goal is create BEFORE Sprint Backlog ?  Be careful when you talk about the Sprint Backlog being ""created"". The Sprint Backlog serves the purpose of meeting the Sprint Goal, and its ability to do so must be improved at every opportunity during the Sprint.          Log in or register to post comments",5960
"10:50 am July 11, 2014                    Well, as I remember Ken saying about that Scrint Backlog is like human - born during the Sprint Planning, emerging and evolving through the Sprint as a human being walking throughout the life.          Log in or register to post comments",5960
"12:43 pm July 24, 2014                    agree!   when you have the sprint backlog created you are ready to start working for the next few days. it would be obselete at that point of time to formulate your sprint goal! goal should be set prior actions...and under that context sprint goal should be defined before your sprint backlog has been created!...          Log in or register to post comments",5960
"04:14 pm June 8, 2015                    The Scrum Guide states ""After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a Sprint Goal""          Log in or register to post comments",5960
"10:43 am June 11, 2015                    I was confused by this as well when I was first learning about Scrum. I think the product owner should have an idea of what the sprint goal or objective is before sprint planning (Scrum Guide p. 9 ""The Product Owner discusses the objective that the sprint should achieve...""). This aids the product owner in preselecting the PBIs to bring to the team for consideration for the sprint (in addition to their value, etc.). It also aids the team in creating the formal sprint goal at the end of the sprint planning session.          Log in or register to post comments",5960
"01:29 am June 12, 2015                    > I think the product owner should have an idea  > of what the sprint goal or objective is before  > sprint planning   The PO should be able to enter Sprint Planning sufficiently prepared to negotiate an increment of value. This could mean having deas of what a Sprint Goal might reasonably be. It should not be an assumption or pre-condition as to what the Goal actually will be.          Log in or register to post comments",5960
"04:54 am May 11, 2016                    before           Log in or register to post comments",5960
"10:01 am March 11, 2017                    Interesting conversation. While comparing between Sprint Backlog and Sprint Goal, Indeed the Sprint Goal is decided before the Sprint Backlog. In fact, based on my experience it is decided much earlier by the Product Owner  i.e. before the ""Sprint Planning"" meeting by him managing the Product Backlog Items throughout the product lifecycle. This is how it works from my experience with Sprint Planning and as per Scrum Guide:- The Development Team first picks up few ""top"" items from the ordered list of PBI's [which is prioritised by PO and should ideally be meeting the Sprint Goal] to forecasts the functionality that it can deliver during the sprint based on its capacity and past performance.The Product Owner discusses the objective that the Sprint should achieve [based on his ""top"" few PBI priority list].The entire team collaborates on the understanding and crafts the sprint goal along with a plan of action for few days to start the sprint. The Point is: - The Sprint Goal of what needs to be delivered in the Sprint is actually already been highlighted and managed by the PO by the list of priority items in the Product Backlog [Or Revised Product Backlog including the outcome of previous sprint review meeting if any] ""before"" the Sprint Planning for the Sprint starts. It's the responsibility of PO to keep this list in correct order to meet the Sprint Goal as deemed by the PO to achieve maximum benefits/ROI. Regards,Rajat          Log in or register to post comments",5960
"07:52 pm March 29, 2017                    The answer is BEFORE.          Log in or register to post comments",5960
"01:48 am April 8, 2017                    Thanks Rajat and Zi Wang.  That is exactly was was required. Short and to the point.          Log in or register to post comments",5960
Log in to reply,5960
Messages,8207
"03:54 pm April 7, 2017                             Hello. I was solving the test of Mikhail Lapsin and answered this question wrong. ""What belongs to solely to Development Team?""a) The Sprint Backlogb) Incrementc) Definition of Doned) The Product Backlog The correct answer is only a. However Scrum Guide says ""Development Teams deliver an Increment of product functionality every Sprint. Only members of the Development Team create the Increment.""Also I think that DoD is done by development teams. So my answer was a,b,c.What am I missing here? The terms ""Belong"" and ""do"" are different? Does Development Team create an increment but it belongs to whole Scrum Team? Yea, the Scrum Team(s) have common understanding of DoD but isn't it done by Development Team(s)? Thanks",8207
"01:46 am April 8, 2017                    The development team works on the increment during a sprint, but then doesn't that increment go on display at the Sprint Review?  Do other members of the team interact with the increment at that point?For the definition of done, I see where you might be confused.  The Scrum Guide explicitly states ""the Development Team of the Scrum Team must define a definition of 'done' appropriate for the product.""  However, for every other mention of the ""definition of done"", the Scrum Team is referenced as using and revising the definition.  The artifact is initially created by the development team but is then shared with the Scrum Master and Product Owner at different events for input and revision.The Sprint Backlog is never touched by the Scrum Master or Product Owner in any functional way. So, what I think you may be missing is the difference between being the sole creator or the sole owner of an artifact.          Log in or register to post comments",8207
Log in to reply,8207
Messages,8142
"06:16 pm April 3, 2017                             Hi all, thanks to those who have answered questions here in these forums, because I was able to pull up so many questions and read clear explanations and get links to sections of the guide or other examples that helped me understand concepts during my studies.I took six days to prepare for the exam, I was familiar with Agile concepts and have used Agile Management on certain projects since 2013. I chose Scrum.org over Scrum Alliance because of the more serious assessment and my research indicated the materials here are an improvement and evolution of the CSM materials. I am pleased with my choice.The materials I foccussed on to prepare were:1) Read the Scrum guide six times completely, and referenced it numerous times when going through study guides or practice exams. I made sure to read the scrum guide again one more time before sitting the exam because this is the bible in terms of the assessment. 2) I bought the kindle book Called Scrum Narrative and PSM Exam Guide - by Mohammed Musthafa Soukath Ali and read parts 1 and 3 and did the 80 question exam at the end. I found this book to be confusing and some of the questions had the author's personal interpretation of the Scrum Guide in the content and answers. I couldn't verify all the answers in Scrum.org writings or in the Scrum Guide directly and didn't necessarily agree with his interpretations. Unless you're already feeling comfortable at a fairly deep level with other Scrum materials I wouldn't pick this book up. 3) The online help attendant at Management Plaza was great in setting me up on their PSM Preparation Practice Exam bundle and I did each of their 80 question exams (3 different versions) at least three times until I was scoring between 92 and 97%. They also have a free Training Manual that was a very well written and laid out expansion on the Scrum Guide that I read twice and made notes from. Overall I found the content from Management Plaza to be very high and I recommend the two products I studied from, they both definitely helped me pass the assessment. They also have an online course that is more detailed but I didn't buy that.4) I took the Open Assessments for the three Scrum Team roles multiple times. The one for Developers gets into detailed technical tools and that won't appear on the PSM assessment but there were good questions in there about the Scrum Team roles and the events so it's worth doing this for practice anyway. The Product Owner open assessment is good to take multiple times too. Make sure you're consistently getting 100% on the Scrum Master and Product Owner open assessments before you take your exam. There were a good number of these that appeared on my actual exam so it's great practice.5) Mikhail Lapshin has a free 80 page practice exam that I recommend highly. It uses exact terms from the Scrum Guide and has very good explanations of the correct answer, again using terms from the Scrum Guide. There was almost no interpretation here, and I felt confident I wasn't getting confused or misled by practicing on this exam. Take it until you're getting over 95%. Make sure that if you want to review your answers that you do so BEFORE you hit finish. There is no option afterwards to read correct answer, you can't go back and see the questions either. SOME TIPS FOR WHEN YOU'RE TAKING THE EXAMa) Don't think you can google for the right answer. You should be able to rely on your notes to confirm tricky questions, if you know the Scrum Guide very well you'll be able to get to the relevant section where a lot of the answers lie. But you need to get through the whole exam before you start trying to look things up. Save that time for tricky questions to the end. b) Read carefully about how many answers you should select. And select the BEST answers. Often there is an additional answer that might also be true, but is not the most critical answer out of your options. Make sure to read whether you're being asked to pick TRUE or UNTRUE statements out of the answers. You need to read the question twice before you start picking options.c) When it comes to questions involving the Development Team, lean towards them being in full control of the Sprint Log, HOW they will work, what work they add to the Sprint log, they don't update stakeholders outside of the Sprint Review... they have their heads down creating the product during the sprint. In your answers understand that their time is shielded by the Scrum Master who makes sure that the organization understands how to interact with the Development Team (let them do their thing) and the Product Owner who keeps the Stakeholders informed. The Development Team manage themselves.d) Print the Scrum Glossary and have it with you. Print the Values poster and have it with you. Print the Scrum Guide and have it with you. Take your own notes and organize them into ""Roles"", Artefacts, Events, Rules. Have them with you. Lay all your info out in a way that you know where to go to grab each resource when you need to.   DON'T BOTHER WITH:1) You don't need to read the recommended books in the knowledge areas link, you'd take months to prepare for the assessment if you did. For your ongoing improvement in Scrum then certainly pick up whichever ones you find interesting2) Avoid the SBOK Scrum Body of Knowledge, it won't prepare you for PSM and mixes other Agile domains3) Don't pay a lot of money to take any online prep courses. If money is no object to you then go ahead with an in-person course in your area, and sit the exam shortly after and you should have a good shot at passing. But there's no reason to pay over $300 for a prep course to get ready for a $150 exam. 4) Don't sit the actual exam until you're consistently getting 100% on the open assessments and mid 90s on the other practice exams I listed above. ",8142
"04:53 pm April 4, 2017                    Congrats Mark!And thanks for the well organised tips for the exam!!           Log in or register to post comments",8142
"04:27 pm April 7, 2017                    Congrats Mark !I am taking the exam today so want to know if reading Nexum framework mandatory to clear PSM 1. Your immediate answer would be very very helpful. Thx               Log in or register to post comments",8142
"05:01 pm April 7, 2017                    Pratibha,I'm not the original poster, but since you requested a quick answer I'll chime in.  The specific details of Nexus are not mandatory knowledge for PSM I, although I personally consider it vital for some of the higher level exams.  However, Scaled Scrum is still Scrum.  Understanding how Scrum works with multiple teams can only help reinforce how you would handle situations in a single team.For the PSM I exam specifically, I would recommend using the Scrum Guide as the primary focus for your exam prep, and then give the Nexus guide a quick read for additional context.          Log in or register to post comments",8142
"05:24 pm April 7, 2017                    Many Thanks Jason !I have read Nexus guide once for reference and I hope no questions are asked in PSM1 regarding Nexus.Yes, have read Scrum Guide thoroughly for the exam. thxPratibha          Log in or register to post comments",8142
"05:28 pm April 7, 2017                    One more question, any calculation based questions related to reports like burn down, burn up in PSM 1 exam ?           Log in or register to post comments",8142
"05:56 pm April 7, 2017                    Prathibha, although the questions are randomized between exams from a larger question pool, in my experience you should not need a calculator or scratch paper, and you shouldn't need to memorize any mathematical formulas.  The PSM I questions follow the Scrum Open and the Scrum Guide very closely.          Log in or register to post comments",8142
"06:20 pm April 7, 2017                    Thanks Jason for the info ):)           Log in or register to post comments",8142
Log in to reply,8142
Messages,8163
"03:46 pm April 4, 2017                             Is Scrum model is applicable for virtual Team? if so how daily scrum,sprint review and sprint retrospective happen? by using conferences?Please comment on this.  ",8163
"06:31 pm April 4, 2017                    Whatever a ""virtual team"" means in your situation, you can expect that it will demonstrate virtual teamwork. By definition it won't be real teamwork, otherwise it would be a real team.What do you think the consequences of that might be? Is the team still expected to produce real increments of real value?          Log in or register to post comments",8163
"05:08 am April 5, 2017                    Thanks for the reply...By using virtual teams in Scrum(not co-located) may reduce product increment delivery significantly.due to communication with long distance and due to communication blockers etc.Since Scrum team is Self-Organised and Cross-Functional , it should support i guess...as i have not seen working  as virtual teams in scrum.So the question is does SCRUM supports virtual teams working style?          Log in or register to post comments",8163
"04:14 pm April 5, 2017                    Scrum is a framework. It can be implemented poorly or well. By correctly pointing out that non co-location ""may reduce product increment delivery significantly"", I think you've answered your own question about the degree to which it is supported.          Log in or register to post comments",8163
"10:42 am April 7, 2017                    Thanks and completely agree with you.          Log in or register to post comments",8163
Log in to reply,8163
Messages,7954
"12:56 am March 21, 2017                             Scrum does not work for me, any other option? In the organization I currently work, we are not only having big projects to be done. We also have tons of Business As Usual (BAU) requests to deal with, enhancements, error fixing, ‘super important’ changes, etc.In my opinion, Scrum will not work in above activities.Read more at: http://www.ru-rocker.com/2017/03/18/kanban-as-another-option/#agile #it #informationtechnology #projectmanager #projectmanagement #kanban #scrum #scrummaster #atlassian #rurocker",7954
"04:51 pm March 21, 2017                    Thanks for sharing!  Kanban can be very useful and I have my own Kanban board to keep myself organized on my personal tasks.  I've personally found it to be an extremely effective tracking mechanism.  You could even combine the two, and use Kanban to track work within a sprint.Coming from a traditional project management background, Kanban is easier to adapt to because it doesn't require a process change; just a workload change.  Scrum is hard because it's an entirely different process.  That process has value but comes with a lot of overhead.  Not every organization or client is willing to put things on hold and pay that overhead up front.Most importantly, I'd say your work and team structures should dictate the best agile methods for your team.  Scrum works best when you have a fixed team and variable work within a central objective.  If you have lots of random unplanned work, or constantly changing teams, Scrum is going to become difficult to implement effectively, and other methods start to stand out.However, it sounds like your main concerns are that tasks require quick turn around, and that your client/product owner is being indecisive and ineffective at prioritizing tasks.  Both of these could be handled within Scrum, with the proper training and process adjustments.  I'd be curious to know if a 1-week or 2-week sprint would work much better for your BAU tasks.          Log in or register to post comments",7954
"07:41 am March 31, 2017                    Hi jason, Yes, I agree. Proper training and proper adjustments will definitely needed for Scrum. As per BAU, mostly the changes will take only 1 or 2 weeks, so if we treat them as scrum, only take 1 sprint. So I think that will be too much to be prepared if we treat those as scrum.Unless we group some related changes and fixing together and put those in the product backlog. IMHO          Log in or register to post comments",7954
"11:46 pm April 2, 2017                    If you choose to go with it, Kanban still requires prioritization and enforces Work In Progress (WIP) limits.  It is a great way to inspect and adapt current processes, visualize and prioritize work to be completed, and expose the impact that ""business as usual"" has.Releasing a Done (complete, tested, quality) Increments is the way of Scrum.  Basing a Sprint length off of business expectations is likely to result in heartache for all.  If the organization isn't willing and ready to support adoption of the Scrum framework, then it might be best to table those thoughts for the future.          Log in or register to post comments",7954
"09:56 am April 7, 2017                    Hi AlanYes, whatever the way of Agile we're taking, Organization's willingness to adapt Agile is still very important.           Log in or register to post comments",7954
Log in to reply,7954
Messages,8011
"03:21 pm March 23, 2017                             Hellowhich persons/roles are for one of these meetings absolutely necessary?I think these, but I am not sure.Sprint Plannung Meeting: PO and Dev. TeamDaily Scrum Meeting: Dev. TeamSprint Review Meeting: PO, Dev. Team, Scrum Master, Stakeholder(s)Sprint Retrospective: Dev. Team, Scrum MasterBacklog Refinement Meeting: PO, TeamBest regardsPet",8011
"02:09 pm March 24, 2017                    What does the Scrum Guide say about attendance at these events? When it mentions ""Scrum Team"", which roles do you think are thereby referenced?          Log in or register to post comments",8011
"05:28 am March 27, 2017                    Scrum Team = {Product Owner, Dev Team, Scrum Master}So, I think it's important to note that Scrum Team != Development Team.          Log in or register to post comments",8011
"11:52 am March 27, 2017                    Thank you for the advice. Sprint plannung meeting was wrong. Backlog Refinement Meeting, I am not sure:Sprint Review: The Scrum Team and stakeholdersSprint Plannung Meeting: The Scrum TeamSprint Retrospective: The Scrum TeamDaily Scrum Meeting: Dev. TeamBacklog Refinement Meeting: The Scrum Team          Log in or register to post comments",8011
"03:03 pm April 6, 2017                    I'm wondering about Backlog Refinement because of:Product Backlog refinement is the act of adding detail, estimates, and order to items in the Product Backlog. This is an ongoing process in which the Product Owner and the Development Team collaborate on the details of Product Backlog items. During Product Backlog refinement, items are reviewed and revised. The Scrum Team decides how and when refinement is done.So does this mean PO and Dev team should be there, or the whole Scrum Team (so also the Scrum Master)?          Log in or register to post comments",8011
"06:03 pm April 6, 2017                    Bouke, what role does the Scrum Master play in these meetings?  Does the Scrum Master have any stake or ownership over the backlogs?  If not, are there other things the Scrum Master could facilitate with, such as rituals or tools support backlog refinement?  And lastly, would the meeting be just as effective without the Scrum Master present?From the context, it sounds as though the Scrum Master is required to be present for the planning of when refinement happens, but not necessarily for the refinement itself.  Those are two separate items.But you specifically asked whether the whole scrum team should be there, to which I'd say yes.  The Scrum Master as a facilitator and coach is valuable in every Scrum event, even if they aren't required to be there.          Log in or register to post comments",8011
"07:47 am April 7, 2017                    Thank you for your reply Jason :)          Log in or register to post comments",8011
Log in to reply,8011
Messages,8195
"04:07 am April 6, 2017                             Hi All,I wanted to gain clarification regarding two statements in the scrum guide.The guide says ""The Product Owner is the sole person responsible for managing the Product Backlog"" , however, it also says ""The Product Owner may do the above work, or have the Development Team do it. However, the Product Owner remains accountable."".Therefore, is it not right to say that the work of managing the product backlog does not solely belong to the product owner??",8195
"05:33 am April 6, 2017                    It's important to be clear about where responsibility lies irrespective of how the execution of work occurs.          Log in or register to post comments",8195
"02:01 pm April 6, 2017                    @Ian, If asked if the product backlog is managed solely by the product owner -True or False, then based on what the scrum guide says, wouldnt it be appropriate to say False?          Log in or register to post comments",8195
"05:16 pm April 6, 2017                    Not necessarily, because the Product Owner can authorize the Development Team to work on the Product Backlog. This may or may not be seen as ""managing"" it. Hence it is important to be quite clear about the actual responsibility for Product Backlog management (i.e. in the sense of accountability), which always lies with the Product Owner.          Log in or register to post comments",8195
"05:38 pm April 6, 2017                    Managing the product backlog is the sole responsibility of the Product Owner.  It may or may not be solely performed by the Product Owner.For your hypothetical question, I would answer True.  Having the option to delegate work does not change the intent of the activity, or the responsibility of who maintains, monitors and manages that activity.  Yes, there is a possible scenario where someone other than the product owner can manage the backlog, but that is an allowed exception, rather than part of the core definition.          Log in or register to post comments",8195
"07:22 am April 7, 2017                    Fantastic guys !! read through the comments I am forced to say great clarifications..          Log in or register to post comments",8195
Log in to reply,8195
Messages,8196
"08:13 am April 6, 2017                             Hi,could someone clarify. The Scrum Guide states""Work planned for the first days of the Sprint by the Development Team is decomposed by the end of this meeting, often to units of one day or less.""However many teams use story points for estimating tasks and not hours.How do you reconcile the two? Do you select a story point value that would represent a day's work?e.g. all tasks should be decomposed to 8 points or less.I don't agree with using story points for user stories and hours for tasks, as it seems like it's over complicating things.",8196
"05:17 pm April 6, 2017                    As I read it, the ""day's work"" is really just a rough estimate.  The idea is just to break down tasks so they aren't in big chunks, but unlike the scrum events, this isn't a hard and fast maximum time.  The guide doesn't say you *can't* have a story/task that lasts 4 days, only that it's usually more effective to break it down further.As for actually reconciling points into hours, let's say you have a 1-month sprint.  What value are you gaining by trying to determine if a task is going to take 8 hours versus 12 hours?  Are story points intended to be used this way?          Log in or register to post comments",8196
"05:47 pm April 6, 2017                    A Development Team should be able to forecast how much work they believe remains in their Sprint Backlog. The level of granularity should provide the transparency needed for Sprint control to be evidenced. Units of one day or less should allow the evidencing of progress during each Daily Scrum.Estimates are made so that a Development Team can forecast, during Sprint Planning, how much work they believes they can take on. Items should be sufficiently granular to allow progress and control to be evidenced every 24 hours. Those items may be tasks or user stories or some other construct. As long as the appropriate granularity is achieved, the method used in estimation is immaterial.          Log in or register to post comments",8196
"06:08 am April 7, 2017                    We are using story points for User Stories, and hours for tasks. Each task must take max 8 hours. And everything is working just fine.Converting SP in hours is not a correct way to deal in such a situation. Project managers are using this kind of approach; but for me project managers are old school.            Log in or register to post comments",8196
Log in to reply,8196
Messages,8203
"09:49 pm April 6, 2017                             Do items listed in your defintion of done end up on your taskboard as individual tasks?  For example, let's say your definition of done include the following:Code ReviewedDeployed to environmentTestedAnd let's say the team has determined the following code changes need to be made to implement a given PBI.Implement FormAdd Validation ChecksAdd Error Notification MessagesWhen you look at your taskboard would you see the following tasks or would you simply see the 3 coding tasks as it's implied that each task would need to be code reviewed, deployed, and tested before the task could be set to done?Implement Basic FormImplement Validation ChecksImplement Error NotificationsCode ReviewedDeployed to environmentTested",8203
"01:59 am April 7, 2017                    All 6 of those activities represent work to be done, so explicitly planning each one as a task would provide good visibility over the work remaining.Another option may be to capture Review, Deployment, and Testing as finer-grained stations for Work In Progress, such as by including them as columns on a team board. Each PBI would thus need to be reviewed, deployed, and tested before it is Done.          Log in or register to post comments",8203
Log in to reply,8203
Messages,6046
"06:22 am September 4, 2014                             Dear Friends,      I could clear PSM I yesterday with (exact :) ) 85% score. Like, I was helped by friends like you all who shared their views and experiences about this exam, I must pay back to this community by sharing my two cents to aspiring colleagues who would like to appear for this exam.      Although there are many other friends and colleagues who scored 100% as well and they have their experiences, I would like to share my feedback as well:      Please find below my feedback points:      1. This exam is real eye-opener!      2. Just 'knowing' about SCRUM is not enough.       3. SCRUM Guide is like Holy Bible! Read it minimum 5 times with slow pace and understanding meaning of each sentence. Ask question to your self about understanding of each section therein.       4. A few questions from the Open exam also appear, which brings some breather in the course of writing the exam :).      5. Please do solve the open exam at least 8 to 10 times each time with score of 100%.      6. Please do watch videos of trainings on YouTube.       7. Of course having some experience of working in Agile SCRUM team previously helps extensively in applying experience into answering questions that are more practical in nature, like e.g.: who maintains the Burn Down Chart , or What does the trend line mean in the chart.       8. Also, some questions are there where you have to select multiple answers but no minimum selection choice is mentioned.. and there I feel bit worried. If they ask 'Select any two' - this makes easy.. to filter choices basis understanding.       9. Also, like many have said, this exam is about understanding various aspects of SCRUM in real life and not just a theory in the Scrum guide.       10. Once you start the exam: don't panic or rush. While some questions from the  open exam would appear and they will create a time space for you to relax and pay focus on other difficult questions!       10a. Read the question and choices very clearly. (esp. words like : NOT :) ). Like e.g.: which of the following roles are not in a scrum team.      10b. while writing exam, switch off your ph, outlook, office communicator or any other modes of communication that may distract your focus.      10c. When in doubt, book mark the question but then always know that your first thought about a choice usually is the correct one.       I would like to sincerely thank all friends and colleagues here who shared their feedback and experience and I can clearly say that without this it was really difficult to write this exam.      With Best Regards,      Hemant",6046
"02:46 pm September 4, 2014                    very helpful inputs,hemany.do we have some kind of sample question papers for PSM other than the open assessments provided on the website.          Log in or register to post comments",6046
"03:12 pm September 8, 2014                    HI,  I am planning to take PSM I assessment shortly. Your inputs are really very helpful. Please advise me if i need to go through any other books other than Scrum Guide.  I will follow all other tips as you said.  Regards,  SailajaPrakash          Log in or register to post comments",6046
"03:15 pm September 8, 2014                    Hi,  Please let me know reading Scrum Guide completely would be sufficient or any other books would you suggest to appear for PSM I exam.  Thanks  SailajaPrakash           Log in or register to post comments",6046
"11:07 am September 9, 2014                    Hemant,  Thanks for posting.   I would mildly caution against your tip#8, as many internet resources, including youtube videos, are based on outdated versions of Scrum and the terminology has changed significantly in the newer versions (which, besides attending a Scrum.org course, is why the Scrum Guide and Scrum Open practice test are your best credible sources for the exam and the latest innovations in Scrum).  The vast majority of info out there is based on old versions of Scrum, and while much of it is still the same, this might confuse some people who are learning.          Log in or register to post comments",6046
"11:09 am September 9, 2014                    (in case I wasn't clear), the rest of your advice, Hemant, seemed like really good advice!  For those studying for the exam, see:  http://bit.ly/PSMOneStudy          Log in or register to post comments",6046
"07:37 am October 4, 2014                    Hi all,  I just cleared the PSPO I exam. I was quite unsure about a lot of questions (33 bookmarked first, after revisiting maybe 10 left), but I passed with 92,5 %, so my assumptions were right quite often, it seems.   For preparation I followed a lot of the tipps given by Hermant and others, so thanks a lot to all of you. Some additional points:   1. I trained the timeboxes of 45 seconds or less to answer a question in the open assessement. After 8-10 times I could finish it within 10 minutes and 100%.   2. I used a timer-app to train it (in my case the android ""ok timer"" did a good job).  3. Such trained, I ran through the 80 questions of the exam in 45 minutes, so I had 15 minutes left to revise difficult questions.   4. The exam is a bit different from the open-version: You can bookmark questions with a checkbox (no browser bookmarks), it is quite handy.   As many have said: The Scrum Guide is the most important document and you should'nt only read, but really work through it many times. Forum questions help to get a critical understanding of each sentence, so you can answer questions from different point of views.   The PO part is mainly about product value, responsibilities of the PO and so on. I didn't read too much specific literature about PO, mainly the book of Roman Pichler and some other documents that outline the specific tasks of the PO (product backlog-management, agile product planning and stuff like that). But the deep understanding of the guide seems to crutial.   Good look to all and thanks to the community again ;-)          Log in or register to post comments",6046
"07:40 pm October 12, 2014                    Hi Hemanth,  Your inputs are really useful. Do we have any sample questions to go through other than the open assessments. Appreciate your reply.  Regards,  SailajaPrakash          Log in or register to post comments",6046
"05:08 am May 26, 2015                    Dear Charles,  First of all, my sincere apology for responding to this so late, as I work at client location and got almost disconnected to this community for a while.   Many thanks for your corrections and you are right. the world of SCRUM is so fast changing and any study content may get quickly outdated. Indeed, the SCRUM GUIDE remains the only authentic source of reliable information for any questions to be answered.  once again thanks for your kind appreciation.  Best Regards,  Hemant          Log in or register to post comments",6046
"05:11 am May 26, 2015                    Dear Abhi,  Many Congratulations on qualifying this exam. As informed to Charles, I was offline from this site for a while and hence couldnt respond. I am glad you already passed the exam. You were right, one must start studying and warming up the SCRUM Muscles, and give the exam without waiting longer.   All the best,  Hemant          Log in or register to post comments",6046
"05:12 am May 26, 2015                    Dear Shailaja,  Congratulations on passing this exam. And sorry for the delayed response.  All the Best !          Log in or register to post comments",6046
"12:04 pm May 29, 2015                    I wrote an article yesterday in order to help people suceed on PSM I.  PSM I Simulated Exam Review  http://getscrum.com/2015/05/28/psm-i-simulated-exam-review/   I hope it will help too =)          Log in or register to post comments",6046
"09:39 pm December 15, 2015                    Hemant. Good tips.  Wanted to comment on few things:  - There is no need for work experience. I didn't have the experience but could pass. In fact some of my colleagues had work experience but their real life scrum was different from scrum guide definition. For example, they are very much used to iteration zero.  - The training videos are good but not needed for PSM exam. Some of the points discussed in videos don't match with Scrum rules  - I will two more books in addition to scrum guide. They are great context setters for many of the concepts in scrum guide    1. Scrum Pocket Guide    2. Scrum narrative and PSM Exam Guide  - Read the latest nexus guide to understand basics of large scrums.  Good luck!          Log in or register to post comments",6046
"03:55 am December 22, 2015                    Well,  I just passed with a 93.8% (on my third try).   1st attempt - 77.5% No studying at all  2nd attempt - 83.7% Practice exams and open assessments, but also, read the guide once.  3rd attempt - 93.8% Took immediately after 2nd attempt.  This exam requires you to really get scrum. Once it clicks, it's a wrap.  Best,  Joshua S.          Log in or register to post comments",6046
"04:18 pm July 20, 2016                    Hi,  Recently I cleared PSM-I certification from scrum.org with 92% score in first attempt. Let me brief how I prepared for the exam.  1. Scrum Guide – The first and the foremost guide for the preparation is the Scrum Guide itself. You can expect 80% to 90% of the question from this guide. Don’t just read it. Understand every bit of it. This is the essence of the scrum. Every sentence in the guide is a probable question in the exam.  During the days of my preparation, I used to listen to the audio version of the Scrum Guide whenever possible (eg: while commuting to office). This helped me in fully understanding the Scrum Guide.  2. Open Assessment – Take Scrum Open Assessment until you get 100% score consistently. This will help you understand the pattern of the question. In the real exam, you can expect 5 to 10 questions from this Open Assessment.  3. Books – There are plenty of books available on Scrum. Definitely reading these books will improve your scrum awareness. But in exam preparation point of view ready many scrum books may lead you in confused state. All your answers must be adhere to Scrum Guide.  One book I used for my preparation was Scrum Narrative and PSM Exam Guide. This book explain the Scrum Guide in narrative way and is very specific to PSM exam. There are 250+ practice questions too.  4. Practice Test – There are few PSM Exam simulator are available in the net. The one I used is made by Mikhail Lapshin. This has Learning mode (which show you the correct answer with explanation) and Real mode, and it is totally Free.  Give complete focus on your preparation. Dedicate yourself for this for one/two weeks, avoiding all other distractions. Definitely you can pass this exam with good score.  All the best!          Log in or register to post comments",6046
"09:17 pm July 20, 2016                    Congratulations Murali. I am preparing for it. Havent booked dates yet. Can you tell me was it online test or center based? Was there any ""select as many checkbox "" questions?  , How much time did you take for exam?           Log in or register to post comments",6046
"02:10 pm November 12, 2016                    Excellent, really excellent hints and suggestions. I agree on all of them          Log in or register to post comments",6046
"01:15 pm February 28, 2017                    I suggest you to read these articles: How to pass Professional Scrum Master I (PSM I) certification test in #6 stepshttp://getscrum.com/pass-professional-scrum-master-psm-certification/ PSM I Questions Checklisthttp://getscrum.com/psm-questions-checklist/           Log in or register to post comments",6046
"08:54 am March 1, 2017                    Hello,I also managed to pass the PSM 1 for the first time  my tips are :- Scrum guide - it is just theory definetly not enough to pass- Find as many quiz as possible on the net like mentioned above by others. (usually free ones are just Scrum guide based)-There are practical  questions regarding  coaching, real live situations  so I suggest  to sign up for  some online paid training (prices are from 20-70USD) and you will succeed.            Log in or register to post comments",6046
"06:50 am March 6, 2017                    I just passed the PSMS I test on my first attempt. 90%Thank you for all the tips. I am very grateful for all of you sharing your knowledge on this forum.Read the Scrum Guide, Take the practice tests, until you can score 90%+ every time. Then, relax believe in yourself and go for it.          Log in or register to post comments",6046
"11:30 pm April 6, 2017                    Hello,I am planning to give PSM 1 shortly. Can anyone please help me out in finding out whether I have to get 100% on constant basis in all 4 Open Assessment Tests? I am finding it tough for Nexus Open and Developer Open Assessments.Thanks,Amar Garg          Log in or register to post comments",6046
Log in to reply,6046
Messages,8185
"03:33 pm April 5, 2017                             Hello there fellow Scrum enthusiasts,Throughout my experience as a Scrum Master, I've worked with many developers who were very happy to broaden their skillset, accept ownership of their team's success, and take the necessary initiatives to self-organize. However, I've also met developers who were in the field because they liked working with software, but who wanted as little to do with the ""management and organization stuff"" as they could. I've heard the phrase before ""Can't we just have someone in charge who knows what they're doing, makes the calls and tells us what to do?"" and I've heard many developers argue that, in their mind, it couldn't work any other way. You can show someone data showing that it does work, but if they're not comfortable with that kind of organization, it's not facts that will change their mind (psychology researcher Jonathan Haidt has a lot to say about that in his research).I've read Dan Pink's Drive, and I am aware of what a self-organized team can achieve. Personally, I like to think that I strive for an intrinsically motivating job. At the same time, if someone tells me that what they prefer is a 9 to 5 job that pays the bills and where they can just do what's asked of them, then who am I to try to convince them that they should strive for something else, that they should aim for a different life? To me, that kind of value judgement smells of arrogance and elitism.Some people might say that it's fine that some people prefer that kind of job, but that in building an agile organization, these are not the kind of people you want on your team. Alright, I can agree that it's important that people's values should fit with their employer's. What do you do, then, when a CEO decides that the organization will attempt an ""agile transformation""? Can you really just ask people to adapt or leave? To what degree does the organization have some responsibility to be flexible with its employees different personalities?There might be cultural factors at play too. From its inspiration in Takeuchi and Nonaka's article, Scrum seems to have been influenced quite a bit by Japanese work culture, a country where people, if I'm not mistaken, are often given a job-for-life, and a strong spirit of collectivity. I'm particularly interested in Geert Hofstede's research on culture's dimensions, two of which, the Power Distance and Individualism of a culture, would likely have a large impact on how tolerant people might be to have no central figure of authority and collective objectives. I've also been told by a management professor with cross-cultural experience in Thailand (and I might have understood this wrong) that the Thai Buddhist culture sometimes favours repetitive, brainless jobs, jobs where one can achieve detachment from desires; isn't that in conflict with the core assumption behind self-organized team that people flourish in stimulating jobs? Does it really make sense to try to copy and paste a set of value on people who do not necessarily share these values?My impression is that there isn't a cut and dried solution, but I'd like to hear your opinions on the matter. ",8185
"04:42 pm April 5, 2017                    > I've heard the phrase before ""Can't we just have someone in charge who knows what they're doing, makes the calls and tells us what to do?""What was the answer to that question though, in each situation when you heard it? It may or may not be true.If an organization actually needs a Scrum transformation in order to survive, then there seems little point in hedging, because the answer must surely be ""no"". The matter is then one of securing the necessary sponsorship for change, and of communicating the need for it. Scrum requires self-organizing teams which manage themselves using empiricism. The communication of such a necessity is ultimately the responsibility of the organization's accountable officers. A Scrum Master can assist transformation in a number of ways, but there is no button for enterprise change which a Scrum Master can or should push.          Log in or register to post comments",8185
"05:54 pm April 5, 2017                    > What was the answer to that question though, in each situation when you heard it? It may or may not be true.If I thought I had the definitive answer to that question, we wouldn't be having this discussion.> If an organization actually needs a Scrum transformation in order to surviveIsn't that a pretty big ""if""?If there is no immediate threat to survival, and Scrum transformation is seen in the context of performance (which fits my personal experience), then I believe there is a case to be made for the moral responsibility of the organization towards its employees, which in some cases could be at the expense of some performance. Some people will argue the organization has responsibility towards noone but its shareholders; that's a whole debate on its own...I completely agree with you on the necessity for change sponsorship, and for the communication of the organization's desire to have self-organizing and empirically managed teams. That is, if the organization actually wants those things.You've made me realize that if the organization does communicate clear values and a clear management philosophy, if the organization clearly expresses a desire for an agile transformation, then it is probably reasonable to expect employees to follow those values, even if they are not their own, and to adapt to this new organization.Where I am still hesitant: While I am certain organizations are aware of the potential advantages of an agile transformation, I don't think its potential impact on employees (sometimes positive, sometimes not), and the risks associated with a culture change of that magnitude, are usually well understood. We know agile organizations are usually effective, but that doesn't mean that making your organization agile will be a positive change.          Log in or register to post comments",8185
"06:41 pm April 6, 2017                    I don't think comparing Scrum with Thai buddhist culture is the right thought they both have their own purpose.Scrum became popular because its strength lies in the core principles and set of ingredients that make it effective. Once of those ingredients is a self-organizing team.If team member(s) do not believe or do not want to self-organize or take ownership and responsibility it is the role of the SM to patiently wait , coach, train and advocate the benefits of being a self-organized team. I think your opinion about avoiding conflict (a big NO for scrum!) w.r.t their belief system will change once you read books about how to coach your agile team (Coaching Agile Teams - the book - by Lyssa Adkins is what helped me, but there are others like The Five Dysfunctions of a Team by Patrick Lencioni which helps you understand how to deal with team members of different emotions)Remember that SMs are not usually given a team of 3-9 CERTIFIED Scrum development team members. I follow the following steps to expose such individuals to the Agile/Scrum IDEOLOGY.1) There are numerous online resources/videos and shot exams that will challenge their knowledge of scrum and teach them in the process. Many organizations have certifications and tutorials to pass every year (HIPAA, PHI for example). Talk to management about the problem and propose a certificate program for becoming a scrum development team member. Just like out beliefs have transformed through out coaching and training sessions, their opinions will change too!2) Hold lunch and learn sessions and attempt the online exams as a team. As you answer and reason the wrong answers the information discussed and the concepts of self organizing team will repeat and stay ingrained in our minds (example = you and me!)3) I never force the belief, I always wait for the right occasion or moment. Some times it could be happy hour discussion about a great football game where the team is in awe of the team effort of players on field! Use that moment to draw analogy of how it can be employed to your team! Use examples of online collaborative video games where people share resources/troops as an example of the experts can train others and others can seek help without fear and hesitation so that all team members acquire and grow their knowledge to form a solid team will all members having multiple skills. As this happens the team automatically becomes self -organized as well!4) Team building events greatly helps. When people know about each other other than their job persona things will be eased and they can start taking ownership of things and even enjoy getting things done a a group. The feeling of yours vs mine should be abolished to build a harmonious self -organized cross-functional team.           Log in or register to post comments",8185
"08:30 pm April 6, 2017                    I didn't mean to compare Scrum to Thai Buddhist culture (it's not a question of whether one or the other is valid), I meant to point out how one's culture and the values carried by that culture can be in direct conflict with the values behind Scrum. My questioning was: in such a case, can you force a set of values upon an individual? If they are the organization's values, perhaps (Dr Mitchell's convinced me here), but what about the cases where that part is not so clear?Both Patrick Lencioni's book and Lyssa Adkins are great. They've shaped a lot of my opinions on what makes a great team and what makes a great coach. I'm not saying I don't believe in the strength of a self-organized team. However, what I do believe is that it's not always in the best interest of all when an agile coach attempts to take a team there.A glaring difference I see between agile coaching and some other forms of coaching is that the agile coach must keep in the back of their head the interests of the organization (and the agile transformation), whereas a personal coach, for instance, always puts the coachee first. This makes a difference in the (maybe rare) cases where, for example, it becomes obvious that the coachee does not want to self-organize. If, as a coach, you come in with the belief that you know what's best for the coachee, and disregard their own stated opinion on the matter, is that really coaching? If you have an agenda other than the coachee's interest, when does coaching become salesmanship? When does it become manipulation?Just to be clear: I'm not saying to avoid conflict, but perhaps to be mindful of the causes and consequences of that conflict.          Log in or register to post comments",8185
"09:11 pm April 6, 2017                    I think you had exactly the same question like I did "" If, as a coach, you come in with the belief that you know what's best for the coachee, and disregard their own stated opinion on the matter, is that really coaching? ""I was not convinced it is possible until I read Coaching Agile Teams - the book - by Lyssa Adkins . In one of the chapters on coaching techniques She advocates of meeting them half step not even one step. What she meant based on my reading is when we have a rule to be followed and even if they have some aspect of it that they like we will stick on to that and build on top of it with patience. Even after all this some people will not be willing to change like you mentioned.I guess the only option at this time is to respect each others views and agree to an arrangement that is best for both! I mean I have seen some individuals who do not even believe in Agile to the extent that they wont even yield to have a quick read of my suggestion or join me to an agile webinar or event. Obviously they may want to pursue career at an organization that is not agile. there is no option there. But I would try everything before I come to that conclusion :)          Log in or register to post comments",8185
"09:29 pm April 6, 2017                    Another way to put it is, coaching only comes into play when opinions have to be tailored and conditioned,  Right? Other wise they may not even need coaching. I remember those who get it right away! These people actually help my cause by setting example, being there with me during the lunch and learn and training sessions, helping me and adding their own reasons and experiences of why Agile is best. They help me coach and train.Lyssa also differentiates between coaching and training , where she attributes training (as if you are training a fighter who WANTS to learn fighting) and coaching as how to best use the skills they already have. Obviously, coaching is a way to apply learning in an informed way. Training is used for things like new-hire orientation, changes in processes, procedures, or technology, and new governmental regulations. So first you train even if they have questions about why they have to do what they are doing (compare this with wax on wax off of the karate kid movie). I guess if the employees are not willing to get trained that means they do not want to CONSIDER agile and therefore do not want to be with the company. As simple as that.And the best way out of this situation is when you hire the new employee with an Agile need. Now that you mention this hardship of coaching I remember how the new employees always are willing and adapting to the process without much complaints! Because they already know what they signed for and they are in the training mode where they are ready to learn an entirely new or foreign concept with minimum questions (orientation style) unlike the existing employees who need to be connected through their pain points and should really believe that the change will help resolve the problems they are facing in current process. In my experience thought different teams and persons took extremely wide range of times ( days to months and years) to finally get it, they all either got it or left before getting it, but were always engaged in the discussion, because the process of training and coaching never stops for a SM.          Log in or register to post comments",8185
Log in to reply,8185
Messages,7242
"12:22 am July 13, 2016                             All the Scrum events like Sprint Planning, Sprint, Daily Scrum are time boxed. The event should end as soon as the objective of the event is reached or if the time expires.  This is true,according to me.If Sprint planning is 8 hour time boxed event,but needs 6 hours to finish the planning,in that case the event should end.IS that correct?  Thanks,",7242
"10:48 am July 14, 2016                    You're correct.  A timebox is a maximum time, not an exact time - and certainly not a minimum!  The daily Scrum is timeboxed to 15 minutes, but doesn't need to last that long if everyone has said their piece.  It's the same in the other events.  You might also want to pick this up in your Retrospectives, to explore whether the team had enough information from the planning to be able to achieve the Sprint Goal by the end of the Sprint.          Log in or register to post comments",7242
"02:46 pm July 15, 2016                    I want to make a clarification here. All Scrum events are time boxed. This is true.  But Sprint itself doesn't end if the work is over. Sprints length do not change in the middle of the Sprint.  All other events end as soon as the objective of the event is met.          Log in or register to post comments",7242
"08:55 pm July 15, 2016                    All events are time-boxed events, such that every event has a maximum duration. Once a Sprint begins, its duration is fixed and cannot be shortened or lengthened. The remaining events may end whenever the purpose of the event is achieved, ensuring an appropriate amount of time is spent without allowing waste in the process.http://scrumguides.org/scrum-guide.html#events          Log in or register to post comments",7242
"04:19 am April 6, 2017                    According to the scrum guide ""Sprint Planning is time-boxed to a maximum of eight hours for a one-month Sprint. For shorter Sprints, the event is usually shorter. "", however I read elsewhere that based on the above this means that a 1 week sprint's planning event should be 2 hours, similarly if its a two week sprint, then it would be 4 hours. How accurate is this information?          Log in or register to post comments",7242
"05:44 am April 6, 2017                    For the sake of the exams, it's accurate.  If you had a hypothetical one-week sprint, you'd cut all your timeboxes by 75%(except for one specific timebox).In practical use, if you're planning 25% of the items, do you see a reason for needing more than 25% of the time to do it?  Is there a portion of planning that takes a fixed duration regardless of the scale of your sprints?          Log in or register to post comments",7242
"05:55 am April 6, 2017                    Small correction due to lack of edit button: There may be more than one timebox that remains unchanged, across both the Scrum and Nexus guides.          Log in or register to post comments",7242
"06:50 pm April 6, 2017                    To everyone who has answered, If the question is:How long is a Sprint Review?,a. 4 hours.b. It depends on the length of the sprint.Would the answer be b. ?          Log in or register to post comments",7242
"08:52 pm April 6, 2017                    The Scrum Guide does explicitly note which of the Scrum Events have timeboxes that fluctuate with sprint duration, as well as what their duration would be in a one-month sprint.  Below is the excerpt from the Sprint Review section of the guide:...This is a four-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter.            Log in or register to post comments",7242
Log in to reply,7242
Messages,8087
"10:53 am March 30, 2017                             Dear All,Cleared PSM I certification exam last week with 97.5%, score of 78/80.I have decent experience working in Scrum based projects and Certified Agile Practitioner (PMI-ACP). I have taken PSM certification since I want to have something specific to Scrum. I must say I really learned a lot during this exam preparation, during reading the Scrum Guide, I could relate to my experience and found guide very structured way to understand the Scrum framework. To test my knowledge and to ascertain how I would fare in the exam, I have attempted all the Scrum open assessments till I get 100% repetitively. That gave me general understanding of the kind of questions in the exam. I have also attempted PSM I Quiz in Real mode by Mikhail Lapshin in order to get the feel of real exam with total 80 questions.Since this is the first certification exam I appeared which is self-proctored in my personal PC from the comfort of my home, so exam feeling was different & also little worried about the power & internet disconnection issue, But fortunately did not happen in my case, I found test GUI OK & questions were loading without prominent time lag, However some look & feel improvement can be made in Test software.I really enjoyed the exam with the kind of interesting questions coming in my way, few directly from the Scrum Open assessments. I was able to complete the 80 questions in 30 mins, with around 13-14 marked for review. Then I took some time to understand and answer those reviewed questions. Again cross checked all the 80 questions and managed to finish the test 4-5 mins before time, thinking better to finish it if done, than giving any chance for any disconnection or interruption to happen.Questions were not easy but of intermediate difficulty level with some scenario based. It will really test your understanding of Scrum Guide and ability to apply it in real-world situations. But if you are prepared well & have some practical experience in Scrum, it is not difficult to pass this exam.All the Best for the people who are PSM aspirants. Hope my feedback will help you in your preparation for your PSM exam and Scrum journey.Thanks,Pranab Chakraborty, PMP, PMI-ACP, ITIL v3F, PSM I",8087
"06:31 am April 1, 2017                    I have just passed PSM I. It was my first attempt and I am glad all the work paid off.During the exam, there was a latency in getting the next questions and it took me exactly 1 hour to answer all questions.In addition to the Scrum Guide, which I went through at least 5 times, I did the open assessments on scrum.org and the mock exams on http://mlapshin.com/index.php/psm-quiz/ .This site has 80 questions  in learning mode (with answers - excellent way to understand scrum) and real mode ( real time exam practice). I kept doing the exams until I had 100% result. Excellent site and I suggest everyone studying for the exam checks it. Lots of questions were very similar to the certification exam questions.All the best for the people preparing for PSM certification.Regards,Mare Ananijevska           Log in or register to post comments",8087
"05:07 pm April 5, 2017                    Just passed PSM 1 today. Here my preparationRead the scrum guide from scrum.org which is very brief and conciseThen run to the open assessments (PSM) on scrum.org several times, improving from initial 75%. Tried the other PSD and PSPO assessments as well to broaden knowledge.I found an excellent PSM 1 preparation course at management plaza (https://mplaza.pm/) including an online video course, a textbook and 3 full simulated exams.I first read the textbook which is very well-structured, then watched all 19 videos (some 180mins). The videos also where well-structured and explain Scrum very well. Finally I was running trough all 3 simulated exams, one per day and a repetition in the evening. The simulated exams give excellent feedback and explanation for all questions. I have collected all questions where I failed in a text file to improve by adaptation (a scrum principle :-)). So I could find out where I failed.The Mplaza course also contains some valuable tips and hints for the exam.Finally read the textboolk again one day before the exam.          Log in or register to post comments",8087
"10:40 pm April 5, 2017                    another good resource for prep is https://scrumstar.com/ worth paying the $20 for the bank of questions and resources they have. Progress & scores are presented in graphs which makes it transparent so you can inspect and adapt!!          Log in or register to post comments",8087
"03:23 pm April 6, 2017                    I came here to make a similar post, but perhaps by adding to the thread it will serve as a better resource for others. I also recently passed PSM-I.   Obviously there is some great advice in these forums, so I will try and not repeat those. In addition to the standards of reading the Scrum Guide and taking the Open Assessments for Scrum Master and Product Owner, I used the following resources - - Read the book ""Software"" in 30 Days- Read the book ""Scrum"" by Sutherland- Read the book ""Scrum Narrative and PSM Exam Guide"" by Mohammed Musthafa Soukath Ali (and read his associated pocket guide)- Subscribed for one week to BostonAgileTrainings Mock tests, which I believe was $10. I did not use their training material. - Used the practice tests at mlapshin.comThere are other resources out there, and you really need to be careful about what you use.  For example, I had a copy of the Scrum Master Training Manual from Mplaza that listed 6 Artifacts.  A different version I had showed the correct listing of Artifacts.   So, whatever your resources, make sure they are current and up to date. Advice on the forum is pretty solid all the way around.   Take the open assessments until you get 100% all the time. These not only give you a feel for the format of the test, but I probably had at least 10 or 15 questions that were straight from these open assessments, so those are pretty much free points. I really found the best resource to be the book by Ali.  He actually tries to guide te reader into an active learning process, which is what you need to do.  Essentially, for every sentence in the Scrum Guide, you need to ask yourself ""what does this mean in an applied setting, how would I actually use this?""  If you can begin to internalize that concept while reading it will take you a long ways.  Conversely, while taking a test, you invert this idea and ask ""what concept in the Scrum Guide does this question speak to?""   The test is very much asking you to apply Scrum principles. I advise reading the Scrum Guide and Ali's book before reading the ""Scrum"" and ""Software in 30 Days"" books.  I found the utility of the latter two books to be in the application and execution of Scrum, which is much easier to understand when you have the knowledge of the construction of Scrum.  Not to mention that they are fun reads and show actual successful transformations to Scrum, which gives an added real world view. I also advise picking two or three sample exams and doing them until you pass with 90% or better.  However, hold one set of sample exam in reserve.   So, if you pick 3 exam sources, practice 2 of the 3 regularly.  Then, right before taking the real exam is when you want to take the final set of practice exam.  The reason is that the more you practice anything, the more you will start to learn those questions, those answers and that style of question.  So, you might be scoring very high but that could be just because you are starting to learn the right answer.  Holding one test in reserve will force you to apply knowledge in an unfamiliar setting, which is what you want before the real exam.I also advise as you engage our learning process, start to build yourself a ""1 pager"" based intially on the Scrum Guide.  Sure, you can find plenty of one page slides online, but there is a part of learning that comes from your own captue and recreation of information.  After you make this one pager, keep it next to you as you read other materials and use it as a reference, making notes and updating the one pager through the process. As humans, we tend to prefer our learning to be specific, and fact based as opposed to concept based.  This will throw you during the real exam if you aren't careful.   You will see questions, and question patterns that look familiar but if you don't read every word, it will trip you up. For example, you might see a question that asks about Done for a Product Backlog Item, which might be different than Done for a Sprint Backlog item.   If you are disposed to thinking about DoD for Sprints and Sprint Backlog Items, you really need to think about this for a minute before answering. You need to read every word of a question and don't make the mistake of thinking that you recognize the question based on some key words and thus know the answer. Also for example, you might see a question about treatment of Non Functional Requirements and you think ""oh man, I read three books and not one of them mentioned NFRs, what do I do?"" Again, the answer is to apply the principles of Scrum.  I would argue that NFRs, Functional Requirements, or Whackadoo Blue Moon Chupacabra Requirements should all be treated the same way if they are delivering value to the customer. Finally, right before testing, re-read the Scrum Guide.  As many others have said, every word and every sentence is chosen carefully.  I did this and there were at least 3 questions on the exam that used language straight out of the Scrum Guide that I was able to recall because I had read it 10 minutes before. Well, that is a bit more than my 2 cents. I tried to give you some food for thought, but without revealing any testing specifics.   I hope this helps and is a unique perspective.          Log in or register to post comments",8087
Log in to reply,8087
Messages,5349
"10:40 am October 29, 2012                             Scrum Guides states that: ""The Scrum Master enforces the rule that only Development Team members participate in the Daily Scrum. The Daily Scrum is not a status meeting, and is for the people transforming the Product Backlog items into an Increment.""  I want to make sure that I correctly understand the above statement in the way that it really means that NOONE (even the Product Owner) is allowed to attend a Daily Standup. If that is true - then what is the underlying cause of such a change. Before, the chicken could observe the meeting but were not allowed to speak.",5349
"10:45 am October 29, 2012                    Hi Illya:  I don't think anything has changed from your initial understanding.  The key word in the Scrum guide is participate.  Others who are not the Development Team can attend but they do not participate.          Log in or register to post comments",5349
"11:14 am October 29, 2012                    Well, the Product Owner usually doesn't understand what the developers are talking about, so he is useless anyway. Other stakeholders - especially managers - tend not to understand anything either but may feel the urge to ""manage something"" once they are there. So they are better off not being there.   What I usually do is, I ask the Team at the beginning of the Daily Scrum if they allow certain spectators to participate. The spectators however are briefed in advance that they are not expected to talk.   Regarding the PO: It largely depends on the person. If both he and the developers see a benefit in it, he of course is there (usually to answer questions right when they surface).          Log in or register to post comments",5349
"11:27 am October 29, 2012                    I had a poor experience in the past when the PO was also the part of the Development Team thus he attended the meeting. The Team felt as they were reporting to the PO about the status.          Log in or register to post comments",5349
"03:23 pm October 29, 2012                    This is interesting. I can definitely see a value of having the PO at the daily scrum. For example when deciding what stories to skip if the team realize that they cannot deliver all stories in a sprint or to discuss changing the scope of existing stories. To me this increase transparency for the PO. The scrum guide is quite clear on this though, the meeeting is for the dev. team only.           Log in or register to post comments",5349
"04:51 am October 30, 2012                     This is interesting. I can definitely see a value of having the PO at the daily scrum. For example when deciding what stories to skip if the team realize that they cannot deliver all stories in a sprint or to discuss changing the scope of existing stories.    Frederik, I believe these discussions are out of Daily Scrum agenda. And this is clearly defined in Scrum Guide too. The members of Development Team should answer only 3 questions, that's it. The rest is out of the Daily Scrum scope.           Log in or register to post comments",5349
"02:47 am October 31, 2012                    In my experience it is the Development Team that only takes part in the Daily Scrum. However, after the Daily Scrum is over, other brief meetings are just added ad hoc. And there it is good to have the PO and maybe other stakeholders at hand.  --> Distinguish between the Daily Scrum (where only the Development Team shall talk and shall talk to each other) and the subsequent discussions (where not the entire Development Team attends, but a lot of bilateral talks take place).  --> It is up to the Scrum Master to delay such discussions for after the Daily Scrum and keep this timebox within 15 minutes. I even prefer shorter Daily Scrums.          Log in or register to post comments",5349
"03:29 am October 31, 2012                      --> Distinguish between the Daily Scrum (where only the Development Team shall talk and shall talk to each other) and the subsequent discussions (where not the entire Development Team attends, but a lot of bilateral talks take place).   I absolutely agree with you. Also it's a good practice to have a parking lot when holding a Daily Scrum where you put the issues that can be discussed after the meeting.          Log in or register to post comments",5349
"04:56 pm November 2, 2012                    . However, after the Daily Scrum is over, other brief meetings are just added ad hoc.  I've seen this as well, and I think it is generally a good thing, especially if it is mostly ad hoc meetings organized by the Dev Team.  I've heard this concept  called ""The after meeting.""  Some things potentially harmful to Scrum to watch out for with this practice:  * Authoritarian type managers/execs/PO's who might ""hover"" to silently observe the Daily Scrum might be tempted to exert command and control in the after meetings, or require an after meeting every day to exert such control.  * Be careful of developers discovering impediments the previous day but *waiting* until the DS/after meeting to deal with them.  The best way to remove impediments is to handle them immediately if possible.  Coach your team to always be removing impediments, and not just waiting until the DS to do so.  Other than those two anti-patterns above, the ""after meeting"" is a great concept, and as Daniel said, it helps keep the DS itself very short.  Even on larger(9-10 devs) distributed teams that I've coached, they were able to keep their DS to 10 minutes or less.  Regarding the DS, it is also worth noting that a) there is no requirement that it be a standup meeting, though that is often a great practice and b) there is no Scrum rule against solving impediments within the DS.  So long as you can keep it to the 15 minute time-box, and the conversation is on topic for DS content (yesterday/today/impediments), you can do whatever you want in that meeting.  -------  Charles Bradley  http://www.ScrumCrazy.com          Log in or register to post comments",5349
"07:06 am November 3, 2012                    I'll claim that the meeting is definitely not just about answering the 3 questions. With that agenda the daily standup runs the risk of turning into a status meeting. The daily scrum is a planning meeting for the next 24 hrs. Inspect what has been done since the last meeting and adapt accordingly to maximize the likelyhood of meeting the sprint goal. The PO must be involved e.g. when deciding what stories to skip in the current sprint and to me the daily scrum is the ideal time to have this discussion. If the team asks  the PO to decide things like this after the DS the plan for the day may be useless. Don't you agree?          Log in or register to post comments",5349
"03:24 pm November 3, 2012                    @Illya http://blog.appliedis.com/2012/10/09/daily-scrum-attack-the-day/  Scrum expects us to use our intellect.  I wouldn't take those questions quite so literally.  Plan for the next 24 hours.          Log in or register to post comments",5349
"12:26 pm November 6, 2012                    My company has different definition of the Team. Product Owner and Scrum Master are full time members of the CORE team. Every one on the CORE team attend the daily scrum. Extend Team (ie architect, project manager) is invited, but do not participate. When Extend Team has questions, they will call the people involved (usually starting with Scrum Master) and discuss them after meeting. It's great collaboration and communication within and outside the team.          Log in or register to post comments",5349
"12:58 pm November 7, 2012                    Fredrik, I'll claim that the meeting is definitely not just about answering the 3 questions. With that agenda the daily standup runs the risk of turning into a status meeting. The daily scrum is a planning meeting for the next 24 hrs. Inspect what has been done since the last meeting and adapt accordingly to maximize the likelyhood of meeting the sprint goal.  ^^ Agree 110%, and this is a concept that is not understood by many practitioners as they focus too much on the 3 questions and item status.  The PO must be involved e.g. when deciding what stories to skip in the current sprint... ^^ True, and the whole Dev Team must also be involved. ...and to me the daily scrum is the ideal time to have this discussion... ^^ Is it always the ideal time to have that discussion? If the team asks the PO to decide things like this after the DS the plan for the day may be useless. Don't you agree? Let me take your point here one more step.  Let's say that the team needs a PO decision on what things to add or drop from a sprint.  As we know, the Dev Team and PO must be present when this decision is made.  Let's say your Daily Scrum is at 10am.  At 1pm, the Dev Team realizes it might need to drop an item from the sprint.    Should that team wait until 10am the next day to have that discussion?           Log in or register to post comments",5349
"02:23 pm November 8, 2012                    Charles,   I am not saying that the PO must attend the daily scrum but  I am questioning the reason why the scrum guide explicitly states that the DS is for dev team only. I am guessing it's to prevent the DS from becoming just a discussion/negotiation between the PO and the dev team, allowing no time for the dev team to plan their work.          Log in or register to post comments",5349
"03:23 pm November 8, 2012                    Fredrik, but I am questioning the reason why the scrum guide explicitly states that the DS is for dev team only.  Fredrik, I think you are very right to ask this question, and it's a good one.  The short answer is I don't know exactly why the Scrum Guide was written that way, as I was not involved in writing that part of the Scrum Guide.(or any other part, to date, though I have given some feedback to Scrum.org on occasion).  However, here is my guess, based on my Scrum knowledge and experiences:  * The Dev Team(DT) has no other Scrum event where it is just them exclusively, so to ensure that they have every reasonable opportunity at self organization, the Daily Scrum was explicitly described as only the DT participates.  ** Having anyone else participate, especially people who might be viewed as authority figures (SM, PO, Managers, etc) carries the risk of completely destroying the self organization of the DT.  Giving any of these authority figures even the slightest daylight in the Scrum Guide would probably encourage them to try and participate.  I think it is ok for the SM to facilitate the DS for a team that is learning, but facilitating is not the same as participating(as in, answering the 3 questions, etc).  *** Along this theme, having any other authoritative figure present also runs the risk of the DS turning into a status or ""report up"" meeting, which is definitely NOT what we want.  ** I'll go one step further.  I'd prefer that no one else(besides the DT, and the SM when needed) be *present* at the DS, because it discourages transparency.  People who are being observed by an authority figure will not be as transparent as those who are free from such observation.  * The purpose of the DS is to inspect and adapt the plan.  Many studies have shown that when a team is empowered to self organize to provide it's own plan, it is much more likely to execute that plan well and on time.  Introducing others means reducing the empowerment, IMO.    ** The PO has no role in coming up with the plan -- only the ordering, definition(acceptance tests), and clarification of PBI's. The PO has all kinds of influence over the ""WHAT"", but only the Dev Team owns ""THE HOW"".  Therefore, one might say that the DS is for the ""HOW', and not for the ""WHAT"".  * Since we often want the PO to be someone empowered, from the business side of the house, it may be impractical to require them to come to the Daily Scrum -- because of their business side duties.  OTOH, IMO, there is no such thing as too much communication between the PO and team.  IME, very few Scrum teams can get along well without a lot of interaction with the PO.  Maybe the DS is just not the appropriate time for it.  Let's remember, the DS is only 15 minutes, so there *are* another 7 hours and 45 minutes of the day(typical US work day) when the PO can collaborate with the DT.  I mean, you could have a PO Q&A just before your DS(so long as it does not impact the DS in any way -- and that includes the DS start time) every day, if you're really worried about PO decision affecting the plan.  However, the reality is your team should be interacting with the PO *whenever* the PO is needed.  While the PO need not be present all day every day, they should be pretty highly available all day every day, IMO.  In summary, there is a very wide range of how much actual time a PO spends with a team or managing the backlog.  As such, taking them out of having to participate in the DS allows for POs who also spend a fair amount of their time with stakeholders or in non Scrum team/business activities.  Many of the obstacles you mentioned can be solved in other ways besides at the DS.  The Scrum Framework encourages you do to do whatever you can to solve these issues on your own          Log in or register to post comments",5349
"03:26 pm November 8, 2012                    Whoops.  I hit the ""submit"" button too soon.  The Scrum Framework encourages you do to do whatever you can to solve these issues on your own Should read:  The Scrum Framework encourages you do to do whatever you can to solve these issues on your own, without changing the framework itself.  As the Scrum Guide says, ""Scrum’s roles, artifacts, events, and rules are immutable and although implementing only parts of Scrum is possible, the result is not Scrum.""          Log in or register to post comments",5349
"01:43 pm November 11, 2012                    Hmm, same topic, different thread. Here's my view, as stated in the other thread:  I always tell that the meeting is mandatory for the Development Team, as you say. It is after all their meeting, their inspection of their work.  I tell that Scrum Master and Product Owner are allowed to join the meeting. This seems to have a positive effect on the team; it shows they are connected and committed as Scrum Team members. But if they join, behave as every other Scrum Team member. So, don't start leading the meeting. I ask them to answer the 3 questions from their perspective. It keeps the others informed, and it helps to keep the Product Owner to be accurately informed which is quite helpful for his/her stakeholder management.  And don't forget that the 3 questions are indeed only a means to get the right information in the open. Just formally answering the 3 questions for the sake of it isn't helping either.          Log in or register to post comments",5349
"04:41 am November 12, 2012                    Charles,  Thanks for your detailed reply. I  am inclined to agree on most parts.          Log in or register to post comments",5349
"04:28 pm November 12, 2012                    Fredrik,  You're welcome, and I'm glad you found value.  It's an excellent question, which leads me to believe you are on a good path towards good Scrum.  Keep asking the tough questions!          Log in or register to post comments",5349
"02:06 am November 20, 2012                    I am new to Scrum and was reading the Scrum Guideline. In page #10 it states  'Every day, the Development Team should be able to explain to the Product Owner and Scrum Master how it intends to work together as a self-organizing team to accomplish the goal and create the anticipated Increment in the remainder of the Sprint.'   My question here is, how does/should this communication take place, during the Daily Scrum or via email or any other Status Reporting method as we see project management methodologies?          Log in or register to post comments",5349
"07:33 am November 20, 2012                    ""Should be able to""  This is illustrating the purpose of the Daily Scrum, not a reporting  structure or explicit activity that must occur.  On Tue, Nov 20, 2012 at 2:06 AM, <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5349
"11:54 pm November 20, 2012                    I agree with Ryan -- this is simply a description of the ""outcome"" or ""acceptance criteria"" for a healthy Daily Scrum.  I also agree with that Ryan that this is not an explicit activity, though I think occasionally it is ok for the PO and/or SM to request that the Dev Team give a 1-2 minute summary of their plan for achieving the Sprint Goal and Increment, especially when they have trouble seeing what that plan might be.  In short, I'd probably only ask for the summary once a sprint every now and then, and I would NOT do it during the DS.  I'd probably do it just after the DS is completely over.          Log in or register to post comments",5349
"12:34 am November 21, 2012                    Thanks Ryan and Charles, for your input. This clarifies my doubt.          Log in or register to post comments",5349
"03:31 pm November 21, 2012                    Sunandajit,  You're welcome.  Happy to help!          Log in or register to post comments",5349
"02:20 pm April 6, 2017                    I guess there is one point that is mostly misunderstood here. The question is about the below statement from scrum guide ""The Scrum Master enforces the rule that only Development Team members participate in the Daily Scrum"".They key to come to terms with the above statement is the word ""PARTICIPATE"" !. Please note that Both the PO and the scrum master can still ATTEND the daily scrum for their own interests (The PO to be readily available clarify the requirements and/or to adjust the Sprint backlog as needed by the development team's decision and the SM to make sure the team is having the daily scrum and serving the intended purpose of the meeting)Only the development team participates and they can even invite the needed parties they think can help resolve the impediments or set the decisions for the next 24 hrs. Basically this event is OWNED by the development team. SM's job is to make sure they are owning it and having it everyday. His job is not to manage it or them!Both the SM and the PO SERVE the development team in all ways possible to help them achieve what they plan for the next 24 hrs.I hope this clarifies the responsibility and interaction levels of the three scrum roles (SM, PO and development team member) in a daily scrum!          Log in or register to post comments",5349
Log in to reply,5349
Messages,5894
"02:11 am May 27, 2014                             Hi there,  There's a question in the open assessment which I don't understand:  The Development Team should not be interrupted during the Sprint. The Sprint Goal should remain intact. These are conditions that foster creativity, quality and productivity. Based on this, which of the following is false?  A) The Product Owner can help clarify or optimize the Sprint when asked by the Development Team.  B) The Sprint Backlog and its contents are fully formulated in the Sprint Planning meeting and do not change during the Sprint.  C) As a decomposition of the selected Product Backlog Items, the Sprint Backlog changes and may grow as the work emerges.  D) The Development Team may work with the Product Owner to remove or add work if it finds it has more or less capacity than it expected.  The correct answer for this question was the one I immediately dropped as surely not correct, and it is B.  Really Sprint Backlog does not change during the Sprint?  I can see in the Scrum Guide that the Development Team may negotiate with the Product Owner the scope of the Sprint Backlog within the Sprint.",5894
"02:45 am May 27, 2014                    Read the question carefully, up to the last word before the question mark ;)          Log in or register to post comments",5894
"01:42 pm May 27, 2014                    As Ludwig says, the question asks you to identify which statement is *false*.   The only one that is false is B, because there is every expectation that the Sprint Backlog will change during the Sprint.          Log in or register to post comments",5894
"02:06 am May 28, 2014                    affff..... :)          Log in or register to post comments",5894
"09:59 pm May 28, 2014                    The Sprint Backlog and its contents are fully formulated in the Sprint Planning meeting It may be that the Sprint Backlog is fully formulated during the Sprint Planning Meeting, but as I've studied the material, there seems to be an emphasis that the Dev Team need not breakdown every story committed to in the Sprint during the Sprint Planning Meeting.  Once there are enough stories broken down into tasks for a few days of work, the Dev Team get start working on those, while other stories are decomposed during the Sprint.  You would want to breakdown as many as you can during the Sprint Planning Meeting.           Log in or register to post comments",5894
"01:20 pm April 6, 2017                    yes, the correct answer is B as the questions asks you to select which statement is FALSE          Log in or register to post comments",5894
Log in to reply,5894
Messages,8166
"06:08 pm April 4, 2017                             HiI was reading a post on the forum related to the sprint goal where the user expressed concern by stating that they couldn't begin a sprint if they did not have multiple sprint goals, as the items within the sprint backlog would all not tie back to a single sprint goal. This led me to ask this question i.e. What is the minimum length of a sprint?Is it possible that during the process of refining the product backlog there may be items that cannot be grouped to achieve a single sprint goal? How do we deal with such items?Can the sprint goal be tweaked or would that make it obsolete?",8166
"04:51 am April 5, 2017                    Officially there is no clearly defined minimum, but you have to consider the time it takes to hold retrospectives, planning, and backlog grooming as well as the (presumably largest) phase of actually doing the work.  Also, since new sprints start at the end of the previous sprint, having sprint durations that aren't a multiple of 5 days means having them start and end on different days.  Inconsistent timeboxes are not ideal.In my opinion, I'd draw the line at 1 week (5 days) as a practical minimum.  Yes, you can technically manage shorter sprints, but I think Scrum loses a lot of its effectiveness when you attempt to do this.As for the second question, regarding what happens if sprint backlog items don't seem to match a sprint goal, my understanding is that you could potentially approach it in three different ways:The Sprint Goal doesn't accurately reflect the goal for the sprint, and should be revised.The original Sprint Goal is no longer relevant, and the sprint should be canceled.The Sprint Backlog items don't match the Sprint Goal, and should be left in the Product Backlog for a future sprint.The Sprint Goal is an objective that will be met within the Sprint through the implementation of the Product Backlog, and it provides guidance to the Development Team on why it is building the Increment.          Log in or register to post comments",8166
"04:40 pm April 5, 2017                    My question was based more on the assumption that there are no other PBIs that can relate to the sprint goal in such a way that multiple PBIs can be picked up from the product backlog to successfully run a 1 week sprint. What if we have multiple items that are not related to a single goal and are estimated to be a few hours worth of work. Would we not waste an entire sprint for such small tasks? Then, in such a case would we have to make an exception like a Scrumbut?          Log in or register to post comments",8166
"04:48 pm April 5, 2017                    In the situation you describe, is there sufficient complexity left to deal with which would make Scrum useful?          Log in or register to post comments",8166
"04:54 pm April 5, 2017                    @Ian Mitchell, Good point! I would say there isn't much complexity, therefore would such items have to be dealt by another framework like Kanban?That leads me to ask, what if there are no more items left in the product backlog (assuming that the product still exists)? Is such a scenario possible?          Log in or register to post comments",8166
"05:10 pm April 5, 2017                    Conceptually, the Product Backlog will exist for as long as the product exists, although at times it may be empty.          Log in or register to post comments",8166
"07:29 pm April 5, 2017                    Based on that there would be no sprints until the product backlog has items again, is that right?          Log in or register to post comments",8166
"04:25 am April 6, 2017                    I wouldn't think so, Steve.  What would your potentially releasable increment look like if you had no backlog items?If you're wondering about the technical ""scrum way"" to handle this, the Scrum Guide would prefer that you cancel the sprint for having an obsolete (nonexistent) sprint goal, over and over.  Or, it would tell you to close out the project and open a new project for the same product once have enough backlog items to perform a couple of sprints.  If you think those options sound inefficient and messy, you're right.  Scrum doesn't play nicely with ""downtime.""In reality, where time and money aren't infinite, this wouldn't work very well.          Log in or register to post comments",8166
"04:33 am April 6, 2017                    The Development Team may continue Sprinting but for a different product. There's nothing to stop teams from alternating between products in different Sprints according to demand. The Sprint Goal in such cases may be to service enhancements for a particular product being worked on. The complex environment may thus lie not in the specific product but rather in the range of products to be supported.          Log in or register to post comments",8166
"05:30 am April 6, 2017                    ""The complex environment may thus lie not in the specific product but rather in the range of products to be supported""That's a good way of putting it, and in that case, I agree with you, Ian.  Thank you for the clarification.  In a complex environment (and not a complex single product), moving the team over to another product would meet the definitions of Scrum a lot more cleanly, and probably be the preferable way to handle it over the much messier product-based methods I had suggested. I also see the primary cause for my confusion, which I'll share for anyone who falls into the same thought process.  Scrum guide states both:""Scrum is a framework for developing and sustaining complex products.""and""Scrum (n): A framework within which people can address complex adaptive problems""          Log in or register to post comments",8166
Log in to reply,8166
Messages,8028
"04:34 am March 26, 2017                             I cleared the exam yesterday and I wanted to share my take on  - ""How I cleared the exam!"" Well, I got 89%. I might have been a little slow in reading the questions/options and ended up not having enough time to review few flagged answers. But yes, I cleared the exam at the first go. It all started here - https://scrum101.com/ - and It's free. When you sign up, you will start receiving an email per day  from Kane Mar with a link to short videos which are less than 5 minutes. Here's how I prepared for the exam. 1. Printed out the Scrum guide    a. Read the Scrum Guide on the train while heading to work.     b. Tried Scrum open assessment and no doubt, didn't pass!    c. Read the guide again, this time managed to get close to 90%.    d. Learnt which questions I was going wrong from feedback which you get after completing Scrum open assessment.    c. While looking for free study material, got hold of this book -"" The Scrum Master Training Manual"" by Nader K. Rad and Frank Turley ( Management Plaza). it's free           and just 35 pages.     f. Tried Open Scrum assessment and got 100%. After which I was consistently hitting a 100%     g. Tried Open PO assessment (15 Qs) and got 70% which made me realise that I was not ready yet So,    h. Read Scrum Guide again and got 100% consistently in Open PO assessment as well.    Read the Scrum guide like 6 times before I took the exam and yes, I didn't buy any other material to practice. You may have to unlearn few things that you know about Scrum and Please don't read multiple books this will only help you get confused. You just need to understand Scrum Guide. Hope this helps anyone taking the exam.  ",8028
"05:17 pm March 27, 2017                    Congratulations Pradeep.Can you state that you were able to answer questions on scaled scrum or should we assume that you did not get any questions on scaled scrum/Nexus?. You did not mention that you read the Nexus guide from Scrum.org.A lot of people talk about Mplaza question sets. Is it really necessary to be sure of a pass?. After all, the more tests, the better the confidence but if the test questions don't quite mimic the real test in language and complexity, then it might not be worthwhile.           Log in or register to post comments",8028
"06:04 am March 29, 2017                    Thanks Cecil.I didn't read Nexus guide and I can't comment if there were questions on scaled scrum in the assessment. The way I thought before taking the exam was - "" It's Scrum Level 1 assessment and really shouldn't have questions outside of scrum guide"".Scaled scrum is an intermediate-level assessment and I don't think Scrum.org should include questions from Nexus guide in PSM 1 (Level 1).  Well, For PSM 1 assessment - Scrum Guide and Open assessment are good. Few questions would show up in the exam where you can save some time and utilize it on another question. More practice will definitely help you get quicker in the exam.             Log in or register to post comments",8028
"03:38 pm March 30, 2017                    I have been attempting the Scrum practitioner test of 15 questions and I repeatedly get 86.7%. I am not able to figure out what answers are incorrect and I am looking for some help. If anybody is willing to take a look and let me know what is incorrect. There are 2 that are presumably wrong. I have saved the screen shots.          Log in or register to post comments",8028
"06:50 pm March 30, 2017                    Happy to help !          Log in or register to post comments",8028
"06:52 pm March 31, 2017                    Thanks Manvender. How do I get in touch to send the file with screenshots.          Log in or register to post comments",8028
"11:36 pm April 2, 2017                    I passed the PSM 1 my first time with 100%The initial drive came from a three day ""training"" by my employer.  As I challenged the Agile Coach about the material being presented, I found issues with what was being sold.  There was no mention of the Manifesto for Agile Software Development or The Scrum Guide.Soon after, I found and read The Scrum Guide.  I read it several times, challenging myself to understand the ""why"" of each of the roles, events, artifacts, and the rules.  I would ask myself, ""What benefits would be lost if XYZ were removed from the framework?""Much as the Manifesto came after Scrum, I found it and invested the similar effort into understanding it.  The history provided at that site was beneficial.  It was a common sense set of values and principles very easily consumed.The Open Assessments were a great test of my knowledge.  If I missed a question, I reviewed the applicable areas of The Scrum Guide and took time to further evaluate my understanding.  Other sources seemed to contradict or diminish the simple beauty that was the power of the Scrum framework.Of course each person has their own journey to enlightenment.  I wish y'all well.  My hope is that true appreciation and understanding can flourish, so that I can see the improvement in the people and organizations around me.          Log in or register to post comments",8028
"04:49 pm April 3, 2017                    I passed PSM 1 with 99% (1 answer was incorrect). I read and re-read Scrum Guide multiple times. After a first couple of reads, I gave the http://mlapshin.com/index.php/psm-quiz/. The test helped reveal that I should be reading the Scrum Guide more closely which I did and then attempted the PSM 1 Open Assessment. I did not get 100% which made me look for more resources. From this forum I came across a book: Scrum Narrative and PSM Exam Guide by M.M Soukath Ali. I bought this over Amazon and gave it a few days to read. It helped as it slowed down my pace a bit, letting the concepts sink in better. Moreover the qns after every page or so, helped in active learning. Its full fledged assessment at the end also helped challenge the understanding of concepts. I read the Scrum Guide again after this book and tried PSM Open assessment and now I scored 100%. I checked myself over a couple of days giving PSM Open assessments and consistently got 100%. Thinking I might not be covering well inspite of getting 100% in PSM Open Assessment, I gave the PSPO Open assessment and Nexus Open assesment. I did well in PSPO (got 2 wrong) but rather poorly in Nexus. I didnt try Nexus again. I also tried the Developer Open assessment and did very poorly there but I can for sure say that its not needed for PSM 1 exam. Even Nexus is not needed but it will not harm if you give the test once just so that you are aware of some concepts. PSPO Open assessment is not a must have but doing it once will help in building the confidence. I did not use any other resources other than the ones mentioned above. I will suggest going through some other scrum.org resources (which are very quick read) towards the end will help revise the concepts - https://www.scrum.org/resources/ways-learn-about-scrum.Best of luck in passing PSM 1 certifications for those who are planning to do it.          Log in or register to post comments",8028
"10:13 pm April 4, 2017                    I also found it useful to read the Scrum and Developer glossary. Filter for them under Resources.          Log in or register to post comments",8028
"04:13 am April 6, 2017                    HI ,I followed all the post and got only 9 out of 15 from srum practioner exam.. I have already failed once in PSm and does not want to leave any stone unattended. Can you please go thru the below link and let me know the questions I have gone wrong.. plhttps://www.scrum.org/forum/scrum-forum/8181/scrum-practioner-questions          Log in or register to post comments",8028
Log in to reply,8028
Messages,8192
"12:39 am April 6, 2017                             The management of our company is asking us to provide KPIs to evaluate the effectiveness of our Scrum team.We provide the number of planned PBIs, the number of PBIs realized, the number of story points planned, the number of story points realized and the velocity.I am not at all convinced of the value of these KPIs in order to evaluate our team. I believe more than value added to the product, customer satisfaction and return on investment are more important points.In your opinion, which KPI should be used to measure the effectiveness of a team.P.S. Sorry for my english!",8192
Log in to reply,8192
Messages,8186
"03:51 pm April 5, 2017                             The Scrum Guide explicitly states that the Sprint Review's attendees include the Scrum Team and key stakeholders invited by the PO. One, does this mean to you that the Review is limited to these attendees?Two, if you do take it as the Review is limited to these attendees, what reasons do you think there are for not wanting particular attendees?To provide some context, my organisation is trying to make Sprint Reviews open to everyone in the business.  While the idea floats around, I want to ensure we are not slipping into some potentially detrimental practice.  I'm struggling to come up with any solid reasons against this idea, but I'm wary they might exist down to the tone of the Scrum Guide.If anyone could provide share actual experiences with this, that'd be great!Thanks!",8186
"04:19 pm April 5, 2017                    What are the consequences of this likely to be for focus during the session, and on the ability of the Scrum Team to inspect and adapt?          Log in or register to post comments",8186
"04:24 pm April 5, 2017                    For the most part, Scrum doesn't really ban anyone from any meeting, but it defines the members that would have participant roles.  While a Product Owner can sit in on a Daily Scrum, for example, they're intended to be a silent observer and not a participant.  They can take their comments to a sidebar or another scrum event, but they shouldn't be taking up the 15-minute timebox with stuff they want to talk about.When you add significant transparency to your events, There are two concerns I'd have with this:You're working with teams of people.  People often act on their ""best behavior"" when an executive is sitting there, and may not want to make waves or complain about genuine problems for fear of the high visibility.  Scrum events lose their value when everyone wants to look like a ""team player"" and a ""yes man"" rather than actually address problems and progress in Scrum.People like to interject their own thoughts, even if they're supposed to be attending as silent observers.  Sometimes as a Scrum Master, you may have to ask your observers and even optional team members to leave a Scrum event entirely if they're being disruptive.  Those interruptions are often based on good intent, so it can be a difficult situation to traverse.          Log in or register to post comments",8186
"06:38 pm April 5, 2017                    Yep, you're both right (I know why you're asking, Ian) and I agree there is the observer effect and potential focus loss, etc. with having a completely open review.I have people quite high up the management chain who are for an open review, and would certainly argue it favours 'transparency', 'honesty' and so forth.  So I'd like to hear people's experiences with it.  My reasoning alone is likely not going to be enough, so if there are actual examples I can use then it might start to help my effort.          Log in or register to post comments",8186
Log in to reply,8186
Messages,7314
"05:04 pm September 1, 2016                             What should we do with non-functional requirements to make them visible ?  I think,It will be wise to add them to the definition of done so the work is taken care of every Sprint.  Second possibility is to put them on a separate list on the Scrum board, available for all to see.  Am I correct ?   What you think about adding non-functional requirements to the Product Backlog and keep the Product owner posted on the expected effort. It is good idea ?  Thanks in advance!",7314
"07:47 am September 2, 2016                    Dear Piotr,  You're right!  It's wise that teams try to include as many of the nonfunctional requirements in their definitions of done (DoD) as they possibly can. As regards adding nonfunctional requirements to the Product Backlog (PB), it depends.   If you have a requirement such as ""System must support Firefox, Chrome .. browsers"", put it in the DoD. If you have a story that delivers no perceived end-user value but does deliver important architecture or infrastructure needed to deliver future user value, put in in the PB as a technical story and involve the product owner in deciding how that new story should be positioned in the PB.          Log in or register to post comments",7314
"04:47 pm September 3, 2016                    Piotr,  as Oleksii says, you are right. And as you said if the non-functional requirement affects all or almost all the PBIs, it should be added as a constrain to accomplish in your DoD. In the best case, the DT could write some tests that assure that the NFR is met. And of course the NFR can be in the PB, even you can express it as a User Story (Mike Cohn has written about it in his blog), anyway I think the most important thing is that the PO and the DT know that NFRs impact the code and have a cost that has to be taken into account.          Log in or register to post comments",7314
"12:11 am September 5, 2016                    Agree with adding them to the DoD; not so sure about adding them to the product backlog. NFR by itself cannot be delivered as an increment or prioritized properly. Unless you have special NFRs that depends only on a few user stories          Log in or register to post comments",7314
"07:47 am September 7, 2016                    I'm not agree @Sujith...  Imagine you have a system which generates anything... Some NFR can be that the system works on some specific platform or OS. Another NFR ca be that the system can generate X transaction per hour or the system can accept N request per hour. Those are NFRs that the PO can prioritize, she can think if it's more important for the product to have a new feature or to be full operative on... let's say GNU/Linux or she prefers a new feature or to refactor as needed to adapt the system to accept N request per unit time. These NFRs are constraints that the system have to accomplish and they can be matched to system quality tests. These new capabilities are part or an Increment in itself and can be checked in the future as a part of it.          Log in or register to post comments",7314
"07:03 pm September 8, 2016                    When possible and logical, expanding the Definition of Done is great.  Limiting the Product Backlog to proper user stories and functional requirements only certainly creates challenges.  I disagree that non-functional requirements cannot be prioritized or delivered in an Increment; they probably shouldn't be the only value in an Increment.  With the browser support example, it sounds great to require it for a Done increment.  However, if doing so requires a significant amount of effort (research, testing, development, infrastructure, addressing technical debt, etc.), then it probably makes sense to represent it in the Product Backlog . . .perhaps it is an ""epic"" or ""theme"" size initially and later refined into multiple, focused items.  New work can be accomplished with the future Definition of Done in mind while the rest of the product is addressed.  Similarly with the other non-functional requirements noted above.  Perhaps a software framework or component upgrade wold be beneficial to the users.  While sometimes difficult to phrase as customer value, they can be important to delivering working and valuable software.          Log in or register to post comments",7314
"06:17 pm September 11, 2016                    There's no need to express NFR as US indeed. As I pointed out before Mike Cohn wrote about creating US for NFRs, as I said there's no need to do it but if you do it you can get the benefit to understand who, what and the intention behind a NFR.          Log in or register to post comments",7314
"12:43 am September 17, 2016                    An NFR can be an attribute of either product quality or product scope.  If the NFR must apply to each and every product increment, then it expresses a quality concern which may reasonably be observed via the Definition of Done. Otherwise it may reasonably be held to constitute product scope, and ordered on the Product Backlog accordingly.          Log in or register to post comments",7314
"03:26 pm April 5, 2017                    @Ian Mitchell, ""An NFR can be an attribute of either product quality or product scope.If the NFR must apply to each and every product increment, then it expresses a quality concern which may reasonably be observed via the Definition of Done. Otherwise it may reasonably be held to constitute product scope, and ordered on the Product Backlog accordingly""Based on the above, is it then safe to conclude that NFR's need NOT be captured in the DoD but it should be captured in the DoD only IF it affects the quality of product increment?          Log in or register to post comments",7314
"05:07 pm April 5, 2017                    I was oversimplifying a bit, because an NFR may need rewriting or refactoring into parts that apply to both. In other words there may be elements of a single NFR which apply to every increment (and are thus assertions which must hold for Done), and other elements of the same NFR which constitute scope.For example, a life-critical system may require a certain level of resilience. No increment may be considered Done unless it demonstrates that resilience. However, building that resilience in the first place may require the implementation of fail-over components which would be a matter of scope. A DoD asserting such resilience could only be applied once a Sprint Increment (e.g. the first one) is available which implements that scope.          Log in or register to post comments",7314
Log in to reply,7314
Messages,8088
"11:34 am March 30, 2017                             Hi,I'm scrummaster. In my team, members have difficulty to communicate with each other. How to improve this situation ? We have daily stand-up meeting.",8088
"07:22 am April 1, 2017                    What's the real reason of the communication gap within team?          Log in or register to post comments",8088
"02:25 pm April 2, 2017                    Hello Bakoa,I have experienced similar situations over the last 11 years that I have been working. I have used  below methods in various teams and they worked pretty well:1. Avoid going toward all hierarchical structure (e.g. involving management).2. Talk to each individual and try to give them enough motivation by explaining how important is everyone's job in the success of product.3. Invite the team once per two weeks for dinner or a kind of social activity.4. If someone is late in a meeting, define a rule (however we are not really allowed to define our own rules according to SCRUM), that the late member should bring chocolate next time.5. If people are giving too many pauses to themselves at coffee machines or etc. just explain to them how important they are and pausing their job is actually lowering the overall performance.As an overall advise, I would tell you be really careful of 'Toxic Employees'... don't let the situation get out of control where toxic employees take control. If you have this situation, it would be another subject.Good luck and let me know if you have any questions.          Log in or register to post comments",8088
"09:21 pm April 2, 2017                    Hi,The gap comes from the fear of disturbing his colleague by asking him questions.Is it necessary to have a guideline for this issue ?           Log in or register to post comments",8088
"10:28 am April 3, 2017                    If you think you need to leverage this, this is certainly because a sprint review raised this issue. If you raised an action plan for this dev to work on this aspect and had no result, I see several possibilities - Emphasis the Inception phase during the sprint planning, make them talk more on the very details of the solution to be developed ( if it appears the conclusion during sprint planning is to be reviewed during sprint, then, they will be more likely to work together )- if Daily meeting is mute, no difficulties etc --> note it on board, at the end of the sprint, when late or issues appears that could have been avoided by sharing, board will make it clear they must do something.- In last option, it is a fact that some developers are lonely cowboys, often impressive but enable to work in team. In this situation it is your responsibility to take the decision of requesting the replacement of the resource.          Log in or register to post comments",8088
"12:24 pm April 5, 2017                    Hi Arash, Steve,Thank you very much for your advices, they will be useful to me.          Log in or register to post comments",8088
Log in to reply,8088
Messages,8123
"05:47 pm April 2, 2017                             Hi All,I just passed the PSM exam today, and I thought I’d share how I passed it.I currently work as a Technical BA, but in my current and previous roles, I sometimes find myself acting as the SM, so I thought I’d get the certification.I made a decision last week (29th Match) to sit the exam, and I read the scrum guide on the same day. It took about two hours to complete.I booked the exam and bought the PSM 1 Preparation Exam Practice the next day. Between the 30th and 31st, I took the practice test (three of them), and I got 67%, 59% and 70%. I focused on the answers to the questions I failed, and the explanations were helpful. Next, I took the open assessment multiple times until I scored 100%, I think I tried it four times.Yesterday, I took all the test again and got 87%, 87% and 90%.Today, I went through the scrum guide again, and I would recommend this – it was helpful. Immediately after going through the guide, I took one of the practice tests, and I got 92%.Although my plan was to sit the PSM exam tomorrow, I felt confident and took it after the test and I got 90%.P.S – I wasn’t sure of buying the PSM 1 Preparation Exam Practice and I thought I could pass the exam without it, but I was wrong. I wouldn’t have passed the exam on my first try without it.Hope this was helpful and good luck to those sitting their PSM 1 exam soon.Thanks,T.O",8123
"11:26 am April 5, 2017                    Thought I'd also sit the PSPO I exam.I prepared for two days with the PSPO I exam practice and Scrum Open assessment, and I got 88% - Not the best score, but I'm glad I passed.I didn't sit the exam until I was comfortably getting above 95% in each of the simulated exam and 100% in the open assessment.Reading the scrum guide again would probably have got me better results, so I would advise anyone taking this exam to go through the scrum guide again before sitting the PSPO I.Again, good luck to those taking their exams soon!Thanks,T.O           Log in or register to post comments",8123
Log in to reply,8123
Messages,8169
"03:50 am April 5, 2017                             Scrum Master Role In Building A Self Organized TeamApart from a cross functional team, having a self organized team is one of the key-strength in Scrum.Their must have a single purpose: “Achieving the Sprint Goal”I will share some of my experiences with my Scrum Teams in this article.Read more at:https://annalogy.info/2017/04/03/scrum-master-role-in-building-a-self-organized-team/#scrum #scrummaster #annalogy #it #informationtechnology #article #agile",8169
Log in to reply,8169
Messages,5332
"03:28 am September 27, 2012                             Hi,   The other day, I have been asked a question about how to bring scrum into fixed price projects... Interesting though.   I would like you expert guys to give some thoughts about this.   Any experiences would be highly appropriated.  /Usman",5332
"02:33 pm September 27, 2012                    The question can be answered this way:  ""You will get what will be done up to the budget limit!"" In scrum, each sprint will deliver potentially shippable increment to the product. This means that if the product backlog is well prioritized, high-value features will be done soon during the project, resulting in a product that quickly has value. Each sprint will add value to the product. When the budget is reached, normally you should have something to deliver. Maybe it will not offer all the inital features you were expecting, but maybe you could be surprised to finally deliver more, or even better, deliver something that fits the customer needs better!  Now... This question is often biased by a subsequent or underlying question: what happens if the budget is fixed, the timebox is freezed and we promissed to deliver all the functionalilities? This is what I call the ""iron triangle"", no variables, only solid-framed limitations... Get prepared to negociate! This is what agile tries to change!          Log in or register to post comments",5332
"09:38 am October 9, 2012                    Good morning, Leo.  (I really hate the expression ""In a perfect world"", but...) In a perfect world, ""You will get what will be done up to the budget limit"" is fine.  In the real world... I have been consulting in software development for 34 years and I have never met a manager who would stand still for that.  This is a question to which I have yet to find a satisfactory, or even marginally satisfying answer.  Most engineering and manufacturing companies, that aren't pure ""think tanks"", when they envision a new project to develop a new product, have a time and cost budget in mind beyond which it is no longer time-effective or cost-effective to develop the product. Maybe they have to get it out into the marketplace by a certain time or they lose their window of opportunity. Maybe the product has to sell at or below a certain price point or no one will buy it.  Most Agile (upper-case ""A"") processes emphasize the time to complete the next increment (the next ""sprint"" or whatever one wants to call it) and don't pay much attention to how long it is projected to take to complete the whole project. Ditto costs... most Agile processes don't seem to pay significant attention to development cost targets.  So, precisely HOW is it that one convinces senior management of the benefits of Agile processes when the managers' major focus (it's in their job descriptions) is on time-to-market and total cost figures?  Note the difference between ""Agile"" (upper-case ""A"") and ""agile"" (lower case)... I consider the former to mean a defined process that conforms to the Agile Manifesto.  The latter is what most people, particularly software managers, mean when they use the term... at best, they take it to mean ""anything that is faster than how we have done it before"" including any of the iterative processes that have been in use for decades.  Eric Poole  www.rkt-tech.com           Log in or register to post comments",5332
"08:32 am October 14, 2012                    Hi Eric and Usman,  Have you guys taken Professional Scrum Master Course already? The trainer will teach you about fixed price contracts in Agile.          Log in or register to post comments",5332
"08:47 am October 14, 2012                    Thanks, Joshua, but that's a little bit like saying ""Buy this book and it will tell you"".  Forums (fora?  fori?) like this one are for getting answers to specific questions, helping one another, and holding discussions, without having to go to the expense of traveling to some course or buying some book.           Log in or register to post comments",5332
"09:51 am October 18, 2012                    Hello.  I'm quite new to scrum, but I'm really trying to learn by reading and reading and participating in trainings, so my thoughts are:  Scrum does not mean ""no plan/no estimation"" In the beginning of a product development you have to figure out what the needs of a customer are, and of course, they are estimated.   Nevertheless it is clearly stated, that those estimates are only rough estimates to get a plan how many sprints you need to deliver if you know the velocity of your team.  I know, this does not sound like scrum estimates are really exact, but in my experience with waterfall projects I found the same but with more investment in the planning, because the best IEEE-requirement-sheet always only says ""it is as described if nothing changes!""  So my project planes in waterfall most of the time show something like ""exact dates"" but this is an illusion MS project gives me ;-)  I heard about an interesting presentation about selling this agility to the customer: Jeff Sutherland talking about ""Money for nothing, Changes are free"" google it, I think it's quite interesting.  So estimating (and fixed price projects are much about estimating) is always hard and the bigger the project and the more unknown a domain is, the harder it gets. But scrum does not make it harder, it makes it faster and more flexible.  may I was able to bring a few things/thoughts in this discussion.  Br,  Philipp          Log in or register to post comments",5332
"01:14 pm November 11, 2012                    Eric, one could have a good enough Product Backlog holding requirements and other ideas to build into the product, consider expected team size, look at past velocity or comparable figures to figure out the estimated #Sprints and have an indication of timing and cost. Actual implementation is still required to validate all these assumptions. If time and budget have been fixed, scope will become negotiable. Product Backlog and progress on it (e.g. burn-down) will keep all involved informed about the feasibility of the initial plan.  The amount of detail that's put in the initial Product Backlog depends on the level of trust in general. Creating an exhaustive, fully detailed Product Backlog is not helping much but may be required. Do note that this is not an obligation posed by Scrum, but a decision taken outside of Scrum.          Log in or register to post comments",5332
"01:17 pm November 11, 2012                    There is always something like (""Yes, but reality""). As in my answer to Eric, always look for highest achievable. Nevertheless, if I give my honest opinion to people on the topic of fixed prices, in general everyone agrees with my statement: ""Fixed Price bids. An open invitation to bribe, cajole, lie and cheat."". All my thoughts at http://ullizee.wordpress.com/2012/10/07/fixed-price-bids-an-open-invita…          Log in or register to post comments",5332
"09:54 am November 13, 2012                    My 2cents worth: The problem with Fixed Priced Bids is that it is based on a contract...and therefore the contract takes precedence over everything else. This would go against the AGILE Values of valuing customer collaboration over contract negotiation. In my experience (at various clients), once the AGILE mindset and the thinking behind scrum is explained to the client, the need or demand for a fixed bid price is dropped in favor of the client being able to continuously 'direct' the product. This is the value of SCRUM and AGILE in my world. Alas, Fixed price contracts are going to be around for a while though...          Log in or register to post comments",5332
"03:57 pm November 28, 2012                    I recently applied Scrum within the DSDM framework to support public sector fixed price contracts. Essentially, this was done by treating a Sprint as a DSDM delivery timebox, and therefore as a trading space for negotiating requirements in or out of scope. Cost and time were fixed, but scope became variable. The tradeable scope consisted of the Should and Could requirements of a MoSCoWed sprint backlog.  Admittedly this was done before the Scrum Guide changed from sprint commitments to forecasts, but I suppose it might be possible to do something similar by placing the contractual emphasis upon sprint goals rather than upon a sprint backlog.  Fixed price work certainly presents challenges for agile practice, but I agree that it is going to be with us for a while yet.          Log in or register to post comments",5332
"06:06 pm October 20, 2016                    Typically here is what we have seen:  If you fix cost/price and time (time is cost really assuming fixed team) and deliverables, then you can only affect quality (assuming fixed team or team changes wouldn't have significant impact). That is bad. So optimally you develop trust with your customer and fix budget and time and incrementally deliver. Because estimation for work further away is not optimal this is the best case.  However if your customer doesn't trust you yet to honor your commitments then you need a really experienced and stable scrum team with extremely consistent pointing skills. Then it is possible to take epics, break into stories and fix price many types of projects assuming the amount of research is minimal.   So if you are doing your fifth inventory system as a stable team it's doable using velocity based planning. Otherwise, you end up just lying to yourself and your customer and continuing the vicious cycle of them not trusting you or constantly compromising and trading off.          Log in or register to post comments",5332
"11:25 pm October 20, 2016                    First question is what and who was used to Estimate the project to come up with the Price? Is it based on what a project of this size would cost when your usual project methodology was used?  If it's  a project that only has the budget of what's left in the kitty, then it becomes a bit tricky.  The emphasis in my opinion should not be so much on the SCRUM Master, but on the Product Owner. He or she should be very mindful of the scope and therefor what can be done with the limited budget. If the business only has money for the basic version of the Toyota Camry, then the expectation should not be that the Deluxe version can be delivered, just because SCRUM is flexible in the requirements.  One of the main objections of using SCRUM is that the more experienced developers don't like it and many say that it 'dumbs down' their work... they may be right. For a fixed price SCRUM project that might be an advantage as you could get away with hiring less experienced and therefor less expensive developers... just a thought.           Log in or register to post comments",5332
"01:22 am October 21, 2016                    Nicko, never heard of experienced developers not liking scrum. I have heard of less informed experienced people not liking scrum because they don't really understand it as well as they think. They put the emphasis on the ceremonies instead of the planning and measuring and communication aspects. However it has been shown that a team that has a strong set of values and purpose are for more predictable in terms of productivity than experience alone. So I would rather have a focused set of less experienced developers that are motivated and focused and clear on our objectives and how we are going to execute our work than a bunch of experienced developers that want to act as independent silos and just code.   Of course experienced developers who are focused, clear on the objectives and truly understand the Agile mindset and have a long track record working together as a cohesive team would be best...          Log in or register to post comments",5332
"02:21 am November 2, 2016                    Sometimes FP is associated with waterfall. And it's partly true, 'cause you cannot make an FP bid if you don't know the requirements. But the question is about running a FP project, not initiating it.  I like the comparison heard somewhere: it is like a vacation. You have a budget and a time -- and it's up to you what you do tomorrow: relaxing, driving,hiking, or something else. It'll be over when you achieve the goal, or spent your budget.  I'm applying Scrum on a FP project. Have contract, have timeline, have predefined set of modules to deliver, and have estimates for each of them. When we have stories/requirements ready - we review them with the dev team against the original estimates on the BL refinement meetings. It's a good point to review the complexity and make a decision to lower/higher the grain. The result can be compared with the original plan, so I can even do EVM.  From other perspective - it's a little bit more challenging when the scope is changing (creeping). If it cannot be aligned with the original limitations - then the only right thing for me is to review the contract with the counter-parts and to execute an amendment if possible.          Log in or register to post comments",5332
"08:06 am April 4, 2017                    You should know, that fixed price projects have got not only advantages but disadvantages. Look at this picture published by Cleveroad - https://www.cleveroad.com/blog/time-and-material-vs-fixed-price--hot-discussion-of-the-best-pricing-model           Log in or register to post comments",5332
"12:46 am April 5, 2017                    Scrum becomes probably irrelevant when one speaks about ""fixed price"". If the price and feature-set are fixed, then someone had already decided. I've another question, though. How do you deal with tenders? How do you attach a price to a tendered project knowing that you can't be too lax because you'll risk losing against a competitor or too strict because you'll lose money?          Log in or register to post comments",5332
Log in to reply,5332
Messages,8148
"06:34 am April 4, 2017                             I was just going through the scrum guide and under the sub section Topic Two: How will the chosen work get done? i read the below statement Work planned for the first days of the Sprint by the Development Team is decomposed by the end of this meeting, often to units of one day or less.Does it mean that work that will be done at the start of sprint will be discussed at the end of sprint planning? Or what exactly it refers to?",8148
"09:04 pm April 4, 2017                    It just means that before the sprint planning is finished the Development Team will have the work for the first days of sprints decomposed to smaller bits - usually one day or less.They don't have to do this for all the elements taken to the sprint. Elements for later part of the sprint can be decomposed later. So at the end of the meeting team should have some strict vision, plan for the first days reflected by set of really small tasks and some rough vision how other elements will be delivered and how they will achieve the sprint goal.Why? Because ""the Development Team should be able to explain to the Product Owner and Scrum Master how it intends to work as a self-organizing team to accomplish the Sprint Goal and create the anticipated Increment."".          Log in or register to post comments",8148
Log in to reply,8148
Messages,8149
"06:43 am April 4, 2017                             Good morning!I'm looking for advice - has anyone seen or experienced examples of how to coordinate and prioritize multiple product backlogs across a single technology stack, e.g. a web site powered by a single CMS? We need to get to place where we can iteratively improve more than one product/customer journey simultaneously. I'm trying to vision the sorts of people, processes and tools needed for this to work. I'd really appreciate any experience others in the community have of seeing this sort of thing succeed (or fail!)Many thanks in advance,Jon",8149
"06:22 pm April 4, 2017                    If these products share a technology stack, might they then have dependencies which must be resolved for integrated increments to be produced? If so, I'd suggest that's where your vision should be. In Scrum, teams ought to be encouraged to self-organize around such things, and their processes and tools ought to facilitate that very integration. Remember that the only real measure of progress is the incremental release of working product.          Log in or register to post comments",8149
Log in to reply,8149
Messages,8141
"02:48 pm April 3, 2017                             Hey all,I am furthering my professional experience by getting a scrum/agile certification. I have a few questions. 1) I only have an AA in business and I will have a scrum certification. I have 15 years experience with 2 fortune 500 companies in the area of travel & expense. What barriers would I be up against? (fyi 30 credits away from BA)2) What would be the starting position from one entering the IT software dev industry with a scrum or agile certification?3) I have seen MANY types of certifications, which one is recommended? I have seen PMI-ACP, CSM, ASM, CSA etc.  Note that want to just take the exam online or have it proctored, I do not want a seminar experience before certification.4) Besides the scrum guide from this site, what are the best resources for a newbie to get knowledge and pass a PMI-ACP?5) Since obtaining real life experience will be very difficult in my current company, where can I seek experience even if it is unpaid?6)Anyone interested in becoming my mentor?Thank you for your time!Tracy",8141
"08:24 pm April 3, 2017                    Welcome, Ms. Phillips! Let's begin with some questions to keep in mind.  What do you know about Agile and Scrum?  Why do you want to be certified?  What do you wish to accomplish?There are many different certifications and paths to each.  Anyone can take the online certification exam here for the Professional Scrum Certifications (PSD, PSM, PSPO).  The others are offered by their respective backers.A certification alone may not offer you much as far as career options.  Each company has its own needs, desires, and requirements.  Being effective usually requires experience (which a certification does not provide) and having a mentor can be helpful.There are a lot of misconceptions about what Agile and Scrum are.  Taking an online exam for a certification without truly understanding the intent, history, and value of the philosophy and framework can further those problems.I hope that through considering the questions posed and doing some more research you can find what you desire.  Perhaps it will be a part of the community which wants to improve the quality and value of products delivered along with the careers of those providing them.http://scrumguides.org/scrum-guide.htmlhttp://agilemanifesto.org/          Log in or register to post comments",8141
"10:23 pm April 3, 2017                    Thank you for taking the time to respond to me. I know that agile is a project management methodology. Scrum is 1 of the 8 (please correct me if I'm wrong) methods used to implement agile. I want to be certified to at least start at the bottom of the totem pole for agile, specifically the scrum method because this is an area of high interest for me. After much research in the project management field,the traits scrum master are many traits I possess & have some experience with such as keeping a team on track with goals, daily documentation of where we are & where we want to be, and I'm good at building relationships & collaboration. However I am not naive in the truths that I have no software development or scrum experience & experience is king.And an agile practitioner certification can give me basic groundwork of most of not all of methods used under the agile umbrella.I have read the agile manifesto at the beginning of my journey months ago. Will getting a certification get me anywhere near the bottom floor to work my way up? T          Log in or register to post comments",8141
Log in to reply,8141
Messages,8127
"04:56 am April 3, 2017                             I'm unclear on whether the various scrum teams have to synchronize their sprints to end on the same dates or not. Is there a single Spint Review where the various team increments are combined and presented to Stakeholders as a single increment for feedback? Or, do the various spint backlogs get their own sprint end dates and their own Sprint Reviews? I understand that there is a single Product Backlog and a single Product Owner, and that at the start of the sprint the various teams develop their own Sprint Backlogs and their own ""Definitions of Done"". But is there a single Sprint Goal?I'm interested in answers as they relate to the PSM 1 Assessment, not just opinions, but Scrum.org writings on this topic.Thanks!",8127
"05:38 pm April 3, 2017                    What does the Nexus Guide have to say about these matters? How important is it for teams working on the same product to synchronise on the integration of a release-quality increment?          Log in or register to post comments",8127
Log in to reply,8127
Messages,8073
"07:42 pm March 29, 2017                             Hi guys, i'm a student in computer science and my topic for master thesis is ""scum metodology for an innovative startup""The goal of the project is to adopt scrum in order to devoloped a new device, but the team is not in the same city.I need an online tool for write user stories, see burndown chart and so on.... any suggestion? ",8073
"08:40 pm March 29, 2017                    We used Version 1 in the past, currently used JIRA.          Log in or register to post comments",8073
"09:34 pm March 29, 2017                    CA Agile Central, formerly known as Rally, seems quite popular.Also, Scrum is a framework, not a methodology.           Log in or register to post comments",8073
"04:08 am March 30, 2017                    I am a Computer Science teacher.  Scrumwise.com offers free educational licenses, so that is what I use in class, FWIW.          Log in or register to post comments",8073
"10:08 am March 30, 2017                    thanks both, i was wrong... the title is ""agile methodology for an innovative startup"".          Log in or register to post comments",8073
"12:45 pm March 30, 2017                    We currently use JIRA.          Log in or register to post comments",8073
"10:36 am April 3, 2017                    JIRA would do the trick, I use it as a PO with a distant dev team. Stories/burn down chart etc are available. NB : don't forget the R of Scrum :)           Log in or register to post comments",8073
Log in to reply,8073
Messages,5600
"01:09 am October 17, 2013                             Evening all,  I am brand spanking new to Scrum.org but after doing some poking around and what not believe this is where I want/need to be.    I apologize if this question has been asked but I can't seem to find it so am throwing it out there.  Can anyone give me some insight as to the difference between CMS vs PSM.  How they are perceived, are they equal?  One better? Pros/Cons?  I am finding it more important to have some kind of ""backing"" to support that I know what I know and was pleased to find I could take the test without having to sit through the two day CSM training (plus I don't have that kind of cash laying around at the moment).  Is the PSM well received? Recognized? It seems to be more real world - in practice and less proof of training, but that could just be wishful thinking on my part.  Any information would be greatly appreciated and helpful.  Thanks  Adam",5600
"06:52 am October 17, 2013                    Many of us have certified under both schemes. I'm not going to get into the politics as to which is better, since much depends upon individual needs at a given moment in their career, but I'll assert that PSM is certainly *no less* respected than CSM.  Also, it is possible to sit PSM Level 1 a number of times for the price of a course.          Log in or register to post comments",5600
"04:32 am October 25, 2013                    Having done both I can safely say that there really is no difference between the two. After all Scrum is the same whatever be the organization certifying you.  In general certifications still aren't foolproof enough to weed out success via rote memorization and both the CSM and PSM1 certifications are no exception  At the end of the day a certification places you at the starting blocks. How you run the race after that is entirely upto you.          Log in or register to post comments",5600
"08:06 am January 15, 2014                    I wouldn't say they are the same. They are different and PSM is better. Not because I said it but because many people who has got both certificates have said so. I have summarised it here: http://blog.leanagile.in/post/54764080535/certified-scrum-master-vs-pro…          Log in or register to post comments",5600
"08:17 am January 15, 2014                    Prabhu, unfortunately Scrum is not the same everywhere. I would love to see 100% the World referring to Scrum Guide. But that's not the case now (soon will be :)) If you look at the Scrum Core (Scrum Alliance) and Scrum Guide (Scrum.org) - they're quite different. We consider Scrum Guide is the primary source of knowledge as it was created and sustained by creators of Scrum: Ken Schwaber and Jeff Sutherland. Regarding the certifications - CSM is just a weak shadow of PSMI. CSM can be compared with PSF (Professiona Scrum Foundations). PSM course is more advanced level. Also it's very hard not to pass CSM 'exam' and it's really hard to pass PSMI.          Log in or register to post comments",5600
"04:22 pm January 24, 2014                    I will add that PSM II is much more difficult and interesting than CSP.  PSM II also give me a lot of very valuable feedback and helped me to improve my understanding of Scrum.  CSP (as a proctored exam) is still ""just"" a multiple-choice test, without any feedback but your score. The phrasing was also very poor, which make the test difficult for no-english native people.           Log in or register to post comments",5600
"01:50 pm September 15, 2015                    Being a CSP, CSM, CSPO, and PSM I  I will speak to my personal experience with those alone.    I think that passing a scrum.orgs assessments to be a much better indicator of scrum knowledge then the CSM or CSPO courses (and CSM assessment).  At least I can say that I learned a lot studying for the PSM I that i didn't understand fully through my CSM or CSPO courses.  The CSP requires 3 years expirience and 70+ education credits that can be earned by attending courses, reading books, attending Scrum user groups, etc. .   I found the user group meetings in my area to be probably the most helpful thing for me in building my knowledge, understanding, and practical experience of Scrum.  I think you could get a CSP without much Scrum knowledge if you really wanted to, but for me it was a very good learning experience/opportunity.    So from a learning perspective i would rate   CSPO < CSM < PSM I < CSP  .  I will have to see where the PSM II falls if i take it - which i am motivated/challenged to, because i feel like i would learn a lot through the process.    Another thing to consider is if you are looking for a community to be involved with.   i would look at the available classes and user groups for each Scrum.org or Scrum Alliance in your area as they can be vastly different.  Scrum Alliance's presence is 10x greater in my area so for a community to become involved with it had a lot more courses and opportunities.  I think Scrum Alliance certifications are typically better known by US companies as well (vs Europe where Scrum.org has a much bigger presence).          Log in or register to post comments",5600
"12:40 pm October 3, 2015                    Being a CSM, CSPO, CSP, SPC, CLKF, ICP-ATF, PSM I I would definitely rate PSM  > CSM.          Log in or register to post comments",5600
"10:26 pm January 25, 2017                    Hello Everyone, I have been reading a lot as which certification is better than another one. After reading all the responses above and other web pages, it makes me clear and confident that I will start my first Scrum certification with PSM1 and thanks for all your above messages.  I will enroll for assessment on scrum.org but for studying and prepare for the examination which other resources shall I use if I would like to avoid a big fee of $1200 or above.          Log in or register to post comments",5600
"08:59 pm March 20, 2017                    I am also interested to know if there any other resources we could use instead of spending $1200 check          Log in or register to post comments",5600
"04:22 pm March 21, 2017                    Deepak and Pravan,The PSM I follows the definitions in the Scrum Guide pretty closely.  If you prefer self-study over a professional training course, look over the PSM Resource Guide.  In particular, I've heard great things about the Scrum Pocket Guide book.  If you're a visual learner, Udemy has some useful Scrum video courses at about $10 apiece.However, if you plan to go on to the PSM II or PSM III, I strongly recommend the in-person training.          Log in or register to post comments",5600
"05:36 pm March 22, 2017                    CSM: Course attendence mandatory, 35 questions, 68% pass mark, no time limitPSMI: No course needed, 80 questions, 85% pass mark, time limitAs one can see, PSMI has a challenging time limit and a hard pass mark, while for CSM you can take as long as you need to answer any of the questions coming and stil fail on almost a third of them. I never went for any ScrumAlliance certificate, but as far as people told me, it's just like that: Attend the course, play the money and you're done with a little effort. And I even know some persons who did exactly that and get lot's of things wrong regarding scrum.Sure, you'll have to renew that certification, so one might think it's a more valid proof of your knowledge when it comes to new job opportunities. But in the end: If you've got your scrum.org certificates and you're CV shows that you've been doing scrum during the last few years, nobody will question that you still have that knowledge active and present.That all said: I never went for a ScrumAlliance certificate, but did so with PSPO, SPS, PSMI and PSMII. For good reason, I guess.          Log in or register to post comments",5600
"10:06 am March 23, 2017                    I am certified under PMI, ScrumAlliance and Scrum.org. To keep it short (as the previous posts have already answered the topic thoroughly), my PSM ""journey"" helped me to really understand what Scrum is really about.A training from ScrumAlliance and/or Scrum.org is fine, however it does not mean that you 'll become a Scrum ninja just by attending a training; determination for self-improvement, learning and experimentation is needed.          Log in or register to post comments",5600
"01:34 pm March 23, 2017                    Thank you for this conversation!  As a developer, I sought out obtaining a PO certification as a self initiative.  The company I work for has used ScrumAlliance to train in house PO's.   I feel confident in obtaining my PSPO I over a CPO after reading this, and talking with those who have taken the SA courses.  After what I've gathered, I agree with Steven, the PSPO/PSM exams definitely require a more inclusive understanding of SCRUM.          Log in or register to post comments",5600
"06:38 am April 3, 2017                    If you do proper research, you will come to the same conclusion that many did - PSM 1 is LOT better than CSM.Look at this: https://www.linkedin.com/pulse/how-pass-psm-first-attempt-five-steps-ge… (Five steps to get the most meritorious Scrum certificate)           Log in or register to post comments",5600
Log in to reply,5600
Messages,8024
"05:24 pm March 24, 2017                             Hello Folks,I have tried PSPO I two time but end up scoring 84% only, I did go through scrum guide multiple time , scrum values and product backlog mgmt from other books and forums ,other related materials. Please suggest what other resource could help passing the exam.Thanks.  ",8024
"04:04 am March 27, 2017                    I noticed you haven't yet received a PSM certification.  Although it's certainly not required, a Scrum Master acts as a guide for the PO and should be aware of the same tasks in the Scrum process.  It would be worth looking at the PSM study materials as well as the Scrum Open if you haven't already.  I'd also recommend you skim the Nexus Guide for the sections relevant to Product Ownership, because the PSPO may ask you how the role does (or doesn't) change in a scaled environment.When you received your email after the exam, it should have contained five categories with percentage ratings for your score in each.  This is to help you identify which areas you've mastered, and which you're weak in.  What areas did you score lower than 85% in?Scrum FrameworkScrum Theory and PrinciplesCross-functional, self-organizing TeamsMaximizing ValueProduct Backlog Management           Log in or register to post comments",8024
"01:00 pm March 27, 2017                    Same as Jason, I would recommend to search for some PSM training, a lot of questions are interesting to train. Don't forget to share your willing to take the assessment with other people who already passed it in your company, they may have training QA. Nothing replaces training on QA. A warning though, docs other than Scrum Guide may confuse you by adding some aspects that are not exactly Scrum Framework or Scrum compliant.           Log in or register to post comments",8024
"06:31 am April 3, 2017                    Did you read the book https://www.amazon.com/Professional-Scrum-Product-Owner-Certification-e… ?          Log in or register to post comments",8024
Log in to reply,8024
Messages,7622
"12:07 pm February 14, 2017                             Hello everyone,  I am just venturing in to the world of scrum as, having moved in to the role of Product Manager (which we never had before) we really needed some overall direction to our development.  As I'm still relatively new to it all, I have a question regarding concurrent sprints, as we have a differing of opinion here.  We are only a small company and our development team consists of 3 people. Up until now we have produced a sprint with however many items on it. Generally they'll last for 1 or 2 weeks, then we'll produce another and that will be worked on. However, the next sprint contains several items (standard sprint items), but there is a major item on there which will likely last a month at least (large new feature), but only one person will be working on that item.  Now, should we carry on with sequential sprints and the major item will simply appear on each sprint until it is completed? Or should the major item sit on a completely separate sprint that runs concurrently with whichever the current standard sprint is?  My current preference is that we only ever have 1 sprint and the major item will simply span several sprints, but I am interested in other opinions on this in case I am wrong.  Thanks in advance for your help,  Jason",7622
"05:31 pm February 14, 2017                    > ...there is a major item on there which will likely last a month at  > least (large new feature), but only one person will be working on that item.   Why will only one person be working on that item? Where will the teamwork be? How will you have transparency over the team's work in progress for that item, and be assured of being able to release its value within one month?          Log in or register to post comments",7622
Log in to reply,7622
Messages,7545
"07:57 pm February 6, 2017                             Hello all,  How should a new Agile team deal with a bad Scrum Master ? The Scrum Master questions everything, interrupts everyone, is always against any oppinion or suggestion and always tries to prove people wrong.  This is really disturbing for the performance of the team and as Product owner I feel that instead of having a Scrum Master facilitator, the person is trying to always prove that ""it"" is wrong and ""it"" can't be done.  Help please,  F",7545
"06:53 am February 7, 2017                    Hi Fremen,  in SCRUM you are a self organizing team, you have a retrospective at the end of every sprints. There you can confront the ""bad"" SM with the problems. (Well sometimes it won't be enough to solve the problem, then you need to escalate it - but the SCRUM Guide don't suggest it, it's just how real life works.)  Greetings,  Peter          Log in or register to post comments",7545
"08:44 am February 7, 2017                     As a self-organizing team at first you guys are responsible for resolving the impediment, if it doesn't work then go to SM. Since he himself is a problem here so as Pete said, you have to escalate it. Scrum talks about the Respect and Courage.  While adopting Scrum, organization's management is making a commitment that they will support the change, will remove the impediments, if required.          Log in or register to post comments",7545
"09:42 am February 7, 2017                    As a PO you are accountable for product value. If this is being negatively impacted then you may indeed have a responsibility to escalate the evidence to stakeholders, including management.  Important caveat: the perceived behaviors you have described do not always indicate a ""bad"" Scrum Master. They may also indicate a Scrum Master who is trying to coach a new team in practices which are unfamiliar to them, and which has set them in opposition. Scrum brings deep and profound change which can be highly disruptive until it becomes normalized. Obviously I don't know how relevant this is to your situation, and to what extent the SM is ""the problem"". The truth may lie somewhere in between.  If the team believe they could do a better job, then one self-organization technique is to rotate the Scrum Master role every Sprint. Remember that being an SM is not necessarily a full-time job. This would allow experimentation, and for team experience to develop about what works well. Outcomes can be elicited and discussed in each Retrospective.          Log in or register to post comments",7545
"10:21 pm February 7, 2017                    Hello,  First of all, thanks for all the answers, I have gathered some ideas. I wanted to write a longer message, but I think an example or two of the SM behaviour should be enough.  Today we wasted more than 30 minutes because he got into an argument with the Agile Coach, myself and some of the team. 30 minutes of wasted time ending with no less than 3 coaches slowly losing patience, because arguments bounce off him. I bring this up because everything he says and does is so that nothing has to be done, nothing has to be estimated (he actually struggles to conceal product information - fights actively against transparency, any kind of documentation or knowledge sharing - because this is how it was so far and he does not understand that this must change, he makes a mock of the Daily Scrum - interupts speakers, but is happy to waste hours in pointless, irrelevant meetings - non Scrum Master related, just old meetings he used to go for different products for which he doesnt work any more which in turn results in him clearly faking estimation). Basically he is an agressive ""slow changer"". He's a know-it-all who becomes aggresive when having to adapt to some basic (common sense) team rules.  Getting back to the argument he had with the Agile Coach, I should add that basically we had more such discussions for extremely rare occuring particularities, where the discussion lasted longer than a year of the actual resolve time of the type of issue in discussion.  I appologise, this saddens me and feels a bit shameful to talk about, but I guess a little more information might make things more clear and help provide a more complete table of options.   Thank you,  F           Log in or register to post comments",7545
"06:43 am February 8, 2017                    A good agile coach will be a Scrum Master to the organization. Explain your concerns to the coaches involved and get them to recommend a remedy. It may be that you need to escalate matters yourself, but you should work with them as far as possible.  Remember that if the situation is extreme and the agreed Sprint Goal is unlikely to be met because of the SM's behavior, then as PO you have the authority to cancel the Sprint since the delivery of value has been compromised.          Log in or register to post comments",7545
"11:30 pm February 8, 2017                    Please make him take the scrum master course again! That will make him understand the scrum values - Commitment to the team and RESPECT to other member's opinions.          Log in or register to post comments",7545
"05:46 pm February 9, 2017                    I hope I'm wrong, but I'm afraid a course is not enough to trigger a real switch in the mind of someone.           Log in or register to post comments",7545
"09:09 pm February 10, 2017                    Why is he still on the team?          Log in or register to post comments",7545
"01:36 pm February 14, 2017                    He doesn't seem to be a Scrum master.  How did he get the job? Who approved him? What was the decision based on?    This would interest me even more than his understanding of Scrum and Agile in general.          Log in or register to post comments",7545
Log in to reply,7545
Messages,7619
"04:30 pm February 12, 2017                             How can a Scrum Master facilitate the most appropriate decision (timeboxed) which is based on consensus, within a context in which two Senior Developers, based on data acquired during the sprint, are arguing over the pros and cons of their solution that they put forward.   What is the best way of facilitating such a discussion so that the best solution can be realised at the",7619
"05:04 pm February 13, 2017                    Let's put the idea of ""senior developer"" to one side, since there is no such role or title in Scrum. The role is Development Team and its members are simply developers.  What are these two developers doing, given their strengths and experiences, to engage and inform the rest of the team so all are franchised in reaching a team decision? That's the skill which needs to be drawn out here. It's the collaboration which ought to be facilitated, not the decision. Whatever choice is made, it is only the right one if it is owned by the team and permits their future inspection and adaptation.          Log in or register to post comments",7619
"08:37 am February 14, 2017                    Maybe, in order to make them getting out of an ""analysis paralysis"", what about guiding them to find a ""good enough"" solution by now and not looking for ""the best solution""  for ever ?  Is the risk very high if they try one solution ?  If not, choose one, then work, and then inspecting after the next sprint ?          Log in or register to post comments",7619
Log in to reply,7619
Messages,7621
"08:02 pm February 13, 2017                             Hello Professional Masters!  I have been working as a scrum master for the past eight months. The team is geographically distributed team in 3 locations with 2 different timezone. I am at a location where I am the only 1 working for the team, and the other 2 locations we have team members. Me apart from working as a Scrum Master is also working as a QA in the same project.   Our  is a 13 member team(ok, I know we should only have 9 at max, we tried different variations and we decided to stick as one team), we generally have our stand-up, planning, retrospective on call, and it works well to certain extent. And we have a 2 week sprint.  However, our retrospective is never productive and effective, and the recent retrospective, was the most dismal of all.  We have several problems here:  1) We are located in 3 different location- Not sure if this is really a problem  2) We never have seen each other. No video calls  3) Everyone is at the desk busy doing something else, which apparently I cant do much about.  4) People are always distracted, and think deliverable is first and second is the process  5) Cracking unwanted jokes.  I am all out of my options to the bring retrospective back on track and make it useful, and moreover, we have even decided to do away with retrospective, which I am absolutely against!  I am here, to know from experts, their experience and seek guidance on how can I take and make the retrospective more focused and get the most out off the team member, and make it more playful. I dont want to to be always talking, I want the team member to open.  Looking for some great ideas!  Thanks,  Ashwin",7621
"10:07 pm February 13, 2017                    > ...it works well to certain extent  To what extent do you suspect it works well?  Is there good evidence of teamwork and satisfied stakeholders? Are the team framing valuable Sprint Goals and meeting them? Is a useful increment of release quality being made available to the Product Owner each Sprint?          Log in or register to post comments",7621
"08:04 am February 14, 2017                     Besides the Sprint Retrospective what about the other Scrum Events, are they going well? Though Scrum doesn't force anything on the team distribution but we all know the impact of a distributed team across multiple locations.  What about giving away the SM role to someone at a location which has maximum number of team members?          Log in or register to post comments",7621
Log in to reply,7621
Messages,7614
"09:50 am February 10, 2017                             Hi,  I have a question regarding the team design within a scaled scrum / nexus. We are thinking about using nexus for a scaled scrum project with about 4 teams.   Our current discussion is about how to do the ""team design"", so if we should split the teams along the different business processes supported within the system or along the different architecture layers, e.g. one team responsible for the UI, one for the backend, and so on.  I really would appreciate your thoughts and experiences on this topic.",7614
"08:54 pm February 10, 2017                    Each Development Team within a Nexus ought to be a fully-fledged Scrum Development Team.  Given that a Scrum Development Team ought to be able to provide a potentially releasable, feature-complete increment each Sprint, which of the options you have described would be the most preferable? Perhaps most importantly, can you see how an orientation around feature-teams would help to mitigate integration risk?          Log in or register to post comments",7614
"08:02 am February 13, 2017                    Hi Ian,  Given your thoughts It's quite obvious to split along the business processes.  Thanks!          Log in or register to post comments",7614
Log in to reply,7614
Messages,7430
"08:14 am December 5, 2016                             Hi,    DoD can change only during sprint retrospective or are there  other times when DoD can change?  thanks.",7430
"08:28 am December 5, 2016                    Scrum imposes no delay on inspection and adaptation.. So a DoD can be improved at any time.  What would the implications be though, if a DoD was changed in the middle of a sprint, rather than in a retrospective? What would the Development Team then have to do?          Log in or register to post comments",7430
"10:39 am December 5, 2016                    Please correct me but if a DoD does not exists, dev team must create it. Retrospective is only scrum event that I know where the processes are reviewed.  I understand that DoD is bind to quality, that must no decrease during sprint and it is improved during retrospective.  Improve quality is an ongoing activity?  Thank you.          Log in or register to post comments",7430
"10:54 am December 5, 2016                    While retrospective is an * official * opportunity to reflect on the past sprint, your teamwork and the development process, nothing stops you from just having a wholehearted conversation on how to make things better any time - any day. If you spot an opportunity for improvement you can either just tackle it or postpone it to the retrospective, if it is not urgent. The ceremonies are not the point, what is important is to continuously inspect and adapt your work.          Log in or register to post comments",7430
"03:33 pm December 5, 2016                    > Improve quality is an ongoing activity?   Yes it is.  But you need to remember that if a team improves its DoD in the middle of a sprint, any remaining work in the Sprint Backlog will then need to be replanned so it meets that higher standard of quality. This could mean an increase in the amount of work which would then have to be done.          Log in or register to post comments",7430
"04:05 pm December 5, 2016                    > any remaining work in the Sprint Backlog will then need to be   > replanned so it meets that higher standard of quality  To put it more precisely: the Sprint Backlog itself may need to be replanned so that the increment can meet the new standard established by the revised DoD.          Log in or register to post comments",7430
"09:21 pm December 5, 2016                    Yes it is true... thank you          Log in or register to post comments",7430
"06:09 am January 27, 2017                    If you decide to defer the change to the DoD, what happens to the backlog item that was being developed? Say it was a security issue, do you defer the change until after the sprint, and mark the item as done because it passed the current definition of done? That leaves the potential for the item to be forgotten about, so an action must be taken; whether it is to add an additional backlog item to deal with security issues, or to change the definition now, and ensure that all work going forward complies. This has the potential to be a contentious issue!          Log in or register to post comments",7430
"06:24 pm February 12, 2017                    I agree that the DoD can change at any time, but I believe the best time to change the DoD is during Sprint Planning, This ensure that the forecast for the Sprint includes any work associated with meeting it.  Even though the Sprint Retrospective is a formal opportunity for Inspect and Adapt, we typically defer product related questions until Sprint Planning since we are not sure what the Sprint Backlog will be. Since the Sprint Backlog changes every Sprint then by definition, the DoD is subject to change every Sprint. When I facilitate a Sprint Planning meeting, before I ask the team if they are all in agreement with the forecast, I prompt them to review the Definition of Done with the PO present and ensure it is still accurate for the upcoming Sprint.          Log in or register to post comments",7430
"07:16 pm February 12, 2017                    > When I facilitate a Sprint Planning meeting, before I ask the team  > if they are all in agreement with the forecast, I prompt them to review  >  the Definition of Done with the PO present and ensure it is still  >  accurate for the upcoming Sprint.  It's arguably best to do this before the forecast is even made. During Sprint Planning, the DoD should guide the team in deciding how many Product Backlog Items they are able to select.          Log in or register to post comments",7430
Log in to reply,7430
Messages,5790
"02:12 pm March 16, 2014                             Hi all, after reading the Scrum Guide and Scrum and XP from the Trenches, I'm confused about a few things regarding the sprint goal and reducing scope.   Here's a scenario that our team recently experienced: midway through the sprint, one of our user stories is taking longer than expected to complete, usually due to a large number of bugs found that require fixes. Our burn down is starts to veer off course indicating we won't be able to reach our sprint goal, so we reduce the sprint scope by pulling the lowest-priority user story from the bottom of our sprint backlog. Does this reduction in scope come with a re-working of the sprint goal/commitment? Our sprint goal is typically, ""Finish all the user stories in the sprint so they are releasable."" If we don't rework that goal when the sprint scope is reduced, would it automatically be a failed sprint? Management is tracking 'failed' and 'successful' sprints (sadly), so I'm trying to clarify exactly what we can change and still have a successful sprint.",5790
"06:11 pm March 16, 2014                    > Our sprint goal is typically, ""Finish all the user   > stories in the sprint so they are releasable.""   As a Sprint Goal that is worse than useless. It says nothing about the business value the Product Owner seeks for that increment and has negotiated with the Development Team. All it does is to set the team up to fail, by definition, if even one story is missed.  > Management is tracking 'failed' and 'successful' sprints (sadly)  Actually that's a perfectly reasonable thing for stakeholders to track. What's unfortunate is that, in this case, they will not be able to gauge success or failure in terms of business value. There is no clear rationale to any of the increments being worked on.  Coherent and valuable Sprint Goals are essential to Scrum. They define the purpose of the increment. Stories can and should flex if necessary so the increment can be delivered. Sprints are meaningless without valuable increments and that value is expressed in their goals.           Log in or register to post comments",5790
"07:32 pm March 18, 2014                    Ian, thanks for the insight. Our current sprint started yesterday, and we created some concrete sprint goals which are now prominently displayed on our wall. I have few more questions about the sprint goal, perhaps you would shine some light on:  *In our current sprint, we have four sprint goals corresponding to four pieces of functionality we plan on completing by the end of the sprint. In Scrum today, our PM announced that one of those goals, implementing a new API integration with an outside company, is likely not going to happen due to a change of direction. When changes of business direction like this happen mid-sprint, do we simply drop it as a goal or does the sprint fail?  *If the sprint goals are all completed ahead of time, can the team add additional goal to keep the team productive?          Log in or register to post comments",5790
"08:42 pm March 18, 2014                    Each Sprint should have one goal. It represents the totality of the value that should be delivered in this increment rather than any other. Why are these stories being chosen for this particular increment? Where is the business value in binding them together?  In other words you wouldn't have multiple goals in a Sprint...but you would expect multiple stories to contribute to a goal.          Log in or register to post comments",5790
"06:55 am March 19, 2014                     Posted By golson on 18 Mar 2014 07:32 PM  *In our current sprint, we have four sprint goals corresponding to four pieces of functionality we plan on completing by the end of the sprint. In Scrum today, our PM announced that one of those goals, implementing a new API integration with an outside company, is likely not going to happen due to a change of direction. When changes of business direction like this happen mid-sprint, do we simply drop it as a goal or does the sprint fail?   As Ian suggests, one sprint goal helps you to focus. Four goals will not fulfill this purpose.  Now what to do? Basically it's up to the Product Owner, if he sees value in continuing with the sprint although the goal will only be fulfilled partially. For the next sprint he should select only one goal, not only because then this decision is easier ;)   *If the sprint goals are all completed ahead of time, can the team add additional goal to keep the team productive?  If the sprint goal (only one) is completed ahead of time, the team can do whatever they want. This includes adding additional PBIs to the Sprint Backlog. However you should not add another goal. What happens if they don't reach it? The sprint is perceived as failed, although the team reached its (original) goal. You should not punish a team for reaching a goal by adding another goal for the same deadline.  Best, Ludwig          Log in or register to post comments",5790
"11:48 am March 19, 2014                    I'm starting to understand the sprint goal much more clearly now, but that still leaves me wondering how we'll settle on *one sprint goal. A lot of work we do is spread across multiple business areas that are often unrelated in functionality. For example, in a sprint, the business priority may be to develop a small tool for the software, fix some few production bugs, and implement two different API integrations. These objectives are largely unrelated, but each is too small to make up a single sprint, and ultimately, we need all of these functionalities implemented. Thus explains the four goal: to complete each of the four small bits of functionality. Am I missing something here?          Log in or register to post comments",5790
"12:20 pm March 19, 2014                    Hi golson,  I know exactly what you mean, because I have experienced the same situation. In an ideal world, you have a vision guiding you, and you decompose this vision to release goals and sprint goals.  But in reality, you can have a Product Owner who just wants ""A little bit from this, a little bit from that"". Of course you can define one of those things as sprint goal, e.g. the small tool for the software. But probably some developers will be busy with the API integrations and not care about the tool at all, so the goal won't help those guys. In that case, I don't see much value in defining a goal, and I think you are still using Scrum if you omit it.  Maybe you can support the Product Owner in seeing the value of a Product vision.          Log in or register to post comments",5790
"03:27 pm March 19, 2014                    Very interesting discussion and this situation is familiar to me as well. I agree with golson and Ludwig, sometimes the PO will just want little things and it may be hard to craft a sprint goal from that. If this happens all the time then that suggests that you either don't have a clear long-term goal i.e. product vision or that you're not working toward that goal.  Often there's a conflict between short- and long-term goals and it's very easy to get caught just working with short-term stuff such as customer requests but that may not get you any closer to the long term goal It is important to continuously review the product and ask yourself if you are getting closer to that and if you're getting there fast enough. If the PO feels that you're moving too slow then maybe cut short-term goals in favor of more long-term goals.          Log in or register to post comments",5790
"04:48 pm March 21, 2014                     Posted By Ian Mitchell on 18 Mar 2014 08:42 PM  Each Sprint should have one goal.  I don't really understand why sprint should have only one goal? It's hard to achieve for long sprint (like for 4 weeks). The simplest case is when there is ""almost-finished"" US (goal) inherited for previous sprint which might be the part of the next sprint. But it's too small for the whole sprint, hence an additional goal (USs) is needed.  Such requirement looks for me quite unnatural and gives nothing.  But I would like to get your opinion.  BR,  Bartek           Log in or register to post comments",5790
"05:37 pm March 21, 2014                    Each sprint should have one goal because there should be a clear purpose to each increment, i.e. a purpose which would make for a coherent release.  In other words, if the user stories in a sprint don't have a joint purpose, then there would be no rationale for combining them into a potentially releasable increment.          Log in or register to post comments",5790
"03:24 am March 22, 2014                    NB another way to look at this is to ask why work should be batched into sprints and their increments at all. If you can't come up with a unique clear and purposeful Sprint Goal for each increment, why bother working in sprints? Remember that in Lean theory you'd want to reduce batch sizes as far as possible, ideally down to single piece flow. So what value can sprints...and their associated unique Sprint Goals...possibly add?  This is an argument often made by Kanban advocates, and it is behind the use of Scrumban as a deconstructionalist remedy to the supposed ""waste"" inherent in Scrum. When seen in this context, the question posed about the value of sprints and Sprint Goals is a sensible one to ask. Why not just have a stream of User Stories drawn from a single backlog...each of which can be a goal in its own right? Why not reduce the ""sprint"" to a regular heartbeat event during which metrics are assessed and the agile process inspected and adapted?  The answer is that not all work resolves to discrete, fully qualified items that can be progressed and released in the manner of independent tickets. Business As Usual work can admittedly be like that, which is why Kanban is often chosen as a BAU service delivery model. Project work on the other hand tends to be high-risk and of unclear scope. It then makes sense to agree on a general goal to be met within a specified timebox, and to flex the Sprint Backlog items around that. This is one of the reasons why User Stories are a good fit for Scrum...they are placeholders for the necessary conversations to take place during the Sprint.           Log in or register to post comments",5790
"05:22 pm January 3, 2017                    I don't see a reason of grouping unrelated business concepts in a single sprint. It depends on the context, but maybe it would be feasible to split the team into multiple teams that will work on different sprint goals. Also, ""creating API"" might not be the best sprint goal. What is the business value of that API? Defining sprint goal related to the business value is important because, in this case, failure to implement all components of the API will not necessary lead to failed sprint goal.          Log in or register to post comments",5790
"05:39 pm January 5, 2017                    As Ian mentioned, I think without a clear sprint goal, I don't see much value in using Sprints and Scrum.  If you think about it, the Daily Scrum also wouldn't make sense there, because the 3 questions are all related to a sprint goal. If people are aiming at 4 different targets, there won't be the same inclination to swarm.  Scrumban/Kanban is a better fit where there are many goals to get in a 2 week cadence. I have experienced this exact situation recently and we decided to switch.           Log in or register to post comments",5790
"03:13 pm February 9, 2017                    Hi Ian,  I am following you posts very diligently over this forum. Whatever, you have explained for Sprint Goal in this thread make sense. Having said, i still have one query over this.  For example: We are following a 2 week Sprint. We have planned a spring Goal to deliver complete integration for end to end Trade Booking. However, Due to some technical reason (impediments), the integration is not complete. Still, the work on GUI is complete & back end development activities are also completed. As, integration was the task for last 2 days in sprint. SM is not able to resolve this impediments.  Now, in this case, if Dev team approached to PO for discussing the change of this POI (story point). Whatever PO agreed with DT, in any case it will change or alter the Sprint Goal.  However page 8 if Scrum guides says  During the Sprint:  • No changes are made that would endanger the Sprint Goal;  I seek some clarity over this thin line of change in scope of Sprint back log & how it cannot always impact the Sprint Goal. As far as my understanding of SCRUM guide says, if Sprint Goal change Sprint become redundant and also changing Sprint back log is very common practice due to certain practical reasons.  What's the best technique to safeguard Sprint Goal, with out being too hard on Dev team.           Log in or register to post comments",5790
"10:14 pm February 9, 2017                    >  integration was the task for last 2 days in sprint. SM is not able to resolve this impediments  That's the risk of deferring integration to the end of the Sprint. It's better to manage risk throughout the sprint by integrating continually, or at least early and often at multiple discrete points.  > Now, in this case, if Dev team approached to PO for discussing the change of this POI (story point).  The Dev Team doesn't need to approach the PO at all regarding story point changes, since they are wholly responsible for their own estimates.  > Whatever PO agreed with DT, in any case it will change or alter the Sprint Goal.  No. Story point changes would not alter the Sprint Goal, nor would any discussions about the scope of work itself. In Scrum, the Sprint Goal should not change during the Sprint.  > However page 8 if Scrum guides says  >   > During the Sprint:  > • No changes are made that would endanger the Sprint Goal;  >   > I seek some clarity over this thin line of change in scope of Sprint  > back log & how it cannot always impact the Sprint Goal. As far as  > my understanding of SCRUM guide says, if Sprint Goal change  > Sprint become redundant  The Sprint Backlog is a forecast of the work that the Development Team will need to do to meet the Sprint Goal. If a change in scope would help better meet the Sprint Goal, then the forecast of the work to be done should change accordingly. If it seems that the Sprint Goal cannot be achieved at all, no matter how the plan of work is revised on the Sprint Backlog, then the Product Owner has the option to cancel the Sprint.  > and also changing Sprint back log is very common practice due to certain practical reasons.  > What's the best technique to safeguard Sprint Goal, with out being too hard on Dev team.   The Development Team wholly own the Sprint Backlog. It is theirs. Only they can change it, so the matter of ""being too hard"" on them will not arise if Scrum is being implemented properly.  In general, a failure to integrate an increment will mean a failure to meet the Sprint Goal, since the work done will not be in a releasable state. It is therefore usually best to sacrifice scope in favor of integration, should sacrifices need to be made during a Sprint. This might mean a reduction in the available functionality, but a carefully crafted Sprint Goal will allow for flexibility in this regard.  I think that the main takeaway for your team in this case is the need to address integration risks earlier and more often.           Log in or register to post comments",5790
"04:31 am February 10, 2017                    Thanks Ian,  It's informative and cleared my doubts. Reality is no matter how better you understand SCRUM GUIDE, There is always a deeper meaning available.  > If it seems that the Sprint Goal cannot be achieved at all, no matter how the plan of work is revised on the Sprint Backlog, then the Product Owner has the option to cancel the Sprint.  It is clear to me that , only those spring back log changes are acceptable to PO, which does not dilute the Sprint Goal or in a way only enhance the delivery of Sprint Goal to DONE increment.  >  It is therefore usually best to sacrifice scope in favor of integration, should sacrifices need to be made during a Sprint. This might mean a reduction in the available functionality, but a carefully crafted Sprint Goal will allow for flexibility in this regard.  It is also clear now that, Sprint Goal is utmost priority over other detailed features.  >The Dev Team doesn't need to approach the PO at all regarding story point changes, since they are wholly responsible for their own estimates.  One last clarification on this. You mean to say, until any addition/deletion on Sprint back log is not impacting the Sprint Goal, Dev team is the in charge of all the changes( As, they own their estimates and responsible for it). However, any change or situation which can impact the Sprint Goal need to be discussed with PO. Then PO can take the call with Sprint fate.  If what ever i have stated in previous 3 lines is right. Can PO take a call to amend the Sprint Goal rather then cancel the Sprint. After all, changes Sprint Goal is still adding value to the business, rather then canceling it.  The nut , I am trying to crack is "" if any SBL change impacts Sprint Goal, is Canceling Sprint is the only Option"". I understand that , if we follow SCRUM 100%, this situation will not arise very often. However, for new teams following SCRUM, this situation is very much common.          Log in or register to post comments",5790
"08:41 pm February 10, 2017                    > One last clarification on this. You mean to say, until any addition/deletion  > on Sprint back log is not impacting the Sprint Goal, Dev team is the in  > charge of all the changes( As, they own their estimates and responsible  > for it). However, any change or situation which can impact the Sprint Goal  > need to be discussed with PO. Then PO can take the call with Sprint fate.  Correct.  > If what ever i have stated in previous 3 lines is right. Can PO take  > a call to amend the Sprint Goal rather then cancel the Sprint. After  > all, changes Sprint Goal is still adding value to the business, rather  > then canceling it.  Strictly speaking, no. The Sprint Goal cannot be amended. However, if the Product Owner cancels the Sprint, the team may use the remainder of the time-box to deliver as much value as possible. The maximum value ought to be leveraged out of the situation. A new tactical goal for the time that is left may be framed for this purpose.  > The nut , I am trying to crack is "" if any SBL change impacts Sprint Goal,  > is Canceling Sprint is the only Option"". I understand that , if we follow  > SCRUM 100%, this situation will not arise very often. However, for new  > teams following SCRUM, this situation is very much common.  If the Sprint Goal is no longer viable, and the expected value cannot be delivered, then the Sprint ought to be canceled so time and resources are not wasted. It would be better to use the remaining time to achieve something which *is* viable and which provides value. Whether cancellation is justified in those terms or not is the Product Owner's decision. Applying Scrum rigorously is indeed very hard, and especially so for teams which are new to it.          Log in or register to post comments",5790
"04:46 am February 11, 2017                    Thanks Ian, It really helped a lot.Indeed,it is very hard to apply SCRUM rigorously.          Log in or register to post comments",5790
Log in to reply,5790
Messages,7617
"10:40 pm February 10, 2017                             Last week, I passed PSM1 with 94%.I was always aiming for 95% during my mock tests and I e  got it.I am so pleased that I was able to get through in the first attempt. and I think I owe  this community a blog on how I prepared and what helped me to get this certification on first  attempt.   I have three years of working experience in agile(scrum and Kanban-just 3 months). I spent one week preparing for this certification. This is how I prepared for my  certification  so there you go  1. Being passionate about Scrum is very important. Do not have mindset to just to pass PSM1. if you really want to clear with good score, you should really be passionate about learning and practicing scrum. Set your goals high. My goal is  to get one scrum certification every 6 months or one year.  2.Do not pay for external courses for PSM 1. not even one cent.   3. First read the scrum guide. Don't just read scrum guide. Study it. I read this scrum   guide at least 20 times. when you read a point, you have to make sure you understand it.  Do not read other books for PSM1 preparation. Few would say, read Scrum-pocket guide. I would say NO. that is not necessary at all. Only thing that is not covered in scrum guide is burn down charts,. You can even read the wikipedia definition of this.  4. Then take the open assessments for scrum master, until you understand each question, answer  for that question and understand other options/choices in the question.  	For ex- if the options says, Stake holders presence in sprint planning is mandatory.   even though you know the right answer and the above point is not the right answer. you have  to analyze and learn other things from above point like stakeholders participation is needed  only in sprint review, and they will be invited by the product owner. and what role product owner  and stake holder they have in sprint review.   i took the open assessment for scrum master at least 50 times in that week. And took open assessment for product owner like 10-20 times. And also took developers test for three-five times. I just concentrated on the scrum related question in dev test rather related to coding and stuffs.  	4. Then mlapshin. com. take the test in learning mode. I owe him big time, took more than 10 times. very few times in real   mode. Every question you see in this, go to that certain point in scrum guide and read through that    topic. fist time i scored 75%, I kept taking it until I get 100% three times. that was my goal.  5. Read the scrum guide again, now you should remember all the question that came up from above    website.  If you have habit of taking notes, read the notes every day(end of preparation) to make sure you remember it.  During PSM 1 test;  Take the test in peaceful place, where there are no internet interruptions.  Do not try to google. Waste of time. You can have scrum guide open or papers below but that won't help. You have 80 questions to answer in 60 minutes. Try not to spend more than 30 seconds for a question. I set deadline, at end of 10th minute, I should have completed 20 questions. Bookmark questions if you are not sure. Even if you have little doubt, bookmark it. I bookmarked 20 questions end of taking all 80 in just 40 minutes. Then I went through each question from number 1. if you don’t get that amount of time,  you can just take a look at bookmarked questions. Once I went through all 80 again. My bookmarked questions was reduced to ten,. Then I looked only the book marked questions again and tried to give correct answers.  Look out for NOT in the question. This is very important.  Sometimes, you think you clicked on the radio button, but you actually not. So make sure you click it right.  Even if you think first option is the right answer, give a read to the other options.  Last but not least, Motivate yourself by reading blogs like this.",7617
"11:04 pm February 10, 2017                    I tried to pass PSM1 certification but i failed (78.8%) while i passed the open assessment with 100%.  Your post will help me to do my best next time i will try.  Thank you for your post and your advices.           Log in or register to post comments",7617
Log in to reply,7617
Messages,7616
"11:54 am February 10, 2017                             We've reached the end of our sprint, and some stories are unfinished. The team wishes to include one unfinished item in the Review in order to get feedback on it. As a Scrum Master, I have advised them that we should only demo completed stories, but the team still wish to show it. I suggested we should call out its unfinished. The PO knows its not shippable but is ok to show it.  Did I take the right approach? What are your thoughts?",7616
"01:44 pm February 10, 2017                    In theory,   - The Product Owner explains what Product Backlog items have been “Done” and what has not been “Done”.   - The Development Team demonstrates the work that it has “Done” and answers questions about the Increment;.  In this particular case, Dev team seems to be eager to demonstrate unfinished work which I am unsure how will they. They might just be able to state stories which are unfinished. As the PO is OK to hear out, it is good opportunity for Dev team to state unfinished work, however should not lead to discussion or feedback on unfinished stories as it will defeat the purpose of stories. Grooming session would be better idea to discuss unfinished work instead.          Log in or register to post comments",7616
"01:52 pm February 10, 2017                    > We've reached the end of our sprint, and some stories are unfinished. The  > team wishes to include one unfinished item in the Review in order to get  > feedback on it. As a Scrum Master, I have advised them that we should  > only demo completed stories, but the team still wish to show it. I suggested  > we should call out its unfinished. The PO knows its not shippable but is ok to show it.  What reason would you have *not* to elicit feedback, whether it be for work done or only partially completed?  Remember also that a Sprint Review should identify work done, and not yet done.          Log in or register to post comments",7616
"02:15 pm February 10, 2017                    Thanks for the feedback.  @Ian, does it not go against Scrum rules to demo incomplete work?          Log in or register to post comments",7616
"03:17 pm February 10, 2017                    Why do you think it might go against Scrum rules? From what you say, the team are not presenting it as ""Done"" work but as undone work. The PO knows it is not shippable.  Don't the team try to elicit feedback for their work-in-progress during the Sprint? If not, why not? And if so, why would getting feedback regarding incomplete work suddenly become inadmissible now, in the Sprint Review?          Log in or register to post comments",7616
"06:48 pm February 10, 2017                    Yes they do get feedback and ask questions to the PO during the sprint. PO knows its not shippable. So it's not a no-no in terms of what Scrum guides?          Log in or register to post comments",7616
"08:12 pm February 10, 2017                    As long as Done is observed, and it is made clear to stakeholders what is shippable and what isn't, then there's nothing wrong in eliciting feedback about any work at any point.          Log in or register to post comments",7616
Log in to reply,7616
Messages,7615
"10:46 am February 10, 2017                             Hello all,  I passed the PSM I exam in January and I would like to prepare my self for the PSM II certification exam. Could you please help me by sharing your experience in this learning process?  Best regards,  Elena",7615
Log in to reply,7615
Messages,7358
"11:40 am October 5, 2016                             Hi Guys  Today, I cleared my PSM1 exam in 1st attempt with 95%.  I referred   -Scrum Guide multiple times  -Scrum narrative guide and questions by Mustaffa  - test on http://mlapshin.com/index.php/psm-quiz/learning-mode/  -Open assessment- 5 times PSM and 4 times PO exam  -Nexus Guide once  -MPlaza Free guide -Once  - One more site had 15 free questions, I did their test 2-3 times and I believe there were some extra questions in new tests.  - I collected other material but I stopped reading those as it   Many questions were very indirect and outside of scrum guide. Many are already there in above guides or tests available online.   some were related to the component team, sprint length  So prepared hard and practice questions and check reasons of correctness or wrong answers.  Scrum On.",7358
"11:30 pm February 8, 2017                    congratulations!          Log in or register to post comments",7358
Log in to reply,7358
Messages,7484
"06:41 pm January 8, 2017                             Hello everyone,  I've just passed my PSM I with 92%. I found the exam quite easy, half of the questions have the same complexity of the Open Assessments, whereas the other half necessitate an real understanding of Scrum principles.  I used the following resources to prepare:  - Read Scrum Guide 3/4 times (this is your Bible)  - Took a Udemy course (useful but maybe not necessary)  - Read ""Scrum. A pocket guide"" by Gunther Verheyen (fantastic resource, it gives you a great perspective on why things are done in scrum)  -Read ""Our iceberg is melting"" (nice book that has a tremendous impact on understanding change management)  For test practice:  - Scrum Open Assessment   - Product Owner Oper Assessment  - Mikhail Lapshin test - http://mlapshin.com/index.php/psm-quiz/learning-mode/   Before the exam I scored always 95%+ in less than 10 minutes.  In total I focused for 1 week on the exam training, but I already had a good understanding of the framework having practiced scrum for years.  Hope this will work for you.  Good luck.  Giorgio",7484
"06:55 pm January 12, 2017                    Congratulations Giorgio!  Practicing Scrum for several years puts you in a really good place to take the PSM I which tests your knowledge and theory of the Scrum framework.  Knowing the Scrum guide in and out is definitely of primary importance, and I would concur that ""Scrum. A pocket guide"" is an excellent resource.    When you are ready for it, you could consider studying for the much harder PSM II that tests your ability to take the knowledge you have just proven and apply it to complex real world situations.  Best wishes.          Log in or register to post comments",7484
"08:46 am January 19, 2017                    Hi,  Just passed PSM 1 with 95%.  For me the best assets in achieving this were  1. The scrum guide (naturally) http://scrumguides.org/   2. The audiobook version of the scrum guide https://www.implementingscrum.com/scrum-guide/   3. The scrum open assessments for scrum master, product owner and Nexus.  4. The training exam by Mikhail Lapshin http://mlapshin.com/index.php/psm-quiz/  5. The scrum master training manual by management plaza http://mplaza.pm/downloads/Scrum%20Training%20Manual.pdf  I read all the reading material from cover to cover about 4 times, listened the audiobook every day for the last week prior to the exam and did the training exams so that I could hit minimum 93% in all of them every time.  Finally I took all of this information and created a powerpoint deck with ""flash cards"" on all of the things I considered important for the exam. I would recommend this exercise to all as it really helped me to understand the meaning behind the content as I needed to consider what is really relevant and what is not.  Finally searching information from this forum was really helpful to get deeper understanding in some of the topics I was struggling.           Log in or register to post comments",7484
"08:08 am February 3, 2017                    Hi Everyone,  Thanks for all information and tips.  I just passed my PSM I with 98.8%.  So happy right now.  Thank you once more.  Lekan          Log in or register to post comments",7484
"03:39 pm February 8, 2017                    Hi,  I passed with 95%.   I used  - the scrum guide  - the preparation exams of management plaza. This really was very helpful to gain speed and understanding as I am not a native english speaker. It really is low cost compared to a second attempt. (https://mplaza.pm/professional-scrum-master-certification-preparation-p…)  good luck          Log in or register to post comments",7484
"11:27 pm February 8, 2017                    I cleared it few days back with 94% i will be writing a blog as well. Thanks for your advice          Log in or register to post comments",7484
Log in to reply,7484
Messages,7544
"06:29 pm February 6, 2017                             Hi guys !!   I'm getting ready to take the SPS certification and I have a question about the Scrum Team. On the Nexus guide, we have ""Nexus integration Team Members are responsible for coaching and guiding the Scrum Teams ...."". My question is: who consist of Scrum team in this case (Product Owner, Scum Master and Development Team)? If yes, the Product Owner is responsible for attending the Nexus Integration Team and Scrum Team as well? I mean, is the same person, correct?  Please, can someone give me more explanation about?   Thank you !!  Deivid Gionimi",7544
"11:31 am February 8, 2017                    The PO is the PO of the Product the Nexus is building.  Hence, he is the sole PO of each Scrum Team of the Nexus, including the Nexus Integration Team.          Log in or register to post comments",7544
"03:49 pm February 8, 2017                    Hi Olivier   Thank you for your answer.           Log in or register to post comments",7544
Log in to reply,7544
Messages,7547
"10:31 am February 7, 2017                             Would like to talk about this topic using the Analogy of building an Aeroplane. Assuming that the final product is an Aeroplane. Assume that it takes a few Sprints to deliver each of the parts, each part is tested as it is built.  Now the entire aeroplane is ready. So this is a logical point to perform an integrated testing to check that the Aeroplane can fly.  Would having an integrated testing cycle done once the entire product is ready contradict the Scrum principles ?",7547
"01:30 pm February 7, 2017                    instead of the metaphor of the aeroplane, I suggest the one of a vehicule, like a car.  See http://blog.crisp.se/2016/01/25/henrikkniberg/making-sense-of-mvp  First increment = skate-board. It need to be tested and to be useable before release.  Second increment = scooter. Again, tested and useable before release.  ...          Log in or register to post comments",7547
"01:33 pm February 7, 2017                    Surely the entire Aeroplane, or the car, or the scooter can be delivered in 1 Sprint. Hence the example that I took.          Log in or register to post comments",7547
"01:35 pm February 7, 2017                    Sorry I meant that the entire Aeroplane or the car etc cannot be delivered in 1 Sprint, but would take multiple Sprints to deliver as a whole.          Log in or register to post comments",7547
"03:02 pm February 7, 2017                    yes, the car can't be delivered in one single sprint, but how can you split the work in order to have ""something"" usefull to get feed-back from your customers ?  in the context of the aeroplane, what about a glider or a flight-ticket at first ?          Log in or register to post comments",7547
"04:09 pm February 7, 2017                    Olivier, even glider won't be delivered in 1 Sprint.  But we are deviating from my query, that in the scenario of producing a product like plane, the logical testing point comes when the plane is ready. Often in software also we come across such cases. So is it wrong or un-Agile to do an integrated testing towards the end.          Log in or register to post comments",7547
"04:20 pm February 7, 2017                    Sprint iteration may include integration testing of developed components, you may think having a separate sprints just for integration if you wish before release happen. Having a potential shippable product at end of each sprint is         way to add incremental value, but components usually don't move to production in each sprint, unless integration testing are completed before release. Usually, production release cycle follow in every quarter and complete integration testing apart for components level testing does happen before every release including regression testing, load & performance testing if required.          Log in or register to post comments",7547
"06:01 pm February 7, 2017                    Maybe you can find some ideas into this recent topic about the DOD ? https://www.scrum.org/Forums/aft/2490          Log in or register to post comments",7547
"06:03 pm February 7, 2017                    And from the wikispeed team : http://wikispeed.org/team-2/the-wikispeed-process/  OK, it's not an airplane ;-)          Log in or register to post comments",7547
"07:36 pm February 7, 2017                    > So is it wrong or un-Agile to do an integrated testing towards the end.  There's nothing wrong in assuring integration at any point in development. What would be unagile would be deferring the release of an integrated product until the end of the initiative, because that would represent a large and unvalidated leap-of-faith.  Integrated and releasable increments may include the engines, which could be used on existing airframes, or the airframes for already existing engines. New seating arrangements could be validated using existing aircraft. A scale model might be built to validate fuel efficiencies. All might be useful MVP's a PO might reasonably care about. As Olivier mentioned, even a flight ticket could be a useful increment if it allows a pricing point or other market assumption to be validated before building anything.          Log in or register to post comments",7547
"09:21 pm February 7, 2017                    Agree with Ian here. You should not wait for the integration tests till the entire project is complete. As soon as two inter-operable components are built, the integration tests also should be done along with it. By delaying the integration tests till the last moment, you are risking the entire project.  According to me, integration tests should be a part of the definition of done and automated as part of the build. However, it is the team's decision.          Log in or register to post comments",7547
"05:51 am February 8, 2017                    So I agree to the point that as parts keep getting built, they also have to be assembled and tested at the same time. So as the wings get ready, they can be integrated with the plane body and tested.  But is it also wrong to say that when the entire plane is ready as a whole, it should not be tested for its flight ?          Log in or register to post comments",7547
"01:46 pm February 8, 2017                    In your case, extra tests towards the end sound necessary.  However one word about Agile testing: when you have a separate verification and validation phase, you are NOT agile.   An agile tester works hand in hand with the coder and the PO to make his voice heard.   Concretely speaking, you could consider the two following points regarding your test strategy  - Involve a tester in backlog grooming sessions so that he can ask ""test-oriented"" questions. This would improve the refinement of acceptance criteria.   Everybody would understand clearly how/to what extent a given item needs to be tested in order to be DONE.  - The tester and the developer should discuss more often and since the beginning of the sprint about the tests that will be needed. This way the developer knows what is coming. It influences the way code is written.   Irrespective of the strategy you adopt, keep in mind that the aim of testing in agile is to provide FAST feedback.   Do whatever is necessary to have that.            Log in or register to post comments",7547
Log in to reply,7547
Messages,7612
"12:31 pm February 8, 2017                             Hi,  Does someone have experience with setting up a Nexus Sprint Goal (selected product backlog items with plan on how to deliver)?  I would like to see an example.  thanks!",7612
Log in to reply,7612
Messages,7535
"05:59 pm February 2, 2017                             Can a student use Google search and Scrum Guide PDF, during the exam?   I saw that some users in other forums mentioned that Scrum exam is an open-book exam and you can have your guide open and use Google search when taking exam. But the posts were old, so I thought I will confirm it in this forum.  What is allowed and not allowed to use during the exam?",7535
"09:49 pm February 2, 2017                    > Can a student use Google search and Scrum Guide PDF, during the exam?   Not really. Don't expect to have enough time to google or to turn a page, and still less time to process whatever you are reading and apply it to a question at hand. You'll only have time to use and apply what's in your head.          Log in or register to post comments",7535
"11:20 pm February 2, 2017                    I have attended the exam on 31st. I did not have time to get to the Scrum Guide. Also going to google search might confuse our decision to the right/wrong answer and  bring down the confidence. Like Ian mentioned it's only the knowledge of Scrum Guide. Thorough understanding of Scrum Guide. While doing the mock tests I have practised to understand why I am choosing any right option and why others wrong. That helped me.   Here is the link for more details: https://www.scrum.org/Assessments/Professional-Scrum-Master-Assessments…          Log in or register to post comments",7535
"02:42 am February 3, 2017                    Thank you for your responses! :)           Log in or register to post comments",7535
"04:21 am February 5, 2017                    To add on to the above given answers and to directly answer your question; yes you can Google, search any book or document since scrum.org doesn't specifically mention that in the instructions before exam. I have to mention that I didn't thoroughly read the terms and conditions and if it was mentioned somewhere deep in those documents then I can't really attest to it.   The only problem you might run into if you plan to search is that you might not have enough time on your hand to do so. But there is a strategy if you really want to do so. I'll try to be direct here:  1. Try to attempt the test on a touch screen device (laptop or tablet) as it saves some 5 minutes over all.  2. Blaze though the test not taking more than 15 sec/question. This is of course only possible if you have taken several mock tests ( open assesment, lapshin, etc. ) scoring 95% plus every time. Since about 50-60 questions will either be exact same or similar, this shouldn't take you more than 25-30 minutes.  3. Bookmark the questions that seem hard, have doubt about. ( don't waste more than 10 sec on such questions). You'll know right away by reading first sentence that you haven't come across this questions ever; bookmark it.  4. Now you should have plenty time (20 min at least) in your hand to search, ctrl+f through docs or ponder on these questions.  I recently took PSM I and scored 92.5%. I've tested this strategy on European Scrum mock test and it works proportionally but i don't recommend it since I am not 100% certain about Scrum.org's terms and condition.   Considering they neither mention it in the instructions before exams nor have anything that prevents you from doing so, you can do at if it suits your style of preparation. I didn't personally follow it as after a rigorous preparation I didn't really need it.  Disclaimer: I neither encourage or claim any responsibility for anyone who follows the above advice. Its purely for informational purpose and doesn't encourage cheating of any sort.          Log in or register to post comments",7535
"04:19 pm February 7, 2017                     Posted By Manvender Singh on 05 Feb 2017 04:21 AM  To add on to the above given answers and to directly answer your question; yes you can Google, search any book or document since scrum.org doesn't specifically mention that in the instructions before exam. I have to mention that I didn't thoroughly read the terms and conditions and if it was mentioned somewhere deep in those documents then I can't really attest to it.     The only problem you might run into if you plan to search is that you might not have enough time on your hand to do so. But there is a strategy if you really want to do so. I'll try to be direct here:    1. Try to attempt the test on a touch screen device (laptop or tablet) as it saves some 5 minutes over all.    2. Blaze though the test not taking more than 15 sec/question. This is of course only possible if you have taken several mock tests ( open assesment, lapshin, etc. ) scoring 95% plus every time. Since about 50-60 questions will either be exact same or similar, this shouldn't take you more than 25-30 minutes.    3. Bookmark the questions that seem hard, have doubt about. ( don't waste more than 10 sec on such questions). You'll know right away by reading first sentence that you haven't come across this questions ever; bookmark it.    4. Now you should have plenty time (20 min at least) in your hand to search, ctrl+f through docs or ponder on these questions.    I recently took PSM I and scored 92.5%. I've tested this strategy on European Scrum mock test and it works proportionally but i don't recommend it since I am not 100% certain about Scrum.org's terms and condition.     Considering they neither mention it in the instructions before exams nor have anything that prevents you from doing so, you can do at if it suits your style of preparation. I didn't personally follow it as after a rigorous preparation I didn't really need it.    Disclaimer: I neither encourage or claim any responsibility for anyone who follows the above advice. Its purely for informational purpose and doesn't encourage cheating of any sort.  Thank you for the tips, this is very useful!  Did you take the Developer and Nexus open tests, before taking the exam too, or only the product owner and scrum master?          Log in or register to post comments",7535
"06:37 pm February 7, 2017                    I did take developer and Nexus test once just to see the content, and I didn't score more than 75% in both. It doesn't help to take these test as hardly 2-3 questions might come that too with twisted wording! So just take both tests once and don't get demoralized with the results. But definitely give Nexus guide a read, its short and shouldn't take much time. There may be some questions involving multiple team concepts !          Log in or register to post comments",7535
"03:40 am February 8, 2017                     I will not recommend that even if someone has got time to do so.  In professional world there is something called ETHICS and we have to keep that alive  Also we should be clear about the purpose behind taking the exam.          Log in or register to post comments",7535
Log in to reply,7535
Messages,7549
"07:18 pm February 7, 2017                             One of the basic rules when forming a SCRUM team is that the team should have all necessary skills to create releasable increment each sprint. In my logic this leads to feature teams.   Let's say that two or more different feature teams have need for common component. For example the login logic. How will this be implemented?   How can this be resolved? How will the different teams collaborate with each other to create the common component so we don't end up with two different solutions for the same thing? Is horizontal team an option?",7549
"09:04 pm February 7, 2017                    For smaller features and once off scenarios it would be ideal to keep the communication open and make sure that the teams are talking to each other. If the dependency is higher, I would consider scaled scrum (https://www.scrum.org/Resources/The-Nexus-Guide)          Log in or register to post comments",7549
"09:49 pm February 7, 2017                    To minimize inter-team dependencies, one team could first implement the smallest valuable feature which would utilize and validate the necessary technical components.  In the case of a login this ought to be straightforward - logging in clearly aligns to a discrete feature capability. Once this minimum feature has been provided, the technical elements will be available for use and further enhancement.          Log in or register to post comments",7549
Log in to reply,7549
Messages,7528
"12:03 pm February 1, 2017                             Scrum guide explicitly says:  The purpose of each Sprint is to deliver Increments of potentially releasable functionality that adhere to the Scrum Team’s current definition of “Done.”  Which means that DoD is for an Increment.  At the same time there is a quiz question taken from open Professional Scrum Developer assessment:  The definition of ""Done"" describes the work that must be completed for every Product Backlog item before it can be deemed as releasable (...). (it's from the question itself, not from the answers)  So, what does the Definition of Done from the Scrum Guide refer to?",7528
"03:13 pm February 1, 2017                    My reading of the Scrum Guide is that DOD refers to the increment.           Log in or register to post comments",7528
"03:40 pm February 1, 2017                    Oliver,  that would mean that the assessment question is not valid, correct?          Log in or register to post comments",7528
"05:15 pm February 1, 2017                    Hi Bartek,  no, the question isn't invalid, you just need to read a bit between the lines. An increment is the sum of the PBIs did by the team during the sprint, to me it means, that they all need to be ""Done"" to have a ""Done"" increment.  Greetings,  Peter          Log in or register to post comments",7528
"06:36 pm February 1, 2017                    The full question is:  ""The definition of ""Done"" describes the work that must be completed for every Product Backlog item before it can be deemed releasable. What should the Development Team do when, during the Sprint, it finds out that a problem outside of their control blocks them from doing all this work?""  The way I read this, the word ""it"" in the first sentence correlates to ""all of this work"" in the last sentence. This can hence be read as implicitly referring to the increment.  In other words, the DoD describes the work that must be completed for every Product Backlog item in aggregate. Of course, it would be individually rather than in aggregate if each PBI ought to be discretely releasable as an increment in its own right.          Log in or register to post comments",7528
"10:21 pm February 1, 2017                    DoD applies to both, PBI and Increment.   DoD for a PBI refers to meeting all the criteria set by team.  DoD for the increment refers to meeting the Sprint Goal.  Or maybe not? I guess it's time to introduce some new abbreviations...           Log in or register to post comments",7528
"08:59 am February 2, 2017                    Having the DOD applied for each PBI is ""Nice to have"".  But the commitment of the Dev Team is that the DOD is a ""Must have"" for the increment.  For instance, around me, testing automation is still poor.  Having ""Performance Testing"" or ""Security Testing"" for each PBI is not yet possible. But a few teams achieve to have ""performance or security testing"" for the increment.          Log in or register to post comments",7528
"09:29 am February 2, 2017                    Thanks for your opinions.  I read somewhere within PSM II and III study materials, that questions are straightforward and one should not assume that there are some hidden windups. In that sense I consider this particular quiz question a bit unfortunate because of it's phrasing.          Log in or register to post comments",7528
"12:56 pm February 2, 2017                    this discussion remind me that : https://www.scrumalliance.org/community/articles/2008/september/how-do-…           Log in or register to post comments",7528
"09:41 pm February 2, 2017                    > ...one should not assume that there are some hidden windups  I reckon you can assume that there are no deliberately hidden windups. However, you should also assume that there will be challenges regarding nuance and context, that ""unfortunate"" things may well happen in phrasing, and that you will have to recognize and navigate these. To do this you must have internaluzed Scrum and be able to see through the surface to the heart of the question.          Log in or register to post comments",7528
"08:58 pm February 7, 2017                    Can/Should the DoD be added as a task linked to a PBI? Or would it be overkill to manage this way?  In one of my projects, we used sub-lanes called In Dev, ""In unit testing"", ""in peer review"" etc.   How do you all track the DoD (per item or per increment)? Or do you simply announce in the Sprint Review that the increment satisfies the DoD criteria?  Thanks           Log in or register to post comments",7528
"09:35 pm February 7, 2017                    One option is to plan a separate task for achieving each criterion in the Definition of Done.          Log in or register to post comments",7528
Log in to reply,7528
Messages,7539
"04:58 am February 5, 2017                             Just took my PSM I test last week and scored 92.5 %. This was first attempt, had some knowledge about scrum and agile but haven't professionally worked on it. Preparation took about 12-15 hours in total spread across 2 weeks. Not necessarily hard if you know what you're doing. Preparation tactics are pretty much similar to what most have mentioned in the forum so i won't play the same tune again. I've given my linkedIn details in my profile here so don't hesitate to reach out if you have a specific question, I'll be happy to help.     Coming back to the topic now, let me break it down into steps:    1. 60-65 questions (out of 80) are either similar or exact same of what you'll come across while practicing mock tests ( open assessment, lapshin, etc. mentioned in other forum topics). So make sure you are scoring 95% plus consistently so you can blaze through ( around 12-15 sec/question) these questions without doubting yourself that it can't be so simple; because it is. You should be able to answer these questions in about 20-25 minutes.    2. Immediately bookmark a question that you don't feel you've come across. Don't waste more than 7-9 sec on such questions. After reading first sentence you'll know that this question is going to take longer, so skip it and come back later.    3. If you follow this strategy you should easily have about 25 minutes for 12-17 questions. You can ponder on these questions without worrying that you'll miss the questions which you might have known.    4. Give special attention to the type of check box, circle means only once correct ans where as a square means more than one answers are possible. Most questions tell you how many correct ans are there (in case of a square box). Some questions might not, so be sharp and don't make a silly mistake.    An additional tip is to attempt the test on a touch screen device (laptop or tablet) as a lot of back and forth will consume some extra 5-7 minutes that you can save using a touch screen !    Good Luck,    Peace!",7539
"04:17 pm February 7, 2017                    Congratulations on passing the test! Thank you for the tips          Log in or register to post comments",7539
Log in to reply,7539
Messages,7543
"12:30 pm February 6, 2017                             Hello,  I would appreciate any pointers on how a freelancer could land his first Scrum Master role.  I am a freelance software engineer who has performed a number of roles building and shipping software over 12+ years. The more I learnt about scrum, the more I've wanted to transition to a scrum master as I found resonance with the philosophy. To this end, I got PSM-I certified with an excellent score hoping to signal my understanding of scrum.  I have tried and failed to get my ex-employers to adopt scrum, and had to contend with using elements of agile in waterfall environments. So while many of my tasks mapped to an SM's responsibility, I never had "" scrum master"" as an official job description. Recruiters don't seem consider me for SM roles as I don't have prior SM experience.Widening my search throughout UK/EU (as a UK citizen) and being willing to take a pay cut to be an intern/junior scrum master haven't helped. Would love to hear thoughts on what I am missing.  Thanks in advance for your time and for any tips.",7543
"06:29 pm February 6, 2017                    It may be necessary to take an ""agile PM"" role in the first instance. That's what I had to do. I carefully documented the shortcomings of such a role in my CV. This analysis opened the door to more credible Scrum Master positions.          Log in or register to post comments",7543
"08:51 am February 7, 2017                     Transforming your current/ex-employer to Scrum may be your first assignment. Don't think that the new employer is going to be easy one, you will face the same challenges so start your journey from wherever you are now.          Log in or register to post comments",7543
"11:27 am February 7, 2017                    Thanks for your thoughts. It's encouraging to see that even veteran agile practitioners started with similar challenges. Not sure if the supply of PMs with scrum master experience is greater than current demand, as I've been told that lack of SM experience is the reason I am not considered for some agile PM roles that have a waterfall/scrum cross over.  btw, I am a big fan of your scrum shack(https://sites.google.com/site/wicmitchell/) - it helped me massively for my PSM-I exams and I've enjoyed your ""Agile Development in practice"" too. Thanks again.           Log in or register to post comments",7543
"11:29 am February 7, 2017                    Thanks for your suggestion. Unfortunately, transforming ex-employers or potential clients is harder than usual since I am freelancer and the remit of my contracts would be to follow my employer's preferred delivery methods. Of course this is something I shall keep in mind.          Log in or register to post comments",7543
Log in to reply,7543
Messages,7542
"05:03 pm February 5, 2017                             Hi all, first post here.  We have a team of 7 developers.  We are responsible for 4 products and associated tools.  All the products are inter related, so it is not possible to divide in smaller teams.  We have 3 product owners, who represent different types of customers, for different products.  Features and bugs are sometimes cross-product, although sometimes the requirement only comes from one PO, so it is not possible to divide into different backlogs or different sprints.  A sprint can contain issues for the 4 different products, requested by the 3 product owners.  I feel that backlog refinement meetings could be more productive, as at some point there is no logic and simple way to decide between priorities.  It is easy to decide if an issue is in the top 20, but not easy to decide if it goes in 14th or 15th place, as it can move another PO's issue down.  Any tips on how to improve this situation? Thanks!",7542
"06:15 pm February 6, 2017                    From your reading of the Scrum Guide:  - how many Product Backlogs do you believe are needed for 4 products?  - how many products can a single team work on per Sprint?  Remember there's nothing to stop a team from working on different products in rotation, as long as they have the skills and each respective Product Owner is in agreement with this practice. Short sprints are typically needed to ensure each product is serviced in a timely manner.          Log in or register to post comments",7542
"08:56 pm February 6, 2017                    Hi Ian,  I understand the idea of short sprints with rotation, but these products involve a lot of hardware, so short sprints don't work, as tests alone can take more than one week, and part of the tests are done by other R&D teams. We don't release often, for some products we only release twice a year, for others, especially bugfixing, we release once a month.  Maintaining separate product backlogs is also not a good option, as the features and bugs overlap too much.  I understand that this is not the typical or optimal situation to use scrum, but in the real world projects are never simple.           Log in or register to post comments",7542
"06:43 am February 7, 2017                    Hi Mike,  why you want to force using SCRUM if it obviously can't work in your case as long you can't change the situation with the PB-issue and multiple POs. I had once some similar situation and by us Kanban was the answer. While SCRUM has some strict rules (without them you won't do SCRUM), the Kanban don't requests to change your development process or roles. There you can have your one backlog with multiple POs, you have the visualization, you can have retrospectives etc. you have in Scrum, but nothing is time-boxed, the cadences are free to change.  Greetings,  Peter          Log in or register to post comments",7542
"09:05 am February 7, 2017                    Who in your organization actually wants to use Scrum in this situation, and why?          Log in or register to post comments",7542
"09:58 am February 7, 2017                     Posted By Mike Melga on 05 Feb 2017 05:03 PM   I feel that backlog refinement meetings could be more productive, as at some point there is no logic and simple way to decide between priorities.    It is easy to decide if an issue is in the top 20, but not easy to decide if it goes in 14th or 15th place, as it can move another PO's issue down.     Any tips on how to improve this situation? Thanks!  Hello Mike,  I would like to quote here something that Ian posted in an earlier post and which helped me a lot. He explained the rationale behind sprint goals.  ""The purpose of framing a sprint goal is to allow a significant risk to be addressed.""    You could try eliciting a sprint goal with all the POs in one session. Try coming jointly to an agreement about the most important and urgent risks to be assessed. Do they all agree on the most significant risks?  If you can come to a consensus, then you have your Sprint goal and thereafter the items that should go into the sprint in order to meet this goal. (In any case, they shoud be able to work together right?)  This should ease one of your problems which is decision-making and prioritizing.    Try using them and let us know how it works out.  One word of caution about the division of teams, I read somewhere that if you have too many small teams, then the number of communication channels explodes and communication becomes time-consuming/less efficient than if you had two teams or one large team.(<9 members).           Log in or register to post comments",7542
Log in to reply,7542
Messages,7533
"02:59 pm February 2, 2017                             It has recently transpired that one element around our team's DoD has not been fully adhered to?  Who's main area of responsibility does this fall under?",7533
"09:27 pm February 2, 2017                    It's the Development Team's responsibility to ensure that their work meets the Definition of Done.  Have a retrospective and find out if this problem was due to necessary but known work being missed in the Sprint Backlog, or whether a new understanding of what ""Done"" means has only just now come to light.          Log in or register to post comments",7533
"03:41 pm February 3, 2017                    Thanks, this is really helpful.           Log in or register to post comments",7533
"08:58 am February 7, 2017                     DoD is used for ensuring Transparency and SM's job is to work with the Scrum Team  for making sure that transparency is maintained.          Log in or register to post comments",7533
"09:42 am February 7, 2017                    Hello All,  As per my understanding of the scrum guide and other sources on the net, the DoD has two parts:  1. Meeting the customer's expectations (basically the acceptance criteria)  2. Meeting with the team's expectations (is the team happy with the implementation of the story?)  Some common DoD for point 2 are Test Coverage, Peer review etc.  You could go further in your analysis and see under which category your element falls.          Log in or register to post comments",7533
Log in to reply,7533
Messages,7536
"04:54 am February 3, 2017                             The application I am working on involves three major workflow:  1. Create message  2. Edit existing message  3. Withdraw message  So, basically we need three buttons on Home screen for above mentioned workflows.  In agile, do we need to mention this requirement in the form of user story only? Can you please give example?",7536
"07:49 pm February 3, 2017                    Remember that in Scrum, you don't *need* to write user stories at all. The Scrum Guide doesn't mention them.  Every Sprint must result in a potentially usable increment of value being delivered. That's where the agility is, not in writing stories. A useful increment might encompass one of the features you mention, or a combination of them, or a sub-flow of one which the Product Owner thinks is valuable.          Log in or register to post comments",7536
"11:42 am February 5, 2017                    So how should I mention my requirement which I have given in first post ?..          Log in or register to post comments",7536
"06:18 pm February 5, 2017                    > So how should I mention my requirement which I have given in first post ?..  From your reading of the Scrum Guide, do you think it might be a good idea to simply mention it in Product Backlog refinement, giving whatever information you have, and then allow the rest of the Scrum Team to provide their input?  Remember that refining Product Backlog items is a collaborative act, and an ongoing one, between the Product Owner who wants the value, and the Development Team who would deliver it. That's the most important thing.          Log in or register to post comments",7536
"05:27 am February 6, 2017                    So you mean Graphical user interfaces such as buttons should be mentioned in product backlog and nowhere else?          Log in or register to post comments",7536
"05:45 am February 6, 2017                    Okay...so after going through few online websites I got that you simply mention the requirements for buttons in prototype or wireframes. No need to mention in any document.  Also, in agile, wireframes or prototype is designed using pencil and paper instead of some tool because agile focuses on collaborative interaction so you expect inputs from client as well as your team. Hence , no time to use software.  Please correct me If I am wrong.          Log in or register to post comments",7536
"11:53 am February 6, 2017                    The approach you have just described is certainly a more agile one than trying to write user stories by yourself.          Log in or register to post comments",7536
"09:12 am February 7, 2017                    Thanks for your guidance.          Log in or register to post comments",7536
Log in to reply,7536
Messages,7531
"07:01 pm February 1, 2017                             What would happen if Donald Trump would introduce a few values like courage, focus, commitment, respect and openness to the management of the american gouvernment?",7531
"09:19 pm February 1, 2017                    The United States of Agile...          Log in or register to post comments",7531
"11:35 pm February 2, 2017                    I believe he will be very strict and precise on Definition of Done!          Log in or register to post comments",7531
"09:05 am February 7, 2017                     ++ for Pankaj :-)          Log in or register to post comments",7531
Log in to reply,7531
Messages,7537
"07:01 am February 3, 2017                             The requirement is : Message creator submits message and then the notification goes to reviewer who reviews the message.  Now, 1st user story is about : Message creator submits message.  2nd user story is about : Reviewer gets the notification  As a Reviewer   I should get a notification when a Message writer submits a message   So that I can review the message   My question is : can we simply avoid second user story and mention the requirement under acceptance criteria of first user story?  For example, one of the acceptance criteria of first user story would be :  If user clicks on “SUBMIT” without filling all the mandatory fields, appropriate message should be shown to user and notification should go to reviewer.  My other question is where should we mention the standard format of notification content ?",7537
"09:01 am February 7, 2017                     It depends on the Size of the story or PBI. Your team should be able to complete it within a Sprint. You can use the Acceptance criteria for notification content.          Log in or register to post comments",7537
Log in to reply,7537
Messages,7477
"05:53 pm January 5, 2017                             My Scrum team does Backlog Refinement once per week as a whole team.  I've seen another team basically volunteer for one story each and refine them individually, document findings, and present back their learnings at a team refinement meeting. I'm not saying this is right or wrong, I just haven't seen it done like this before. I've always thought of this activity as a whole-team activity, or at least with the PO and team member to ensure its conversation focused.  I'm wondering, have you ever used the 2nd approach, or a different approach perhaps? Is the whole team really needed?",7477
"09:46 pm January 5, 2017                    The whole team needs to reach a joint understanding of the work involved, to the point that it can be given a team estimate and potentially planned into a Sprint.  It may be reasonable for individual team members to report back with findings. One or two of them might conduct a spike investigation, for example. That's a common enough scenario.          Log in or register to post comments",7477
"10:29 am January 6, 2017                     I have seen it for doing some investigation but not as a general practice for each PBI.   The ultimate purpose of Refinement meeting is the collaboration between PO and Dev Team for adding more details, estimates and ordering of PBIs.   The entire Scrum team decides How and When to do it.          Log in or register to post comments",7477
"03:40 pm January 10, 2017                    Isolating story for individual will just contaminate the scrum environment eventually leading to failure as individuals will be held responsible for failure of a sprint goal instead of the team working together as a single unit.  It might initially look working for couple of Sprints, but the result cannot be called as Scrum.           Log in or register to post comments",7477
"12:40 pm January 16, 2017                    Even i observed in some scrum teams PBI refinement done with individulas  but it really leads to failure  b'coz only that US developer and PO will be involved   In a scrum frame work , scrum development team is responsible for the US or task not an individual..  but definitively this is not a best practise...          Log in or register to post comments",7477
Log in to reply,7477
Messages,7468
"04:35 am January 4, 2017                             Hi All   I have 2 questions about scrum team, pls share me your knowledge  1. Self-organizing means that teams can choose how best to accomplish their work   Question: Are there any framework/template so that team can base on them to choose the best way to accomplish ?  The reason I ask this is: If the teams are allowed to be free to choose the way to accomplish, there will be some risk:  - They can lack of some steps/activities which have been proved to be necessary by previous projects  - They can not inherit the lesson/practice from previous projects  2. Cross- functional that mean teams have all   competencies needed  to accomplish the work without depending on others not part of the team  Question: Is cross-functional  - on the team (mean: including >1 person; these person have all competencies)  - or on the member ? (mean: one member have all competencies)  Many thanks",7468
"12:40 am January 5, 2017                    Teams may organize into a Scrum Studio which allows experience to be pooled and shared.  All of the competencies for accomplishing a particular team's work must be found in that team. There are distinct advantages in having each team member trained in more than one of those competencies.          Log in or register to post comments",7468
"05:22 am January 9, 2017                     1. Each project is different w.r.t. features, tools, technologies and most importantly the People. We cant assume that if something had worked in Project A is going to work in Project B too. Also it doesn't mean that everyone in an organization should re-invent the wheel. Its upto organization to decide how it would like to share the practices/learnings across different projects.  2. As a team (NOT individual) they should be cross-functional so that they can deliver an Increment every Sprint.          Log in or register to post comments",7468
"04:12 am January 16, 2017                    I understood.  Many thanks          Log in or register to post comments",7468
Log in to reply,7468
Messages,7490
"09:04 am January 12, 2017                             Hello,   I'm currently training for the PSM I Assessment and still have 2 questions left that I can't clarify with the Scrum Guide or Forum:  1) What are the definite criteria for the choice of Product Backlog Items that go into a Sprint Backlog during Sprint Planning and who is accountable (according to the Guide the Dev. Team is accountable for the number only)?   Imagine this virtual Product Backlog:  Order No.    Descr.       Estimate     Value  1                   abc            18                 15  2                   bcd            15                 10  3                   efg              5                   7  4                   ghi             10                  9  ...  The development team assumes to perform 20 'virtual estimate units' in the upcoming sprint.   Are they   a) forced to take items from top of the list until their capacity is reached (i.e. PBI no. 1 only, generating a value of 15)  b) forced to take items that create maximum value (i.e. no. 2 + 3 with a value of 17)  c) free to choose either PBI 1 or PBIs 2 + 3 or even a combination of lower prioritized PBIs?  2) I know only the Development Team members are mandatory at the Daily Scrum and the Scrum Master is optional if needed. But what about the Product Owner or even other Stakeholders? Are they allowed to attend?   Thank you very much in advance!",7490
"04:26 pm January 12, 2017                    HI,  As per Scrum Guide page no 12: The Product Backlog is an ordered list of everything that might be needed in the product and is the single source of requirements for any changes to be made to the product. The Product Owner is responsible for the Product Backlog, including its content, availability, and ordering.  Scrum Guide is a guide not a prescription on criteria for doing it (ex: value, user experience) and left it to product owner to make a decision based on its priority. Again it depends upon the nature and type of individual organization (product based,service based, banking, production industry etc.)  On the second question, noone forces to Dev team as to how much stories they think can delviery within the Sprint. The need to be self organized and should commit to stories they can deliver. PO would negotiate with them and question but cannot forced them to deliver more as long as Dev team can justify why they can't pick up more. With more and more sprints done and if the story points estimated, will give the team idea of their velocity and potential to delivery.           Log in or register to post comments",7490
"04:29 pm January 12, 2017                    Sorry, on the second question, no PO and other stakehodlers should not attend that as it will just be hindrance to Dev team's work. Scrum Master should help to avoid this situation.           Log in or register to post comments",7490
"04:33 pm January 12, 2017                    > ...according to the Guide the Dev. Team is accountable for the number only  No, the Guide says that only the Dev Team can decide the number of items selected. That isn't the same thing. The Guide also says:  ""Only  the  Development  Team  can  assess  what  it  can  accomplish  over  the upcoming  Sprint.""  Therefore no-one can force any work of any type onto the Dev Team at all. They must plan and affirm any forecast of the work they will do to meet the agreed Sprint Goal.  > But what about the Product Owner or even other Stakeholders? Are they  > allowed to attend?   Only Dev Team members may participate in the Daily Scrum. Others cannot attend if that would mean they were participating in some way, even if it was just by exerting some sort of influence.          Log in or register to post comments",7490
"04:47 pm January 13, 2017                    Ian,  do you suggest that Product Owner's presence on Daily Scrum is already a participation, even though he is not allowed to speak?   Seems reasonable and at the same time would be pretty hard to measure and to prove that it's the case, imho, even when team would claim that 'it's ok'.          Log in or register to post comments",7490
"05:03 pm January 13, 2017                    Ultimately it comes down to the Development Team. If they want a non-team member at their Scrum, then they are overriding a Scrum practice. This must be made clear. And if they insist ""it's OK"" to their Scrum Master when it really isn't, then there's a problem of openness and trust that needs solving first.          Log in or register to post comments",7490
"05:28 pm January 13, 2017                    By ""it's OK"" I didn't mean the lack of trust. Rather lack of understanding that it changes the team dynamic like for example trying to please PO in some way.  To make it clear - you primarily coach your Scrum Teams to use Daily Scrum only for Development Team and Product Owner can't be present?          Log in or register to post comments",7490
"05:40 pm January 13, 2017                    I coach that the Product Owner *shouldn't* be present if he or she isn't also a Dev Team member, because there is a strong possibility that this would amount to participation, however subtle.          Log in or register to post comments",7490
"10:13 am January 14, 2017                    Makes sense, thanks.          Log in or register to post comments",7490
Log in to reply,7490
Messages,7494
"07:50 am January 13, 2017                             Hi,  I'm in a scrum team of 6 people with the role of SM and developer, since 2 year.  The team did not start with Scrum, 4 people (included me) worked togheter since many years.  We worked remotely, with just few live meeting for year.  Thinking to my evolution of scrum master, using the meter of this article   http://roneringa.com/evolution-scrum-master/  I'm at stage of Organizer.  I think that is very hard to act as coach working remotley. I tryed but I am not satisfied of the results.  Anyone have similar experiences?  Di Perna Francesco  Scrum Master & Developer",7494
Log in to reply,7494
Messages,7448
"09:50 am December 16, 2016                             Hi scrum.org community!  This is my first post of hopefully many more I'll share with this fantastic group of people! Send you all my best regards!!   Im planning to take the PSM 1 on December 24 of this month (Christmas eve!!!). I've been studying for about 4 months already accelerating rhythm this last month. (excitement growing uncontrollably!!!!! ha) -> see the gif for graphical description.  http://imgur.com/r/SuperShibe/CuVsQty         (>_<)m  How im preparing for the examination:  - I started by reading Essential Scrum by Ken Rubin since 4 months ago. (first very slowly and now I go up and down through the book like crazy!!)  The book is great ! anybody have thoughts on this book?  - Reading the scrum Guide several times. (don't know how many already)  - Taking the open assessment every day in the last 2 weeks and now im scoring 100% every time.  - Taking the free online test by Mikhail Lapshin. Now Im scoring 96% (still missing some questions)  - Reading the Scrum Master Training Manual by mplaza  - And from today ! posting here in the forum!!   This weekend Im planning to review the Scrum Guide word by word by expanding every meaning on the book. Also Im planning to read thoughtfully the Sprint planning chapter of the book (burndown charts, sprint backlog, etc).    Im also planning to study the Nexus Guide and take the PO open and Dev open assessments.   I would really appreciate on any piece of advice and encouragement words are more than welcome!   See you around, good people!",7448
"08:41 am December 21, 2016                    Hi you,  my hint: do the open assessments for POs and Developers too until you sore 100% in every time. This helps to understand the other parts of Scrum-Team.   Sincerly   Willy          Log in or register to post comments",7448
"09:46 am December 22, 2016                    This is my experience after failing my first exam. Maybe im a slow learner but got some additional advices to add.  I think the open assessment and Mikhail exam only covers about 70% about what the real exam mentions. There are some situations and details that is never even brought up in the Scrum Guide. Therefor I advice you to do some mock exams, they will provide you with some situations you didn't even think about before. Also, as somebody else mentioned on another post, it is great to reflect on the wrong answers and WHY they are wrong. In that way it doesn't become only a memory test.          Log in or register to post comments",7448
"11:00 am December 22, 2016                    Thank you Willy.   I'll make rounds of PO open assessment after reviewing some more detailed literature about the product owner role.    Thank you for the advice ;)  Do you have any thoughts about scaling scrum and the nexus guide?  Regards          Log in or register to post comments",7448
"02:49 am December 23, 2016                    Thank you for the advice Magnus.  Is good to know from your experience about the open assessments.   Did you pass the certification already? I wish you you good luck next time. ;)  Im also reading a book titled Essential scrum by Ken Rubin. I think is a great book that explains further many concepts from the scrum guide without much deviation. I recommend it.   Today im reviewing the PO chapter and Sprint planning chapter as well from the book. Also reading the scrum guide one more time and also the Nexus guide.    Don't know if is going to be effective yet but tomorrow morning (Dec 24) Im planning my first try after a good sleep night and some open assessments tries.            Log in or register to post comments",7448
"10:53 am December 23, 2016                    Hi All,  Just cleared PSM1 with 92.5% few minutes back. Thank you forum for the guidance.          Log in or register to post comments",7448
"12:43 am December 26, 2016                    Congratulations Chayan!!   How did you prepare for the test?  I couldn't take the PSM1 test this weekend due to some problems with my credit card on my side. I'll postpone it until the first week of January. I'm going to review some subjects more deeply during new year's holiday.            Log in or register to post comments",7448
"10:56 am December 26, 2016                    Vinicio Anthone,  You pass?           Log in or register to post comments",7448
"07:07 am December 29, 2016                    I believe the best preparation tips I can give is read and try to comprehend the scrum guide and mix that with your real life experience. The actual exam questions were quite tricky and not as straight forward as Open assessment or  MLapshin quiz ( helpful though).   All the best !!          Log in or register to post comments",7448
"01:16 pm January 8, 2017                    Hello all!   I would like to share with you that today I passed the PSM 1 with 95%. It was very challenging.   I was surprised mostly by questions regarding cross-functional teams. Also about scrum values!!! (nobody mention this in the forums) there were like two questions regarding scrum values.  My recommendation is to study deeply about the scrum roles also to read the questions posted here in the forum.  Cheers and good luck!          Log in or register to post comments",7448
"07:07 am January 13, 2017                    Yes, Scrum values are latest addition to scrum guide in 2016          Log in or register to post comments",7448
Log in to reply,7448
Messages,7483
"12:08 pm January 8, 2017                             We have a large project with an existing user base that we can't loose as its our main financing source.  However the project has no sound engineering base and it grew with a ""add-a-mini-feature-here-please"" logic over the years.  We managed to get some small funding, some personal investment and keep going.  Now it's obvious to me (as CTO) that this is not enough anymore.  We reached this year the right size for ""scrumming"" and I immediately involved all developer and management in Agile and SCRUM methodology through external training.  However it's still very clear to me we are too few developers for the project at hand. Maybe, but maybe, with a better engineering  the project would be more manageable but we have a lot of external dependencies (third party integrations), a lot of graphical  and UX development on which we are not very skilled, lot of testing (mainly UX testing, not easy), no testing automation at all.  Even so, main reason we are struggling is with sales, actual and potential customers are not complaining a lot for bugs or old fashioned graphic.  The spectre of refactoring or rewriting is lingering over us.  New customers must be set up at the same time and wishes for new requests must be fulfilled.  Apart from running away as soon as possible, what would you suggest to me as CTO, now beginner scrum master?  We are trying hard to find more funding, but probably marketing and sales will take a big part (and it would be correct as we almost spent anything for marketing)",7483
"01:38 pm January 8, 2017                    It sounds like you need to work with marketing and validate an MVP for pivoting to a new architecture or platform. The Lean Startup by Eric Ries is a good source of ideas.          Log in or register to post comments",7483
"09:32 pm January 8, 2017                    If I understand correctly, your company has a Commercial Off the shelf product that has been tailored for several clients. The main focus has been on working on the tailoring and little focus has been given to your Base Commercial product. Your team  is small (even smaller in the past).  The Commercial product has now become more or less 'out of fashion' (e.g. Graphics, platform etc) and finding new customers is therefor difficult.  Your existing clients are pressuring for an updated version of their package as well. Your responsibility in it all is to:  1. bring the commercial product up to date.  2. bring every tailored version up to date.  3. get rid of the backlog for the commercial product.  4. get rid of the backlogs for the existing clients  5. be able to tailor the commercial product for any new clients.  Monumental task with a small team strapped for cash...          Log in or register to post comments",7483
"03:57 am January 9, 2017                     I won't recommend to go for a big bang re-architecture approach. I believe the Emergent Architecture concept can work in your case too.   1. Identify what all needs to be re-written  2. Estimate them  3. Work with Marketing, Sales and other departments to share the Cost vs Benefit  4. Prioritize the re-architecture work along with the new features and new customer on-boarding  5. Pick up one small item at a time, preferably an End-To-End piece           Log in or register to post comments",7483
"04:33 pm January 9, 2017                    Hi Marco,  I agree with Ian here, although he hasn't taken a lot of time explaining you the details.  You are undergoing the typical product replacement or transformation challenge which any organization undergoes as sales and marketing does not realize the potential damage the outdated product can cost. It may look working all ok at the moment but is not up to where the market is and soon might not be fit for purpose (look how we are evolved from the world of DOS to Desktop and to Mobile Apps fairly quickly).  You stated, 'actual and potential customers are not complaining a lot for bugs or old fashioned graphic' and they may not until you ask them specifically or they may not even bother complaining, until you realize they already left you.  So the trick is to convince the sponsor how badly the existing product is engineered (might have done years back) and what advantages the new one will bring by transforming to new standards, what's current pace of delivery and what will be the new pace, what flexibility it would offer etc. etc.  Once MVP is agreed, best is to pilot with few selected user-base and key is to get feedback, inspect and adapt the PB. This would also mean, you will have to run both old and new product in parallel for certain time, the situation which you cannot avoid but it will lower down the risks significantly compared to big bang approach.  Initial funding could be only for MVP and Pilot - you can control it by keeping the scope really to MVP as the name suggests.  Let us know how you get on.  Pankaj           Log in or register to post comments",7483
"09:15 pm January 11, 2017                    yes...nice summary of the situation...the point is to estimate in some way this Monumental task...and get funding          Log in or register to post comments",7483
"09:23 pm January 11, 2017                    @Pankaj & @Ian  I like the concept of potential damage and cost, marketing & business will understand it.  I would love to convince the sponsor about how bad is engineered the product because it happens to be true, but ehm I should find another language to express it, since I engineered it myself...  It's not really a matter of pride, context was different, scope was not clear etc, bla bla, it's probably a matter of trust...  I could I tell the CEO that the software he founded for many year is so bad that needs to be rewritten completely and that I would like to do it AGAIN...  But yes the approach you describe seems to me the best one....          Log in or register to post comments",7483
"04:38 pm January 12, 2017                    Yes @Marco, good luck with the right wording. Words like toxic and 'unfit for future' are usual ones used these days. What was done in past was fit for that time.  Cheers          Log in or register to post comments",7483
"12:16 am January 13, 2017                    In a more Marketing Language:  You're running a Hotel and the bathrooms, decor and furniture are outdated. Next door a new Hotel has opened which is modern and is taking a lot of your potential guests.  You decide to renovate. You have the following choices:  1. close the hotel for some time and renovate all rooms. Have a grand opening event after.  2. renovate room by room. Market the new rooms and let new guests stay in the renovated rooms. All new rooms can have slightly different furniture and wallpaper.  It all has to happen with minimal disturbance to the existing guests, some of them are long-term residents...  How would your Marketing division handle this situation...?           Log in or register to post comments",7483
Log in to reply,7483
Messages,7488
"10:27 am January 11, 2017                             Hi,   I'm wondering what your take is on editing sprint points during sprints?   Let's say a developer notices that a story is harder than we thought - do you up the sprint points for that story or keep the same?   Any pros/cons on this?  Thanks,  A",7488
"03:19 pm January 11, 2017                    I teach my teams that they cannot change any estimates (user story points or timed tasks). It needs to be noted and discussed at the retrospective.They need to learn from their mistake, live with it for the sprint but make sure that they do their investigation much better next time.          Log in or register to post comments",7488
"03:49 pm January 11, 2017                    A team should always update their estimates in order to accurately reflect the work that is believed to remain. Transparency is needed over this.  There's nothing to stop a team from keeping a history of estimates for retrospective purposes. Electronic tools may support this to a greater or lesser degree. I coach teams with physical boards to put a line through an estimate and simply write the amended one next to it.          Log in or register to post comments",7488
"07:13 pm January 11, 2017                    Ian,  does your approach mean, that at the end of the sprint all completed stories should have 0 SP assigned?          Log in or register to post comments",7488
"08:05 pm January 11, 2017                    In theory, yes. A scrum board should always tell the truth.  In practice team members should update estimates as often as the data will actually be needed. Typically, this means that the estimates of work remaining should be in an accurate state for the Daily Scrum and/or for when relevant metrics such as a task burndown are generated.          Log in or register to post comments",7488
"11:33 pm January 11, 2017                    But Ian, then why estimate in the first place?   We may as well increase or decrease the points when we get to the tasks to get the latest info.. Also some days things may feel harder than on other days.   I think for my processes I'll go with the no-reestimation way unless there are really good reasons to reestimate mid-sprint (something happens that affects difficulty of all stories globally, or someone who would've made a story easy got sick and now it's very hard).. Maybe.   The purpose of burndown and points is to get things done and help motivation.. Probably reestimating will dilute the value of the process of estimation in the long run.   Thanks for the answers, looking forward to read more on this.          Log in or register to post comments",7488
"09:43 am January 12, 2017                    That's actually an interesting idea. I see some downsides, though. The distance between story points may be too great to indicate daily progress (reduces transparency). The other issue, I guess, would be creating too strong relation between Story Points and time.  It is probably why the task-level tracking is more popular way to indicate the remaining work. Especially if team follows the rule that tasks should be less-than-a-day of effort.          Log in or register to post comments",7488
"10:21 am January 12, 2017                    Has anyone used JIRA to do task-level tracking?   The only way I found to do that was by using sub-tasks and this doesn't work with burndown charts either.   The burndown chart is only useful if it's used as a daily information radiator - it's kind of useless if only reviewed at the end of the sprint, seeing a drop from ""100 to 0"" on the last day.   In agile, a story is only ""done"" when it's ""done"" according to DoD, so technically subtasks shouldn't reduce the burndown chart. The way it's implemented in JIRA makes sense - so...   Do you call JIRA stories epics and call JIRA stories as technical tasks and make them 1 point each or something?   What's your take on this?          Log in or register to post comments",7488
"12:49 pm January 12, 2017                    Ian, Bartek, this is interesting conversation. So you estimate the story point for a particular story at the start and then track the remaining work in terms of hours or days. Is that correct? I understand story point helps you to determine velocity of your team, but do you actually revise your story points during the Sprint or the best is to keep it as it is but stick to revising the remaining work on daily basis. In that case what is your conclusion for the unfinished story in terms of its story point estimates?           Log in or register to post comments",7488
"04:46 pm January 12, 2017                    A team should have transparency over the estimated total amount of work planned for the entire Sprint, and the estimated amount remaining at any given point. Both measures are subject to revision and ought to be kept up to date and accurate.   It's no more complicated than that. It doesn't matter whether the estimates are in story points, task hours, or something else entirely.           Log in or register to post comments",7488
"05:20 pm January 12, 2017                    Right. So if lets say the team does the estimates in story points, will tell the remaining amoung of work for the whole sprint in terms of story point, but not for each story. Right?          Log in or register to post comments",7488
"05:44 pm January 12, 2017                    They could do it that way, as long as they have an up-to-date view of the total work forecast in the Sprint and the total estimated work remaining. It may be easiest to estimate pieces of work individually first, but if a team prefers to estimate a body of work in aggregate then they are perfectly free to do so. Scrum makes no prescription about how they obtain such measures.          Log in or register to post comments",7488
"10:34 pm January 12, 2017                    Perfect, cheers Ian          Log in or register to post comments",7488
Log in to reply,7488
Messages,7489
"05:25 am January 12, 2017                             Hi Guys,   just want to know if in PSM1 certification Planning techniques, XP, Lean and other methodologie's questions are also asked.  Regards and very nice day to you all.  Tehzeeb",7489
"04:32 pm January 12, 2017                    No, it is limited to the topics covered in Scrum guide only. You might want to read some additional related material and practice tests to ensure your knowledge is comprehensive on the subject, but there is no additional scope like XP or Lean etc..           Log in or register to post comments",7489
Log in to reply,7489
Messages,7486
"09:38 am January 10, 2017                             Currently, we have Performance, Test Data management working as a Horizontal team, helping projects with the required test data requests.  Now with organization adopting Agile, how does the horizontal team get aligned to Agile, in terms of Sprints?",7486
"06:30 pm January 10, 2017                    Do you have reason to believe it would align at all? How would a ""horizontal team"" develop a useful, feature complete, integrated, and potentially releasable increment? Would they have the necessary range of skills to do so?          Log in or register to post comments",7486
"02:31 am January 11, 2017                     It depends :-)  Is Performance testing part of your DoD? Do you need the test data for making your Increment potentially releasable?  I can think of two options -  1. Members of Performance, Test Data management team should become part of individual Scrum team and they should work along with their Dev Team members for completing all performance and test data work every Sprint.  2. Keep them out of Scrum and they should get into action whenever they receive a request from a Scrum team.          Log in or register to post comments",7486
"04:43 am January 11, 2017                    I agree. The point is that with Organizations moving towards Agile, how will the horizontal teams get aligned with them - being a part of Sprints, How they would handle the requests received from Sprints and so on.          Log in or register to post comments",7486
"03:54 pm January 12, 2017                     The member of horizontal team who is assigned to Scrum team will need to attend all Scrum events and commit to the story assigned to him/her during Sprint Planning. He need not be full time member dedicated to that project scrum team and can be part of multiple project scrum teams, but it is important that he commits to the stories and work closely with the team in order to meet the sprint goal.           Log in or register to post comments",7486
Log in to reply,7486
Messages,7482
"08:22 am January 8, 2017                             Hi Scrum Masters,  I need some help to clarify some topics in the Scrum Guide  Sprint Planning  	- Why the Sprint Goal is defined after DT finishes the forecast for PBI? Would it be better if the Sprint Goal is defined prior to selecting the PBI to be delivered in the Sprint?  	- On page 9 of the guide, it states that ""Work planned for the first days of the Sprint by the DT is decomposed by the end of this meeting, often to units of one day or less""? Does this mean that beyond the first days, the work becomes longer or harder in more than a day? Does it mean that easy PBI being worked on first before the harder ones?  	- What is the difference between the Sprint Goal and objective set by PO during Topic One?  Daily Scrum  	- Is it mandatory for SM to attend the Daily Scrum? Can he/she attends only if there are impediments that will be highlighted by DT?  	- Does DT need to use yesterday Sprint Backlog as input to the meeting?  	- Does the output of the meeting require updating the Sprint Backlog, to mark those completed items and log the identified impediments?  Sprint Review  	- In this event, you will need both PB and SB isn't? The expected output will be a revised PB to indicate the probable PBI for the next sprint?  	- Is there a rule when a Sprint Review must take place in relation to production release?  Sprint Retrospective  	- What are the responsibilities of the PO in this event?  	- Where do you ""create a plan for improvements to be enacted during the next Sprint""? Is this broken down as PBI and added to the PB?  Scrum Artifacts  	- At which event does the Product Backlog is created?  	- In the Sprint Backlog, does DT need to indicate the estimate of each task for all selected PBIs?          - Can I say that the Increment is not a document but rather a product version that can be released to production?",7482
"03:43 am January 10, 2017                     Do you mind posting your questions in the following forum as a separate post per question?  https://www.scrum.org/Forums/aff/1          Log in or register to post comments",7482
"11:55 pm January 11, 2017                    On page 9 of the guide, it states that ""Work planned for the first days of the Sprint by the DT is decomposed by the end of this meeting, often to units of one day or less""? Does this mean that beyond the first days, the work becomes longer or harder in more than a day? Does it mean that easy PBI being worked on first before the harder ones?    'Decomposed' is the key word there. You don't have to decompose all the items in the sprint backlog during the sprint planning. However, when you decompose the items, it is ideal to keep it to 'units of one day or less'  - What is the difference between the Sprint Goal and objective set by PO during Topic One?   You might not be able to achieve the objective set by the PO in a single sprint.  Daily Scrum   - Is it mandatory for SM to attend the Daily Scrum? Can he/she attends only if there are impediments that will be highlighted by DT? - No. Only the development team needs to attend the Daily Scrum. However, it is the Scrum Master's responsibility to make sure that the development team knows how to do the Daily Scrum and keep it under 15 minute. As long as there is proper communication between the development team and the Scrum Master, it is not mandatory for the Scrum Master to attend the Daily Scrum. Now that being said, personally, I would encourage the Scrum Master to attend the Daily Scrum  - Does DT need to use yesterday Sprint Backlog as input to the meeting? - Development teams do Daily Scrums at different times (especially if the development team is across different time zones). 'Yesterday' is defined by the last time you had the daily scrum.  - Does the output of the meeting require updating the Sprint Backlog, to mark those completed items and log the identified impediments? - This should be done throughout the Sprint. No need to wait till the daily scrum. Daily Scrum is a place to communicate the progress and impediments.  Sprint Review   - In this event, you will need both PB and SB isn't? The expected output will be a revised PB to indicate the probable PBI for the next sprint?   - Is there a rule when a Sprint Review must take place in relation to production release? - No. A Sprint Review is held at the end of the Sprint. A product release is done whenever the Product Owner decides to do it.  Sprint Retrospective   - What are the responsibilities of the PO in this event? - participate & learn from experience  - Where do you ""create a plan for improvements to be enacted during the next Sprint""? Is this broken down as PBI and added to the PB?   Scrum Artifacts   - At which event does the Product Backlog is created? - 'Product Backlog is a living artifact'. It is not created during a specific event  - In the Sprint Backlog, does DT need to indicate the estimate of each task for all selected PBIs? - It is not a rule for Scrum.  - Can I say that the Increment is not a document but rather a product version that can be released to production? - An Increment is very clearly defined in the Scrum Guide - http://scrumguides.org/scrum-guide.html#artifacts-increment          Log in or register to post comments",7482
Log in to reply,7482
Messages,7485
"06:53 pm January 9, 2017                             Hi,  In the software we develop, our clients have the ultimate say whether something is accepted or not (""done"" or not).  Imagine having a distant PO that doesn't do anything but accept and reject user stories. If the PO doesn't accept it, it needs to be reworked. Hence it doesn't make much sense to consider something ""done"" unless accepted by the PO.  So we're considering putting client acceptance as part of our DoD.   But burndown charts won't work with this definition of DoD since all stories will be considered ""done"" at one point in time during the sprint: when the PO reviews the product. Most likely during a review meeting.   There's only one definition of done and the burndown chart should reflect how stories are ""done"" throughout the sprint. So if client acceptance is part of the DoD, then the burndown chart will be useless and a daily sanity-check tool is lost.  How do you deal with this scenario in Scrum? I see two options:  1) Remove client acceptance from the DoD.   2) Remove the burndown chart as an information radiator for the project.  Option 1):  Things we mark as ""done"" will either have to be re-opened or new, similar stories created.  Option 2): We miss out on an important daily info input.  I'd prefer option 1) to 2).  Now that I wrote it down, the real problem we're having is probably this: Stories are not defined well enough. If stories are defined well enough and acceptance criteria are matching the real needs of the client, then the only time we would see a story ""not being accepted"" is if the client changed their mind. In this case, new stories are exactly what should be created.  Anyway.. Anyone had a similar problem and want to share some thoughts?  Thanks  A",7485
"02:58 am January 10, 2017                     I see a different problem here - missing Collaboration between the Dev Team and PO. The role of PO is not accepting/rejecting the Increment, he should work with the Dev Team daily throughout the Sprint, whenever required. Remember the Agile principle# 4 - ""Business people and developers must work together daily throughout the project""  The worst thing for a PO/Dev Team is gettint surprises during the Sprint Review.  Burndown charts may be optional but including acceptance by PO in DoD make sense to me.          Log in or register to post comments",7485
"06:14 am January 10, 2017                    @Andreas, ideally the Product owner represents the customer, he is the one who understands the customer needs and work with dev team to get it done. The PO is responsible to accept the user stories.   Coming to the definition of done - If your client feedback is one of the item in DOD, then you must include the customer in Sprint review meeting, otherwise remove the client feedback from DOD. Sprint goal is only met when DOD met, otherwise no.            Log in or register to post comments",7485
"06:26 am January 10, 2017                    The Development Team should have all of the skills necessary for producing a Done increment. Any estimates they produce should take inro account all work needed to meet the DoD.  If the PO is not a membee of the Development Team, is it then reasonable for the team to use a DoD which is dependent upon his or her approval? How can they commit to a level of Done which is not fully under their control, or estimate the work that will be needed?          Log in or register to post comments",7485
"08:58 am January 10, 2017                    You seems to know the root cause of the issue as you said 'Stories are not defined well enough.'.  The Dev team in this case should raise it to PO before committing to deliver, as this is not happening there is a gap between what they think is done but rejected by PO.  If small portion of stories are rejected, should be ok to refine and putback to PB for subsequent sprint, but if it is happening for most, then a serious issue and POO should consider rewriting it. Scrum master plays key role of facilitating and coaching PO how stories needs to be written and the Dev team can support by stating the level of details required.  Also, PB grooming sessions plays key role wherein po and dev team collaborate to ensure it is looking goid.  Regards  Pankaj           Log in or register to post comments",7485
"11:13 am January 10, 2017                    Do you have a PO for your team? If so, then they need to work harder and closer with the client to understand the requirements.  If not, then maybe you need one - or..... more radically, ask the client to provide a PO for your team.  Scrum is about collaborative working... throw the ball back in their court maybe...           Log in or register to post comments",7485
"09:11 am January 11, 2017                     Posted By Ian Mitchell on 10 Jan 2017 06:26 AM  The Development Team should have all of the skills necessary for producing a Done increment. Any estimates they produce should take inro account all work needed to meet the DoD.    If the PO is not a membee of the Development Team, is it then reasonable for the team to use a DoD which is dependent upon his or her approval? How can they commit to a level of Done which is not fully under their control, or estimate the work that will be needed?  Hi Ian, could you elaborate on this?   I'm not sure what you're implying.  One of our team's DoD's has the item 'A story is Done if it has been demonstrated to the PO' and the 'A story is Done if it has been reviewed by the PO'.  We don't specifically call for 'approval' but it's implied in some capacity.           Log in or register to post comments",7485
"03:34 pm January 11, 2017                    @Andreas Is the client acceptance process telling you whether the client likes the delivered functionality or is it to do with quality or delivering according to specs?  DoD is one thing and internal to the team. If users will actually love the features delivered is something different.  I've read some discussions (cannot find source) where different levels of done was discussed e.g.  1. Done - Done according to the teams DoD, e.g coded, checked in, accepted by PO etc.  2. Done Done - Done and delivered to users.  3. Done Done Done - Done, delivered to users and feedback gathered.  You need to get to step 3, often it stops at 2.          Log in or register to post comments",7485
"03:38 pm January 11, 2017                    The Development Team are the ones doing the work to meet the DoD. By definition the PO is *not* doing any of that work unless he or she is also a Development Team member.  Therefore if PO approval is in the DoD, and the PO isn't a Development Team member, then not all of the work that has to be done is under the Development Team's control. It then becomes difficult for that team to forecast work for completion or to commit to a goal.          Log in or register to post comments",7485
"11:46 pm January 11, 2017                     Posted By Alex Crosby on 11 Jan 2017 09:11 AM   One of our team's DoD's has the item 'A story is Done if it has been demonstrated to the PO' and the 'A story is Done if it has been reviewed by the PO'.  We don't specifically call for 'approval' but it's implied in some capacity.   I like this.   The points above saying that if PO is not part of dev team, acceptance by PO can't be part of DoD - ask for PO etc. Makes sense.   In this case, I think I am the PO.  I'm also the scrum master. I think I read a post about why project managers don't work in Agile - guess this is why.   It's hard to respect scrum rules, and if I do I and put down the effort to maintain it, I don't have time to do the PO work properly (which is like business analyst work IMO).   So this question stems from: ""Hey, I don't have time to be a good PO, so I delegate basic acceptance to my stakeholders and pretend we don't have a PO. What do I do without a PO?""   Probably solution here is to outsource scrum master roles to devs in the team. Or at least part of what a scrum master does..          Log in or register to post comments",7485
Log in to reply,7485
Messages,7480
"07:05 am January 7, 2017                             With most enterprises adopting Agile, how does the horizontal testing functions like Automation, performance, Test Data Management get aligned to the two week Sprint?  Example: In some cases, the Test Data itself could take a day or two with limited environment availability.",7480
"02:51 am January 10, 2017                     The only expected output from a Sprint is Potentially Releasable Increment so list down the activities required to make your software releasable every Sprint and decide your Sprint length accordingly, should not be more than 30 days.  Also find out what is stopping you from releasing your software every Sprint and work on removing those impediments.          Log in or register to post comments",7480
"06:07 am January 10, 2017                    Your testing functions like Automation all should be discussed in Sprint planning, it will go as an Item in Sprint, which will be estimated and worked on. Testing could be one of the item in Definition of done to complete a User story/task.            Log in or register to post comments",7480
"12:34 pm January 10, 2017                    This may sound obvious, but as the potentially releasable product is expected at the end of the Sprint, the options are limited - so either cut-short on your test scripts to choose most important ones first which can be done within 2 weeks  OR increase your sprint duration to max 4 weeks.   In my experience, many projects do not necessarily deploy at the end of each sprint, but by running the sprints keep the things tidy until a point comes where you decide its the time to now go live.  Pankaj           Log in or register to post comments",7480
"06:38 pm January 10, 2017                    > With most enterprises adopting Agile, how does the horizontal  > testing functions like Automation, performance, Test  > Data Management get aligned to the two week Sprint?   Example: In some cases, the Test Data itself could take a day  > or two with limited environment availability.  Can you clarify the issue here? Why would a couple of days work on certain tasks needed for a Done increment cause an problem?          Log in or register to post comments",7480
"04:41 am January 11, 2017                    Thank you for the response.  The problem is that, we have a Horizontal team accpeting the requests from all the applications, working on them and delivering it. With Organization focus towards Agile, how does the Horizontal teams fit in Agile? How will they operate in an Agile mode? Can they still continue being Horizontal?          Log in or register to post comments",7480
"06:03 pm January 11, 2017                    The best strategy is to form feature teams, each of which has the skills to complete a vertical slice of integrated and usable functionality.  That is how MVP increments are typically framed and delivered. Deferring delivery until horizontal slices are integrated is a difficult thing to reconcile with agile practice.          Log in or register to post comments",7480
Log in to reply,7480
Messages,7371
"11:23 am October 13, 2016                             Should the PO look at software dependancy while ordering the PBI items?  He can look at any dependancies between PBI, I understand. But should he look at software dependancy while ordering the PBI?",7371
"01:33 pm October 13, 2016                    Yes, this is likely something that they would discuss with the development team during refinement activities as it is something that they need to understand to be able to make appropriate decisions on the order of work.   If they didn't do this, there would be little value in ordering the backlog if the pattern for execution could never practically match it. Think about the impact that this would have on transparency, particularly to stakeholders. It would also create havoc during Sprint Planning sessions and the Sprints themselves when these impediments might otherwise come to light.          Log in or register to post comments",7371
"01:43 pm October 13, 2016                    The PSPO certificate guide from Musthafa Mohammed Soukath Ali says like this. Hence I the question.  'PO may consider dependancies between pbl, but not the software dependancies on the tools that DT uses.'          Log in or register to post comments",7371
"01:46 pm October 13, 2016                    Muthu,  The bright side of responding to your questions Muthu is that I get to practice patience, which is a key (but often overlooked) quality for Scrum Masters to have.  Once again, this forum is dedicated specifically to certification and Scrum.Org questions.  Per the forum description:  ""Discuss issues relating to Scrum.org including assessments, programs, classes, and any other aspect of the organization.""  There is another forum at Scrum.org where questions about Scrum can be posed:  https:// /Forums/aff/1     ""Discuss all aspects of using and practicing Scrum. Search existing threads to scaffold your studies, and post replies to share your insight and knowledge.""  It doesn't matter if you are studying for your PSPO and have questions regarding Product Owner behavior/responsibility.   Questions about the practice of Scrum are intended for the other forum.  I tell you this because, while you may get a response to your questions in this forum, there is a much greater likelihood of getting replies to your inquiries in the other forum.   It also ""unclutters"" the two forums, supporting each forum's purpose and creating ""focus"" (a Scrum value).  That would be my suggestion, instead of duplicating the same question from several days ago in this forum because you got zero replies.           Log in or register to post comments",7371
"07:12 pm October 13, 2016                    I get it now. thanks Timothy. I will post in other forum.          Log in or register to post comments",7371
"03:58 pm January 10, 2017                    Hi Muthu,  This is not relevant to your question.   I am trying to purchase PSPO guide by Shoukath but am unable to do so in Amazon or Smashwords.  Would you be kind to advise as I quickly want to learn and get PSPO certified.  Thank you,  Regards,  Javed          Log in or register to post comments",7371
Log in to reply,7371
Messages,7466
"10:50 pm January 3, 2017                             Hi  I am new to this forum and Agile Process. I have a doubt in Agile Practice which would like to ask. which is as below-  First of all Scrum product backlog is created by product owner then items are picked from that and moved to sprint backlog during sprint planning and then sprint start.  Id this a correct sequence?  Scrum Product Backlog---> Sprint Backlog---> Sprint Starts.................???????  and if some items are not completed in  current sprint then those items are moved to Sprint Backlog again?  Thanks & Regards  Vivek Gupta",7466
"11:19 pm January 3, 2017                    The Sprint starts just before Sprint Planning, which is the very first event to be held in the Sprint. You could however say that development starts immediately after Sprint Planning.  Items not completed during a Sprint ought to be re-estimated on the Product Backlog so that it accurately reflects the work that is believed to remain.          Log in or register to post comments",7466
"03:47 am January 4, 2017                    It is worth mentioning that the Product Backlog doesn't have to be completely finished before starting a sprint. Product backlog is living document. Also, sprint backlog can also be changed during the sprint.          Log in or register to post comments",7466
"05:50 am January 4, 2017                     If incomplete items goes back to Product Backlog then what is the role of sprint backlog?  When does sprint backlog comes in picture of Scrum cycle?          Log in or register to post comments",7466
"12:23 am January 5, 2017                    > If incomplete items goes back to Product Backlog then what is the role of sprint backlog?  >  > When does sprint backlog comes in picture of Scrum cycle?  Based on your reading of the Scrum Guide, what do you think a Sprint Backlog is for?          Log in or register to post comments",7466
"11:19 pm January 8, 2017                    As per my understanding, Sprint Backlog contains all tasks to be completed in the current Sprint.  If for any reason, story does complete in the spirint then it will move back to product backlog for reestimation/replanning.  And current sprint finishes.          Log in or register to post comments",7466
"06:33 am January 10, 2017                    Do you think that the Sprint Goal might be related to the Sprint Backlog, and give it purpose?          Log in or register to post comments",7466
"02:50 pm January 10, 2017                     During every sprint Development team pick the top items (priority items) from Product Backlog .   Sprint backlog is the refined Product Backlog item articulated by the Development team. During Sprint planning Sprint backlog is defined but it gets refined during the sprint.  Sprint backlog includes every single task which development team has to perform til the end of sprint. As and when requirements/ changes are understood Sprint backlog would be added with more engineering tasks (regression test scenario, database update etc.)    In short Sprint Backlog belongs to development team and they have the complete ownership of adding/removing tasks into it after negotiation with Product owner.          Log in or register to post comments",7466
"03:01 pm January 10, 2017                    Sprint Backlog is the plan of development team for one complete sprint. It will have all engineering tasks refined to a day or hours (hours is the best measure).  Every day Development team inspects their progress towards sprint goal in Daily Scrum. During this team inspects & adapts the Sprint backlog (which is the plan of team). So everyday Sprint backlog gets modified.  During end of the sprint, Sprint review is held in which Development team demonstrate the product backlog items developed and gets the feedback from Stakeholders & Product owner. Depending on the feedback, Product backlog would be added with new items.  Unfinished items at the sprint review are re-estimated and added back to product backlog.          Log in or register to post comments",7466
Log in to reply,7466
Messages,7473
"10:18 pm January 4, 2017                             Hi,  I'm in search of some clarification of the Nexus guide, with regard to product owner(s) and the responsibilities of the development team. I'm confused about two sources, the Nexus guide, and the recommended reading of the book ""Scrum, a smart travel companion"",  with regard to the configuration of multiple scrum teams.   QUOTE 1: ""a nexus works off a single product backlog, and as describe in the Scrum framework, a Product Backlog has a single Product Owner who has the final say on its contents.... The product owner is in the nexus integration team."" -- nexus guide, page 5.  QUOTE 2: ""multiple scrum teams build one product, i.e. work on the same product backlog. Each scrum team has a product owner, development team ans scrum master"" – BOOK: scrum, a smart travel companion, page 87.  The nexus guide suggest that there is one overall product owner, or am I wrong? Does this not conflict with the definition of a Scrum Team provided by the Scrum Guide, consisting of a product owner, scrum master and a development team? The book does seem to adhere to the definition. Also, the nexus quote mentions that a product backlog has a single product owner, but the Scrum Guide does not explicitly say that to my knowledge. A quote I found that comes close to this would be:   QUOTE 3: ""The Product Owner is the sole person responsible for managing the Product Backlog."" -- scrum guide, page 5.  But this quote has the context of 1 product (backlog) and 1 scrum team, and therefore has no implications to the scenario of multiple scrum teams. Did I miss a more explicit quote somewhere?  Regards,  Giso",7473
"12:19 am January 5, 2017                    In Scrum there is one Product Owner and one Product Backlog for one product. Scrum Teams working on the same product will integrate their work in the same Nexus and thereby provide value to the same Product Owner. The situation is no more complicated than that.          Log in or register to post comments",7473
"02:27 pm January 10, 2017                    Whether you practice SCRUM or Scrum with Nexus, there should be only one Product Backlog and a Single Product Owner. So when Scrum Guide defined the Scrum team on page 4, they defined keeping in mind of only one team. When the Scrum Guide states Multiple Scrum Teams on page 13, it means multiple Dev teams and if required one or more Scrum Masters, however only one Product Owner across all.  Page 5 of Scrum Guide says 'The Product Owner is one person, not a committee.' so it is always one.  Nexus is in-line with that, so it is the same product Owner and it is only one irrespective of how many Scrum teams along with Nexus Integration team you have. One product owner for one product backlog is the concept.  Pankaj           Log in or register to post comments",7473
Log in to reply,7473
Messages,7478
"08:52 pm January 5, 2017                             Hi all,   I'm currently working with an organisation who are in a key growth period of their journey, having begun as a start up they are now transitioning into a more mature team.  One of the elements we are discussing in on-call and I'm keen to get feedback from other's experience of working with Agile Teams / Dev Op's teams when on-call being a discussion point.  Ideally I would like to avoid having to implement full time (or at all) on-call - we already have monitors in place which are tracked 24/7.  The discussion has come about again due to a number of larger changes (system migrations etc) coming in the next few weeks, on-call over the weekend following the deployment is up for debate.  As we deliver more and more this topic may become a more frequent one.  I'm looking at only requesting this when we do specific changes or over specific periods (i.e Christmas on-call was in place) but I'm really open to suggestions, ideas and any experience you can share as to how this has been addressed in other times.  The second part to this is incentives when on all - finical was used over Christmas but again I don't want it to just be about this.  I'm looking at holiday allowance in return but this has a knock on impact to current sprints in terms of people being OOO, I'm keen to know if anyone has tried any other ideas   Look forward to hearing your experience   Thanks",7478
"09:39 pm January 5, 2017                    Does the expectation for handling on-call work originate from within your organization, or is it something that is being stipulated by an external client?  Also, how are you currently planning on-call work into a Sprint Backlog? How does it relate to each Sprint Goal? Or does it pre-empt your team's Sprint development work and is fast-tracked instead?          Log in or register to post comments",7478
"10:00 pm January 5, 2017                    The initial request over Christmas period was one from the CTO as it's a period of lots of people out of office it was a way of ensuring someone was available if any issues arose   There isn't a specific request at the moment it's more of a reoccurring topic, the Scrum Team themselves are raising it as a consideration & actually CEO wants to avoid having to do it if possible.  We aren't currently planning it as we aren't currently doing on call other than the Christmas Period          Log in or register to post comments",7478
"10:19 pm January 5, 2017                    How does this unplanned, on-call work impact the work that *has* been planned for the Sprint? Can the team still meet their Sprint Goal when this unplanned work arises?          Log in or register to post comments",7478
"08:44 am January 10, 2017                    Ideally you would want the team to be physically available f2f for scrum to be successful, but not always possible due to geographical locations and situations like on-call. By allowing on-call, you might solve part of the issue wherein the team is able to deliver unplanned on-call  work which I assumed is outside the sprint work, but you are always risking the Sprint goal and you will continue to do so until you allow on-call, no matter how many sprints you complete and how many retrospective meetings you discussed the topin in.  If on-call work is part of your sprint, all you need is commitment from the dev team that the stories accepted by them will actually be delivered and sprint goal will be met. The Dev team , as supposed to be self organized, should then be able to work within themselves to meet the sprint goal. From my view, with technological advancement, you can use tools to display and track your scrum board and should be able to progress.  Regards  Pankaj          Log in or register to post comments",7478
Log in to reply,7478
Messages,7479
"06:54 am January 7, 2017                             In Scrum there is no roles inside the Development team. There can be (and most of the time there are) members from different backgrounds, for example Designer, Tester, Software developer etc.  Most of the companies have formal hierarchical structure for technical roles. For example, Google has this structure:  Software Engineer 2,   Software Engineer 3,   Senior Engineer,    Staff Engineer,   Senior Staff Engineer,   Principal Engineer,   Distinguished Engineer,   Google Fellow,   Senior Google Fellow (added as of 2013).    In my opinion, this can be problem when being part of the Scrum team. The title that the person has can lead to him to take leadership role in the team, enforce his opinion on others or cause other members of the team with lower title to be afraid to argue about differences in opinions.   Do you think that company can function without hierarchical structure like this (which might cause difficulties when reviewing performance and managing the career path)? Do you think that structure like this can make problems in Scrum?",7479
"04:08 am January 8, 2017                    In my experience, many technical professionals do not concern themselves with the HR/business titles on a daily basis.  One purpose of the Scrum Master is to coach the Scrum Team.  If the team members are behaving in such a manner, then the Scrum Master should be coaching them to understand what it means to be a collaborative team and not a group of self-centered individuals.  The bigger hurdle in corporate cultures with respect to this topic, in my humble opinion, is addressing the accountability of the Scrum Team as a team.  The whole idea of yearly performance evaluations is contrary to the agile philosophy.  Inspection and adaptation needs to be continuous and not focused on individuals.  Improvements in corporate culture regarding coaching and mentoring employees needs to evolve.          Log in or register to post comments",7479
"04:13 am January 9, 2017                     Though the Scrum guide doesn't say anything about it however while forming Scrum teams I recommend that ""No one in the Scrum team should report to anyone within the team""          Log in or register to post comments",7479
"04:49 pm January 9, 2017                    Hi Aleksander,  In my opinion, in theory as per first line of Scrum Guide -  Scrum is a framework for developing and sustaining complex products.   With respect to IT delivery and structuring,  SCRUM is a proven framework for delivery and can have members with different background experience, seniority etc. but will have the common goal to meet.  While senior and more experience people can influence the team - sometimes for good and for bad, it in principle should benefit the team to nurture others and meet the goal. This depends upon building up the culture to respect others and follow the Scrum theory where Scrum Master plays key role.  Ex - The estimations can follow the story point, where the points have given weight and not who weigh it, this can be a very powerful tool.  Pankaj           Log in or register to post comments",7479
"03:37 am January 10, 2017                    Hi Aleksandar,  I will just share my point of view, based on my experience. And my experience shows that Scrum is the cure for ""titles"" behavior.  ""The title that the person has can lead to him to take leadership role in the team""   ""enforce his opinion on others or cause other members of the team with lower title to be afraid to argue about differences in opinions. ""   It is not a title, per se, that calls a person to lead, it is rather that person's experience and personal desire to lead. I am talking about developers titles. A title is merely a reflection that the person had worked longer, has more experience.  Btw, not all people even with experience strive to lead.   Each Team consist of individuals. No matter how much we enforce the ""Team"" term, there will be always individuals who like to lead, to whom it is important to lead, and people who care less about leading. What, I believe, Scrum helps with, is a Team building.  "" It is the Team who is responsible for a working product delivery."" -  This helps to shift minds towards: not individual leading/enforcing opinions but rather collaboration. If the Team learnt/adopted the Scrum values, such team eventually becomes: experienced and non experienced work together towards one goal: Deliver a product to a customer. Notice, that I used ""experienced and not experienced', not engineer and senior engineer.  You as a Scrum Master, can promote an environment in the Team where nobody is afraid to voice opinions, nobody enforces their opinions and so on. It might take time, but believe it or not, it can be done. And these two Scrum values are to help:   values of ..... openness and respect.   Use these values, put them on the white board. Refer to them all time.  Many Agile companies used to be a Waterfall companies. And it seems like, even with still having the titles in place, the  companies that decided to go Agile did not get destroyed, and the Agile Teams now deliver great products.            Log in or register to post comments",7479
Log in to reply,7479
Messages,7458
"09:01 pm December 28, 2016                             Can some one explain the below statement:   ""Sprint Goal  also provides some flexibility regarding the functionality implemented within the Sprint""  IF we have selected a sprint backlog and have crafted the goal based on these selection, how does any change to functionality implemented not compromise the Sprint Goal?",7458
"01:19 am December 29, 2016                    > IF we have selected a sprint backlog and have crafted the goal  > based on these selection, how does any change to functionality  > implemented not compromise the Sprint Goal?  A Sprint Backlog is a forecast of the work that will be needed to meet the Sprint Goal. Might that forecast need to be revised, based upon the turn of events during the Sprint?           Log in or register to post comments",7458
"05:25 am December 30, 2016                    Does that mean that the Dev team can actually change the sprint backlog items by adding or removing of sprint backlog items based on turn of events?  If yes, please clarify my understanding:  * The PO first comes up with his vision of what should be achieved through the upcoming sprint. This objective is at this point just a ""draft"" of the Sprint goal  * on discussing further within SCRUM TEAM on reviewing the PB further, more clarity emerges  * Based on the understanding of the ""draft"" and ensuing discussions, DT selects the PB items for sprint in agreement with PO  * Once the PB items are selected, the ST then crafts the Sprint Goal  * The DT starts the Sprint after work planned for initial few days is decomposed  * Once more clarity emerges as the Sprint progresses, it is possible that the Dev team feels that some of the Sprint Backlog items selected might not be appropriate for meeting the SG. At this point, can the Dev Team alter the Sprint back log items selected?           Log in or register to post comments",7458
"05:52 am December 30, 2016                    Extension to my previous points, is it possible to completely remove some of the existing SB items and replace them with new ones during a sprint if found to be more appropriate for meeting sprint goal?          Log in or register to post comments",7458
"03:54 pm December 30, 2016                    Yes, that is correct.          Log in or register to post comments",7458
"09:29 am January 2, 2017                    Hi All  So, does that mean that since the Sprint Goal doesn't change,  1. the PB items can be changed if they are not helping to accomplish the sprint goal?   2. And then those items that will help in achieving the SG would be selected?   3. So how does this relate to re-negotiation of sprint scope?  Is this what is meant by ""Flexibility"" in this sentence?          Log in or register to post comments",7458
"03:14 pm January 3, 2017                    Ideally the team and the PO should have the goal in mind before selecting the PBIs for the sprint, but it is an iterative process, i.e. after refining and clarifying some PBIs the goal might need to be changed as well.  The goal talks about the outcome the teams should achieve in a Sprint. The Spring backlog might change as the understanding of how to achieve this outcome grows, this is a collaborative process between the Development team and the Product owner.   Does it make sense to continue working on the Sprint backlog after the desired outcome (goal) has been achieved? Maybe, if it can achieve other significant outcomes or maybe there are more important things to do...          Log in or register to post comments",7458
"03:51 pm January 3, 2017                    @Boris: Very well put. I've always found it strange that the order is First: Select PBIs and Second: Define the sprint goal, but as you say this should be an iterative process where PBIs are selected with the objective in mind. However I think this should be elaborated in the guide.          Log in or register to post comments",7458
"03:57 pm January 3, 2017                    You could think of the PO (and preferably the team) as having an MVP in mind when they enter Sprint Planning. An MVP might reasonably emerge from Product Backlog refinement activities such as user story mapping. During Sprint Planning the team would craft a Sprint Goal around that MVP, although they may need to revise it in order to capture the latest understanding of value, or to plan an achievable forecast of work into the Sprint Backlog.          Log in or register to post comments",7458
"04:41 pm January 3, 2017                    I have been working with my teams PBIs first/Sprint Goal second, however after making more research on Sprint Goal Setting this last few days, it does make more sense to select the Sprint Backlog based on the Sprint Goal, as Fredrik mentioned, even though it is almost a work on parallel all together.          Log in or register to post comments",7458
"12:18 am January 6, 2017                    I beg to differ a bit, if we have a pre-conceived Sprint Goal in mind and then we select the PBI's to achieve the goal, these PBI's may not be defined yet. As per the guide, generally the PBI's on top are clearer and have more details with good story points. These are the candidates for the sprint as they can be completed in one sprint term. Other PBI's which may be a candidate for the pre-conceived SG may not be fully defined yet. To get them defined first means losing time when a sprint can be performed.   I think that related PBI's from the top of the PB list should be selected and then the Sprint goal can be formulated. Of course, as and when new knowledge is gained and if there are undesirable variances, scope can be negotiated and PBI's can be added or removed to the Sprint Backlog.          Log in or register to post comments",7458
"02:47 am January 9, 2017                    I have the same question why the Sprint Goal is formulated after the PBIs are selected by DT. Would it be better if SG is formulated first based on the PO's objective that the Sprint should achieve. Afterwards, DT will have a better view on what PBI to select for the Sprint and thus, preventing wasted effort on working thru unrelated PBIs during the Sprint. Kindly advice.          Log in or register to post comments",7458
"04:07 pm January 9, 2017                    Hi Hermes,  Sprint Goal gives a specific objective and direction for the DT to work on and achieve it within the duration of the sprint. Sprint goal cannot be crafted until PBIs are fully understood and accepted by DT to deliver within that Sprint.   Imagine if you decide to craft Sprint Goal first, however selecting PBIs later gives you the wrong picture what would you do?   Pankaj           Log in or register to post comments",7458
Log in to reply,7458
Messages,7471
"06:39 pm January 4, 2017                             Got one question wrong!  The exam wasn't as hard as I had imagined but I then had prepared well.  I studied:  The scrum guide (read twice).  About half of Essential Scrum A Practical Guide to the Most Popular Agile Process by Kenneth S. Rubin.  Some but not much of Scrum Narrative and PSM Exam Guide book.  Management Plaza exam pack (good resource).  Mikhail Lapshin's questions (good resource).  Scrum.org forum.  Nexus Guide (not really needed but it's short).  Scrum Open exam questions on Scrum Master and PO (very easy).  Thanks a million to all the people who replied to flurry of posts, it was a big help.",7471
"06:48 pm January 4, 2017                    Forgot to say, I also took a 2 day Scrum mastering course (not through Scrum.org). It was expensive and although well run, I wouldn't do it again as it wasn't that much of a help.          Log in or register to post comments",7471
"10:32 am January 7, 2017                    Hi Conor,  thanks for sharing your strategy.  I'm also plan to take this exam in the next days and I'm preparing the exam using the same resources  I'm currently working on the mplaza  mock-up  exams.  How close are they to the actual exam ?  I find questions of mplaza exams a bit pretentious or ""text-trap"" (for instance they speak about the length of a product backlog... while the scrum guide focus more , in my opinion correctly , on the level of detail and ""readiness"" of a product backlog item )  Thanks   Tommaso           Log in or register to post comments",7471
"03:21 pm January 9, 2017                     Posted By Tommaso Giorgio Piantanida on 07 Jan 2017 10:32 AM  Hi Conor,    thanks for sharing your strategy.    I'm also plan to take this exam in the next days and I'm preparing the exam using the same resources    I'm currently working on the mplaza  mock-up  exams.    How close are they to the actual exam ?    I find questions of mplaza exams a bit pretentious or ""text-trap"" (for instance they speak about the length of a product backlog... while the scrum guide focus more , in my opinion correctly , on the level of detail and ""readiness"" of a product backlog item )    Thanks     Tommaso   They are a good guide to be honest. I would say slightly more difficult than the real exam but good prep. If I remember correctly, they had more wordy/lengthy questions/scenarios than the actual exam. I didn't have to think much about the exam questions, give a quick scan and the answer was obvious. But that's obvious to me because I prepared well - other answers might look just as valid as the right one.           Log in or register to post comments",7471
Log in to reply,7471
Messages,5436
"12:37 pm March 20, 2013                             Hi,  When the sprint backlog can change?  Both remove an item because it no longer makes sense for the scope or add an item just because the sprint backlog is over, but the sprint timebox not yet.  What are the rules and what are the exceptions?  thanks,  Maicol",5436
"02:05 pm March 20, 2013                    Hi Maicol  In both of the situations you describe, the sprint backlog should be replanned immediately. There is usually no value in progressing a redundant PBI or in having a team wait until the end of a sprint before accepting more work.  Note: only the development team can change the sprint backlog, because they own it. Nothing can be put in or taken out without their authorisation.          Log in or register to post comments",5436
"02:09 pm March 20, 2013                    +++++1 to Ian's response, though I would also add that the PO should be involved in the discussion about what is dropped or added to a Sprint.  In terms of adding or removing scope, you might find this chart helpful:  http://www.scrumcrazy.com/scope          Log in or register to post comments",5436
"01:42 am March 21, 2013                    The whole team including PO should be involved while adding/removing anything from the sprint backlog. While adding anything new it should be PO's decision to take the top priority item from product backlog and move it into the sprint backlog.  The team should be transparent in telling about any change in the sprint backlog during the sprint review meeting.          Log in or register to post comments",5436
"02:11 pm March 21, 2013                    Sanjay,  I want to make a distinction in your advice.  The Sprint Backlog is ""PBI's + a plan to deliver the PBI's"".  The PO doesn't ever really have to be involved if the ""plan"" changes, but they do have to be involved if the PBI's change materially (or the number of them forecasted for the sprint changes materially).  So, while the PO must be involved in the decision to add/change/drop PBI's, they need not be involved in any changes to the ""plan"".  It is also ok if the Dev Team wants to involve the PO in changing the ""plan"".  Also, the Scrum Master doesn't need to be involved in any of the above, except as needed to make sure that Scrum is followed.  Does that make sense?          Log in or register to post comments",5436
"02:14 pm March 21, 2013                    While adding anything new it should be PO's decision to take the top priority item from product backlog and move it into the sprint backlog.   Also, this is not always the case.  The PO may decide to bring a PBI into the sprint that is *not* the top priority item from the PB.  They may have other reasons for bringing something different into the sprint, which is why they should always be involved when changing the ""scope""(PBI's) of the Sprint Backlog.    It's also worth nothing that priority is just one factor when ordering the Product Backlog.  Other factors are necessity, technical dependency, business value, etc.  See the Scrum Guide for more info on that.          Log in or register to post comments",5436
"12:44 am March 22, 2013                    Yep  My idea was on adding/removing a PBI in the sprint backlog. I agree that PO and SM should not be involved in sprint execution plan.          Log in or register to post comments",5436
"10:48 am March 2, 2016                    Hi All,  I would actually agree with Charles and Ian but I was going through the book ""Agile Project Management with Scrum""  by Ken Schwaber and he acttually talks about a frozen product backlog in the sprint.  He litterally says: ""The Team commits to Product Backlog during the Sprint planning meeting. No one is allowed to change this Product Backlog during the Sprint. The Product Backlog is frozen until the end of the Sprint.""  So apparently no Items can be added.  The weird thing is that he also states:""the ScrumMaster can abnormally terminate the Sprint and initiate a new Sprint planning meeting to initiate the next Sprint. The  ScrumMaster can make this change of his or her own accord or as requested by the Team or the Product Owner."" This contradicts the scrum guide.  The only explanation I can give is that his book is frm 2004 and maybe he modified scrum framework.  Can anybody explains this because it generates huge confusion.  Thanks          Log in or register to post comments",5436
"11:48 am March 2, 2016                    > The only explanation I can give is that his book   > is frm 2004 and maybe he modified scrum framework.   Absolutely right.          Log in or register to post comments",5436
"05:56 am March 17, 2016                    I have the same Question... Please Help......          Log in or register to post comments",5436
"03:39 pm March 18, 2016                     Posted By Filippo Cecchini on 02 Mar 2016 10:48 AM   He litterally says: ""The Team commits to Product Backlog during the Sprint planning meeting. No one is allowed to change this Product Backlog during the Sprint. The Product Backlog is frozen until the end of the Sprint.""    So apparently no Items can be added.   Filippo,  Ask yourself if a ""frozen"" sprint backlog supports agility.  Be wary anytime the emphasis is placed on process.   Rigidity does not support agility!  Agile Principle #2 - ""Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.""          Log in or register to post comments",5436
"07:00 pm August 17, 2016                    Timothy I fully agree with this approach. Nevertheless in some materials preparing to PSM certificate I have found question: ""who can change the sprint backlog items?"" I thought about the Development team, but the correct answer was: ""Noone, Note that development team is always changing the tasks.""  Fore me it was obvious that if something happens there is a need to change sprint backlog 'even late in development' - but after this question - I am greatly confused. Do you have any idea how to logically explain those 2 different approches? I would be very greatful if you - or anyone who understands it - could help.          Log in or register to post comments",5436
"07:46 pm August 17, 2016                    : ""who can change the sprint backlog items?"" I thought about the Development team, but the correct answer was: ""Noone, Note that development team is always changing the tasks.""  I too am confused. What’s the source of the question?  According to Scrum, the Sprint Backlog can only be modified if it doesn’t mutate the Sprint Goal. The Development Team is in charge with managing the Sprint Backlog and can edit it if in accordance to this principle.   If they feel that their edits will significantly change the Sprint Goal then they collaborate with the Product Owner about this issue. ‘  Only under extreme circumstances may the Product owner cancel a Sprint (changed goals). However, due to the short duration of Sprints this minimizes the likelihood of cancellation arising.            Log in or register to post comments",5436
"05:02 pm August 18, 2016                     Posted By Anna Kalita on 17 Aug 2016 07:00 PM  Timothy I fully agree with this approach. Nevertheless in some materials preparing to PSM certificate I have found question: ""who can change the sprint backlog items?"" I thought about the Development team, but the correct answer was: ""Noone, Note that development team is always changing the tasks.""    Fore me it was obvious that if something happens there is a need to change sprint backlog 'even late in development' - but after this question - I am greatly confused. Do you have any idea how to logically explain those 2 different approches? I would be very greatful if you - or anyone who understands it - could help.  Anna,  The Scrum Guide explicitly states the following:  ""Only the Development Team can change its Sprint Backlog during a Sprint. ""  You need to be careful with any exam sources provided by 3rd parties, as they may promote an imperfect understanding of Scrum, and provide confusion instead of clarity around Scrum.  The Sprint Backlog can change during a sprint as the Development Team works towards the Sprint Goal.   The Sprint Backlog is simply a plan, and that plan can change.   Think of it along the same lines of Progressive Elaboration in traditional project management, where you don't know what you don't know until you actually begin the work, and you learn as you go along.  Changing the Sprint Backlog does not have to be a huge event, although if ""something happens"" that puts the Sprint Goal into question, then certainly the Sprint Backlog, and even the Sprint, can not only change but also be at risk.           Log in or register to post comments",5436
"09:21 am August 23, 2016                    @Doug and Timothy, many thanks for your answers and explaining this topic.. I was using Management Plaza training cards. Yes, definitey next time I will relay only on scrum guide - no exceptions. Thank you!          Log in or register to post comments",5436
"03:09 am January 5, 2017                    I took the open assessment and encountered this question ""During a Sprint, a Development Team determines that it will not be able to finish the complete forecast. Who should be present to review and adjust the Sprint work selected?""  Answer is The Product Owner and the Development Team.  I got it wrong as I chose Development Team. I guess it is how the question being phrased that catch me off-guard.  I think this echoes Charles' feedback that even though SBI owned only by Dev Team but it is the joint effort of changing the work/scope of SB between Product Owner and Dev Team because it will affect the Sprint Goal.          Log in or register to post comments",5436
"09:32 am January 7, 2017                    Reading Scrum guide give me second thought about what I mention above.  I always thought that ""Work"" is the decomposition of the SBI in the form of tasks as part of the plan to deliver Done Increment in the sprint. That should align with the Scrum Guide statement - ""The Sprint Backlog is a highly visible, real-time picture of the work that the Development Team plans to accomplish during the Sprint, and it belongs solely to the Development Team""  Based on my understanding, work belongs and owned by Development Team.  But apparently the answer from Open assessment suggest that Product Owner involvement. Or just how the question being phrased that make me confuse.  Can someone please share your enlightenment?          Log in or register to post comments",5436
"03:17 pm January 7, 2017                    The Sprint Backlog is wholly owned by the Development Team and only they can change it.  Suppose the team amended the Sprint Backlog by reducing the forecast of functionality, while ensuring that the Sprint Goal can still be met. Don't you think they should involve the Product Owner in this revision, so he or she can appraise stakeholders of the reduced functionality, and update the Product Backlog to indicate that work originally planned is no longer in progress?          Log in or register to post comments",5436
"03:20 pm January 9, 2017                    Thanks Ian. That's thought-provoking.          Log in or register to post comments",5436
Log in to reply,5436
Messages,7481
"09:53 pm January 7, 2017                             Our CEO is constantly asking me to fix a bug on very seldom used functionality.  The bug is nasty to fix and I keep assuring him that it will be included by the Product Owner  in a sprint where we will review the whole functionality. Otherwise we will be forced to waste time correcting the bug in a part of code that will disappear.  However, this will not happen in the next week and maybe not in the next month, according to P.O.  Only solution seems to force the bug in the sprint, just now, force somebody to do it, put our goal in danger etc.  If this it's happening only once, it would probably not a problem, but it's happening very often.  CEO has been formed on agile and agree on the methodology  Furthermore the CEO knows that I have the skill to solve it...if I don't do it immediately he will think I'm not obeying his orders...Since this is happening often, he is loosing trust in me...  It's a very stressful situation, anybody has any suggestion?",7481
"10:30 pm January 7, 2017                    I assume that you have raised the issue either in the daily scrum meeting or otherwise. As this issue can be seen as an impediment, not only to your own work but to the project in general, it would be the Scrum master's task to resolve this issue.          Log in or register to post comments",7481
"10:50 pm January 7, 2017                    Does the fix appear in the Product Backlog? If it doesn't, then any discussion about which Sprint it may be actioned in is immaterial. If it does then the PO can advise the CEO about its priority.  It's up to the PO to liaise with stakeholders, including the CEO, about any work included in the Product Backlog. Remember that you can't issue assurances on the PO's behalf. Also, any PBI for the fix must be refined and estimated by the whole Development Team, irrespective of which developer eventually does the work.          Log in or register to post comments",7481
"05:00 am January 9, 2017                     Log the bug in the Product Backlog and inform the PO so that he can work with the CEO          Log in or register to post comments",7481
"12:33 pm January 9, 2017                    Redirect all questions regarding priority of the backlog to the PO. I would also discuss this with the scrum master. If stakeholders (CEO or others) go directly to members of the team to discuss changes and thereby bypass the PO than this an issue that need to be adressed. The CEO does not seem to get this and might need some coaching.          Log in or register to post comments",7481
"02:18 pm January 9, 2017                    Hi Marco,  Following needs to be done in the order of priority if the directive to include the fix is directly from CEO.  1. PO to discuss with CEO and agree to cancel the current sprint due to nature and priority of bug means existing sprint goal is no longer makes sense.  2. PO to factor the bug in product backlog and prioritize to deliver in the next sprint.  3. Scrum master to facilitate meeting wherein above is communicated to the team and arrange Sprint Planning meeting.  4. Sprint retrospective should be effectively used to capture root cause, lessons learned and why you have arrived into this situation, how can this be avoided and share the outcome with CEO.  From my past experience, above can be down within a day and a Sprint planning could be called in the next day to re-arrange the sprint backlog and kick start Sprint with the revised goal.  Cheers  Pankaj           Log in or register to post comments",7481
Log in to reply,7481
Messages,7474
"12:32 pm January 5, 2017                             I am new to this scrum.. just wanted to  know   Who will be doing  the  Data Base model / design for a product to be developed. In case if any technical / workflow change  required in between how it is going to be handled. Is Database model will be done completely before start the actual sprint planning.  Thanks in advance  Regards  Senthil",7474
"10:37 am January 6, 2017                     Based upon your understanding who is responsible for delivering the Product Increment? The idea is to build a cross-functional team that can do whatever is required for releasing a product increment.   Whomsoever has developed it should make the changes too.  Why should we start anything until and unless it has been prioritized, ordered and discussed during the Sprint? What if during the Work start and Sprint planning something change and the DB model or feature is not required at all?          Log in or register to post comments",7474
"11:35 am January 6, 2017                    Thanks Sanjay  My questions are  1.Is data base model should be completed for product before sprint starts?. Is it going to be reviewed by Product owner and do we need to get any approval from client?.  2.In case during the sprint planning if we need to change the DB model due to feedback from client. how do you accommodate ?  3.We might be delivered working model from few sprints and due to db model change request - existing sprint output might be useless. how do we handle it ?           Log in or register to post comments",7474
"03:59 am January 8, 2017                    Welcome to Scum, Senthilkumar.  What was a failure of classic software development?  Too much large planning and design up front.  In order to be flexible in the creation and delivery of software, only what needs to be designed, developed, tested, and delivered should be done just in time.  ""Development Teams are cross-functional, with all of the skills as a team necessary to create a product Increment"" means that they should be able to identify and implement any necessary changes.  Is the team in question specifically a ""database team"" delivering to other software development teams?  If so, then the larger picture of Scrum Teams being devoted to products is being missed.          Log in or register to post comments",7474
"04:10 am January 9, 2017                     In addition to what Alan said, to be more specific to your questions -  1. NO. Team should work on the DB model for items planned for the Sprint and team forecast the items (PBIs) during the Sprint Planning only. A good PO should focus on the WHAT and Maximizing the Business Value and let the Dev Team decides on the HOW part. Approval from client - it depends on your relationship, trust and contractual T&C between you and your client  2. Any work that needs to be done in a Sprint should come thru Product Backlog. PO should consolidate everything in the Product Backlog, get it refined with the Dev Team and then the Team should forecast the Sprint work, it happens in the Sprint Planning meeting only.  3. If the Sprint goal becomes obsolete then PO can cancel the Sprint. Scrum team should get into the planning meeting of new Sprint along with new learning and updated Product Backlog  Hope this helps          Log in or register to post comments",7474
"09:45 am January 9, 2017                    Thank you Alan          Log in or register to post comments",7474
"09:46 am January 9, 2017                    Thank you Sanjay..          Log in or register to post comments",7474
Log in to reply,7474
Messages,7476
"05:20 pm January 5, 2017                             My team are experimenting with techniques which are different to classic implementations of Scrum. Let me give you some examples:  * Walking the board DS instead of the 3 questions  * Ditching story points and velocity, replacing with story counting and using Monte Carlo Simulation to forecast what will be in the sprint - a #NoEstimates approach  * Not doing task breakdown in Sprint Planning - instead using a Kanban style board where stories flow across  Strictly speaking, I don't believe this can be called ""Scrum"", given the Guide calls out the 3 questions and I believe there is a mention of estimation and task breakdown.  I think of this as a Ha or Ri stage in the Shu Ha Ri Model - kind of feels once you pass Shu, you should no longer call it ""Scrum"" - what are your thoughts?",7476
"05:52 pm January 5, 2017                    I think of Scrum being specific about the key elements of Scrum (daily Scrum, Sprint Planning, ...). Some of the things you mentioned, like story points or velocity are optional in Scrum. Some say, if you're not doing Scrum, by the Scrum Guide, you're not doing Scrum, you're doing ""ScrumBut.""  That is we're doing Scrum, but we only do the Daily standup on Tues and Thurs and we don't do retrospectives every couple of Sprints, ... That's not Scrum based on the Scrum Guide.  Note there is flexibility in how some things are done. Again, as an example, burn-down charts are optional, velocity is optional, Scrum boards are optional, ... So there are choices you can make within the Scrum Framework.   My experience has been that it's  best to start with Scrum by the Guide and modify after you're learned Scrum. This, leads to moving away from Scrum alone where you may mix Scrum with other variations... Get good at Scrum first before you try to change the framework.          Log in or register to post comments",7476
"09:20 pm January 5, 2017                    Consider walking the board and wrapping up the Scrum with each team member then summarizing their own position.          Log in or register to post comments",7476
"10:56 pm January 5, 2017                    Start with SCRUM by the guide. At least it's well documented and easy accessible. Team members and everyone else involved need to be on the same page (preferably on the same sentence or at least the same paragraph).  If this fails for some reason then an alternative way of working could be introduced, but only if everyone involved is familiar with this way of working. If you call it Scrum and anyone with Scrum experience enters the team, he/she will be confronted with a different way of working.  If your family plays a self-invented game at home called Choker (playing Chess with Poker rules) and only your family members know how to play this game then you can't invite your neighbor to come and play a game of chess or a game of poker. If he thinks he's coming to play Chess he will be in for a big surprise. He has no way of winning any games either. Any bystanders expecting to see a poker game, have no clue what this Choker game is all about either.   If the changes in the Chess game are only the color or the shape of the pieces then you can still call it Chess. If new pieces are introduced and certain pieces move differently and two dices are used before every move and a trivia card needs to be answered then you can't call it Chess. It's Choker...          Log in or register to post comments",7476
"03:52 am January 8, 2017                    As Rick Smith stated, the examples given are not specified in The Scrum Guide.  Those are techniques that can be used within the Scrum framework.  Trying different methods can be an important part of learning in order to create a high performance Scrum Team.  Excellent example, Nicko DeBeer!  ""A common language referring to the process must be shared by all participants.""  If you are violating the guide, do not call it Scrum.  ""Scrum’s roles, artifacts, events, and rules are immutable and although implementing only parts of Scrum is possible, the result is not Scrum.""  Any time that a Scrum Team wants to modify the framework, there needs to be a discussion about why that role, artifact, event, and rule exists and what value could be lost with said change.  The Scrum Guide does not require that each Development Team member answer each of the three questions in turn; that's a status report.  Walking the board is another technique that often results in a status report.  The purpose of the Daily Scrum event is to inspect and forecast.  Through a discussion the Development Team can explain the information to expressed in the questions.          Log in or register to post comments",7476
Log in to reply,7476
Messages,7409
"06:35 am November 22, 2016                             Hello together,  I have a question about project roles. There are not the project manager role in Scrum. But what takes it outside of the Scrum team such as budgeting or strategic things?  Thank you very much.",7409
"03:15 pm November 22, 2016                    Are you referring to the budgeting and strategic positioning of the product?          Log in or register to post comments",7409
"11:19 pm November 24, 2016                    First a subtle but significant difference, the Scrum framework focuses on products.  When people are having difficulties in understanding and transitioning, it can be helpful to look at each Sprint as a project.  Within each Sprint, the scope is limited by the forecast of the Development Team.  A result is that the cost is easily understood in these short iterations.  By creating an increment which is potentially releasable, customer and market feedback can be gathered early and often.  The role of the Product Owner can serve many of those classical project management functions.          Log in or register to post comments",7409
"07:58 am November 25, 2016                    For me the Scrum Master has to lead the Scrum framework: organisation of different types of meetings (daily, review...) and practices (planning poker, burndow chart, kanban...). But Scrum does not manage other tasks of ""traditional"" project manager: risk management, budget, steering commitee etc. So I think these are additional tasks for the scrum master (if the scrum master is the project manager too).          Log in or register to post comments",7409
"06:56 am November 29, 2016                    I agree with Alan. Budget is a Product Owner's responsibility and should be fairly straightforward.          Log in or register to post comments",7409
"07:55 am December 16, 2016                    Although I agree with Product Owner driving the strategy and budgeting aspects for a 'Product' in Scrum, most often than not some of the organizations get caught between a conundrum of sorts when stakeholder/business budget is holistically allocated and handled at much higher level (like Line of Business) than individual 'Project /Product'. Similarly, the IT/Technology partners budget are also handled separately thereby creating a disconnect or difficulty in presenting coherent metrics to stakeholders and upper management.   Interestingly enough, in these kind of setups- Product Owner and their organization hierarchy fall under Business partner's budget and Scrum Master would be under Technology partner's budget. This creates a tug of war between PO and SM in taking a budgetary call on 'who decides what gets to team and done in this year of releases and what gets pushed over'.  In these scenarios, Which role should take prime responsibility in budget?  Any insight would be much appreciated.  Cheers !           Log in or register to post comments",7409
"09:23 am December 21, 2016                    Scrum requires each project to meet its goals, expectations, project changes at the end of each sprint. Product owner, scrum master, and the team are three major roles in the sprint. The product owner should be familiar with all project development, business goals and customer needs. The Scrum Master should take responsibility that the team is on track in each sprint. Project Manager should take responsibility to complete plan and close project. He /she must find out the way to meet the product requirements.  He/she is also involved in project budgeting and the timeline required to complete the project. Project Manager has the main responsibility to share the budget to the highest level in an organization. So obviously, a project manager will be a part of each scrum sprint. At the same time, he will be handling the other aspects of a project outside the scrum team.           Log in or register to post comments",7409
"05:53 am December 22, 2016                    @Steffi   >> The Scrum Master should take responsibility that the team is on track in each sprint  Development Team is responsible to make sure everything is on track in each Sprint and not the Scrum Master. SM should ensure Scrum principles are adhered by scrum team and remove impediments in the process of achieving sprint goal.  >> Project Manager should take responsibility to complete plan and close project. He /she must find out the way to meet the product requirements.He/she is also involved in project budgeting and the timeline required to complete the project. Project Manager has the main responsibility to share the budget to the highest level in an organization. So obviously, a project manager will be a part of each scrum sprint. At the same time, he will be handling the other aspects of a project outside the scrum team.   There is no Project Manager role in Scrum.           Log in or register to post comments",7409
"01:19 pm December 22, 2016                    I think what (to me) is always confusing about ""Project Manager"" is that (as we all know as it is repeated over & over) Scrum does not define such a role, yet there is likely to be such a role(s) somewhere around any Product development the organization undertakes.  However, this role isn't managing the *project* of getting the Product Increments scoped and completed (responsibility of the PO and DT), nor is this role managing the Scrum framework and obstacles (the responsibility of the SM). Instead, the PM roles are managing all the other activities around releasing/integrating/using the Product Increment into the organization and its customers.  For instance, when the Product Owner elects to release a Product Increment, there are many activities and people involved in making that happen, and these are all outside the responsibility of the Scrum Team.  Consider a Scrum Team in a large bank creating a product for use by their inbound/outbound Call Center.  In this case, a PM might do the planning (scheduling, budgeting, staffing) and execution of such things as:     1. Creation of Marketing Materials, Press Releases, Advertising Campaign, Client notification letters     2. Conducting User Training (perhaps even additional staffing)     3. Coordinating launch with any third-party (or even internal) co-dependencies     4. Deploying the Product to all the centers and servers     5. Creating a fall-back plan (if the roll-out fails)     6. Creating a support plan, staffing & training the 24x7 support team     7. Notifying any government regulatory agencies, as required     8. etc, etc, etc, etc  Of course, many of these will require some cooperation and input from the Scrum Team.  The PO would be involved in identifying which upcoming Increments are likely to be worth releasing, contributing to the marketing plan, etc.  The Development Team may need to provide input to those planning the deployment, the fallback plan and the 24x7 support.  I am *most* anxious to hear feedback on this from others, because (IMO) this is the least-well addressed topic in Scrum.  I want to see if others feel that the tasks I've assigned to a ""PM"" (outside of Scrum, but part of the organization's needs relating to making the Product useful) belong to the Scrum Team and, if so, how that is accomplished.  Or, if they generally agree with what I wrote, how they handle the resulting dependencies on the DT for input/coordination.  Thanks!          Log in or register to post comments",7409
"04:43 pm December 22, 2016                    > when the Product Owner elects to release a Product Increment, there  > are many activities and people involved in making that happen, and  >  these are all outside the responsibility of the Scrum Team  If they are needed in order to create and release an increment, why would they be outside the responsibility of the Scrum Team?  A Scrum Team will engage in product development and in the empirical delivery of maximum value. Are any of the activities you cited irrelevant to this?          Log in or register to post comments",7409
"07:45 pm December 22, 2016                    Ian, I was hoping that you would be a responder, as I think you have a deep foundation of experience and are quick to assist!  This exchange has the potential to make it all ""come together"" for me, so I am looking forward to it.  You asked why I feel the noted activities would be outside the Scrum Team.  Let me turn that around and ask if, on the projects (using that term generically) you've experienced, do your Scrum Teams travel the country training the end users on use of a ""potentially releasable"" increment?  If so, does that training have to complete in order for that Increment to really be ""potentially releasable""?  How big are your Development Teams that allow them to dedicate people from each team to this constant training that might not actually be needed (e.g. in most cases in early iterations, a ""potentially"" releasable Increment won't *actually* release)?  Remember that the actual release, in many projects, is a very large effort.  My last few projects involved perhaps 20 dedicated staff on the development teams, but had as many as 120 people (from various business areas, third-party providers, legal team, system support, data migration, backup & warehousing, etc) and an actual rollout involved sending mailing to the clients (two months in advance), taking out newspaper and radio ads, negotiating contracts and change orders with the affected third-parties, executing the push to all remote servers and configurations to databases, executing the migration of data from old format to new, and a round-the-clock 72 hours of rollout that had a continuous presence of at least 25 people.  Not all projects are just introducing a few new screens.  So, in your projects does the Development Team do all the above, and for each Iteration?          Log in or register to post comments",7409
"08:47 pm December 22, 2016                    In Scrum, with large-scale complex deliverables, multiple Scrum Teams may be needed to create a valuable and usable Sprint increment. They collaborate by means of a Nexus or Nexus+.  In a Nexus, each team is individually responsible for delivering a product feature which makes the increment potentially releasable. The Nexus is responsible for ensuring that all work, regardless of type, is fully integrated and tested by the end of each Sprint. Not all of that development work is necessarily coding work. It could certainly involve training end-users, given that the increment may not be releasable without it. It could even involve sending mail to clients and taking out ads, if that is needed for release, but since this is a matter of stakeholder liaison it is more likely to be undertaken or at least organized by the Product Owner. All of this work would form part of the increment if it is essential to its value and usage.  An important consideration when achieving this standard is to have a Definition of Done that encompasses *all* release qualities, regardless of whether they are technical or non-technical. This is because the critical concern is making sure that there is no undone work at the end of a Sprint. In Scrum there should be no work left to do after an increment is delivered, not even a mail-shot, if that work is needed to effect a release.          Log in or register to post comments",7409
"06:45 am December 23, 2016                    Ian, thank you for the response.  Frankly, it isn't making sense to me yet from a practical perspective.  First, is the purpose of an Iteration to deliver a ""potentially releasable increment"" or a ""released increment""?  I thought that the answer was *releasable*, not *released*.  If so, there is always work to move it from the former to the latter.  If an Increment is actually only *released* in a fraction of the Increments, then the work between *releasable* and *released* (which can be quite a large expense) is wasted on all the others, therefore not a good value return to the business.  This includes many of the activities I noted above, from notifying end-clients, government agencies, creating marketing material (via ad agencies), training call center and support staff, ordering radio/tv/news ads and social media promotions, etc.  Why would you do these public things (e.g. ads) before the PO has even decided to release?  If, in fact, the answer is actually *released*, then an Increment isn't ""Done"" until is is actually released.  As the PO makes the decision about releasing in (or subsequent to) the Sprint Review, is your experience that she ""pushes a button"" (maybe not a real button, but I think you know what I mean) and it is instantly live with no further impact on the DT or others? If not, what does she have to do?  In the Sprints in which she chooses to not release, are those Story Points not credited as accomplished for metrics, as they weren't released, but put back in the PB as incomplete?  If all release activities fall to the Scrum Team and one legal (or other) requirement is for client notifications to go out 60 to 90 days in advance of a ""release"", yet you don't *know* that all PB items will be ""done"" that far in advance, how is that handled (reflected in the PB, moved to SB, notification actually sent, etc).  In some cases, once clients are notified, there can actually be government penalties for not delivering when committed.  Certainly we wouldn't want to go through that notification every Increment ""just in case"" when we know that not every Increment will release -- we'd lose clients and look foolish.  And, if she chooses to not release, what activity is done (and by whom) to undo all the prep for the release (tell the trained people that it has been delayed, withdraw the advertisements, tell the regulatory agencies, etc)?  Please forgive my questions, but this is a very significant thing for me to properly embrace Scrum.  I have bought into it as a great way of turning out Product that is ""ready to go"" (including the technical environment & release processes), but I just cannot see how it extends to ""making it go"" in the context of my questions above.  Maybe I am missing a key point, and I hope you can educate me!  Thanks again!          Log in or register to post comments",7409
"09:19 am December 23, 2016                    If any work needs to be done by the Development Team before an increment can be released, then it is not potentially releasable. That may include training, advertisements, and notifications. Actual release should be dependent upon immediate business or market conditions. The essential principle is that there should be no delay (and thus no outstanding work to do) in responding to those conditions.  To achieve this ability, Scrum may require that certain assumptions regarding the interface between the product and its environment are challenged. The challenge is great because each and every Sprint Increment must be potentially releasable and with minimum attenuation of feedback. Everything you describe must be brought within a time-frame of no more than 30 days. The way teams work with stakeholders themselves is therefore *also* subject to transformation. That's the challenge of agility at scale.  For example:  - Certain stakeholders, including potential end-users, may need to be involved during a Sprint so they are familiar with the system being developed. This can mean building a new and very different relationship with them.  - Clients will need to be brought into a position where they can actually benefit from Sprint cycles and rapid feedback. Expectations about the scale of deliveries may need to change, along with time-frames which ought not to exceed one month.  - The scope of ""notification"" may need to be reduced. Instead of expecting a push of large releases, stakeholders should expect to be engaged more closely and more frequently, to the extent that release becomes a trivial act.           Log in or register to post comments",7409
"02:21 pm December 23, 2016                    I very much appreciate your engaging in this exchange.  While I think I understand what you are saying in theory, it isn't making sense to me practically.  First example is the notifications.  In some of the projects I've managed, there is a legal requirement that clients (and government) be notified a *minimum* of 60 days in advance (I think the window also has a maximum of 90 days).  As you write that everything must be brought to time-frame of no more than 30 days (I assume this number reflects the maximum Sprint length), either we must get the government to change its requirement, or we need to violate the law, or we make Sprints to be 60 days.  None of these is going to happen, of course.  Second is that you write ""actual release should be dependent upon immediate business or market conditions"". OK, I understand this, but what is the effort of doing an ""actual release"".  This has to reflect *some* work by someone somewhere.  Third, let me offer an example (I'll get away from banks and insurance companies, where most of my personal experience is) of a company deciding they want to make a new Spreadsheet product to compete with Excel and Google Sheets -- compatible, but much better.  Obviously, they won't even have a fraction of a fully-compatible product in the first Sprint.  If they are really good, their first iteration might produce an app that has a requisite framework (splash screen, legal notices, help function) and displays and navigates a sheet with 65K rows and 256 columns and allows input of text or numeric data into the cells, but no formatting, no formulas, no graphics.  Now, maybe this is where I'm missing it all.  Given that there is real ""business"" content in this iteration, I would have thought this was a good Sprint as it delivered business function (value).  However, there is no way in which the business would ""release"" this to the world.  So, in that sense, the business has no way to receive remuneration for its investment thus far.  Does that mean that the Sprint did NOT produce an Increment of business value?  If they needed to have this ""releasable"" (by the definition you offered above), then they would have contracted ad agencies, created marketing materials and a press release, paid for creation of packaging, paid for product to be created and stockpiled for delivery to retail stores, trademarked the name they are to use, gone to trade shows to promote its upcoming release, etc, etc.  Who would *possibly* do these things on that Iteration (I'm confident they *couldn't* be accomplished in the first 30 days), especially when everyone knows that the Iteration is not going to release beyond internal ""customers"".  My struggle might be falling to two principles -- ""releasable"" and ""business value"".  Thank you again ...          Log in or register to post comments",7409
"02:22 pm December 23, 2016                    Ian, BTW, if we ever find ourselves in the same city, I owe you a dinner ... :)          Log in or register to post comments",7409
"03:01 pm December 23, 2016                    If there are legal requirements that would cause the attenuation of an agile feedback loop, then I suppose they may be challenged on that basis. A 60 day minimum is perhaps an interesting edge case, because it would be in line with the 2-month maximum that is asserted in the agile manifesto.  Release should involve a trivial amount of work. I'll leave it up to you to decide what trivial would mean in your case, but it should not impact the Development Team to a degree they would consider to be significant.  Release of an increment is not necessarily to the world. It must be to an environment where empirical evidence of value can be obtained. Scrum doesn't say much about how this is done, but the enterprise lean startup movement has given it a quite thorough treatment in terms of MVP's, cohort identification, and split testing.          Log in or register to post comments",7409
"09:34 pm January 5, 2017                    Happy New Year everyone.   IMO the sprint release is a 'Fit For Purpose'. In Craig's spreadsheet example above it serves the purpose of data entry. The next sprint release could be the purpose of cell formatting etc. The Product as a whole can not be used as yet. When the decision is made that the product could be shipped (wrapped and packaged to be bought on the shelf so to speak) that release (the product release (say that happens after 15 sprints have been completed)) would be 'Fit For Use'. All the activities you mention would happen around this 'Fit For Use' product release. Can e.g. training material be created at the time of the 'Fit for Purpose' releases? It could. It would just describe the data entry and would evolve with the next sprints,  'Fit For Purpose' can mean that this 'building block' is developed, tested etc. and ready to be hooked in the end product when the time comes. e.g. building a house with pre-fab components. Every pre-fab component is ready to be used. It doesn't make a house fit for living yet.  'Fit for Use' is combining these pre-fab components to a point where the house-owner says I can move in. He/she might not mind that not all components are installed yet but as long as there are two bedrooms and bathrooms available they move in. That's a choice. The pre-fab kitchen comes in two weeks so they just get take-away in the meantime. The value for them would be that they don't have to pay rent somewhere else while waiting for the whole house to be completed. When the kitchen comes they know it will work from the moment it is installed. That work, including the testing of the appliances has all been done. They can go grocery shopping to fill that freezer when the guys are installing the kitchen. They know the freezer works so they don't run the risk that whatever they buy will go off.  I know this looks like a simple explanation but as Einstein said ""“If you can't explain it to a six year old, you don't understand it yourself.” :)          Log in or register to post comments",7409
"12:23 am January 7, 2017                    Craig, I understand your dilemma and I have the same issue, how can a large product that is developed in 2 week increments have any ($) value to the business. It doesn't make sense in a practical sense.  If I buy a video game and it's functionality is drip-fed every two weeks then why would I even buy something like that?  When I buy it, the character can only jump up. After two weeks he can move to the right and jump up. After another 2 weeks he can jump over one obstacle. Etc. by the time I can play a real game, 6 months have past.  So this game has no value to me as the customer when I buy it after the first increment. I have to wait til this game is fully developed before I can enjoy playing it.  But does it mean that there is no 'business value' in the increments? Not a $ value as such. But there is value.   - seeing that character jump up and down and evolve through the increments is much more valuable than just getting a tick-box on a project plan 'character able to jump up and down' and 'character able to move to the right'  -demonstration and visualization give a much  'warmer feeling' than the tick-box 'milestone completed'. When my kids travel to Europe I love to see a selfie in front of the Eiffel Tower with a big smile. That gives me a much warmer feeling and confidence that everything is OK than an SMS saying 'in Paris now'.  Business confidence in the product and the methodology you're using to get there works in the same way. If you're able to give them 'a warm feeling' or the 'warm fuzzies' that everything will be OK has great value. If that can be accomplished with the 2 weeks sprint and a demo of what's done and works, then you're good.   I find it hard to come up with an example where the dollars start rolling in after a 2 week released product... and continue to flow in after another 2 weeks etc. And I certainly don't see customers lining up to buy such a product (like the video game I mentioned)...  So 'releasable' is more about the quality than about the usefulness. The quality is the business value in this case.          Log in or register to post comments",7409
Log in to reply,7409
Messages,7470
"01:28 pm January 4, 2017                             I am new to SCRUM and just started reading SCRUM guide. Here I have 2 questions to clarify.   In Spring Planning section, it says:  ... The Development Team usually starts by designing the system and the work needed to convert the Product Backlog into a working product Increment....  Q1. Does this mean Development team does designing work on Spring planning meeting ? If not, would you explain?  In Sprint Review, it says  ... The Product Owner explains what Product Backlog items have been “Done” and what has not been “Done”; ....  Q2. According to the reading up to Spring review, Product Owner won't have formal meeting with Development team as only Dev.team is having Daily Scrum meetings. This above sentence is somehow conflicting or confusing to me. I am wondering how will Product Owner have clear info about what has ""Done"" or what has not?",7470
"08:15 am January 5, 2017                    Q1  Yes, the Sprint Planning Meeting contains 2 topics : What will be done ? How will we build it ?  The ""How section"" is a good place to have high-level design work with the full Dev Team.  Q2  The PO should work with the Dev Team during the Sprint, as required. Generally speaking, when the Dev Team feel that an item is done, the Dev Team should ask a feed-back from the PO as soon as posible.  The PO mut not ""discover"" the increment during the Sprint Review. The PO is part of the Scrum Team, not a distante stake-holder.          Log in or register to post comments",7470
"07:36 am January 6, 2017                    I agree with Oliver.   Regarding with the second question, I would also like to add that,   ""The PO is the sole person responsible for managing the Product Backlog"", and as PBI's are selected for the sprint by the dev team, they still belong to the product backlog (is not like the items move from the PB to the sprint backlog). The PO as responsible of the PB should always inspect it by performing refinement activities of PBIs and if necessary add or remove work without altering the sprint goal. All this by providing transparency and in accordance to the definition of done.   The PO should collaborate constantly with the DT and vice versa. When the DT is ""done"" with a PBI, the PO should know it and performs a verification of that individual PBI. This is where user stories prove very useful as they can have acceptance conditions that should be written by the PO and be transparent in addition to the sprint definition of done. If the PO consider a item not done by its acceptance condition then rework can be performed before reaching the the sprint review.   hope it helps.          Log in or register to post comments",7470
"04:07 pm January 6, 2017                    Thanks guys!          Log in or register to post comments",7470
Log in to reply,7470
Messages,7415
"07:35 pm November 25, 2016                             Hello,  Needed expert advice on the following below. Would appreciate your inputs and thoughts. Thanks in advance.  We are a team of 8, as part of year-end budget fulfillment, management is hiring 8 more resources (4 Dev, 2 QA, 2 BA). That makes our 16 member team with 1 scrum master.  per my knowledge, agile process works best with team size 7-8. How do we handle this surge in team size?  1. Can we spilt this team into 2 sub- teams?  2. If yes, do we have 2 seperate daily- stand ups?  3. How do we apprise meeting minutes to both teams cohesively?  4. How do developers handle application changes/ code changes etc, to ensure there are no conflicts to the code base and one-developer work is interfering with another?  5. How should both teams interact with other, to ensure there is smooth continous communication without any gaps in understanding?  Would truly appreciate your expert thoughts.  Regards,  SR",7415
"05:20 am November 29, 2016                     There are multiple questions, let me try -  1. Though it may be good but not mandate to split the team and why just 2 and why not 3 or 4? Let them start working together, face the issues and find out the solution themselves.  2. Each Scrum team should do their own Daily Scrum. There is nothing called Daily Standup in Scrum  3. Teams can do a Scrum of Scrum after their team's Daily Scrum to apprise any cross team dependency. At-least one member from each team should attend it, they can decide the frequency of it - daily, alternate day, weekly, whatever works for them  4. Refine your DoD to include the ""Integrated Increment as an outcome"". Also upgrade your Engineering practices to follow the Continuous Integration, use build automation with automated test suite  5. Use Sprint Planning, Sprint Review, Scrum of Scrum etc.. as a touch point.  Hope this helps           Log in or register to post comments",7415
"06:52 am November 29, 2016                     I don't see the Product Owner mentioned here.   Will the backlog be split between the two teams? will there be one Product Owner for the total backlog and two new Prod  Owners for the two teams? Will the backlog be devided in Features and handled by the two teams accordingly?           Log in or register to post comments",7415
"08:13 am November 29, 2016                     If there is One product then One Product Backlog and One PO. Based upon the ordering/prioritization done by the PO teams can pick up the items from the same Product Backlog  Teams should be working on the most valuable items first, that means multiple teams working on the same feature but different PBIs.          Log in or register to post comments",7415
"09:47 am November 29, 2016                    Did the team ask management to provide 8 additional members? If so, what was the team's thinking about how this change would be accommodated?  If the team didn't ask for this 8-person increase, what do they think about such a change being imposed? What are the implications for their ability to self-organize?          Log in or register to post comments",7415
"01:57 am December 7, 2016                    Thanks Sanjay, Nicko and Ian for your expert inputs. This is indeed helpful. Our current approach is to continue having one team, keep a tab on any issues encountered during the sprint and implement any lessons learnt during team retro.          Log in or register to post comments",7415
Log in to reply,7415
Messages,7423
"07:21 pm December 1, 2016                             When a team is not able to complete an item from their Sprint Backlog, and it is properly re-estimated and put back into the Product Backlog, how is the velocity calculation performed?  For example, let's say that the item had an estimate of 12 points when it came out of the Sprint Planning.  When the timebox was nearly over, it was determined that it could not be completed in time.  It was estimated that there were 3 points remaining to complete the work, and it was returned to the PB.  Those 9 points of completed work -- are they part of the velocity for the current Sprint, or are they discarded?  Thanks,  Craig",7423
"09:07 pm December 1, 2016                    There's no such thing as ""9 points of completed work"". Work is either completed and made available in an increment, or it isn't. The value of completed work can be measured a number of ways...but it is very, very unlikely to be in points.  Points are a means for a Development Team to estimate how much work can be taken on in a Sprint. By extension they may also show the work that is thought to remain in the Product Backlog, if that backlog is fully sized. That's it. They have no value as any sort of currency, nor do they proxy for value.  In the example you give, the size of the product backlog will presumably be reduced by 9 points, assuming no additional work has been added and all other estimates in the backlog remain constant. They cannot contribute to a velocity measure since there has been no corresponding throughput or delivery of value.          Log in or register to post comments",7423
"09:24 pm December 1, 2016                    Ian, thanks for the response.Yes,I guess I shouldn't have used the word ""completed"" when referring to work effort that went towards that incomplete item.  If I understand your comment, when the velocity of the team is considered for that Sprint, the effort represented by the reduction in the item's estimate from 12 to 3 is lost.  If the other items that were included in the done Increment represent 30 points (ie, the team had originally planned 42 points), the team's velocity will appear to be 30.  Yet, it seems to me that the team is capable of accomplishing about 39 points in a Sprint and that is a better number to be used (or for averaging in) for future planning than 30.  Without doing so, it seems that empericism (sp?) is lost.  Am I missing a significant concept?  Thanks!          Log in or register to post comments",7423
"09:41 pm December 1, 2016                    > Yet, it seems to me that the team is capable of accomplishing about  > 39 points in a Sprint and that is a better number to be used (or for  > averaging in) for future planning than 30  That's the thing though, points are never accomplished. Incremental deliveries of value are accomplished.  > Without doing so, it seems that empericism (sp?) is lost.   The evidence you actually have is that the team delivered value which was estimated at 30 points. No other value was provided. Any additional work that was performed will have consequences for the amount that is thought to remain, hence the size of the Product Backlog can be expected to reduce accordingly.          Log in or register to post comments",7423
"10:09 pm December 1, 2016                    This might be something I just have to accept rather than have it make sense to me :)  Had the team chosen a 9 point item rather than the 12, they would had a velocity of 39, rather than 30.  Or, if that re-estimated item is put back into the next Sprint along with 36 other points, they are likely to complete it.  In that case, their average velocity will be captured as (30 + 39) / 2 = 34.5, whereas if you were to look at the total estimated points they achieved over the two Sprints (as a whole), they completed 78 (average of 39).  As a PO, working with the DT at the next Sprint Planning (or even planning the longer-term release), which yardstick would you prefer to use to guide the forecast to a realistic goal to maximize value -- the 34.5 or the 39?  I realize these numbers aren't that far apart, but imagine the same thing with a much larger gap.  Of course, my traditional PM training includes a lot of ""Earned Value"" study, so that can be tainting my view, but when an item expected to ""cost"" 100 hours of effort is 50% completed, you get credit for 50 hours of value (whether it took 30 hours or 200 to get there).  I'm here to learn!          Log in or register to post comments",7423
"10:18 pm December 1, 2016                    > Had the team chosen a 9 point item rather than the 12, they would had  > a velocity of 39, rather than 30  Correct...but they didn't. That's empiricism.  Bear in mind that it is entirely up to the team how they estimate how much work they can take on in a Sprint. If their velocity was 30, and they knew they had 9 points of capacity which was spent doing undelivered work, then there is nothing to stop them from taking that into account in the future. It is simply the case that, in terms of evidence, a deliverable increment sized at 30 points was most recently provided.          Log in or register to post comments",7423
"10:41 pm December 1, 2016                    Thanks, Ian. I understand that the DT determines what they can take, so it makes sense that the (perhaps temporarily) wasted effort doesn't necessarily affect their future planning.  For the PO creating the Release Burn-down chart, that will be affected if using the velocity numbers this way, perhaps artificially projecting a later release (or fewer PBIs).  I appreciate the discussion.           Log in or register to post comments",7423
"10:44 pm December 1, 2016                    Hi Craig,  Average Velocity is usually done over the last 3 sprints. As the team might be new and has a few teething problems, doing it earlier would not reflect a reasonable number.  There are a few options for an incomplete user story and its points:  - The team only gets credit for the completed work. So if it's completed in the following sprint 2, all 12 points got to sprint 2 and 0 in sprint 1.   - If the work will be completed in a future sprint (eg. Sprint 4) then split the user story (in 9 and 3 points) and create an additional one for the 3 pointer, with the uncompleted part. Mark the 9 pointer as completed in sprint 1 and complete the 3 pointer in sprint 4.  Was the story too big and should have been split earlier maybe? Was something else preventing the completion?  The idea in Scrum is to deliver Value items in the sprints. Value as in Value to the Customer. So it's Value driven development and not Velocity Driven Development. Revisiting some items in the backlog and see if they can be split up to avoid future situations like this would be one of the first things you could do.           Log in or register to post comments",7423
"10:53 pm December 1, 2016                    - If the work will be completed in a future sprint (eg. Sprint 4) then split the user story (in 9 and 3 points) and create an additional one for the 3 pointer, with the uncompleted part. Mark the 9 pointer as completed in sprint 1 and complete the 3 pointer in sprint 4.  Please don't choose this option, Craig.   Any effort around re-estimation in order to clarify or get credit for what was ""done"" in a sprint is a very wasteful practice.   Don't do it.  Nicko has s correct approach wit his first option, though.   When the 12-point story is completed, all 12 points will get credited to that sprint.   It all balances out.  The team should use their velocity as a measuring ""guide"" for forecasting future work.   They should not have a hard and fast rule around meeting or exceeding their velocity.   The team should always rely on their best judgement when forecasting sprint work.   If a story was carried over, and the team knows that most of the story has been completed, ensure that they take that into consideration when making their forecast.           Log in or register to post comments",7423
"02:00 pm December 5, 2016                    There is another option - do not use story points. Instead, work on creating smaller stories that take on average 1-3 days to deliver; then just count the number of DONE stories in each sprint - this is your velocity.   The variation in the size of the stories will average out over a few sprints. Your ability to forecast the amount of work a team can take into a Sprint will also improve due to the relative simplicity of the process...          Log in or register to post comments",7423
"03:26 pm December 5, 2016                    Nicko/Timothy -- yes, I am partially comfortable with Nicko's first option -- that salvages the team's *average* velocity as the long view captures all the points (assuming that the re-forecast item is eventually re-introduced into a Sprint and completed). It still distorts the pattern of the team's productivity (referring to ability to accomplish work, irrespective of when/if it made it to ""Done""). I recognize that might be a different metric (not defined in/by Scrum, but permitted within its framework), but there is usefulness in understanding if the team is becoming more efficient -- working together better, using tools to their advantage, etc, apart from what comes to completion in the Sprint in which it was first introduced.  Boris, yes, I agree -- the smaller the items are, the less distortion there is when the situation arises. Thanks!          Log in or register to post comments",7423
"01:33 am December 6, 2016                    Boris' suggestion is good esp. when starting out and it avoids your 9-3 issue. It's basically doing my option 1 beforehand and not afterwards.   Not using story points as such might give some confusion for the team members, but de-chunking stories to a level of 1 to 3 points is a good way to go.   Try to avoid focusing on Velocity only. A valuable item should be delivered. That could be an item with only a few story points for that sprint. It's not an indication that the team hasn't done any work as they have worked on an item that just can not be delivered in this sprint but will be delivered in a later one.           Log in or register to post comments",7423
Log in to reply,7423
Messages,7428
"05:42 am December 5, 2016                             Hello, I have below question from Nexus Assessment which I really don;t get but i was able to answer correctly after trial and error of the different options   1. There is a question about the two factors that should be most considered when establishing the length of a sprint. the answers are 1. The risk of being disconnected from stakeholders ?????? and 2.The level of uncertainty over the technology to be used  Could someone explain what the answer 1 has to do with it?  Thanks",7428
"06:51 pm December 5, 2016                    If stakeholders have to wait longer to receive an increment, wouldn't this attenuate their ability to provide timely, empirical feedback to the Scrum Team?          Log in or register to post comments",7428
Log in to reply,7428
Messages,7429
"07:35 am December 5, 2016                             In trying to determine which questions I might have missed on an exam, I want to confirm my understanding of the Sprint Backlog, specifically its state at the beginning of the Sprint (well, when the Sprint Planning meeting has finished).  I believe this to be the Development Team's ""plan"" for that Sprint, not a complete task list.  Now, these two things can sometimes sound like the same thing, but I don't see how a complete task list could be put together in the time allowed for the Sprint Planning. In fact, some of the selected items might need some more refinement before such a list would be possible (as a Sprint could begin with just enough items fleshed out to fill the first several days). Is my understanding and reasoning correct on this?",7429
"07:58 am December 5, 2016                    Beyond a forecast of task, the Sprint Backlog is crafted around a Sprint Goal.          Log in or register to post comments",7429
"02:55 pm December 5, 2016                    Olivier, isn't it the other way around, i.e. isn't the Sprint Goal crafted from the Product Backlog items that the Development Team forecasts?  I'll admit that this always sounded a bit backwards to me, but that is how I read the Scrum Guide -- forecast the items, then craft the goal.  However, as you write that it is forecasting *tasks* (instead of *items*), are you saying your opinion is that the Sprint Backlog is a ""complete task list"" instead of the team's ""plan for the Sprint""?  Thanks!          Log in or register to post comments",7429
"03:41 pm December 5, 2016                    > isn't the Sprint Goal crafted from the Product Backlog items that   > the Development Team forecasts?   Yes but bear in mind that the subset of PBI's which are forecast do not wholly represent the Sprint Backlog. The technical activities for meeting the Sprint Goal must still be planned. This is the second topic addressed in Sprint Planning, and is conducted only once a Sprint Goal has been formulated.          Log in or register to post comments",7429
"04:06 pm December 5, 2016                    Ian -- that's helpful -- thank you.  However, I am probably hung up on semantics in trying to understand which answer was correct.  We often suggest that a Sprint is, itself, a project.  For me, I think of a traditional ""plan"" as being the ""who, what, when"".  However, at the end of the Sprint Planning, you won't necessarily have that for the entire Sprint -- maybe for the first several days, but not for the entire Sprint. So, from that perspective, it isn't a ""plan"", so that's not a great answer. Of course, one can think of a ""plan"" as simply being the approach (ie, more high-level, not yet having all the ""who"" assigned or all the micro tasks yet identified); if so, that could fit.  On the other side, it can't be a complete list of *all* work for the Sprint, either.  Yes, a list of needed tasks would be there, but not a *complete* list of all tasks to complete the Sprint, so that's not a good answer, either.  Maybe I just need a better definition of ""plan"" and ""complete list of all work"" ...          Log in or register to post comments",7429
"04:18 pm December 5, 2016                    Think of a plan and a forecast as amounting to the same thing in Scrum, and as being evolved in a just-in-time manner. This implies that the various parts of the plan (or forecsst) may exist at different levels of granularity.  Hence, by the end of Sprint Planning, the first 2-3 days of a Sprint Backlog may represent a detailed forecast of work, while the remaining activities or tasks might potentially be planned only in sketch.  Remember that no matter how vague or detailed a plan of work, the total forecast ought to be quantifiable so that the amount that is thought to remain can be summed.          Log in or register to post comments",7429
"04:38 pm December 5, 2016                    Ian -- another big thanks to you!  Interestingly, I had this exact question on two different exams. Both times, I wrote it down to follow-up because it was one of several that I was unsure about.  One one exam, I called it a ""plan"", on the other, a ""list of all tasks"".  So, I obviously missed it on one of them. In looking at the categories identified in the test results, on one exam, I had two missed 2 total questions (1 in Scrum Framework, 1 in Scrum Theory & Principles); in the other exam, I didn't miss anything in those two categories and the two categories I did miss anything don't appear on the first exam.  So, by reasoning, I can tell for sure that I missed it on the first one, and that seems consistent with the discussion we just had here.  That raises another question I've had -- what category would this question be in -- ""Scrum Framework"", or ""Scrum Theory & Principles""?  I really wish the exams would show you the question's category as you are presented with it.          Log in or register to post comments",7429
Log in to reply,7429
Messages,7376
"08:28 am October 16, 2016                             Hi All,  I have cleared PSPO 1 with 95%. Thanks for all support provided in this forum.  thanks  Muthu",7376
"11:46 am December 5, 2016                    Hi,   Congrats.   Can you please post a lessons learned post, for others who are attempting the certification?   Thanks.            Log in or register to post comments",7376
Log in to reply,7376
Messages,7411
"09:01 pm November 22, 2016                             Hi,  1)  in a training test, I met demand:  In Scrum projects, we plan to ""learn as we go"" because...  Correct annswer:  Many projects are evolutionary, and a better solution emerges thisway  In your opionion what is ""learn as we go""? I did not found it in no one  manual  2) in a scaled scrum, all team that work on same project must to have same sprint length and sprints must start at same day.  Is it correct?  Thank to all.  Andrea",7411
"11:33 am November 23, 2016                    Hi Andrea,   1, What does Scrum Guide say?  2, Which Scaled Scrum you referring to? What will happen if we have different Sprint length and not start at the same day? The answer is : depends.   Cheers  Herbert           Log in or register to post comments",7411
"06:32 pm November 24, 2016                    Hi thank you for kind support.  In 1 maybe I did not undertand terminology or way of say:  ""learn as we go""...  In 2 my ask is: if scrum teams do not have same sprint length, how can they partecipate together to nexus event?  For example all srcum team should finish their sprint for partecipate to nexus review I think, Is it correct?  Anyway I study better scrum and nexus guide.  Thank you again.           Log in or register to post comments",7411
"12:23 pm November 26, 2016                    Hi Andrea,  1, For your reference :  ""Scrum is founded on empirical process control theory, or empiricism. Empiricism asserts that knowledge comes from experience and making decisions based on what is known. Scrum employs an iterative, incremental approach to optimize predictability and control risk.""   2, I guess you answered already.  :)  Cheers  Herbert           Log in or register to post comments",7411
"09:36 pm November 29, 2016                    Hey Andrea,  1. In my interpretation ""learn as we go"" means two things: in the product development aspect, we are getting more insights as we make progress (e.g. after we start implementation of a feature we learn that our initial design needs adjustment). In the process aspect, we learn how to improve our scrum process every sprint (that's what the retros are for).  2. Correct, in Nexus, sprints of all teams must have the same length.  Hope this answers your questions.  Michael          Log in or register to post comments",7411
"08:05 am December 5, 2016                    Thank you to all.          Log in or register to post comments",7411
"08:06 am December 5, 2016                    Thank you to all.          Log in or register to post comments",7411
Log in to reply,7411
Messages,7384
"03:47 pm October 23, 2016                             I am heavily thinking about a topic for days now and can't come up with a solution.  I am a scrum master and we started scrum 6 weeks, so 3 sprints ago. Now our team working on the same product will be extended to 18 team member, excluding SM and PO.  We will obviously split the team, but I don't know how.  We are working on a gui with let's say 60 dialogs. Each dialog will take multiple sprints and realisticy only two to three team member can work on one dialog.  In all the meetings like daily and sprint plannings, I noticed that the dialogs are so different that one team member working on dialog a is not very interested in dialog b.   The result would be to split the teams into one base team, consisting of six team members and four teams consisting of three team members each, doing features, so a mixture of component and feature teams.  I read alot about this topic and it was always said that it should be at least four members in a team, five to six is ideal.  What do u you advice?  I feel like if I split it into three teams of six members each and working on two epics per team might not be efficient, as half the team would discuss stories, which they won't work on.  I apppreciate any input.",7384
"08:53 pm October 24, 2016                    Theoretically, the dev team is to decide how to split, not to adapt a decision made for them. However, it doesn't mean nobody should guide them  I'd recommend asking the dev team questions, like ""if I ask you to split the backlog items by complexity/technology/hierarchy/etc. how many groups would you define?"" or ""what are the dependency you see with implemention of these backlog items?""  If all the tasks are really independent from each other, I'd recommend having larger teams rather than smaller.  And, BTW, where did you read 5-6 is an ideal? Scrum guideline recommends 3-9.   P.S.: Here're a relevant topic you might like to read: https://www.scrum.org/Forums/aft/680           Log in or register to post comments",7384
"11:55 pm October 24, 2016                    Regardless of how the teams are put together, they will need to collaborate on delivering an integrated release-quality increment each and every Sprint. With anything more than 2 teams a Nexus is likely to be needed to co-ordinate the associated dependencies.  So, if a Nexus was to be implemented in your situation, how would it want those integration dependencies to be resolved? How would Development Teams be assembled in order to make the integration challenge easier to manage?          Log in or register to post comments",7384
"04:22 pm October 25, 2016                    Hi Ejej,  I understand that there is limitation on how much you can explain online and how much I can visualize. Let me explain my experience about similar situation which might help you.  If there are multiple items of similar type of technical work, try to group them in feature/epic such that there is minimum interdependence. In order to create cross functional team, check what are the skill required to complete each work item. Based on timeline available and resources in hand, you can decide how many cross functional teams can be formed. It looks like you have full stack developers who would like to finish work item completely on their own. To increase level and need of collaboration, suggest team to swarming so that when one developer is coding other will create test cases or test data. If required, use pair programming or pair review so that knowledge is available with team rather than any individual.          Log in or register to post comments",7384
"05:41 pm October 26, 2016                    Thank you three for your input. It definitely helps. What I learned so far is that the team should try to find itself by identifying how they think is the most efficient way of finishing work. That is what we will try tomorrow. I also like the input that not every developer needs to do all tasks of one story. They kind of know that but not to the full extend.  And I will give myself and the teams more time to prepare the split to be fully prepared.  I will let you know how it developed.  Thanks again.          Log in or register to post comments",7384
"11:52 pm October 27, 2016                    Please update with the actual outcome after your next sprint          Log in or register to post comments",7384
"07:53 pm December 1, 2016                    Hey everyone,  I owe you an update on the transition.  We are in our second sprint after the transition. We now have one components team for base development, which is currently mainly doing bug fixes, because it is the bottleneck for the other teams. This teams consists of seven team members.   Then we have three feature teams with four members each.  The result is: overall I am happy with this current state. It worked out pretty well. The teams do work together, don't block each other and talk to each other. And today it happened that the team members started to identify issues themselves (one was taking note of the things that hold him back from his actual tasks yesterday. I was able to talk to him about those issues and worked out solutions to solve those.)  There is still one person who is blocking and tries to ""argue"" against all this. It it very tough to make him a real part of a team and I fear that his behaviour is slowing his team down. But at least the other members don't listen too much to him and try to push scrum instead.  So overall I feel like we are going in the right direction, although I know it would have been better to get a coach in the first place. If this big project is over, I definitely plan to do this.          Log in or register to post comments",7384
"09:54 am December 2, 2016                     Try to find out why that person is against the new arrangement. What are his apprehensions or motivation? Ask for Scrum adoption impediments during the Sprint Retrospective meeting and how can the team or Scrum Master resolve them.          Log in or register to post comments",7384
"03:41 pm December 2, 2016                    I recently attended a great meetup that was about working with difficult people.   There were many great takeaways, but one that really stuck with me is as follows:  It is extremely rare to come across someone who just likes being a jerk.   In almost every instance where someone is being combative, or difficult, or poisonous to the team, the key is to realize that their behavior is a means to an end.   What is their motivation?   What are they hoping to achieve through the behavior?   What is their end-game?  Once you gain that insight, you're much better equipped to address that behavior (and that person) going forward.  Good luck.          Log in or register to post comments",7384
"07:30 pm December 2, 2016                    I talked to him personally. He mainly says that he thinks ""all this story writing and those meetings are a waste of time"", but he immediately admitted that he does not have a better solution.   I personally feel that he does not like the changes of roles. He is still the team leader of most of the guys of the feature teams. Due to the small self organising teams, his role does not have that much of an impact anymore.  And I feel like he fears that he is not able to keep pace with all the new changes. I tried to work on this topic by helping him on specific topics. But on the other hand, I don't want to treat him like a special case who is the only one who needs assistance.  I don't feel like I can solve this on my own or at all. My hopes rely in all the other teams and team members. When he sees that 17 out of 18 have improved on productivity and quality, he might start to reevaluate his role and behaviour.          Log in or register to post comments",7384
Log in to reply,7384
Messages,7417
"07:20 pm November 27, 2016                             Hi, I am preparing for Scrum Master accreditation and found this question which I am not sue about the answer.  ""A Scrum Master has a list of open impediments which is growing without proper resolutions. The Scrum Master consults with the Development Team on the problem. Is it right?.Answers: A. Yes B. No""  I am not sure if the answer should be No, as Dev Team should be self organised and maybe it should be the other way around, Dev Team ask Scrum Master.   What do you think about it? Could anyone help on this?   Thanks",7417
"05:00 pm November 30, 2016                    A significant part of the Scrum Master's role is to remove impediments facing the Development Team. It isn't clear to me what the second sentence of the question implies, but whatever is needed to clear the impediments must be done, and it is the SM who leads that effort.  If he or she needs to consult more with the Development Team in order to understand the impediments (or if they have involvement in clearing the impediment), then consulting with them is appropriate.  However, the fact that the SM has a list that ""is growing"" suggests that the SM isn't keeping up with the responsibilities of the role.          Log in or register to post comments",7417
"05:47 pm November 30, 2016                    > I am not sure if the answer should be No, as Dev Team should be self organised...  It's reasonable for a Scrum Master to collaborate with the team on removing *any* impediments that affect their ability to meet the Sprint Goal, irrespective of how many there are, or whether or not the list is growing.          Log in or register to post comments",7417
"09:07 am December 1, 2016                    Agreed with Ian's explanation. Key here is the collaboration, SM must consult with dev team on them. If they are related to development team's ""work"" they must be responsible to solve them and self-organise to clear or minimize this backlog, if they are organizational (out of dev domain or team) SM can solve them without consulting the team but keeping it updated.          Log in or register to post comments",7417
"09:48 am December 2, 2016                     Another thing - if Scrum Master has a LIST of open impediments then how does he know which one he should pick up first. It makes sense for him to consult the Dev team, get them prioritized and work accordingly.          Log in or register to post comments",7417
Log in to reply,7417
Messages,7412
"08:21 pm November 23, 2016                             Hi,  I am considering a position with a major (well-reputed) company that wants a ""Project Manager/Scrum Master"".  Obviously, they are not yet applying real Scrum.  However, I understand that they recognize that, and they want this hire to bring them into full Scrum.  As their organization understands traditional roles (e.g. PM) and waterfall and some iterative development, they feel that the candidate should have the strong PM background in order to initially engage well. I definitely have that.  The job requirements and responsibilities seems to be an aggregation of what you'd see for each of the roles.  I won't reiterate the expected SM tasks, but the PM side includes such things as ""running meetings, maintaining team backlogs, planning sprints, plan/direct/monitor release activities, run sprint demos, report progress and budget"".  It also mingles in what should be Product Owner responsibilities such as ""Manages changes to scope in the backlog and stories, status reporting to Sr. management"".  There's more, but I think you can get the idea.  I have not yet spoken to the IT & Business management, so I don't yet know the size of the team (or if scaling is involved), but I see this as quite a challenge.  If they convince me that they are serious about shifting to proper Scrum and that I have the authority to facilitate that move (must of which will be shedding many of these responsibilities to the Development Team(s) and the Product Owner), I am interested.  If not, I see it as a great challenge on which I'm apt to pass.  I'd love to hear from anyone that has taken a similar challenge ...  cjc",7412
"10:27 pm November 23, 2016                    > If they convince me that they are serious about shifting to proper Scrum...  Do you have a clear idea of the evidence you will be looking for?          Log in or register to post comments",7412
"01:37 am November 24, 2016                    Ian, thanks for asking. I don't have a checklist of what I'd be looking for, but I want to be convinced that management is ready to give up the traditional control to the teams for the planning and content, and prepared to defend ""pain"" (transitional loss of productivity, staff impact in the forming/storming/norming process, etc) as they move to real Scrum.  And to understand their expectations in terms of time it will take, see if they have a reasonable idea of the opposition they will meet, and hear what authority I would be empowered with in my role to make it happen.  After this, I would spend a good bit of the interview process telling them the issues I see in the job description, what it tells me about the situation, and what my 90-day plan would likely look like.  Their reaction to the critique should reveal a lot.  Now, if they are truly knowledgeable of Scrum, they could snow me into a false sense that they are sincere about this.  Any insights you can offer (or criticism of the above) is appreciated!          Log in or register to post comments",7412
"11:26 pm November 24, 2016                    Hi Craig,  This sounds more like AgilePM, from APMG and it's a mix of DSDM and PRINCE2.  Proper SCRUM does not have a Project Manager. It's one of the fundamental differences to AgilePM.  My experience is that organizations that try to implement AgilePM will never move to proper SCRUM. The idea of having one person (the PM) responsible and accountable for everything that can go wrong with a project is still the preferred way to go for most larger organizations. I dare to say that some people in the organization actually look forward to it!  If your project is a success then there's no reason for them to move to full SCRUM.  If your project is not successful, they have a reason to stick to Waterfall in the future.  Organizations that are serious about the transition will employ a SCRUM Coach (not an Agile Coach who prob sticks to AgilePM) to guide the team (PO,SM and Team). Not a Project Manager/Scrum Master.           Log in or register to post comments",7412
"10:23 pm November 28, 2016                    > ...and hear what authority I would be empowered with in my role to make it happen  That is a potential trap, because it is easy for them to say ""we give you all authority"". Then you find that you are not in a position to make anything happen. What they've done is to shift their organization's transformational risk onto you. It's an old trick, very often used by middle managers who want to walk away from the problem.  What you need to figure out is how the organization intends to provide sponsorship for adopting Scrum:  - What is their vision for agile change? Does that align to Scrum and/or Scaled Scrum?  - What barriers do they believe currently exist, to creating fully integrated release-quality increments, every Sprint?  - How are they going to work with Scrum Masters to overcome these barriers? (Hint: expect quality time from them, not a meaningless and misplaced ""authorization"")  - How do they intend to work with SM's to scope and order a shift to Scrum, and control transformational risk while the company is in flight?  - Who will own the organization's Scrum transformation initiative, and be responsible for its success? (Hint: it shouldn't be you, unless they're inviting you onto the board)  - Who will coach the change? (Could well be you and/or other SM's. If they intend to have a separate coach, find out what your relationship will be)           Log in or register to post comments",7412
"10:56 pm November 28, 2016                    Ian,  Thank you very much for the added insights -- you've given me some focus for the discussion!          Log in or register to post comments",7412
"06:35 am November 29, 2016                    As not every project is suitable for Scrum, full transition is not needed. Running a Scrum project should be an option in the organization, not the new and only way. The introduction of a new methodology without taking away the old one might give less resistance.  Compare it to a family that has only played Checkers and one day Chess is introduced. How can the family transition to chess? Play checkers with chess pieces, or Chess with Checker pieces etc. You get the idea. Both games can only be played by their rules, their pieces and players need to know the rules and play according to these rules. Instead of forcing the family to transition to Chess, why not introduce it as an alternative game to play?   Run the new project according to the Scrum rules. Train the people in Scrum and don't try to create hybrids just because the organization is used to a certain way of working. Accept the alternative and don't take away the old ways.   Nobody is helped with a game of CheckChess or ChessCheck...           Log in or register to post comments",7412
"03:53 pm November 29, 2016                    Nicko,  Thanks for the interesting analogy! The company I am talking to is a very significant one in terms of size and international presence. When I refer to transitioning the organization, I'm only referring to the part that is around this particular product delivery channel -- ie, the immediate family, not the cousins :)  My concern is that the family knows and is comfortable with checkers, but they've heard that chess is ""all the rage"" and players develop deeper reasoning skills. They look into it just enough to learn that it uses the same board, and they even both have ""Kings"".  But, they aren't ready to go full chess, so they decide they should just rename the (non-King) draughts as ""pawns"", add a play clock, and otherwise continue to play the same way.  After doing this for a few months, their kids still haven't qualified for Mensa, no scholarships forthcoming, and no one is any happier.  Worse yet, when their checker-playing family friends visit, there is confusion, though not nearly as much as when their chess-playing family friends visit and want to play :)  I certainly take your point that not all efforts will be a good fit for Scrum, and introducing it as a new approach for a new project (without threatening or disrupting the traditional projects) has advantages.  My concern is that this group already has a hybrid, using the Scrum terms (role names, events), but misapplying them.  If they are really just swizzling labels around, but expecting a ""Scrum Master / PM"" to deliver the benefits of Scrum within that paradigm, the SM/PM will fail. I have many, many years of traditional IT Project Management -- if they want that, I can do it (not sure I want to).  But if they really want to see the benefits of Scrum, they need to recognize the changes required and be ready to pay the transitional cost.  I appreciate the discussion!          Log in or register to post comments",7412
"10:45 pm November 29, 2016                    Thanks Craig :)  Does your organization have a Project Management Office? If so, what is it's stand on SCRUM? One of the biggest hurdles is to get the buy-in/endorsement of the PMO. They can be very hostile to any changes and try to hang on to the traditional ways. eg. If you have to report weekly on Milestones then you have an issue as in Scrum you work on the backlog based on the highest priority items set by the Product Owner. This can change the day after the report. . Budget is measured against milestones, project completion is measured in %complete etc.   A few years ago I was silly enough to put my hand up for running the first Agile, half Scrum project. The CIO at the time wanted to 'stir things up' as he called it... and I got hammered by the PMO for not having a signed of business requirements doc, func spec, Gantt Chart etc  I was summoned for Gate reviews according to the Waterfall Method. It was an absolute shocker. I was branded the worst PM ever..lol   If the organization is serious about Scrum, then one train of thoughts is to make the PMO responsible for Scrum training. In that way they are at least on board. Or if you're a PM with a good relationship with the PMO based on your previous experience with them, they might be more lenient in your efforts to run a full Scrum project.   If they are not on board then you'll be fighting a battle you won't be able to win and unfortunately the PM saying 'you're only as good as your last project' might do you more harm than good in the future.  There are of course plenty more hurdles to overcome, like how self-organizing are the Team members, do they sit and wait for detailed requirement docs by the BA or do they talk directly to the PO, how much authority does the PO have to make decisions or does he/she leaves that to the PM (a role that shouldn't exist in the first place). And the list goes on and on...   and when it comes to transitioning and trying to convince senior management then (in my experience) ""Scrum is from Mars, Waterfall is from Venus"" and both camps need to be approached differently. Acknowledging that  is probably the most important step in any change process.          Log in or register to post comments",7412
"11:37 pm November 29, 2016                    Another thing to consider is this particular project and it's suitability for Scrum. If it's not a good candidate then it's another reason for 'them' to oppose the change.  Can this project be divided in Breakfast, lunch and Dinner. Or Appetizer, Main and Dessert and maybe Coffee after?  In other words can we deliver real Valuable items in stages? When I go to a restaurant and I'm hungry I'm very happy to see the waiter bringing the Appetizer/Entree. That keeps me going for a while and I'm looking forward to the Main. After the main I know the dessert is coming and sometimes there is even room for coffee after. Can we deliver this scrum project similar to this/ If so then the value of Scrum becomes more obvious.  If we also have an option to skip dessert and coffee because we're full and satisfied with what we had so far, then it's again a plus for using Scrum... It saves the pocket as well as we don't have to pay for dessert and coffee. It's not a set meal with a set cost.  If I ordered a one-pot main meal, without appetizer and dessert, then the value of the waiter coming over and telling me that the cook has chopped the onions and in 20 minutes he comes again and tells me that the carrots have gone in, then that becomes less valuable to me. It doesn't reduce my hunger as a nice appetizer does. I will probably annoyed with him and only think that I only want to see that guy again with a full plate of food!  If the project is like the one-pot main meal, then (IMHO) it's not a good candidate for Scum, esp. when you're fighting for full scrum transition. Appetizer, Main, Dessert, Coffee is the way to go.  Bon Appetit :)           Log in or register to post comments",7412
"07:15 pm December 1, 2016                    Nicko, thanks for the additional comments.  Maybe I'll have to go for a heavy full-course meal and a game of chess all in one sitting! :)          Log in or register to post comments",7412
"09:21 pm December 1, 2016                    Sounds like a plan to me :)   Good luck and keep us posted!          Log in or register to post comments",7412
Log in to reply,7412
Messages,6212
"05:34 am January 17, 2015                             I need some guidelines about preparing for the PSM I certification. I studied the guide and a number of books and I do consistently score 100% on the open exam. However, I tried the test twice and failed. First attempt 82% and second one 84%. Needless to say this is very hard to accept, especially failing for just 1 point.  Is there a strategy I could use that will take my knowledge beyond this and closer to 100%? I really cannot afford to waste another $100. My first language is not English so I guess this does not help either, however, I am sure I can prepare more deeply in such a way to go closer to the 100% mark.  Is there an online test facility (even if a paid service) that provide question styles closer to the PSM I (the open test is a bit far in terms of difficulty) and provide feedback on how you answered?  The Scrum.org feedback provides only statistics and this is not helpful at all, especially since in my case there is no correlation between the 2 exams:  Exam 1:  Scrum Framework 85%  Scrum Theory & Principles 80%  Cross-functional, Self-organizing teams 71.4%  Coaching & Facilitation 100%  Exam 2:  Scrum Framework 92.5%  Scrum Theory & Principles 70%  Cross-functional, Self-organizing teams 78.6%  Coaching & Facilitation 83.3%  Any guidelines are highly appreciated. Thank you.",6212
"03:07 pm January 20, 2015                    HI Saviour,  Are you currently a scrum master? Do you have real-world experience of serving a team in the role of scrum master? These will help more than anything.  One guideline that helps me - the scrum master doesn't make decisions for the team - he reminds them they can make the decision.   It looks like you could read up on the subject of cross-functional & self organizing teams - google is your friend, as well as reading the forum here, there are a wide variety of topics discussed, with great answers & insights often given.  Read the scrum guide over and over, until you pretty much know & understand it off the top of your head.  A scrum master doesn't have their own agenda for the team - he helps the team discover where they want/need to head and helps them get there.  My other recommendation is to ask any friends/mentors/this forum questions you are not sure about, for insight & understanding. I'd be happy to answer any questions that you have. I'm sure others would be also.          Log in or register to post comments",6212
"01:28 am January 21, 2015                    Try all 3 of the open assessments. They will exercise your knowledge from a different angle:  https://www.scrum.org/Assessments/Open-Assessments           Log in or register to post comments",6212
"12:57 pm January 23, 2015                    Saviour  Don't give up hope; you are really close to passing! I haven't personally done it, but other people on the forum have mentioned reaching out to Scrum.org for more help on what to study (I think this can be accomplished with an email).   I know something that caught me off guard were the questions on burn up/down charts. These aren't mentioned in the Scrum Open or the Scrum Guide. They do show up in the previous guide (2009) though, so I would suggest just looking at that section. It might give you enough information to answer one more question right.   Good Luck!          Log in or register to post comments",6212
"02:55 am January 27, 2015                    You are transparent in your problem statement. That is good! Now inspect and adapt!  ;-)  ===  Maybe you are not ready to pass the exam. I don’t know, you are the only one to decide. And if you pass, would you be happy to pass with just 85%? Or would you rather be closer to 100%?   Do you want to be certified to have better job opportunities? Or do you want to be a great Scrum Master and improve software and the way it is build?   If you land a job as a Scrum Master you will be responsible for the process of a Development Team and a Product Owner. And facing management that interrupts ‘your’ Development Team. Are you ready for that? And will you do so with confidence?  You can’t lose another $100. This means that you can’t afford a class.  Instead of learning from books only, you might consider watching presentations and videos readily available on YouTube. So you can establish better knowledge about Scrum in a way suited to your learning preferences. Some clips are good and some are rubbish. And be aware that Scrum has been changing in the last years, so some materials are outdated or even conflict with the Scrum Guide.   I think you can do it. But please aim for being a great Scrum Master, not just passing the assessment.           Log in or register to post comments",6212
"07:17 am February 9, 2015                    The same happened to me, i failed with 80% and 82,5%. I'm very concerned about how to pass it successfully. I actually fell prepared and it's difficult to improve it without knowing where are my issues. Sometimes i'm confused about the meaning of the questions.  e.g. ""Who owns the sprint backlog?""  I would say, it's the dev team, because they selected the items and they are the only one who are allowed to change it, because they are responsible to turn these items into a working increment. But if the sprint backlog is considered as a particular accumulation of the product backlog, the product owner would be the proper one in my point of view.  And there is one more question of my last trial. Unfortunately i don't properly remember the question, but something like. ""The only meeting where the stakeholders are allowed to invite?"" After the test i would say it's only for the sprint review, because the scrum team would like to get the feedback of the stakeholders. But during the test i was remembering, that i've read whenever it is necessary that someone wants to join a meeting, it is allowed. The main thing is they only should know about their role. For example, a stakeholder wants to join a daily scrum to see the progress, he is allowed to be present, but NOTHING else.  I would be very thankful, if you might help me out to improve my knowledge about scrum and fix my wrong optinion ;-)  My results:  Scrum Framework - 90% | 90%  Scrum Theory and Principles - 60% | 70%  Cross-functional, self-organizing Teams - 78,6% | 78,6%  Coaching & Facilitation - 83,3% | 83,3%          Log in or register to post comments",6212
"02:01 pm February 17, 2015                    Hi Daniel,  ""Who owns the sprint backlog?""  Yes, difficult question.  Now, consider again.   Who defines the Sprint Backlog? When? And who is communicating to who? And When? And from which certainties are they acting?           Log in or register to post comments",6212
"08:20 pm February 17, 2015                    The Scrum Guide says:  ""The Sprint Backlog is a highly visible, real-time picture of the work that the Development Team plans to accomplish during the Sprint, and it belongs solely to the Development Team"".  Therefore it is best to consider the Sprint Backlog to be an artifact of planning which is wholly owned by the Development Team.  This planning is tightly coupled to items that are selected from the Product Backlog, which the Product Owner wholly owns, and to the Sprint Goal which is jointly agreed by the PO and the Development Team. This tight coupling should be seen as a necessary and valuable part of an agile way of working, as it requires that technical and end-user stakeholders work closely together.          Log in or register to post comments",6212
"08:53 pm February 17, 2015                    """"The only meeting where the stakeholders are allowed to invite?....For example, a stakeholder wants to join a daily scrum to see the progress, he is allowed to be present, but NOTHING else""""  While stakeholders may attend the Daily Scrum as observers, they are not invited to the event. However, they are invited to the Sprint Review.  Scrum Guide (sprint review section)  ""The Sprint Review includes the following elements:   Attendees include the Scrum Team and key stakeholders invited by the Product Owner""          Log in or register to post comments",6212
"04:50 am February 18, 2015                    Hola,  I did also recently exam and passed, besides regular topics, you should also expect questions about scaling and non functionals, I think I got about 5 a 6 questios about these topics.  Success          Log in or register to post comments",6212
"07:54 pm November 19, 2016                    Hi Saviour,  I noticed that you scored 100% for ""Coaching & Facilitation"".   For my first SCM exam i got 82,5% average and only 50% for Coaching & Facilitation part.  =>  What advice can you give me to improve the part on ""coaching"" ? Did you prepare in a special way or did you focus on a article/book/video ?  thank you,  Lars.          Log in or register to post comments",6212
"07:07 pm December 1, 2016                    Lars,  I'm not sure if the breakdown of the number of questions in each topic area is formally identified anywhere (I couldn't find it), but I've calculated that the breakdown is:     40 Scrum Framework     20 Scrum Theory & Principles     14 Cross-functional, self-organizing teams     06 Coaching & Facilitation  With a passing requirement of 85%, you can miss 12 questions to still pass. You missed 14, but only 3 of those from the Coaching section, so don't let the 50% score on that section cause you to give more weight than it deserves for determining where you might study more. I didn't miss anything in that section for either PSM I or PSM II, and my advice is that when you see answer chooses that sound like you are dictating (like a manager would) to anyone, then that isn't the right answer.  In those cases, look more carefully at the choices that cause you to teach the team and/or to empower them to make decisions (at least those decisions that still fit the Scrum framework).  Craig          Log in or register to post comments",6212
Log in to reply,6212
Messages,7357
"04:44 am October 4, 2016                             Can the customer/stakeholder play the role of PO?",7357
"02:17 pm October 4, 2016                    Muthuvengatesh,  What does the Scrum Guide say about the requirements for a Product Owner?   Do you think a customer or stakeholder can fulfill those requirements?  Also, this specific forum is designed for exam and certification discussions.   The other forum is for Scrum inquiries and clarifications.          Log in or register to post comments",7357
"07:04 pm October 4, 2016                    I dont think customer or stakeholder can fulfill PO responsibilities. So I understand that customer cannot play the role of PO. I am preparing for PSPO, and hence the question.   thanks for clarifying.          Log in or register to post comments",7357
"09:42 am November 26, 2016                    I think it is possible, why not ?          Log in or register to post comments",7357
"01:21 pm November 28, 2016                    Yes, he can!   The core responsibility of PO is maintaining the PBI with maximizing product value, which is easy for him as he knows his business well.            Log in or register to post comments",7357
"02:15 pm November 28, 2016                    No, (s)he can't be the PO. Just read and try to interpret the Scrum Guide deeply.          Log in or register to post comments",7357
"02:22 pm November 30, 2016                    @Peter, why (s)he can't be the PO?  Who better than user knows in what way PB should be optimalized?  If (s)he can fulfill rest of requirements where is the blocker? Or which requirement block user as PO?          Log in or register to post comments",7357
"02:43 pm November 30, 2016                    Hi Pawel,  customer can't be the PO, because s(he) don't belong to the development organization (mostly) and this situation would generate a conflict of interest. It would mean, that (s)he is stakeholder and Scrum Team member in one person, and it's really likely that (s)he would prefer the interests of the client against the interest of the development organization. As you see, it isn't a healthy situation.  Greetings,  Peter          Log in or register to post comments",7357
"03:51 pm November 30, 2016                    If the PO cannot be the customer, that's a new one on me.  It's possible that in certain situations this *might* not be the best arrangement, but in others it will. After all, the PO is accountable for product value and the return on investment. There's nothing in Scrum which says that this role ought to be decoupled in some way from the customer...and to do so may well increase communication overhead and complexity.          Log in or register to post comments",7357
"10:18 am December 1, 2016                    A PO can be a customer. period. A PO can be external or internal to an organization. As long as the customer fulfils the duties and role of a PO, he can fill in those shoes......as mentioned by Ian above, it can create some impediments but is not forbidden.          Log in or register to post comments",7357
Log in to reply,7357
Messages,6838
"04:57 am May 1, 2016                             Hello Everybody,  I am currently studying to take the PSM I exam.   I am struggling a bit on the ""scaled Scrum"" part. It seems different authors have different approaches to Scaled Scrum.   I read a couple articles and books about this topic but I would like to know if you could give me recommendations of what to read that is aligned with the Scrum.org vision (on the scaled scrum topic).   Is the Nexus Guide enough?   I am asking this because I did, several times, the scaled scrum open exam and I feel that I still don't ""master"" this topic.   Thank you.",6838
"12:35 am May 3, 2016                     I don't think you need to work on Scaled Scrum while preparing for PSM I, Scrum Guide along with Scrum Open and Product Owner Open assessment should be sufficient.  However Nexus guide is a good source for Scaled Profession Scrum exam.          Log in or register to post comments",6838
"06:19 pm May 3, 2016                    You just have to read Nexus guide once, to give you an idea.  You have to be sure when use Nexus (where are dependencies that needs to be integrated) aswell have in mind many scrum teams working in ONE product.          Log in or register to post comments",6838
"07:47 am May 5, 2016                    Thank you Sanjay and Daniel.  Should I assume that some ""scaled scrum questions"" on the Open Nexus assessment aren't fully related with Nexus?   While doing the Open Nexus assessment I came across a question that states: ""Management has planned for over two hundred (200) develops to work on a new critical product ....""  Is it possible to use Nexus in this case? Isn't 81 maximum number of developers that we can have in Nexus?  According to the Nexus guide we should between 3-9 scrum teams. And every scrum team should have 3-9 developers. So, the maximum number of developers:  9x9 = 81.            Log in or register to post comments",6838
"05:06 am May 11, 2016                     Ken and Scrum.org are working on Nexus+  Refer to this - http://techbeacon.com/enter-nexus-ken-schwaber-scaling-scrum-future-agi…          Log in or register to post comments",6838
"02:49 pm May 11, 2016                    Thank you Sanjay. I will check it.          Log in or register to post comments",6838
"06:24 pm May 11, 2016                    Jose, more than 81 developers is proposed with Nexus+. This (I believe) is 3-9 Nexus groups last I heard, but these very large group approaches are still being worked out.          Log in or register to post comments",6838
"03:52 am May 12, 2016                    > I am struggling a bit on the ""scaled Scrum""   > part. It seems different authors have different   > approaches to Scaled Scrum.   The key principle to bear in mind is that, even at scale, it is Development Teams that do the actual work. This is true regardless of the work involved, whether it be particular features for completion, or the integration and testing of a combined increment representing the work of many teams. Nothing falls between teams and is swept up somewhere else.  So there is no external agency, management team, or magic fairy who takes care of undone work...it can only be performed by a Development Team. Scaling concerns are primarily about facilitation and helping teams to do exactly that.  If you bear that general principle in mind it should help you navigate the questions for the PSM exams.          Log in or register to post comments",6838
"12:29 pm November 17, 2016                    I did the PO exam and failed because of the many questions about scaled Scrum.  I also would like to know which resources can be trusted to give me a good inside view about scaled scrum.  One source will state there is only one product owner per product and thereby per product backlog, no matter how many scrum teams are working on the product backlog.  Another source state one product owner can only be effective with 2 scrum teams.  another source state a product owner can have 2-8 teams.  So should I study Scrum of Scrums, Nexus, SaFe, spotiyfy model or......?          Log in or register to post comments",6838
"06:11 pm November 17, 2016                    There is only one PO for the product. As an organization scales their Product, this does not change. However, the job might change as it morphs from a ‘doer’ role to a leadership one as more people support the PO in activities such as market research, requirements analysis, etc.   The best resource to read about the role of the product owner in a scaled situation is first the Nexus Guide, then their are a number of white papers on Nexus on Scrum.org site and I delivered an ‘interesting’ webinar on the role of the PO that can be viewed https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…            Log in or register to post comments",6838
"08:21 am November 18, 2016                    Hi Dave,  Thank you for your response and recommended sources. I will study them and hope to take a retry on the exam later today.          Log in or register to post comments",6838
"09:38 am November 27, 2016                    I am also confused if I have to absorb the whole Nexus Guide as it is not mentioned in ""related Topics"" mentioned for PSPO exam...          Log in or register to post comments",6838
"09:51 am December 1, 2016                    I recently took the PSM1 exam and frankly i didn't see more than 2,3 scaled scrum questions and those too were basic information like ""employing 1 PB"" or having ""1 PO"" and if all DT have to attend daily Scrum of scrums meeting. Nothing related to ""Nexus"", but if one has time, it good to read the related guide and have the knowledge that can come handy in other certification for SCRUM or in real world for SCALED scrum.          Log in or register to post comments",6838
Log in to reply,6838
Messages,7422
"07:15 am December 1, 2016                             Recently I secured 95% in the PSMI exam and decided to contribute to the forum for my experience. Hope some future prospectors will benefit from it. I have no related REAL world experience (unfortunately) so far, but trying to get into it, if my luck rides the high horse soon. Neverthless, after passing the PMI-ACP I am a certified PSM as well :) so the journey continues.  1) Having PMI-ACP before, I was not new to SCRUM, but to be honest, after preparing for 3 weeks (6-8 hours a week) I found that the ACP material was lacking a lot of interesting detail about SCRUM which I was glad I covered in this exam, mostly because ACP covers all of them SCRUM, XP, DSDM etc.  2) SCRUM guide reading multiple times to completely understand and comprehend the idea behind is the first and foremost stuff. It is to the point and develops your foundationfor what is coming your way.  3) The USD 10 I spent on buying ""scrum narrative and psm exam guide"" by Mohammed Musthafa Soukath Ali was a good investment as it covered a lot of hidden gaps which were left for the readers of SCRUM guide to explore and discover. The quizzes and explanations of the answers included were good to give more insight and 10-15 similar questions from it were answered by me in the actual exam.  4) Securing 100% multiple times in at least PSMI and Product owner ones is a must as there were similar 10-15 questions in the actual exam. I did took the developer and nexus ones too to secure >90% (read nexu guide), but I didnt see any question from Nexus part to say the least in the real exam.  5) Last but not the least the forum discussions about the PSM related questions proved to be fruitfull, first to understand the SCRUM better from real world guys, secondly to polish the concept and third for sure at least 10 questions I saw from these forum in the real exam. So hats off to all the contributers.  End note: The exam time window is quite adequate, as mentioned in forum a lot, I ran through all the questions in 35 minutes with the ones I was 100% sure unmarked and marking around 20 questions  which I wasnt too sure about. So later it gave me 25 minutes to open book, google and think deeply about the left over.  Good luck",7422
Log in to reply,7422
Messages,7419
"10:36 pm November 29, 2016                             Sprint planning and reducing sprint 'roll over' is a challenge at times for our teams. We distill epics into stories, estimate the stories, but the story inevitably has numerous sub-tasks that speak to writing code, writing test plans, functional testing, unit test writing, accessibility testing, etc.  So a story may have an estimate of 3 story points for the dev work portion, but all the other related sub-tasks have estimates which sum up to let's say 13 story points. And for discussion sake, let's say our sprint velocity is 10 story points.  We often find that we pull this story into a sprint, but not all the sub-tasks can be completed by end of sprint. Thus we must roll over the story into the next sprint.  We use JIRA and are finding that when you roll over a story from one sprint to another, it fails to report out proper velocity for the sprint just completed. Conversely, if we divide up all the sub-tasks into related stories, the common workflow we use in JIRA has steps like 'ready for testing' and 'released' which does not work well if we were to convert a qa test case sub-task into a story.  Curious how others may address this planning and logistics issue? Do teams roll up all these sub-tasks as stories into a single Epic for example?  Thanks.",7419
"05:42 pm November 30, 2016                    You mentioned a story might have 3sp for dev and other sub tasks make it add up to 13. This may be where you're running into the issue.  A story should only have a single story point estimate for the entire story. So from a whole-team discussion using something like Planning Poker, the team may decide that the whole story (including everything needed to meet its acceptance criteria) is say a 13. If you like, you can add hours to the tasks (but these are unrelated to the story's estimate). If your velocity is 10, you're not likely to get that single story done so its probably too big (over a week is generally too big for a story), so you should see if it can be sliced smaller.  Scrum (and by association JIRA) will only count fully completed stories against that sprint's velocity. So if you just have 1 story, which is 13 points and its not complete, the velocity is 0.  I would recommend focusing on the story (as a user, I want to, so that) and seeing can you break it into thinner slices which can deliver value independently.            Log in or register to post comments",7419
"06:29 pm November 30, 2016                    > We often find that we pull this story into a sprint, but not all the sub-tasks can be  > completed by end of sprint. Thus we must roll over the story into the next sprint.  What does this mean for the team's ability to meet the Sprint Goal?  Remember that if the team cannot commit to the Sprint Goal, then they should not plan the associated body of work into their Sprint Backlog at all.  Also, in Scrum, no work is ever ""rolled over"" into another Sprint. Undone work remains on the Product Backlog, where it can be re-ordered by the PO so as to maximize the delivery of product value. It may or may not be planned into a future Sprint.          Log in or register to post comments",7419
"06:39 pm November 30, 2016                    Thanks for the feedback.  I agree with everything your stating philosophically, my question really centers around the implementation aspects.  Meaning, we have a sprint goal of let's say 50 story points.  This 50 story points is made up of let's say 5 stories.  In this case, each story has a set of sub tasks.  Some sub-tasks owned by developers, others by analysts and others by qa.  If the analyst and dev tasks are completed, but the qa tasks remain at the end of the sprint, those tasks must go into the backlog and/or make their way into another sprint.  When that happens, the progress made against that story is not well represented in the sprint where it started (b/c of how JIRA works).  My question centers around what are some real-world, best practices for how a team should define a 'story' and its related tasks so that a story can be effectively completed within a sprint and the time spent on it counts towards the sprint's velocity.  From the prior post, it sounds like the simple answer is to further distill the story so it can fit into a sprint.  And in the case where dev work on the story can be completed, but qa work cannot, it sounds like the suggestion would be to not pull the story into the sprint because it wont fit.  But if the team wants to make the most out of the time they have, is there a cleaner way to work on the dev aspects of the story and schedule the qa work for the next sprint and at the same time, not carry over the story from one sprint to the next and give the current sprint's velocity credit for the work that was done within it (using JIRA)?  Hope that clarifies.  Thanks.          Log in or register to post comments",7419
"07:42 pm November 30, 2016                    > In this case, each story has a set of sub tasks. Some sub-tasks owned  > by developers, others by analysts and others by qa.  > ...  > My question centers around what are some real-world, best practices  > for how a team should define a 'story' and its related tasks so that a  > story can be effectively completed within a sprint...  One real-world, best practice in Scrum is to challenge the assumption that sub-tasks are ""owned"" by developers, analysts, or quality assurance. In Scrum, the work should be owned by the Development Team. That is the role. In an efficient team, people are able to go to where the work is, instead of waiting for the work to come to them based on particular skill-sets. In other words, the challenge is perhaps the harder one of attaining better cross-functional skills, rather than adjusting user stories.          Log in or register to post comments",7419
"08:18 pm November 30, 2016                    Jonathan,  Instead of worrying about ""getting credit"" for work done in a sprint, turn your focus to what can be done to completework in a sprint.  From a velocity standpoint, it all equals out if an incomplete story is re-offered in a subsequent sprint and completed.   By no means should the team waste any time carving out the completed parts/tasks of a story from the incomplete ones.   This is incredibly wasteful.   By no means should you divide stories according to workflow (development/testing/release).  A story is only meaningful if it is complete according to the DoD, and it can be provided (released) to the end-user.   Any partial completion towards that goal is irrelevant.  There have been several posts already providing valuable advice on best practices for managing sprint work.   Please take them to heart.          Log in or register to post comments",7419
Log in to reply,7419
Messages,7421
"05:31 pm November 30, 2016                             Hi,  I've completed PSM I, PSPO I, PSD I and SPS, and will shortly (today?) take the PSM II test. I think the tests are reasonable in scope and content, but the questions (and sometimes the choices) are sometimes ambiguous.  And, if their meaning is such, then selecting the correct answer is a roll of the dice.  Without giving away any specific questions, I will model one example: ""A Scrum Team is only allowed to meet with <specified group> during <specified event>"".  The choices, of course, are True or False.  The ambiguity may be somewhat due to peculiarities of English, further exacerbated by my programmer's need for precision, but the possible interpretations are:    1. A Scrum Team, as a whole, is only allowed to meet with ...    2. No member of a Scrum Team is allowed to meet with ...  In other words, what if the Scrum Team, as a whole, is NOT allowed to have meetings with this group outside of the specific Scrum event, but yet, one of the roles (e.g. SM or PO) of a Scrum Team *does* regularly meet this group outside of that event -- how should the question be answered?  This is just one example.  Of course, many can say I'm being too picky, or that vagueness is real life, but in real life, one has opportunity to ask for clarification in order to give the proper response.  I am fairly certain that the test is meant to test real knowledge, not trying to offer ambiguity.  There are others like that.  My personal frustration is that when I see I missed a question in a certain topic area, I don't know if it was this (where I believe I clearly understand the real facts) or some other one (where I actually need more insight).  Fortunately, I haven't (yet) had to re-take any exam, as I wouldn't know how to learn from my error if this is one I missed.",7421
"06:03 pm November 30, 2016                    In the example you give, I think it would be the Scrum Team as a whole. This is because:  - no constituent member or role is identical to the Scrum Team, and  - no arrangements have been made for such a member or role to represent the team or otherwise provide its services.  Note that the question is introducing a constraint: ""A Scrum Team is only allowed..."". Whatever follows *might* be true, but it would be unusual. The Scrum Framework is more likely to frame the best use of roles, artifacts, and events than to introduce implementation constraints.  Sometimes you do need to approach these questions with a programmer's precision, as the language is (on the whole) quite carefully selected and rigorously applied.          Log in or register to post comments",7421
"06:19 pm November 30, 2016                    Ian,  You're probably correct, and then that would be one of the two questions I missed on that particular exam. I'd prefer that they change the wording, but I'll follow this approach on my next one.  Thanks for your commitment of time in responding to so many questions on the forums!          Log in or register to post comments",7421
"07:47 pm November 30, 2016                    I just completed the PSM II exam in 31 minutes (there are a generous 90 minutes allowed), only missing one question (97%). I didn't find any of the questions to have the sort of ambiguity I noted above.          Log in or register to post comments",7421
Log in to reply,7421
Messages,7363
"07:25 am October 8, 2016                             1. Can you please let me know what does this mean: Colocated PO?  2. Is the PO of the integration team in nexus the same as the PO of the individual scrum teams (considering there is a single product)?  3. Do the individual scrum team sprint planning a separate event included in spite of nexus sprint planning?",7363
"10:04 am November 27, 2016                    Hi,  (1) .I asked myself the same question and found a nice explanation on https://www.scrumalliance.org/community/articles/2010/april/common-prod… (The Distant Product Owner)  (NOTE: Wording etc. does not correlate the current 2016 scrum Guide)  As per now, my understanding is ""locally available"": Means physically on the same place as the rest of the scrum team.  Of cource the PO can be unreachable although perhaps sitting in the same room when he just would not take the time to speak with Dev Team etc but changes to collaborate are higher when on same place.   Imagine only the problem when being in different time zones. Perhaps than you ""share"" only e.g. 4 hours a day of your regular working time only due to time zone...  (2) One Product = One Product Backlog = one Product Owner  Scrum Guide ""The Product Owner is one person, not a committee""  Nexus ""A Nexus works off a single Product Backlog, and as described in the Scrum framework, a Product Backlog has a single Product Owner who has the final say on its contents. [...] The Product Owner is in the Nexus Integration Team.""  Therefore PO of the individual Scrum Teams is the same as for Integration Team.""  (3) The individual Teams has a Sprint Planning,  Im am not sure, but per my understanding the Sprint Planing of the individual Teams is included in the Nexus Sprint Planning. Nexus says "" All members of the Scrum Teams should participate to minimize communication issues"" +""Nexus Sprint Planning is complete when each Scrum Team **has finished their individual Sprint Planning events.** ""  NOTE: I am not an expert but as I found answers in the Guides I assume them to be correct. @Everybody: Please correct me if I said something wrong!          Log in or register to post comments",7363
"05:08 pm November 30, 2016                    (3) This can be found in the Nexus Guide. The Nexus Sprint Planning begins with key developers from each Development Team with the Nexus Integration Team creating the Nexus Sprint Backlog and the Nexus Goal.  This includes identifying the Development Teams that will take each of the items into their own Sprint Backlog.  The teams then individually meet for their own Sprint Planning, affirming (or challenging) the items suggested for their Sprint Backlog.  Once their Sprint Backlog is settled, they craft their Sprint Goal (aligned with the Nexus Goal, of course), and align their work sequence as needed with the other teams to ensure they can have a successful continuous integration.          Log in or register to post comments",7363
"06:12 pm November 30, 2016                    > NOTE: I am not an expert but as I found answers in the Guides I assume  > them to be correct. @Everybody: Please correct me if I said something wrong!  I think you provide a good summary, and a fair analysis of how the material ought to be interpreted.          Log in or register to post comments",7363
Log in to reply,7363
Messages,7414
"11:21 am November 24, 2016                             Hi guys  Our employer (UK) is just changing the terms of employment for all staff.  My notice period has gone up from 1 month to 3 months.  Can anybody provide feedback on their notice periods please? I'm just trying to work out whether 1 month or 3 months is the norm.  Thanks  Tony",7414
"07:03 am November 29, 2016                    Hi Tony,  I assume that it's both ways...  I have seen anything between 1 day to 2 to 6 weeks. Three months is unusual but at least your safe when they decide to pull the plug on a project your working on...          Log in or register to post comments",7414
"01:26 pm November 30, 2016                    20 working days          Log in or register to post comments",7414
"03:34 pm November 30, 2016                    > Three months is unusual but at least your safe when they decide   > to pull the plug on a project your working on...  Alas this is not necessarily the case. In my experience these arrangements are not always reciprocal, and the employer may only offer a statutory minimum period of notice.  It might be a good idea to check on that. Personally I'd consider an imbalanced contract to be an issue, rather than the length of notice itself.          Log in or register to post comments",7414
"03:58 pm November 30, 2016                    Thanks guys.  The three months is for both parties.  However, the underlying issue is that when I came on board in April 2015 I was the first full-time Scrum Master. I was told others would follow. Over 18 months on I'm still the lone full-time certified SM (We do have 2 other certified SMs but they have been employed under development or test roles).  Your input is most welcome.  Thanks again.  Tony          Log in or register to post comments",7414
Log in to reply,7414
Messages,6891
"08:02 pm May 31, 2016                             Wanted to share my PSMII test experience. What I have learned:  1)	You need to be able to type at a minimum of about 40 words per minute to complete all the answers on the test  2)	The test’s user experience is TERRIBLE – and what to expect.  3)	Many of the questions come directly from the Scrum Guide and Software in 30 Days.  4)	There are Nexus/Enterprise questions on the exam, didn’t see that coming.  40 words per minute:  There are about 10 multiple choice and 24 short answer questions on the tests. Let’s say it takes you 45 seconds per multiple choice question, and 30 seconds to read and understand the short answer questions, and a minute of think time for each short answer question.  That leaves 76 minutes for 24 questions, or about 3 minutes per question.  Most questions are multi-part questions. There are 1-4 parts to each question, but let’s say the average is 2.5 parts per question. You need to address each part or marks are deducted, and lets say it takes on average 2.5 sentences to address each part. So that gives about 6.25 sentences per question to do on average.  The average sentence length is about 100 characters, so about 625 characters. At 5 characters per word, that’s 125 words in ~3 minutes or ~40 words per minute (or 39.47 wpm if we keep the decimals throughout).  Conclusion: To have time to answer the all the questions you need to be able to type at a minimum of about 40 words per minute.  Another way to look at this is to see how many sentences you get depending on your typing speed.  If you are a slower typist maybe you need to answer each part of the question in only one sentence. (<-- that sentence is exactly 100 characters as an example.)  Analysis: To qualify as a PSMII you are required to type at 40 words per minute. Even if you know the material pretty well, you had better be able to formulate your answers extremely quickly and express it in an extremely concise form. I have heard from some people who took this test a long time ago that you should be able to answer these questions in a sentence or two, but that is not my experience. I suspect that over time the questions have gotten harder, with more parts, but there hasn’t been an adjustment to the number of questions, or the time given to take the test – or maybe I just got a bunch of harder questions)  Advice: When you take the PSM II, go through the entire test answering each part with one brief sentence, of whatever comes to mind immediately. Then go through the exam again, this time to expand your answers wherever the brief answer needs more detail.   If you are a really slow typist like me, you really have to have answers written out before you take the exam. I had about 80 answers prepared going into the test, unfortunately I guessed poorly at the questions that would be asked so they were not much use. Have a look at the “Origin of Questions” section below for some hints on how to get better prewritten answers.  The TERRIBLE user experience:  For me, the user experience is terrible. I like reading all questions before starting.  The UX makes you type something in each answer before you can go to the next question, and it fails silently when it does, just showing the same question again with no indication that you need to put in an answer before going on.  Even worse, it was my experience that the “next” button would not active for a few seconds even after entering a few random characters.  Very frustrating, and it cost me a couple of minutes to figure out it was the completely awful test application that was the problem. There are no bookmarks like in the PSMI tests, so make sure you have something to write down the questions you want to review. (not that you will have time for that)  The PSMII questions have different worth, but there is no indication what that worth is. You will have to guess at the question that might be worth more and hope you don’t spend a lot of time on a question that is not worth much.   Origin of questions:  Most of the question I encountered come directly from the Scrum Guide, or Software in 30 Days. Often in pretty twisted and obscure ways.    I recommend you study the scrum guide focusing on answering questions based on the generalities.     For instance this sentence “Decisions to optimize value and control risk are made based on the perceived state of the artifacts. To the extent that transparency is complete, these decisions have a sound basis.”  Be prepared to answer questions such as:  What is value and how is it measured?  What are means to control risk?  How is transparency made complete for each of the artifacts? (Product Backlog, Sprint Backlog, and Increment)  How is transparency perceived in artifacts?  What steps should you as a Scrum Master take when transparency is not complete?  What should you do if risks of the project are not being addressed?  How is value optimized?  Why is transparency important?  What are the consequences of not having complete transparency?  This captures what seems to be the method used to make up the questions.  It looks like the PSMI kind of focuses on what is actually in the scrum guide, while the PSMII focuses on all that is inferred from the scrum guide.   I would also study chapter 4-9 of Software in 30 days by having knowledge of each section. It is pretty clear there are question taken directly from certain paragraphs of the book. You should be able to reverse engineer answers from these.   There are questions about enterprise scrum:  Be sure to include the nexus guide in your studies. You really want to review the scaling presentations done by Schwaber as well. I haven’t read the Enterprise architecture book mentioned in the study guide, so consider that as a source as well.   That’s it.   Hopefully this will guide your studies a little bit as well as your approach to taking the exam. It is a bit artificially hard, but studying for it will really increase your knowledge of Scrum. I’ve learned a lot.  Good luck on the PSMII.",6891
"06:37 am June 2, 2016                     So how did you score?          Log in or register to post comments",6891
"02:24 pm June 2, 2016                    I received a score of 90%          Log in or register to post comments",6891
"01:36 pm June 3, 2016                    Hello Steven,   Thanks for your feedback about the user experience. We are currently reviewing our testing platform and are actively looking for improvements. We can confirm that people have been able to pass the PSM II without being able to type 40 words per minute. A lengthy answer is not required, so long as the answer properly addresses all the points raised in the question.   Here is a link to a thread on our forums, where we have posted a sample question and answer for the essay questions that appear on the PSM II: https://www.scrum.org/Forums/aft/1443#6257          Log in or register to post comments",6891
"07:11 am June 6, 2016                     Congrats Steve  I am also targeting for PSM II, let's see how it goes.          Log in or register to post comments",6891
"03:54 am July 5, 2016                    Hi there,   Is there any chance that this, and all other Scrum.org´s assessments to be translated into portuguese anytime? I´d like to help with it, if needed.          Log in or register to post comments",6891
"04:26 pm July 5, 2016                    Hello Orlando,  Thank you for your interest in Scrum.org and for your inquiry. Please kindly note, in the spirit of transparency, that translating our assessments to additional languages is not on our Backlog at this time.   Thank you again for your interest in Scrum.org and enjoy your day, Orlando!          Log in or register to post comments",6891
"06:23 pm July 5, 2016                    If translation is not in your backlog, please try and have very simple phrasing. I know several French people, knowledgeable about Agile & Scrum, who won't take your assessments because of the not-so-easy english level.          Log in or register to post comments",6891
"05:03 am July 7, 2016                    Ok, then. Thanks for the reply.          Log in or register to post comments",6891
"03:52 am November 29, 2016                    Note that the PSMII from this post is now the PSM III  I have taken the PSMII and it is well written, clear, and fair.          Log in or register to post comments",6891
Log in to reply,6891
Messages,7413
"08:56 am November 24, 2016                             Hi guys  I have my PSM1 certification and am actively working as a SM here in UK. I've been doing it for over 3 years now and looking to the next step of my career.  Is there an official roadmap to get being a certified Scrum Trainer? This is something that interests me, and it would be good to know what I need to do to get there.  Thanks  Tony",7413
"07:39 pm November 28, 2016                    Hi Tony,  The process is outlined here: https://www.scrum.org/About/Work-With-Us/Trainers  There is a process to become a trainer, the typical route is through the PSM and the process is outlined here: https://www.scrum.org/Become-a-Trainer/PSM-Trainer-Application  I trust that answers the basics about the roadmap.  Regards  Simon          Log in or register to post comments",7413
Log in to reply,7413
Messages,7368
"04:36 am October 10, 2016                             What if the DOD is not available for first sprint? Should it be created by DT during sprint planning and ensure it is available by end of Sprint planning? or should the DT create it upfront by DT before the Sprint planning. In such case, is it an activity that happens before first sprint timebox?",7368
"04:56 am October 10, 2016                    I think, every project has an initiation or inception phase before going into execution mode. I also think that entire scrum framework sits well in the 'execution', 'monitoring and controlling' and 'closing' areas of project management.  Mind you, I am not trying to 'map' the PMBOK with Scrum guide, but it's my impression.  So in the inception phase, all the bare minimum necessities are completed before starting the first sprint. These activities can be -  1. Product vision, roadmap and protfolio\release planningg  2. Identifying scrum team members including PO and SM  3. Creating Product Backlog and PBIs which satisfy DEEP criteria  4. Creating DoD - Considering organzational standards, guidelines, etc. & also considering DoD of other scrum teams working on the same product development  5. Any other activities like logistics, equipments, main software licenses, workspace, etc.  Any thoughts? One of the core Scrum Values is 'Openness'; so I am open for any opinions, advises!  Cheers,  Vivek          Log in or register to post comments",7368
"02:40 pm October 10, 2016                    Muthu,  How can the Development Team, and the Product Owner (business), know that an item is complete without defining what ""complete"" means?  Also, this specific forum is for certification and exam questions.   The other forum is dedicated to Scrum questions and issues.   I advised you of this previously in another thread.          Log in or register to post comments",7368
"03:04 pm October 10, 2016                    Hi Timothy,  I was asking from examination stand point. I am preparing for PSPO and hence asked this question. So based on your response, can I assume that DoD should be ready before Sprint Planning so that DT is confident while picking the items for the first sprint?   Thanks  Muthu          Log in or register to post comments",7368
"07:11 pm October 10, 2016                    Muthu,  Your initial post was not phrased as an examination question, but more like a generic Scrum inquiry looking for information/advice, hence my comment.          Log in or register to post comments",7368
"04:21 pm October 11, 2016                    > What if the DOD is not available for first sprint? Should it   > be created by DT during sprint planning and ensure it is available  > by end of Sprint planning?   How could a team forecast work for completion at all, if they had no DoD and hence no awareness of the general characteristics and quality required?  If the team entered Sprint Planning without a DoD, would the formulation of one thus become an essential Sprint Planning activity?          Log in or register to post comments",7368
"04:44 am October 12, 2016                    thanks for response, Ian.  So I understand that DoD must be available before sprint planning so that during Sprint Planning, DT will be able to forecast the items that can be taken up for the sprint.           Log in or register to post comments",7368
"09:50 am November 26, 2016                    Guide says :""DoD guides the Development Team in knowing how many Product Backlog items it can select during a Sprint Planning"" Therefore if DoD is missing during 1st Planning , team should create one I reckon.            Log in or register to post comments",7368
Log in to reply,7368
Messages,7373
"04:11 pm October 13, 2016                             Hi,  In PSM 1 exam -  Does the question specifies how many answer we should select for a particular multiple choice question?  Like 'Select THREE most appropriate answers for activities of Product Backlog Management'; and there are five options given?  Have any of you seen multiple choice questions without specifying how many answers we should select?  Cheers,  Vivek",7373
"04:56 pm October 13, 2016                    Hi Vivek,  I passed my exam this monday, and I'm sure there weren't multiple choice questions without it, how many answers you need to pick. The number of the correct answers always was included in the question.  Greetings,  Peter          Log in or register to post comments",7373
"05:27 pm October 13, 2016                    Thanks for the quick reply Peter.  Congrats on passing the exam. Do you recommend any last-minute tips or preparation prior to take the exam?  Cheers,  Vivek          Log in or register to post comments",7373
"05:37 pm October 13, 2016                    Last-minute tips? ... good understanding of the Scrum Guide, solving of the well known four sample exams (Mikhail Lapshin and Management Plaza) and you're ready to go. All I did, I printed the tricky questions from the samples and had them in front of me during the exam.  Greetings,  Peter          Log in or register to post comments",7373
"09:37 pm October 13, 2016                    Thanks for the helpful advice, Peter. Did the tricky questions from the sample exams appear on the actual PSM I?          Log in or register to post comments",7373
"07:25 am October 14, 2016                    Hi Betty,  yes a few of them (or very similar) did appear on the exam, although without answering them correctly you still have a good chance to pass the PSM I.  Greetings,  Peter          Log in or register to post comments",7373
"02:04 pm October 16, 2016                    Thanks, I will do my first try tomorrow.. Is there a lot of questions related to Scaled Scrum (Nexus) ?          Log in or register to post comments",7373
"05:50 pm October 17, 2016                    Hi Benoit,  no I had maybe 2 or 3 questions related to Scaled Scrum. If you know, what Scrum of Scrums is, how the multiple teams handling the Product- and Sprint Backlogs, then you know enough about scaling the Scrum. Questions directly related to Nexus weren't at all... at least in my case. Well it won't hurt you, if you have some knowledge about Nexus, so just read the Nexus Guide once, but you can pass the PSM I without it too.  Greetings,  Peter          Log in or register to post comments",7373
"11:02 am November 16, 2016                    I experienced more questions about scaled scrum. Mostly about issues in or between dev teams and how to handle them (and the scrum master role in this). I haven't seen those topics in the guide so I'm quite sure I missed those. Still looking for more information about this before I schedule the exam again. Just need a small extra step after a fail with 85,3%          Log in or register to post comments",7373
"07:18 am November 22, 2016                    Oops, 83,5 of course in stead of 85,3 (withfull thinking)          Log in or register to post comments",7373
"10:38 am November 25, 2016                    some questions or choices may have two parts - one correct and the other incorrect. Example: Scrum Master facilitates (correct) by taking decision on team's behalf(incorrect).          Log in or register to post comments",7373
Log in to reply,7373
Messages,7410
"09:04 am November 22, 2016                             Hello,  Did someone have experience with Agile Scalieng with the Frameworks SAFe, LESS, DAD or maybe with Kanban?  How it works and how you managed the dependence over the whole Scrumteams.  Thanks a lot.  Regards  Alexandra",7410
"03:18 pm November 22, 2016                    Have you read the Nexus Guide? What does that tell you about managing dependencies between Scrum Teams?          Log in or register to post comments",7410
"11:12 pm November 24, 2016                    As an alternative to scaling the agile method or framework, consider scaling the product.  By breaking a large product into smaller products, the complexity is reduced and you now have small products that can be combined in various ways with each other and other business products.          Log in or register to post comments",7410
Log in to reply,7410
Messages,7405
"11:35 am November 18, 2016                             Hi,  1)  can I have a Hardening Sprint to remove Technical Debt and how often it happens, if it is possible?  2) In all sprint I have to create something of potentially releasable? For example maybe in Sprint 0 I can't   produce nothing releasable, is this approach correct?  Thanks for kind support.  Andrea",7405
"04:18 pm November 18, 2016                    From your reading of the Scrum Guide, does each Sprint have to produce an increment of release quality?  What does that tell you about a ""Sprint 0"" and ""hardening sprints""?          Log in or register to post comments",7405
"02:49 pm November 20, 2016                    Yes, maybe I wrong but, I understand that the purpose of sprint is to create potentially relasable item,  in first sprint (sprint0)maybe I can not create anything to potentially relasable because eg. I' m doing environmen setup or other.  So I was wondering if exists a sprint where no item is created.  Second, I think that hardening sprint is a sprint where I solve my technical debt. If I can not do this sprint where I can solve my technical debt?  Thanks.  Andrea          Log in or register to post comments",7405
"10:20 pm November 20, 2016                    I see sprint 0 as a foundation sprint in which the groundwork is done. Usually this sprint does not produce anything that is releasable. I would even say that no sprint delivers a real releasable item. The release does.  A hardening sprint normally happens after a few sprints, to tidy up things not addressed by the previous sprints.  This can be at the end or if upcoming sprints rely on certain work done and the work can not be incorporated in the scheduled sprints.          Log in or register to post comments",7405
"10:52 pm November 20, 2016                    > I was wondering if exists a sprint where no item is created.   Every Sprint must yield a valuable and potentially releasable increment, no matter how small.  > Second, I think that hardening sprint is a sprint where I solve my technical  > debt. If I can not do this sprint where I can solve my technical debt?   Why not solve it each and every Sprint, so that each increment is genuinely of release quality, and the waste of having to do rework is mitigated?           Log in or register to post comments",7405
"08:05 am November 21, 2016                     Posted By Andrea Sartirana on 18 Nov 2016 11:35 AM  Hi,    1)  can I have a Hardening Sprint to remove Technical Debt and how often it happens, if it is possible?    2) In all sprint I have to create something of potentially releasable? For example maybe in Sprint 0 I can't     produce nothing releasable, is this approach correct?    Thanks for kind support.    Andrea  Hi,   There is no Hardening Sprint or Sprint 0 in Scrum Framework. Instead of answer to the question directly, I would like to ask some questions  1, May I ask why there have Technical Debt? What's the root cause?  2, What's the reason that we can't have potentially releasable working software?   Cheers  Herbert          Log in or register to post comments",7405
"04:27 pm November 22, 2016                    Hi,   surely others know better respond, for the general causes.   In my project I had technicial debt because maybe some implementation choices were wrong.  And in a sprint we can't release nothing because maybe our sprint was too short and before starting to develop we have done other jobs eg: design, setup database...  Perhaps my questions are due to mistakes during sprint...           Log in or register to post comments",7405
"11:02 pm November 22, 2016                    À sprint is à mini projet, not a coding phase          Log in or register to post comments",7405
"01:51 am November 23, 2016                    Andrea,   ""Scrum Teams deliver products iteratively and incrementally, maximizing opportunities for feedback. Incremental deliveries of “Done” product ensure a potentially useful version of working product is always available.""  So, Lets think about what is the smallest but high value to the customers/user for the first Sprint or each Sprint. Think about what should be include in the DoD, and try to facilitate to ask powerful question in Sprint Retrospective.  For technical debt, if we don't resolve this issue, the system come unstable, and the forecast is meaningless.  Cheers  Herbert          Log in or register to post comments",7405
Log in to reply,7405
Messages,7408
"08:55 pm November 18, 2016                             Upon what type of process control is Scrum based?  Correct answer: Empirical.  A) Empirical  B)Hybrid  C)Defined  D)Complex  can you explain how empirical process is scrum based?  can I call, scum follows empirical process?  How it is different than the other three processes?",7408
"04:13 pm November 21, 2016                    What does the Scrum Guide say?          Log in or register to post comments",7408
Log in to reply,7408
Messages,7402
"01:01 pm November 15, 2016                             Hi,    I am studying for Scrum master certification.   There is an argument thath leaves me confused:  scrum guide says that one of the tasks of scrum master is ensure visibility and transparency.  In many example test what did I do, I can't understand ask:  does scrum master ensure product backlog transparency and visibility?  In my opion is false because scrum guide says: product owner ensuring that the Product Backlog is visible, transparent, and clear to all, and Product Owner is the sole person responsible for managing the Product Backlog.  What are your opionons about?  Thanks for the support.  regards",7402
"06:32 pm November 15, 2016                    Suppose the Scrum Master believes that there is insufficient transparency in a particular aspect of the Scrum implementation. From your reading of the Scrum Guide, do you think that he or she has a duty to do anything about it? If so, what sort of action might the Scrum Master take in the situation you describe?          Log in or register to post comments",7402
"03:03 pm November 16, 2016                    Yes I think, scrum master must ensure transparency of backlog, despite product owner does not do so.  I think that scrum master must clarify hidden aspect of backlog.  I did not evaluated that product owner can neglet trasparency of  backlog.  Thank you.          Log in or register to post comments",7402
"05:42 pm November 16, 2016                    In general, you can think of a a Scrum Master as a manager of the Scrum process. The SM is a servant leader who should guide the team, help them to shape, and coach them to achieve an optimal Scrum implementation.          Log in or register to post comments",7402
"06:14 pm November 16, 2016                    SM and PO ensures the transparency but with different means: SM is responsible for driving the *process* toward transparency (s/he personally is not required to know the BL to the extend PO knows it). PO is to make sure all the team members clearly understand the BL items and know next steps as much as it makes sense.          Log in or register to post comments",7402
"11:17 am November 18, 2016                    OK thank you.          Log in or register to post comments",7402
"10:31 pm November 20, 2016                    In simple terms the scrum master is responsible for showing what's on the board and the the product owner is responsible for what is on the board.          Log in or register to post comments",7402
Log in to reply,7402
Messages,7355
"12:54 pm October 2, 2016                             Hi,  lately I had a conversation about Sprint Retro and how could it be speed-up. There was an idea to ask Scrum Team to write down in shared document all good and bad things from Sprint, with ideas how to improve. Everybody will come prepared for the meeting - both to discuss their concerns and concerns of others.  I have very mixed feelings about this concept. Do you have any experience or insights?",7355
"03:19 pm October 3, 2016                    This s better than the usual issue of no preparation being done at all. But why is each attendee's preparation work shared? What are the likely implications for pre-emptive solutioning and waste?          Log in or register to post comments",7355
"04:22 pm October 3, 2016                    It can be very helpful for individual Scrum Team members to log both concerns and highlights throughout the Sprint, especially in Sprint of longer length.  It is far to easy to lose details when focused on the effort within the Sprint.  It's not about speed; it's about efficiency.          Log in or register to post comments",7355
"10:32 pm October 3, 2016                    Yes, having a team prepared for Retro is really good thing and that's why we stretched an idea of preparation even further. Why not have team members shared their thoughts and, sometimes pre-emptive, solutions before retro? Then we could talk about each issue, feedback it and decide to apply it or not.   Prons we see are: each person issue will be talked about not just biggest or most urgent; it will be easier to address an elephant in the room; all issues might be put into action plan  Cons are: easy, one person solutions, especially when given by PO or SM; less commitment from some members - 'I don't have anything to add' or 'I just need to write ""whatever"" down' approach ; at the beginning writing down feedback might be difficult and some insight won't be shared.  I just wonder if we don't miss and entire idea of Retro there? It's still Inspect and Adapt but usually scenarios are very much about collaboration and fun. And this one - not so much.  Or maybe you have some nice scenarios for short retrospective? I wonder if there are any effective exercises that would take about 30'? We have short, weeks long Sprint and there is much pressure to 'make it fast'.           Log in or register to post comments",7355
"10:55 am October 4, 2016                    As the team`s scrum master I usually prepare the retrospectives. I send an e-mail with the agenda and a link to a prepared trello board to the team members. This is for the team members (some join remotely) to test the link, and if they have all rights on the board and to let them roughly know what kind of retro they can expects.   What format and what ""direction"" or goal the retros has I try to leave open as long as possible in order to be able to react to the really current issues of the team.  In my experience, this modus operandi makes the retros more efficient because everybody can check technical issues beforehand and I don`t have to spend to much time in explaining the format of the retro.  Preparation is on my side mostly.  This sprint i try for the first time to let the team collect topics they want to discuss during the sprint.  But just to have a bit of a variation. Let`s see if there is any difference in the output :-)           Log in or register to post comments",7355
"02:23 pm October 5, 2016                    As Alan touched on beware of speeding up the retro. If folks are asking or implying the retro needs to be faster or doubt the value there may be a problem. It is there to take a break from development and look inward and focus on how the team  can take actions to improve based on analysis of the past.  Yes it can be done elsewhere but be careful then you can possibly be slowing down your development a simple issue or conversation can easily expand. I also understand it can also sap energy away from introverts like myself but it's what we have to do to improve.          Log in or register to post comments",7355
"02:18 pm October 6, 2016                    @Aleksandra  If collaboration or engagement is declining then that is certainly a concern.  Most people when noting their issues and highlights will naturally also have ideas about how to improve or maintain the observations; there's no need to explicitly develop next steps prior to the Sprint Retrospective. usually scenarios are very much about collaboration and funI've been in an organization where some Scrum Masters ran (controlled not facilitated) every Sprint Retrospective.  The benefits decreased as team members felt like the SM was just another manager.  There was a focus on enjoyment with resulted in the purpose of the event not being met.  For example, activities were planned for the entire time-box which were fun for the team but no improvements were identified and no action plans were created.          Log in or register to post comments",7355
"06:13 pm October 7, 2016                    As discussed above, if team is spending some time to prepare for retro, do you reduce retro meeting time by some average amount? If team is spending more efforts/time than allowed by time box, are we not making it efficient? (when it may look like fast)          Log in or register to post comments",7355
Log in to reply,7355
Messages,6894
"07:42 am June 3, 2016                             Hi all,     I would like to know who can choose the lenghtof the Sprint.     I also want to know if the same Sprint lenght, Sprint after Sprint, makes sense.     Thank you in advance.",6894
"04:45 pm June 3, 2016                    The sprint length is usually determined at an organizational level.   There are positives and negatives with each potential  sprint length duration (1, 2, 3, or 4-weeks).   The most popular sprint length is 2 weeks.  Regarding whether the same sprint length, sprint after sprint, makes sense, what does the Scrum Guide say about it?           Log in or register to post comments",6894
"12:48 am June 4, 2016                    > I would like to know who can choose the lenghtof the Sprint.   First think about *why* a certain length for a Sprint ought to be chosen. What are the considerations? What might make a certain length for an iteration better or worse than another?          Log in or register to post comments",6894
"01:25 pm June 4, 2016                    Well,     A length ought to be choosen because we want to keep the business risk acceptable, because we want to synchronize the development work with other business events, etc.     The person who knows it best, is the product owner.     About a fixed length for the Sprint, Sprint after Sprint, I have not found something in the Scrum Guide but ""consistent durations"" which I don't undertand as a fixed length. (more clues please)     If there are not business risks, or synchronization issues, a product owner could to choose, a 2 weeks length for the Sprint if the Development Team feels more confortable with a 3 weeks length?     Thank you in advance.          Log in or register to post comments",6894
"12:01 am June 6, 2016                         I would like to know who can choose the lenghtof the Sprint.       I also want to know if the same Sprint lenght, Sprint after Sprint, makes sense.   If you are the Scrum Master your first response, as with most things, should be to take it to the team. Ask the team what they think makes the most sense for the sprint length. In the end, the Scrum Master is responsible for choosing a sprint length.  If the sprint length is chosen for the team at an organizational level, I would try to find out the underlying reasons. Forcing such decisions on the team hampers its self organising capabilities. It's a smell I would pursue. There might be other things imposed on the team as well, explicitly or implicitly, and I would want to know about it. There might be decent reasons for it though, such as synchronizing with other teams.   Yes, the same sprint length sprint after sprint makes a lot of sense. That way you can plan your Scrum ceremonies on the same day at the same time every time. This way you establish a predictable rhythm for your team and its stakeholders (""When is the Sprint Review again?"", ""Tuesday 4PM, same as the sprint before this one, and the sprint before that one, and the sprint before that one...""). Also, having the same sprint length makes sprint planning easier and velocity becomes more meaningful.  That said, the sprint length is suspectible to inspect & adapt as well as anything. If it turns out the chosen sprint length doesn't work for your team, change it.  If you and your team really have no clue what the sprint length should be, try to weeks for starters. It works for a lot of teams.           Log in or register to post comments",6894
"05:54 am June 6, 2016                    Hi Ian,  I'm new to scrum, come from a marketing background but studying about scrum PO now as I'd like to move into that direction.  It would make sense that the length of a sprint is defined at an organisational level.  But I just want to make sure I understand the scrum guide.  The scrum guide says that: ""When a Sprint’s horizon is too long the definition of what is being built may change, complexity may rise, and risk may increase."" The same way Sprint limit risk to one calendar month cost.  Now, as the product owner's role is to maximise value, could we consider that contributing at defining the sprint lengths is part of his role, as a three week sprint for example may reduce the delivery of increments for inspection and adaptation of value.   Or could the Scrum Master take part as well in that discussion as he is in charge of implementing Scrum within the organisation.   Thank you  Sophie          Log in or register to post comments",6894
"11:43 pm June 6, 2016                     Hello Rene  Can you please help me understand why and how Scrum Master is responsible for defining the Sprint length?           Log in or register to post comments",6894
"02:23 am June 7, 2016                    Having the sprint length same as every sprint , is to have ""Consistency"".   Coming to the length of sprint , there are various parameters to be considered. As a self organizing team the development team should have the liberty to chose. Above all , the complexity of the product , the level of understanding of the product should also be considered and the level of comfort.  Ultimately the scrum master has all the authority to decide upon the length of the sprint considering and facilitating the dev team decision.          Log in or register to post comments",6894
"03:24 am June 7, 2016                    I think that the best option is an agreement between Development Team and Product Owner, but I feel that the last word is said by the Product Owner.  We can imagine an Scrum Team working 2 weeks length Sprints, but the next Spring, may be the Product Owner could have three important Product Backlog Items that Product Users need as soon as posible. And only the first and the second Product Backlog Items can be done in a 2 week length sprint acording to the Development Team.  If the Product Owner add a week more to the Spring, may be the Develpment Team can also put that third Product Backlog item in the Sprint Backlog. And the Product Owner would get a new releasable Product at the end of the Sprint with all the features desired.  The same case but this time, a bad behavior was detected in the Product. And it needs to be fixed as soon as posible. A Product Backlog Item with the bad behavior reported could be in the first position and this time, may be the Product Owner needs a one week length Sprint to get the new releasable product.          Log in or register to post comments",6894
"06:46 am June 7, 2016                    Hi again,     I'm thinking about my last post and now, I think it does not make sense.     The first event to select Product Backlog Items is the Spring Planning. When the Sprint Planning has started, the Sprint has started. And, acording to the Scrum Guide: Once a Sprint begins, its duration is fixed and cannot be shortened or lengthened     So, we can't add/remove a week depending on the number of Product Backlog Items we want done in the Sprint.     Which is the best answer for ""Who is the best candidate to set the duration for Sprints if it has not been defined at an organizational level?""  * Product Owner  * Development Team  * Scrum Master          Log in or register to post comments",6894
"08:18 am June 7, 2016                    > It would make sense that the length of a sprint is defined at an organisational level.   It usually makes more sense to define the length of a Sprint at the product level, as it is increments of product that must be made available for potential release by the end of each Sprint. However, if several teams must be involved in this then organizational action may be needed to establish a Nexus.  > Now, as the product owner's role is to maximise value, could we  > consider that contributing at defining the sprint lengths is part of his role  Yes, absolutely.  > Or could the Scrum Master take part as well in that discussion as he  > is in charge of implementing Scrum within the organisation.   Again yes, absolutely.  The two main determinants for deciding a cadence are (a) the ability of the Product Owner to release the best value, and (b) the ability of the team to inspect and adapt.          Log in or register to post comments",6894
"11:08 am June 7, 2016                    Ok, thank you Ian.  and thank you all for the knowledge and experience sharing.          Log in or register to post comments",6894
"08:21 pm October 2, 2016                    I understand, it can be defined at org level. Also, PO, SM discuss and contribute to decide on this. Who has the final say on Sprint length of a produc? Can I say it is the SCRUM TEAM?          Log in or register to post comments",6894
"12:40 pm October 3, 2016                    MUTHUVENGATESH, are you studying for a specific exam?  Scrum does not explicitly define that.  Please consider some thoughts.  It should be up to the Scrum Team(s) for the Product.  The Product Owner (one per product) will have input about the balance of risk and desired delivery frequency.  The Development Team will best be able to express the minimum time needed to create a tested, usable Increment which meets the Definition of Done.  The Scrum Master can help facilitate each to critically think about how the goals of each affect each other then making the best decision based on those factors.  If the organization is dictating the Sprint lengths, one might question the dedication to the Agile principles and the self-organization at the heart of Scrum.  If there is some integration coordination required, one might question the scale of the product: https://www.scrum.org/Portals/0/Documents/Community%20Work/ScaleYourPro…          Log in or register to post comments",6894
"03:23 pm October 3, 2016                    Hi Alan,  I am studying for PSPO I. So, it is collective responsibility of the SCRUM team in defining the sprint length.   thank you.          Log in or register to post comments",6894
"02:57 pm October 7, 2016                    as my understanding:  the one who decide the length of a srpint is all the scrum team of your project. which means, if ur project (product backlog) has only one scrum team, it's the PO, devTeam and the SM together. but if ur project has more than one scrum team, it's all the POs, devTeams and SMs.  the purpose is to make sure that the rhythm is suitable to all the participants in order to guarantee the integration synchronously executed.  same length, sprint after sprint, i have a one exemple: Hurdle race (the professional athletes)  the first railing will be slowly acrossed, but when u keep stable to your number and frequency of steps between every two railing and when u get used to this approach, u will finaly achieve your maximum speed  same for the sprint.           Log in or register to post comments",6894
"03:58 pm October 7, 2016                    thanks Shixuan          Log in or register to post comments",6894
Log in to reply,6894
Messages,7362
"10:29 pm October 6, 2016                             Good evening.  My question is simple: is PSM I a prerequisite of PSM II?  Because in similar OLD posts of this forum it seems like that.  While in the NEW documentation it looks like it is recommended but not mandatory (https://www.scrum.org/Assessments/Professional-Scrum-Master-Assessments…)  Thank you for any reply. Can anyone recommend some free examples of questions to prepare the test?  Thank you again. Regards,  -- Andrea",7362
"03:19 pm October 7, 2016                    Hello Andrea,  Thank you for your interest in Scrum.org. While it is not a requirement, we strongly recommend first passing the PSM I before attempting the PSM II. Also, you may find our full family of free practice assessments here:   https://www.scrum.org/Assessments/Open-Assessments  Enjoy your weekend, Andrea!          Log in or register to post comments",7362
Log in to reply,7362
Messages,7347
"08:10 am September 25, 2016                             Hi, I would like the opinion of Scrum experts on Scrum team sizes.  Following a re-organization within my company, two Scrum teams have been merged and are now a unique team of 17 members, with 3-4 PO/PMs and 1 scrum master. We've been operating like this for about 5 sprints now.  Unfortunately, it is pretty dysfunctional. The daily's and grooming sessions are lengthly, we systematically run out of time on retro and planning.   I read here and there that the maximum SCRUM team size should be 9 (i.e. 6 +/- 3).  Do you think we should split again? Is there any way Scrum would allow or even recommend such big teams?  Thanks !!!",7347
"03:24 pm September 26, 2016                    s there any way Scrum would allow or even recommend such big teams?  Recommended or allowed?   No.  That doesn't means it doesn't take place in many organizations.   I have had a similarly-sized team work for a single Product Owner.   That was quite cumbersome, but the Scrum Team was focused around sprint work and Sprint Goals.   This dynamic can still technically follow Scrum, although team size will remain an issue.  I have also had a large team serving multiple Product Owners, similar to your situation.   Unfortunately this creates a fragmented view of work, and simply isn't Scrum.   There are benefits to visually identifying and tracking work, but with multiple PO's, it is near impossible to create any sense of team ownership of sprint stories, or identify a Sprint Goal.  Look to the 5 Scrum values (Focus, Openness, Respect, Courage, Commitment) and see how your setup either supports these values, or contradicts these values.   Use your observations as a good starting point for discussion if things are not working.  Good luck.          Log in or register to post comments",7347
"06:12 pm September 26, 2016                    You need to sort out who the product owner is first. If there is a single product, or a composite one with a clear value stream, then you may need a Nexus of teams with one PO. The act of combining the teams might have been a bodged attempt at doing something along those lines, but which left product ownership unresolved.  If your current POs represent separate products and unrelated value streams then we should expect separate and unrelated teams, but if that was the case then (I suppose) they would not have been combined in the first place.          Log in or register to post comments",7347
"12:05 pm September 27, 2016                    Always go to the source: http://scrumguides.org/scrum-guide.html  Having three to four Product Owners is a violation.  There is no rule that there can only be three to nine Development Team members.  Some reasons are given for each of these recommended size constraints.  The biggest problems I've encountered with a large team were communication, coordination, and knowledge sharing.          Log in or register to post comments",7347
"02:58 pm October 5, 2016                    Sounds to me whoever had input into the reorg were not aware or concerned with Scrum at all. That is usually the case when there is not top down understanding and buy in.  If ""the team"" truly wants to implement scrum they may have to revisit roles if possible and organize a team(s) with in the team but my guess is there are large issues here that will always cause a problem unless resolved by those who own the problems.          Log in or register to post comments",7347
"07:50 pm October 5, 2016                    Just a thoughts...  If there are 3-4 product owners, why not to break team based on some functionality into 3-4 cross functional teams? Each team will have single PO, single sprint goal, separate SBI while share PBI, DOD and even SM.          Log in or register to post comments",7347
"07:49 am October 6, 2016                    Maybe they choose to have only one big Scrum Team to help priotitize at the product-portefolio level, in order to focus at one time on the more valuable product ?  But if each Sprint is made of a mix of tasks from the 4 products, your suggestion really make sense to me.          Log in or register to post comments",7347
Log in to reply,7347
Messages,7348
"09:46 pm September 25, 2016                             Hi  i gave an attempt today after seeing the   Mikhail Lapshin real mode consistenly 100% in test and open assesment scrum.org 100%. But when i appreaed the PSM1 exam i see questions are bit tricky resulted me to come close but not as expected.  i am bit disapointed to not able to clear in first attempt. i studied only 2016-Scrum-Guide-US (scrum.org) is there any other books i need to refer or mock tests   do let me know. Many thanks in advance for the advise   --------------  Assessment: PSM I  Date: September 25, 2016 2:37:01 PM EDT  NOT PASSED  Score: 64 points scored (or 80.0%) out of 80 maximum points  __________________  Best Regards  Sekhar",7348
"02:18 pm September 26, 2016                    Hello!  I think, you can read books from here: https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…  for those Section/Subject Area which you do not have 100% at PSM letter          Log in or register to post comments",7348
"02:45 pm September 26, 2016                     Looks like you were able to clear those questions that were straight forward. Shallow understanding of the Scrum Guide is enough to answer those types.   For the questions that test your deeper understanding of scrum, you need to discover the meaning of each sentence in the Scrum Guide. Read this helpful article to know more:   https://www.linkedin.com/pulse/how-pass-psm-first-attempt-five-steps-ge…  Don't give up! It is a learning experience. All the best next time!  Nafar          Log in or register to post comments",7348
"11:43 am September 27, 2016                    Hi  I attempted last saturday and got 82.5% marks. Missed to pass the exam very very narrowly.  :(  I studied the scrum guide. Are there other material that I should study for this exam. Any help will be much appreciated.  Thanks  Muthu          Log in or register to post comments",7348
"02:53 pm September 27, 2016                    Muthu - did you write to scrum.org for the feedback?  Also - please look at my response above          Log in or register to post comments",7348
"05:35 pm October 2, 2016                    Hi Nafar,  I dropped a note, but have not got back. I felt, there were few areas not covered in scrum guide  1. What is POs roles and steps when a new product gets kicked off.   2. Who determines the sprint length for new product development.  3. Cone of uncertainity concepts.  Please let me know if you have some inputs on these areas, where I answered vaguely.  thanks  Muthu          Log in or register to post comments",7348
"06:08 pm October 2, 2016                    Hi Nafar,  Is documentation a sprint deliverable if that is what product owner asked for?  Can you please clarify?           Log in or register to post comments",7348
"10:58 am October 5, 2016                    Muthu,  Scrum is a framework for product dev. But, the context  behind many of the assessment questions is SW development.  Given the Scrum rule that every Sprint must produce a 'potentially releasable working functionality' delivering only a document as a sole Sprint outcome is not Scrum.  However, documents can be produced along with working functionality.   If PO specifically asks for documents, such needs can be added to either PB or DoD as conditions.  As for your questions on PO role, deciding Sprint duration, and many other implementation aspects, I recommend you to take the PSM training scheduled nearer to your place. Please search this site for upcoming training.  A cheaper alternative is to get an excellent book on the topic named Scrum Narrative and PSM Exam Guide.  Nafar.          Log in or register to post comments",7348
"05:22 pm October 5, 2016                    Thanks Nafar.           Log in or register to post comments",7348
Log in to reply,7348
Messages,7354
"07:05 am September 30, 2016                             Hi all.  I have recently read this papers:  https://www.scrum.org/Portals/0/Documents/Community%20Work/The%208%20St…  and found this pretty interesting sentence:  ""The Product Owner wants to build the right thing, the Development Team wants to build it right and the Scrum Master wants to build it fast. A great team knows how to balance these different interests.""  Its actually first time when I read about Scrum Muster wanting to build something fast.  What do you think about it?",7354
"02:10 pm September 30, 2016                    May I reformulate this way ?  the Dev Team wants to be effective, the Scrum Master want the Dev Team to be more and more efficient (instead of ""fast"" or ""faster"")          Log in or register to post comments",7354
"04:20 pm September 30, 2016                    Perhaps:  - a PO could be said to ""want the right thing built"" in the sense of being a value maximizer, and by definition the right thing maximizes value.  - a Dev Team could be said to want to ""build it right"" in the sense that they are responsible for defining and achieving Done.  - an SM could be said to ""want it built fast"" in the sense that as many inspect/adapt opportunities should be leveraged as productively as possible.  That would be my interpretation of this, although it wouldn't be my choice of words.          Log in or register to post comments",7354
"01:41 pm October 3, 2016                    I had a similar reaction, Marcin.  I haven't had time to re-read and post comments directly on the article.  Effective and efficient does not mean fast.  I would also refer to the Manifesto for Agile Software Development:Agile processes promote sustainable development.  The sponsors, developers, and users should be able to maintain a constant pace indefinitely.          Log in or register to post comments",7354
"02:32 pm October 5, 2016                    I will place my bet with Alan. I think we will see a change in the Scrum Guide in the future. The scrum guide adapts and evolves just like we do:)          Log in or register to post comments",7354
Log in to reply,7354
Messages,7352
"11:52 am September 28, 2016                             Hi everyone,  We have been working with Jira over 5 years in my company and we are used to using sub-tasks templates to pre-fill a story with our DoD automatically.  In my opinion, and you might disagree, the granularity of most of our stories is quite good.  However it is very often that a so-called standard story (3SP) lasts over 2 to 3 days... and sometimes 5-SP story might last up to one a week. We usually end up finishing the sprint with about 85% stories done but our burndown chart doesn't always look so smooth.  Therefore I'd like to come up with the following change.  Instead of writing the estimation in the story itself, I'd like to write the estimate for each one of the tasks so that the Sprint burndown's progression looks more smooth. We would only estimate the story, but this would then be copied to all the sub-tasks of our DoD. I believe this would help smooth the burndown.  What is you guys opinion? :)  Cheers,",7352
"01:04 pm September 28, 2016                    This all seems excessively complicated to me.  Product scope is a different thing to the forecast of work for meeting a Sprint Goal. The estimates afforded to one therefore ought to be quite independent of the other.  The story points used to frame the scope of a Sprint are not a function of any tasks that may be planned...or vice-versa. Tasks for meeting the Sprint Goal may reasonably be planned in terms of hours. They are a different thing. There is no need for those task estimates to correspond to story points at all.  In fact, tasks don't really need to correlate to User Stories in the first place. Remember that the objective is to achieve the agreed goal, not to ""deliver"" backlog items like stories. Those items are just a forecast of product scope that is likely to prove relevant. This is not always obvious when using electronic tools because they can force you into thinking there is a one-to-many relationship between stories and tasks. I suggest the time is right to take a step back from these tools in order to free your thinking.          Log in or register to post comments",7352
"05:07 pm September 28, 2016                     Posted By Ian Mitchell on 28 Sep 2016 01:04 PM  This all seems excessively complicated to me.   What in peculiar?  My proposal seems a more simple approach than the one you're describing. If I got you right we should estimate both stories (in SP) and sub-tasks (in hours) whereas we only estimate the former as of today.  My opinion was to translate these SP to the sub-tasks so that we don't have to estimate these sub-tasks independently. There would be no estimation round needed in our sprint. Not that I've anything against your proposal per se, but I see it more complex than mine.  Do you think it's a bad idea to actually use DoD as a way to streamline our workflow? If yes, how do you make DoD more ""visible"" and ""real"" to the team?  Would you ""decouple"" a story from the tasks we need to do to achieve it in terms of estimation?  Thanks! :)           Log in or register to post comments",7352
"05:35 pm September 28, 2016                    > My proposal seems a more simple approach than the one you're describing.  What I'm describing isn't a proposal at all. I'm describing the way scope estimation and sprint forecasting works in Scrum. If you believe that you have identified a simpler or more rational approach, then you should take it to the team and find out if they wish to try it. It may indeed be an improvement over the present situation. Let us know how you get on.          Log in or register to post comments",7352
"06:05 pm September 28, 2016                    I've attended two certification courses, have the PSM I and I wasn't aware that estimation should theoretically go further than giving SP to stories. Eventually that's something not clear at all from both certifications. The video tutorials on sprint planning always mention planning poker on this on the story level and nothing more.  I'm totally up for a change though don't get me wrong on that.  Would be nice if you or somebody else could clarify the followig:  How to make DoD more real if not through sub-tasks of a story?  How to decouple ""tasks"" from small user stories on Jira concretely?  Do I need to create tasks (estimated in hours) and link them to one user story (estimated in SP). In the end, it's likely than 99% of the time the tasks will be very close to our DoD anyways.          Log in or register to post comments",7352
"06:40 pm September 28, 2016                    > ...I wasn't aware that estimation should theoretically go further than giving SP to stories  The Scrum guide says: ""At any point in time in a Sprint, the total work remaining in the Sprint Backlog can be summed"". The Sprint Backlog is a forecast of the work needed to accomplish the Sprint Goal. It is not a mere subset of the Product Backlog with the associated estimates. It is a plan of the work that the team expects to actually do to meet the Goal. That Goal should provide coherence to the effort and give purpose to the Sprint.  Scrum is a framework with minimal requirements. There's nothing to stop a team from assuming that estimates (e.g. story points) given to selected PBI's can be used to adequately reflect the work remaining in the Sprint to meet the Goal. They can always try it, and find out how well that assumption holds. If that proves to be the case, then clearly there would be no need for any tasks to be estimated at all.  > Would be nice if you or somebody else could clarify the followig:  >  > How to make DoD more real if not through sub-tasks of a story?  I don't see any problem with capturing a DoD as tasks to be accomplished in a Sprint. I think it is an excellent idea for making it real. However, you must remember that of course there may be other tasks. Also, remember that the DoD properly applies to the increment rather than to the PBI's which were originally planned into the Sprint.           Log in or register to post comments",7352
"07:11 pm September 28, 2016                     The Scrum guide says: ""At any point in time in a Sprint, the total work remaining in the Sprint Backlog can be summed"". And that is the case right now unless I'm wrong.  We're using SP and from sprint to sprint we use to plan the next one.  Sometimes it can be that some stories are underestimated/over and that the burndown isn't so smooth (hence my question how to make this). On the other hand we're about +/- 20% accurate with the original estimate which isn't so bad but I'm trying to figure out how to reduce this to +/- 5%.  For instance it's very often though that a story has one or two tasks left and that we have to postpone it to the next sprint. The estimation will be burned down on the sprint n+1 though. Had we estimate every task this would not feel this way. I think it is an excellent idea for making it real. However, you must remember that of course there may be other tasks It really helped a lot actually when we came up with this indeed. We've got three sub-tasks template depending on the ""context"" of the story, and we always refine whatever sub-tasks seems to be missing or superfluous together during planning. Also, remember that the DoD properly applies to the increment rather than to the PBI's which were originally planned into the Sprint.  Indeed, our strategy so far it's too have several sub-tasks depending on the ""context"" of a story.  Hum, it doesn't help me decide whether I should try my original idea or not. Any other input would be appreciated! :)           Log in or register to post comments",7352
"07:43 pm September 28, 2016                    > And that is the case right now unless I'm wrong.  > We're using SP and from sprint to sprint we use to plan the next one.  > Sometimes it can be that some stories are underestimated/over and  > that the burndown isn't so smooth (hence my question how to make this).  > On the other hand we're about +/- 20% accurate with the original  > estimate which isn't so bad but I'm trying to figure out how to reduce  > this to +/- 5%.   That would suggest the simple case is not appropriate in your situation.  In other words, in your case it isn't fair to assume that the estimates (story points) given to selected PBI's can be used to adequately reflect the work remaining in the Sprint to meet the Goal. You've tried it, you've found out how well that assumption holds, and it doesn't. Therefore you need to look at estimating your plan of work, such as tasks, separately. Many teams do this in hours and elicit a sprint burndown in task hours.  > For instance it's very often though that a story has one or two tasks left  > and that we have to postpone it to the next sprint. The estimation will be  > burned down on the sprint n+1 though.   From your PSM training, what do you think about the idea of allowing tasks to roll over into the next Sprint? Aren't those tasks planned to meet the goal of the current one?  > it doesn't help me decide whether I should try my original idea or not.  In Scrum, who actually would make this decision?          Log in or register to post comments",7352
"08:15 pm September 28, 2016                    I really like this interactive talk I'm having with you Ian! Thank you so much for your time!  That would suggest the simple case is not appropriate in your situation.  I do hear you but I want to make our current status quo clear though.  We're not perfect to predict what will happen in a sprint (the reason why I'm here) but we're quite accurate to predict mid-term to long-term scenarios. The fact that one or two stories out of 15 roll over a sprint has very few influence on the mid-term forecasts.  Over the last two years we've been able to derive a release date with one-month accuracy about 6 months in advance, do you see this approach as inaccurate?  Given we're able to tell our Mgmt that we'll deliver this in XX months should we invest much more time in estimating every task? Is that really time and effort well spent? Must tell you I'm not entirely convinced. From your PSM training, what do you think about the idea of allowing tasks to roll over into the next Sprint? Aren't those tasks planned to meet the goal of the current one?   We do not always formulate an explicit sprint goal. I'd say the PO and us make sure of the overall consistency and ""iterativity"" of the sprint and that we do not have multiple focuses.We nevertheless don't explicitly formulate this into one sentence but i'm considering changing this and see how it goes.  As for the one or two stories that are at the end of the tail of the latest sprint, it surely never pleases us but this would imply we are able to predict perfectly what will happen two weeks in advance. That's just not something we can't achieve every sprint (on average we're within 80% accuracy as I mentioned) and I do not understand why would the sprint goal has an influence on this?  28 Sep 2016 07:42 PM	Correct Answer?QuoteReplyAlert  > And that is the case right now unless I'm wrong.   > We're using SP and from sprint to sprint we use to plan the next one.   > Sometimes it can be that some stories are underestimated/over and   > that the burndown isn't so smooth (hence my question how to make this).   > On the other hand we're about +/- 20% accurate with the original   > estimate which isn't so bad but I'm trying to figure out how to reduce   > this to +/- 5%.   That would suggest the simple case is not appropriate in your situation.   In other words, in your case it isn't fair to assume that the estimates (story points) given to selected PBI's can be used to adequately reflect the work remaining in the Sprint to meet the Goal. You've tried it, you've found out how well that assumption holds, and it doesn't. Therefore you need to look at estimating your plan of work, such as tasks, separately. Many teams do this in hours and elicit a sprint burndown in task hours.   > For instance it's very often though that a story has one or two tasks left   > and that we have to postpone it to the next sprint. The estimation will be   > burned down on the sprint n+1 though.   From your PSM training, what do you think about the idea of allowing tasks to roll over into the next Sprint? Aren't those tasks planned to meet the goal of the current one?  In Scrum, who actually would make this decision?  The SM is here to mention that we are not estimating properly and I should facilitate discussions on this topic while coming with my own proposal?          Log in or register to post comments",7352
"08:18 pm September 28, 2016                    Damn sorry for the last part. How come I cannot edit my answer? In Scrum, who actually would make this decision?  The SM is here to mention that we are not estimating properly and I should facilitate discussions on this topic while coming with my own proposal?          Log in or register to post comments",7352
"09:17 pm September 28, 2016                    > Over the last two years we've been able to derive a release date  > with one-month accuracy about 6 months in advance, do you see  > this approach as inaccurate?  In Scrum, it's the Product Owner who would forecast any future release dates from the empirical data provided by the team. Therefore it's up to the PO to decide whether or not the approach is sufficiently accurate.  > Given we're able to tell our Mgmt that we'll deliver this in XX months  > should we invest much more time in estimating every task? Is that  > really time and effort well spent? Must tell you I'm not entirely convinced.   The purpose of estimating tasks is not to appraise stakeholders (such as management) about the deliverables of future sprints, but to show whether or not the team is on course to achieve the current Sprint Goal. Being able to provide that forecast, to show the work remaining in the Sprint, and to evidence that control, is usually time and effort well spent. You've already recognized how desirable it is to have a smooth sprint burn rate.  > We do not always formulate an explicit sprint goal.  If you don't formulate an explicit Sprint Goal, then why sprint at all? What purpose does sprinting  then serve? What makes the batch of work selected for that Sprint coherent, and worthwhile handling as a batch?  > I do not understand why would the sprint goal has an influence on this  Because the objective of a Sprint is to achieve the agreed Goal, not to ""deliver"" backlog items like stories. Those items are just a forecast of product scope that is likely to prove relevant to the Goal.  Once a sprint ends, any undone work should be evaluated in the Sprint Review. If it is still relevant to the Product it can be re-estimated on the Product Backlog. It may then be planned in to a future sprint along with other work that gives coherence to a new goal. There can be no roll-over of work from one sprint to the next, because each sprint brings a new planning session, with a new goal and a new forecast of work for achieving it.          Log in or register to post comments",7352
"11:53 am September 29, 2016                    Thank you so much agai Ian! Too bad you're the only one but I'll rely on what you say.  Here are two action points:  I'm gonna trigger the topic Sprint Goal to our PO and we will implement it.  I agree a sprint goal helps the sprint to be purposeful, consistent and focused but I don't believe that having no sprint goal implied that we're doing 4 different topics at once which aren't relevant to each other and invaluable to our product. So yep, might not be the main impediment in our team here.  I will also trigger the discussion as of how to estimate our tasks in hours and see how it goes.  I want to experience a bit and get out of the comfort zone here.  PS: Damn that forum is so old-fashioned and static for years, not a good image of what I would expect from a website like scrum.org. Move on guys! :) https://www.discourse.org/          Log in or register to post comments",7352
"05:56 pm September 29, 2016                    Personally, I am a big proponent of relative story estimation.   While I also find value in defining the tasks for a specific PBI, I do not advocate what I consider a wasteful activity in estimating those tasks.  For instance it's very often though that a story has one or two tasks left and that we have to postpone it to the next sprint. The estimation will be burned down on the sprint n+1 though. Had we estimate every task this would not feel this way.  It seems task estimation in your example would only be done to appease the team and consumers of your sprint metrics in order to ""make things look good"".   I would simply ask why that should be important to you, your team, or your organization?   The end customer does not care how many of the tasks are completed for a specific story, only that the story has been completed and delivered.  In addition, removing the ""reward"" from completing ""most"" of the tasks for a PBI would hopefully stress to the team the importance of conpleting the entire story according to the DoD.           Log in or register to post comments",7352
"12:53 pm September 30, 2016                    Completely agree with Mr. Baffa on this one.  All practices and metrics must be understood and valuable.          Log in or register to post comments",7352
"03:21 pm October 4, 2016                    Getting back to you guys I must say I kind of disagree with Ian's point after all.  I have interviewed 3 other teams who stopped estimating sub-tasks per hours because it didn't help but to waste time in plannings. Every team came to the conclusion that it didn't bring anything but a smoothed burndown... yet didn't avoid the problem of over/under commitment.  There's one team left who's estimating stories in SP and each of their sub-tasks in hours... and looking at they burndown it certainly looks very smooth but they seem to over-commit all the time. Therefore as it's been stated here and there I wonder what is the point of spending so much time estimating something.  Imho estimating sub-tasks in hours is absolutely not the correct entry point to our problem. We just need to get better at slicing stories and I have to push the emphasis on this for the next sprints.          Log in or register to post comments",7352
Log in to reply,7352
Messages,7356
"07:07 pm October 2, 2016                             Who determines the length of a sprint for a new product development project? Is it PO?  Based on what factors it is determined. And who are all involved in this?",7356
"07:19 pm October 2, 2016                    > Who determines the length of a sprint for a new product  > development project? Is it PO? Based on what factors it  > is determined. And who are all involved in this?  The purpose of a Sprint is to maximize product value, on a certain cadence. From your reading of the Scrum Guide, who is most likely to care about Sprint length from that perspective?  Who is most likely to temper this expectation, by bringing in concerns regarding technical delivery?          Log in or register to post comments",7356
"09:27 am October 3, 2016                    PO is the most appropropriate person to care about the sprint length, because he looks to maximize the product value through sprints.   For any concerns, SM will bring it to PO based on DT inputs. But final say is PO.  Is my understanding correct?          Log in or register to post comments",7356
"03:26 pm October 3, 2016                    > For any concerns, SM will bring it to PO based on DT inputs.  Why wouldn't the Development Team collaborate directly with the PO on this matter?  > But final say is PO.   Why would any one role have a ""final say""? Isn't there an essential balance to be struck between the timely release of business value, and the technical ability to deliver that value?           Log in or register to post comments",7356
"04:49 am October 4, 2016                    Ok. I understand now. It is the SCRUM TEAM's collective responsibility.  For first sprint,   PO will express his desired sprint length from customer value stand point.   DT will express this from technical ability.   ST will facilitate it.   For next sprints,   It is preferred not to change the sprint length. However, during sprint retro it can be discussed as needed.  thanks for your time.           Log in or register to post comments",7356
"07:03 am October 4, 2016                    Correct.          Log in or register to post comments",7356
"01:49 pm October 4, 2016                    Thanks Ian.          Log in or register to post comments",7356
Log in to reply,7356
Messages,7351
"07:10 am September 28, 2016                             Hi everyone,  I am keen to complete my PSM 1 certification, however as I have no experience working in IT/Software is there any benefit for me completing this exam if I cannot boost my career?  I would love to be a SM in the software world but I don't have that background- I am thinking I maybe better off gong down the Prince2/waterfall  traditional PM route and staying in a industry I know well?  Thoughts?",7351
"01:18 pm September 28, 2016                    is there any benefit for me completing this exam if I cannot boost my career?As a Scrum Master your objective is to be a servant leader.  Although having career aspirations is not wrong, it sounds as if this is your primary reason for seeking the PSM certification.          Log in or register to post comments",7351
"01:09 pm October 4, 2016                    Basically, no set of eligibility requirements. But if you could have basic working knowledge of  overall Scrum process then it could be useful for you. So first understand what SM roles and how he/she can approach a team etc..          Log in or register to post comments",7351
Log in to reply,7351
Messages,7343
"01:11 pm September 20, 2016                             Often during the daily stand-up my Team members give an update on non-development tasks like ""I attended a meeting, waiting on my badge, having a meeting with the client., etc.."".  As the Scrum master I tolerate it because our timebox has not been compromised.   But is it proper to update the team on activities that's not directly related to developing the product?",7343
"01:38 pm September 20, 2016                    If the Daily Scrum timebox is not being compromised yet with non-sprint topics, that is good.   However, that is no guarantee that will be the case going forward.  My suggestion would be to keep the discussion focused on the sprint work during the Daily Scrum, and only if time permits at the end of the Daily Scrum, open the meeting for any additional discussion that may benefit the team.  Keep in mind that the Daily Scrum is the team's opportunity to get on the same page regarding sprint work.   It is not a status meeting.   There really is no reason for a team member to bring up meetings/activities that have nothing to do with the sprint, unless the result is a capacity impact that affects the team's ability to complete sprint work.  Ask yourself why team members feel the need to ""look busy"" in the Daily Scrum by recounting all of the activities they participated in?   What can you do to change their focus and perception of the meeting?           Log in or register to post comments",7343
"03:22 pm September 20, 2016                    > ...is it proper to update the team on activities that's not  > directly related to developing the product?   From your reading of the Scrum Guide, why not ask yourself a slightly different question. Is it proper to update the team on activities which are not directly related to the Sprint Goal?          Log in or register to post comments",7343
"08:39 pm September 20, 2016                    Why do they report on tasks like ""I attended a meeting, waiting on my badge, having a meeting with the client., etc.."" ?  Is it because they want to justify (=> the Daily Scrum is used as a status/report meeting) ?  How does it help the Dev Team to progress toward the sprint goal ?          Log in or register to post comments",7343
"12:27 pm September 21, 2016                    In my opinion what matters on the daily scrum is the progress in achieving the sprint goal. Its purpose is to synchronize the work, plan the next 24 hours and report impediments that disturb the team. There is no sense to talk about the stuff that are not associated with the sprint goal.   Imagine a situation when some team member everyday talks about meetings, his breakfast, sick childer etc.. How could it help the team in achieving the sprint goal? It is just a waste of time even when you don't exceed 15 min timebox.          Log in or register to post comments",7343
"05:31 pm September 21, 2016                    I agree with Jaroslaw -- the time for the Daily Scrum should not be wasted. Timeboxes for all the ceremonies are maximums. There's no need to fill up the time if the team can accomplish the purpose of the meeting in less time.   As Scrum Master, you have a great opportunity to assert yourself and guide the team in positive ways towards better practices. Remember the Scrum value of Openness, and stop tolerating weak practices in your team! I hope your teams become stronger because of your strength and perseverence.          Log in or register to post comments",7343
"01:26 pm September 22, 2016                    Your comments are consistent, and inline with what I have been thinking also.   Going forward I'm considering that the Team only speak to their specific task number (in this case a Jira ticket). That way, we don't stray from the purpose of the stand-up.          Log in or register to post comments",7343
"04:22 pm September 22, 2016                    Remember that the Daily Scrum is the Development Team's event.  If they are achieving the purpose and not exceeding the time-box, then it is not a violation of the rules.  In terms of lean and waste, it might be seen as more productive to restrict conversation, also consider possible downfalls are there with any limitations.  How might the sense of empowerment through self-organizing be affected?  Does this snowball into denying some joking around which keeps the event from being mundane?  Will there be a shift to a more status meeting type of execution?  (If it is already, then that the concern that should probably be addressed first.)  HTH          Log in or register to post comments",7343
"12:14 pm September 23, 2016                    Going forward I'm considering that the Team only speak to their specific task number (in this case a Jira ticket).  I have personally seen excellent results using this approach (and it is my preference for teams conducting their standups).   It keeps the meeting focus strictly on the sprint work, which is the purpose of the sprint in the first place, and avoids the ""roll call"" status approach from traditional 3-question standup practices.  Let us know what results you observe.          Log in or register to post comments",7343
"02:45 pm September 23, 2016                    In fact, it's quite extent to focus on the baton and not on the runners, that is, I know teams who review items top-down (by importance instead of following an talk order of the members of the DT). Their talk is focused on which was the progress, and will be the progress and any impediment to make further progress, then the next item and so on. This way can be more ""chaotic"" because not everybody has something to say and when there's collaboration to carry out an piece of the place between two or more people, just the update of one of them can be enough. So it's not so organized as round-robin talk. But on the other hand could be beneficial.          Log in or register to post comments",7343
"02:54 pm September 23, 2016                    About not task... is the current sync good enough between the DT?   Are these tasks not to related to the Sprint Goal (needed to be controlled or measured for any purpose?, e.g. the DT is lately missing the Spring Goal, etc.).   What about asking the DT how useful are these updates for them and to achieve de Sprint Goal?          Log in or register to post comments",7343
"02:55 pm September 23, 2016                    About not task... is the current sync good enough between the DT?   Are these tasks not to related to the Sprint Goal (needed to be controlled or measured for any purpose?, e.g. the DT is lately missing the Spring Goal, etc.).   What about asking the DT how useful are these updates for them and to achieve de Sprint Goal?          Log in or register to post comments",7343
"05:44 pm September 23, 2016                    Sanjar, regarding having the team members speak to their task numbers in JIRA, great. Also coach them to state the Summary (headline) of the task, not just the ticket number. It is meaningful and everyone listening knows what the work is.          Log in or register to post comments",7343
"06:16 am September 25, 2016                    Great feedback.  Darlene, I've found that team members just seamlessly read off their ticket number and summary. Good happenstance.          Log in or register to post comments",7343
"09:14 am September 25, 2016                    Where there is a physical task board present, encourage team members to go up to the board and actually  point to the relevant item. It's surprising how many adopt a sudden look of bafflement as they realize that the item is in the wrong column or has the wrong avatar on it, and has not been magically updated by the fairies since the last scrum. It's an opportunity to assess team ownership of this information radiator, and the plan it should represent.          Log in or register to post comments",7343
"11:55 am September 27, 2016                    From experience, walking the board often results in a status meeting as much as passing the baton and 3QF.  Having a discussion is natural and supports team collaboration over speaking as individuals in a group.  Why are people reciting ticket numbers and summaries?  That can be a red flag indicating people working in isolation, perhaps even waterfall inside Scrum  Back to the original question, I've seen a Development Team create their own Daily Scrum rule that work not related to the Sprint Goal would not be discussed unless it was an impediment.  The rule was founded in the management attending the Daily Scrum desiring an accounting of each team member's time.  As a side effect, the team members began to slide toward a status report format.  As soon as management became enlightened and stopped attending, the team removed the rule to foster better communication through conversation.  Remember that the Daily Scrum is the Development Team's event. If they are achieving the purpose and not exceeding the time-box, then it is not a violation of the rules.  There is no reason to interfere.          Log in or register to post comments",7343
"01:01 pm September 30, 2016                    Alan, I agree with you halfway. The Scrum stand-up is an opportunity for the Developers, yes, but also an opportunity for the Product Owner to get a pulse on progress and understand implication of blockers.  I have no problem with discussions in a stand-up, so long as it doesn't hurt timebox and is related to the tasks.          Log in or register to post comments",7343
"01:32 pm October 3, 2016                    Just some quick brainstormed thoughts . . . Would telling a joke be out of line?  What about the possibility of unseen impediments or efficiency reducers that could remain hidden by restricting the dialog?  If the observing Product Owner felt he/she was not getting the information desired, would that influence a change in the Daily Scrum?  What risks to achieving the event's purpose could that create?  How would effectiveness/efficiency be affected by allowing the Development Team to identify and discuss possible impediments then bring them to the Scrum Master and Product Owner immediately following?          Log in or register to post comments",7343
"04:38 pm October 3, 2016                    My stand-ups are not so robotic and musty. We do quip and joke.  My observation of Scrum is that while it's particular of it's definitive expectations, it's neutral or silent in other areas, like the observing PO or even asking the Team if there's any discussion points post-stand-up while everyone is still in the room.           Log in or register to post comments",7343
Log in to reply,7343
Messages,7350
"10:15 am September 27, 2016                             I started to work in a company that has little or no knowledge of Scrum, design principles, design patterns, unit testing ...  I have good agile skills because I was working in a company that practiced Scrum.  I am the only developer with such skills in this company.  Now my boss thinks its time to start using Scrum in our company (he read about it, and I convinced him that its a good idea).  I will of course help in this process since I have the experience.  How could I be applying Scrum slowly, so it wouldn't be a shock for developers without any experience with testing, continues integration, continues delivery, design patterns, principles,.. ?",7350
"04:22 pm September 27, 2016                    Now my boss thinks its time to start using Scrum in our company (he read about it, and I convinced him that its a good idea).  What information about Scrum did you share with your boss?   What expectation does he have regarding Scrum?  What was your experience like when you grew in your knowledge and experience with Agile?   Empathy is a valuable trait with any proposed transformation that you've already gone through.  Why do you feel it is up to you to apply ""Scrum"" slowly?   What does your team think about any of the proposed development and delivery improvements (CI, CD, SBE, TDD)?          Log in or register to post comments",7350
"05:48 pm September 27, 2016                    Scrum usually requires deep and pervasive change. Any change ought to be substantial enough to evidence empirical improvement.  Wouldn't it be more practical to contain and control the shock of doing this, rather than to try to eliminate it?  What does your boss think about this, and how it could best be managed? What about the rest of the organization, including the business? What sort of sponsorship for enterprise change will be required?          Log in or register to post comments",7350
"06:21 pm September 27, 2016                    No matter the approach, do what you can to increase the possibility of success.  There have been some great points already made.  Ensure the business understands the intent and this is not a silver bullet, change takes time and failures create knowledge.  If the Development Team is not technically ready, then that alone will create some significant opportunities through challenge.  The Scrum Guide (http://scrumguides.org/) should initially be shared with the business stakeholders; the Scrum Master should already have it.  Once the Scrum Team is rolling, it can be a great experience to dissect The Scrum Guide together to understand its intent and the consequences of breaking the rules.  Don't rule out shock therapy (http://jeffsutherland.org/scrum/SelfOrganizationShockTherapy.pdf) as an option but accept that it has its risks and requires a strong Scrum Master.          Log in or register to post comments",7350
"04:32 pm October 3, 2016                    Hi Qwerty :-),  I have worked in both waterfall and Scrum projects and I have also worked in projects where teams have transitioned from working in waterfall to scrum. What I have  seen is all teams struggle initially, but some teams come out having learnt something and understanding how to take it forward, while other teams have been less happy with the entire philosophy and have wanted to go back to waterfall. What I am trying to say is , from waterfall to scrum is a transition and  like any other,  it works well, only when done right and when we stick to the scrum principles in true spirit.  Below are some pointers that i felt have helped teams moving from waterfall to scrum.  1. Understand if scrum is the best way to execute the given project. Typically there would be a scrum coach or a governance body for the organization that would come up with the guidelines on what kind of projects could be a good fit for scrum. This is one of the important factors to keep in mind. Some (not all) data integration projects, infrastructure or migration based projects are better executed in waterfall. So, we have to make a very objective assessment, before we decide to execute a project in scrum.  2.Provide some basic training to the team as a whole to understand what scrum principles are and what benefits they provide. Give them a few case studies so that they can understand how to create stories/ epics/ tasks, how to point stories, how to come up with definition of done and so on and let them work on that as a team.   3.  Invest in a good scrum coach and scrum master for the team. They should be able to mentor and guide the team when discussion and disagreements start taking more time than the real work at hand.  4. Accept that it is not going to be perfect from day one. You are not going to be able to get the perfect Epics/ Stories/ tasks out there. Even some well trained teams fail to do that. Take it all as part of learning and be happy as long as you see the team motivated and making progress in terms of deliverables.  There are several other things we could do, but these should help you get started.          Log in or register to post comments",7350
Log in to reply,7350
Messages,6395
"01:40 pm June 16, 2015                             Spring Goal - how to define... Lets imagine a team working on a eCommerce site. During the sprint planning meeting, in cooperation with product owner they decide to do:  - implementation of new kPal payment platform  - adding multiple products to a basket  - providing useful product suggestion to a registered users who already bought something (others who bought this also bought...)  - access to old invoices  4 completely different things... How can I help the team to define the sprint goal?  My insights...  - Creating a sprint goal which contains 4 different pbi's is not well seen by the team (actually they would love to define the sprint goal as only one of above increments, but they know they can do much more during the sprint)  - Creating a sprint goal connecting all above pbi's in one linguistically correct sentence is nearly impossible  - During sprint planing team couldn't decide to do different set of pbi's (that might connect better as a sprint goal)  I've searched dozens of websites, blogs, books etc, but nobody writes about good practises of defining Sprint Goal (in similar, easier or more complicated cases).  Please advice.",6395
"03:10 pm June 16, 2015                    Presumably the Product Owner values the aggregate contribution of the 4 items, and would like to receive an increment with this functionality.  Since each one of the items provides a user experience, we may infer the existence of a valid workflow, storyboard, or user journey that encompasses them all. The PO should wish to see this demonstrated no later than the Sprint Review because it would evidence useful aggregated functionality. For example, it might be a user receiving product suggestions, adding these items, submitting a payment, and then reviewing invoices.  Those are all separate PBI's, but they can be drawn together into a storyboard that represents a potentially valid user journey through the system. That journey is a single coherence and as such it could be a potential Sprint Goal.          Log in or register to post comments",6395
"03:22 pm June 21, 2015                    The sprint goal could be ""create a self-service transactional solution which allows customers to browse and buy products, provide recommendations and adminster/manage their own accounts""          Log in or register to post comments",6395
"11:28 am September 29, 2016                    I would like to upvote this topic that was sadly abandoned by OP.  I'm facing the same problems here, we're working on one topic but at first sight it is challenging us to ""bracket"" 4 or 6 PBIs into one consolidated Sprint Goal.  The user scenario approach than Ian depicts is interesting.  The attempt here above sounds to me like a cumbersome way of putting all these 4 PBIs in one sentence. Having one sentence doesn't make it a goal.          Log in or register to post comments",6395
"11:32 am September 29, 2016                    If I look at this article for instance, the first example just doesn't sound like what a Sprint Goal is meant for Sprint Goal: Complete Five User Stories and Fix All Production Bugs   This is just a statistical and purposeless description of the sprint.  http://www.luxoft.com/blog/vmoskalenko/7-sprint-goal-patterns-for-build…           Log in or register to post comments",6395
"02:27 pm September 29, 2016                    Have a look at this article I wrote last year on ""Sprint Goals in Practice"":  http://dzone.com/articles/sprint-goals-in-practice           Log in or register to post comments",6395
"08:37 am September 30, 2016                    Thank you guys for the ideas. I really appreciate your help.          Log in or register to post comments",6395
Log in to reply,6395
Messages,7345
"09:43 pm September 21, 2016                             I developed a prototype software application some years ago for a CEO with an a idea.  As the only developer and functional analyst, I worked on transforming the application to a commercial product.  As our customer base grew up, I started to stress the importance of having roles for UX designer, testing, planning, domain-skilled functional analyst.  We hired more people, let's face it, the first 3 were a bit passive and not very skilled.  Now we have 3 more people very proactive and technically skilled  I also started to introduce agile methodology, that means, effectively explaining concepts put them in practice and asking CEO to pay training and coaching for us.  What I see now is:  - I don't develop anymore, I even have hard time trying to defend or propose technical decision, as new people are more skilled.  - I don't decide anymore how functionality should be designed. I've chosen people for that.  - I also suggested somebody to take a ""product owner"" role.  I've assumed myself an ""agile coach"" or ""SCRUM master"" role and I have a feeling of emptiness.  I can't avoid watching the product evolution and questioning technicalities or functionalities. But of course, I restrain myself, the development team should think ""how"". The product owner decide what the product does.   Not me anymore. Even worst, what I've done till now, is old fashioned, poorly designed, poorly architected.  And I know, that in a way, is completely true, because I was overworking hard for several years.  I really believe in agile methodology, and I want to trust people.  But still.  I doubt my scrum master role will fill my day.  I often stare out of the window, thinking I've lost everything.   And then I think, WTF, I've still the highest salary and the company is growing. Should I forget all this and enjoy more free time, finally?  Anybody passed through this?",7345
"02:45 pm September 22, 2016                    Marco, I developed a prototype software application some years ago I also suggested somebody to take a ""product owner"" role. \ I can't avoid watching the product evolution and questioning technicalities or functionalities. It seems fairly evident to me that you are not performing in the role best suited for you.   You find yourself thinking about the product all the time.   That is what you are passionate about.   It's your product, yes?   Then why aren't you the Product Owner?  I think you would make an excellent Product Owner.   You have technical knowledge and skills, and that subject matter expertise can be used to relate very well to the Development Team.   But you also clearly recognize that the Development Team is more skilled technically and better suited to identify and develop the solutions for the product needs.  It is also a huge bonus to have a Product Owner who evangelizes Agile!  Everything about your post screams that you are a Product Owner ""stuck"" in a Scrum Master role.  Can the individual who you suggested to be the Product Owner fulfill the Scrum Master Role?   Don't consider compensation or tenure in this decision, but look at what would work best for the product and the company as a whole.  As an aside, I can guarantee you that most Scrum Masters and Development Teams wish they worked with a Product Owner like you.   Good luck to you.          Log in or register to post comments",7345
"03:01 pm September 22, 2016                    Think about the role you have played in the innovation process. Is there any further innovation to be done, where MVP's can be validated and turned into a new and sustainable product?  I'd suggest that there probably is.          Log in or register to post comments",7345
"10:19 am September 28, 2016                    Yes. I wanted to be the Product Owner, but let's say the management would not like it.  Management would like to have a P.O. easy to control.  I would not be that, because as you said, I'm passionate about the product and I have the knowledge.  That's why I thought that I could put in that position somebody that would be more accepted by the management.  I hope that the P.O. will rely on me on many issues, and that I will in some way still decide something in the company.  I would like to be able to say for example, to the management, ""please you should not give orders to developers as if they where your slaves, but you should discuss priorities and future project lines with the P.O.""  And I hope that in some way I'll participate in that discussion, for example helping the P.O. in ordering and structuring the backlog items.  But of course, I'm afraid my role will become useless and that my importance will decrease.  On the other side I'm also aware that my (hidden) plan of becoming secretly the Ultimate Great Leader it's probably against transparency...  But so the question is, how much a scrum master can hope to influence the direction of a team?           Log in or register to post comments",7345
"02:17 pm September 29, 2016                    Yes. I wanted to be the Product Owner, but let's say the management would not like it.   Management would like to have a P.O. easy to control.  You said that you introduced Agile/Scrum to your organization, which is good.   However, it seems that the ""buy-in"" needed for effective and lasting Agile transformation is not yet there.   Who is your Agile ""champion"" within executive management that is driving adoption and Agile practices?  Why is command/control still appealing to your management?   Do they fully understand the drawbacks with that approach, and able to contrast that with the corresponding benefits of an Agile approach?  It can be quite lonely and frustrating to be an Agile evangelist in an organization that is simply not on board, and only paying lip-service to it. how much a scrum master can hope to influence the direction of a team?  I like the analogy of leading a horse to water.   You can talk about what works and doesn't work according to your knowledge and experience, but if the team doesn't want to ""drink"", there isn't much you can do.   All you can do is look for the next pool of water, and hope that they'll finally take a sip.  Pain/failure is a key motivator to open up a team to the reality that they are ""thirsty"".   Look for opportunities with the team where you can explain the reasons why they're facing issues/pain, and be prepared to offer ""suggestions"" on what they can try to ease that pain.           Log in or register to post comments",7345
Log in to reply,7345
Messages,7331
"01:00 pm September 15, 2016                             Hi Everyone,   I sincerely apologise if this topic is discussed before but I have some confusion around the concept of sprint zero and wondering if anyone can help clarify this.   Now I do understand there is no sprint zero within scrum. But what should we call the process where we create the initial  product backlog items so the team can pull those items to work on their first sprint?   Also, for the sake of argument if we do call the process of setting up the team and creating initial product backlog items etc etc as sprint zero then what is the best practise around the duration of sprint zero? Should we try to use a timebox for this event as well?   Would highly appreciate some comments around this to help me understand this better.",7331
"05:31 pm September 15, 2016                    ""Sprint 0 is like Casper, the friendly ghost. Well-meaning, but creepy."" -- Nitin Khanna.  Although, discussed before, this remains an ever popular question. You may simply call what you're describing as ""initial product backlog creation"" or ""refinement"" or something that makes sense to the audience. This may depend on your Organization, culture and agile maturity seen.   For the sake of argument (or collaboration?) --   A Sprint has formal connotation. i.e. it has -- Planning, Daily Scrum, Review & Retrospective. If you're using the term ""Sprint"" I would imagine it includes these.   I would try to figure if there's something else (terms) that can be used to describe the initial team formation. This, again, is subjective and you'll probably get some more opinions further below.   Timeboxes are great! They help keep focus and can be used during an initial team formation as well.   The initial Sprint may be a bit bumpy, but it helps people to get into a rhythm as well as produce a small increment, however so this may be described with relation to the Sprint goal.   Hope some of this helps.          Log in or register to post comments",7331
"06:17 pm September 15, 2016                    Hi Nitin   Thank you for your valuable response. Just to get your thoughts on the below quote, that if we do planning, daily scrum, review and retrospective for sprint zero, then do you not think we need to have an increment as well at the end of sprint zero?        A Sprint has formal connotation. i.e. it has -- Planning, Daily Scrum, Review & Retrospective. If you're using the term ""Sprint"" I would imagine it includes these.               Log in or register to post comments",7331
"07:10 pm September 15, 2016                    Per the Scrum Guide: The heart of Scrum is a Sprint, a time-box of one month or less during which a “Done”, useable, and potentially releasable product Increment is created.  A sprint therefore must have a sprint goal where something valuable to the business is delivered, however small that may initially be.  The initial sprint will likely contain much more grooming activity to prepare a backlog of PBI's than future sprints.   What is important is to ask what can initially be done, and then begin working on that item.  Again, if we're being asked to treat the first sprint like an actual sprint (per Scrum Guide), then why refer to it as ""Sprint 0""?   Just call it Sprint 1, and get started!          Log in or register to post comments",7331
"08:34 pm September 15, 2016                    During my preparation for PSM I, I read somewhere that initial product backlog is created during the process of Product Planning. Usually Product Owner and Stakeholders are involved in such a process, if scrum  team is not yet formulated.   This process involves creation of epic size stories, i.e requirements spanning over months, for product backlog. It can be refined to release level stories also.    This initial PB can act as an input to Sprint 1 sprint planning where stories are refined to tasks and sprint backlog is created.  I hope this will  be helpful.          Log in or register to post comments",7331
"08:47 am September 16, 2016                    Hi Momin,  as you have said there's no Sprint 0. I think what you are looking for is the concept of Inception. Inception is a phase where you form the team, develop a common vision and a mision for the product, develop some initial business and technical strategy, get the funds to start the product, analyze some risks, etc. This phase is clearly detailed in the process decision framework DAD.   One way or another they are problems that should be addressed. Since the contexts are very different, there is no single solution. It is possible that many of these aspects will come already solved and maybe you are only worried about the creation of the initial Product Backlog. In such case you can have just a harder Sprint Planning Meeting, that is, you can set an 8 hour timed-box meeting to establish a plan of what and how to build as the first Increment.          Log in or register to post comments",7331
"02:57 pm September 16, 2016                    One opinion . . .   Regardless of what it is called (other than using the term Sprint), some minimal time might be needed to help the product effort have a strong start and produce value during the first Sprint.  These activities can include crafting and sharing a vision, initial Product Backlog creation, Scrum Team formation and familiarization, and environments (development, build, testing, staging, source control, tools, etc.).  Perhaps some or all of these will not be necessary.  As noted already, there is no prescribed answer.          Log in or register to post comments",7331
"12:05 am September 17, 2016                    Thank you all for providing some insight and sharing your experiences.          Log in or register to post comments",7331
"01:58 am September 17, 2016                    > Now I do understand there is no sprint zero within scrum.  > But what should we call the process where we create the initial  > product backlog items so the team can pull those items to work  > on their first sprint?  You can call it whatever you like, but not a Sprint. To be a Sprint some value must be released, no matter how small, in a clearly time-boxed manner.  The challenge is to effect initialization in such a way that sprinting, and the delivery of value, can begin as soon as possible. In theory, you only need enough work on a Product Backlog to start one genuine Sprint. The rest of the backlog can be refined on a just-in-time basis. However, this increases certain risks (such as a failure to prepare enough work for the next Sprint Planning session), and so a rolling horizon of (say) two or three sprints' worth of work might thus be observed.          Log in or register to post comments",7331
"02:32 pm September 19, 2016                    Hi,  I'm agree to say there is not sprint0.   There is a first phase called the Setup. During the setup phase, you build your different environment of work, and you build your backlog. In first you build EPIC and enought User Story groomed to begin the sprint 1.          Log in or register to post comments",7331
"10:36 pm September 21, 2016                     There is nothing as Sprint 0... period.  This concept got traction few years back as everyone was trying to solve all issues in scrum framework. If we see project management life cycle (PMLC), scrum falls in more into execution phase. Scrum does not address project initiation or planning efforts. Many experts now talk about creation of vision document and road map as precondition before starting scrum. Scrum also consider ""highly motivated team"" is available at the beginning.  It may not be scrum master but project manager activity but some initial planning and team formation and on-boarding process is still required. Once team has required ingredients, team can start Sprint. In first sprint, team can take up any small business function/ story and complete it. Goal of any sprint has to be delivering (may be small but) working software. Scrum team begins their journey with sprint 1 under guidance of SM and direction of PO while using many engineering practices.  ... open for further discussion/ disagreement!  Thanks          Log in or register to post comments",7331
"05:58 pm September 28, 2016                    Hi Momin,  Now I do understand there is no sprint zero within scrum. But what should we call the process where we create the initial  product backlog items so the team can pull those items to work on their first sprint?    Call it whatever you like (Kick off, Prep, Setup, etc) or simply don't call it at all to avoid confusion, just get the necessary stuff done before starting your first Sprint. The concept of ""Sprint 0"" is not only a practice not present in the Scrum Guide but it can be considered a harmful anti-pattern as it establishes precedences that can bite you back later on. The two most common excuses that come along with ""Sprint 0"" is that it doesn't have to deliver business value and that it can be extended as many times as needed. If you allow those in ""Sprint 0"" someone might be tempted to use that as a precedence in the future saying ""Hey, but we didn't deliver any business value in Sprint 0, we should be fine not delivering any in Sprint 18"" or ""Let's extend this Sprint for just one week, we extended Sprint 0 for a month and we were fine"". On the other hand if you plan to follow all rules why call it ""Sprint 0""? Prepare enough PBIs for one sprint and start clean with ""Sprint 1"".  Also, for the sake of argument if we do call the process of setting up the team and creating initial product backlog items etc etc as sprint zero then what is the best practise around the duration of sprint zero? Should we try to use a timebox for this event as well?    Hard to come up with a best-practice for an anti-pattern ;) but if you'd like to timebox this process (regardless how you call it) consider sending a clear message on what will happen when the timebox ends and you don't achieve everything that was planned (regarding team composition, Product Backlog, etc).          Log in or register to post comments",7331
Log in to reply,7331
Messages,7306
"07:32 pm August 28, 2016                             I did the PSPO I exam couple of days ago and unfortunately got 66/80... Reading really well the scrum guide, scrum glossary and doing the open assessments is just not enough for passing, if you ask me... ;)   I noticed in the exam questions that there was some terminology (eg. Cone of uncertainty and release planning), which is not mentioned in Scrum guide nor Scrum glossary.   Are the some good links, which would have brief descriptions of differerent scrum terms in a little bit wider scale than just sprint planning, scrum master and sprint backlog? I can handle the basic terminology, but would like to read more from the terms, which are not mentioned in the scrum guide.   Thanks for your responses!",7306
"04:34 pm September 5, 2016                    I am using these two books and they contain relevant information   https://www.amazon.com/dp/B01D73SRH4  https://www.amazon.com/Agile-Product-Management-Scrum-Addison-Wesley-eb…  I also regularly follow scrum.org blogs. There are few very insightful articles on the topic          Log in or register to post comments",7306
"07:19 am September 6, 2016                    Hi Pilvi,  Have you had a look at the book area for Product Owners? There are  good books, to mention some of them I find interesting: Scrum - A Pocket Guide, Peopleware, Agile Estimating and Planning, The Lean Startup, etc. If I were you I would definitely read the pocket guide. And maybe taking into account your interest a good book for you it would be Agile Product Management with Scrum: Creating Products That Customers Love.  Regards.          Log in or register to post comments",7306
"01:27 pm September 13, 2016                    This book can help you (provided you understand thoroughly the background/reasoning):  Scrum Product Ownership: Balancing Value from the Inside Out  T          Log in or register to post comments",7306
"11:45 am September 27, 2016                    Hi  I attempted PSPO and got 82.5% and unfortulately failed.   Muthu          Log in or register to post comments",7306
Log in to reply,7306
Messages,6888
"04:12 am May 30, 2016                             Hi everyone,  I have a question concerning the 3C's of User Stories.  If you follow the 3C's a User Story should be a reminder of a conversation. Jeff Patton wrote in his story mapping book ""User Stories should be like vacation pictures"". I totally agree with all this.   However, how can we make sure everyone can remember the story behind the user story?   In my team we use JIRA as our requirements tool. During Backlog Refinement sessions we have all this great conversations about the user stories. And the results of our conversations we write down in the description of the corresponding JIRA issue.   I'm interested in your opinion about this approach. Would you recommend it?   What other approaches do you use to help the team (and everyone involved) to remember the story behind the story?   Thanks for your answers in advance!  Best Regards,  Benjamin",6888
"06:14 pm May 31, 2016                    Yes, documenting the details after the team discusses and gains a shared understanding is perfectly a valid approach; it helps with recall and audit requirements (traceability). What's really important is for the team to focus on having those healthy conversations first rather than writing down the requirements and passing them on.          Log in or register to post comments",6888
"05:24 am June 2, 2016                     Please be cautious - don't write too much details in a user story otherwise it will become a requirement doc.          Log in or register to post comments",6888
"12:16 am June 6, 2016                    A User Story is not a reminder OF a conversation, it is a reminder to HAVE that conversation.  The people who are involved in creating the product should be part of that conversation. The point is to gain a shared understanding of what should be built. Preferably, the conversation should be held as shortly as possible before the actual building of it so that the details are still fresh in everyone's mind and the story is still valid.   That said, when discussing the story, do write down notes, add pictures, take photos of any whiteboard drawings, add wireframes, designs, examples, spreadsheets with calculations, etc. Whatever it takes to get to that shared understanding of the story between everyone involved in creating it.          Log in or register to post comments",6888
"02:54 pm June 6, 2016                    User stories are based on CCC  Card, Conversation, Confirmation  The team is focus on the user, the user story has to be short to ""fill"" a post-it.  The user story is shared and known by the team --> this is the conversation part. When the US is about to be developed, it is more accurate, and the need is more detailed.  The confirmation is the way to check if the need is well implemented.  As you may know, US are not mandatory by scrum (just like scrum board). It could be considered as a good practice.  http://enfocussolutions.com/the-three-c-s-of-user-stories/  Some articles of Mike Cohn ore maybe bob galen explain a side effect of US --> writing technical user stories is not easy (how to speak as a user when you want to change your DB schema?).  Just think about it          Log in or register to post comments",6888
"12:48 pm June 17, 2016                    Much of the conversation could should be concentrated into acceptance criteria which will become your acceptance tests and really high level requirements. I also see many organizations blowing off the value of a user story, or the so that part of it. If the story does not have value why do it.  If you can't measure value at a user story or higher value again why do it. I know it is not as easy as it sounds especially if your organizational culture is not there yet and that's a big reason for failure in agility today.  I also like to get team members involved with capturing important pieces of the conversation with a collaborative tool electronic or not. I don't think a facilitator like a PO or SM can capture all the thoughts going on, translate and facilitate and xxx.          Log in or register to post comments",6888
"02:54 pm July 1, 2016                    User stories are a technique, not the only way.  Limiting the Scrum Team to not recording enough information or barring them from addressing technical concerns that will affect productivity, testability, and performance which is doing everyone involved (including customers) a disservice.  The idea of acceptance criteria works well for both demonstrable feature stories and technical work; they are in essence a brief requirements document.  Agile values ""Working software over comprehensive documentation"" which does not preclude a Scrum Team from such brief record keeping activities.          Log in or register to post comments",6888
"08:01 am July 2, 2016                    I would expect that discussing the requirements results in changes in the acceptance criteria. You will probably add some acceptance criteria en might even change some of the existing acceptance criteria into new ones that might be smarter/easier/doable.  In that scenario you should update the story's acceptance criteria.  Also any other decisions made during the refinement should be ""logged"", so that you can refer to it later. Just be careful not t odocument too much.          Log in or register to post comments",6888
"02:46 pm July 10, 2016                    Hi Benjamin,  out of the three ""C""s only the first and last should be documented. You can not document the whole conversation unless you voice-record it (not very useful later anyway). The result of Conversation should be Confirmation, which is the documentation of what will be presented to the PO at the Review meeting. All the background and clarifications are less important at the end.  Hope this helps,  Michael          Log in or register to post comments",6888
"10:56 pm August 5, 2016                    On this topic, when is the appropriate time for the conversation?  I was told that the team sees the story for first time in grooming session.  It is in business terms, they then size it to some sort of points with no discussion of what solution will be implemented.  The once the sprint starts the team discusses the design for first time          Log in or register to post comments",6888
"05:41 pm September 23, 2016                    As sprints on average are getting shorter and shorter and stories are getting split into smaller and smaller chunks I think the line of when to do design is blurring.  My teams are now getting into design in refinement meetings or in plain old collaboration because the pace is fast and the stories are small. That is not the answer for everyone. I think it depends on many variables but I would start with what Scrum recommends but if it doesn't work don't wait to experiment.  With points its also important that the points are relative, you are comparing stories to other stories. Not going to get into all the logistics of how you get there from nothing but RELATIVE sizing is important.  Also remember points are really only used for few things. To forecast how much work/stories to take on in an increment and in that vain to determine velocity which with along with capacity and other inputs determines the forecast. The points may also be used by the PO and team in more strategic planning dare I say release or project planning:)          Log in or register to post comments",6888
Log in to reply,6888
Messages,7346
"11:55 am September 22, 2016                             Thanks to Scrum.org, I obtained a quality and life time valid certificate.   Do's  - Pair with someone else preparing. Between you read out the Scrum Guide. After reading every sentence, mutually question so you can listen, deliberate and firmly anchor the meaning. If no one is available to partner, go for focused preparation by creating your own mind maps.  - Be very clear on what is NOT scrum - sprint zero, hardening, stories, formal status reports, managers, etc.   - Reading good material is the only requirement for a better preparation. There are only four things we need:  1. The Scrum Guide  2. The Scrum Narrative and PSM Exam Guide  3. Mikhail Lapshin's free online quiz   4. Scrum Open Assessment  A special mention of the book Scrum Narrative and PSM Exam Guide. This was the most helpful material for me to understand Scrum for the PSM test. Very elaborate in a simple language that I can understand. I am surprised that the book is not in the scrum.org reading list for the PSM Subject Areas. It deserves to be there.  - Optional: If you can afford little more time, search the scrum.org forums for threads with Dr.Ian Mitchell's responses. His understanding is rock solid and authentic compared to any other.   - Just minutes before actual test, attempt the Scrum Open Assessment. This last minute attempt will park the questions and answers afresh in memory. Close to 15% questions are direct copy paste of Scrum Open questions.  - Answer the questions where you get the right choice at the first glance. If your preparation is good, 80% questions fall in this category. Do not spend time on questions where the right choice is not quickly evident or have lengthy phrases. Simply bookmark and move on. If you do that, you can complete one pass in just 30 - 35 minutes. You can take plenty of time later to revisit the bookmarked questions.  - During the test, have scrum guide open in another browser. For the bookmarked questions, search by relevant keyword and look at the scrum guide content to get clues to answer the questions.  Don'ts  - During the test, do not search the net for answers (except the scrum guide).  - Do not trust the books (even recommended by scrum.org) if their latest edition is older than couple of years. Scrum has moved on. Books may not be in sync with latest changes.  - Do not try to guess the answer from your actual work experience. Use this clue: If you have to get the answer ONLY based on the scrum theory (not based on your work experience), how would you answer...  - Do not spend on online tests. You don't need question and answer practices. You need to ONLY know - what is Scrum vs what is not Scrum. For that - reading good material is the only requirement.   Myths:  - You can get through only when you have working experience. Not true. It only requires to have good understanding of Scrum (AKA The Scrum Guide).  - You can prepare for this in two days - 4 hours - kind of advice. Not necessarily true for all cases. We really don't know. The time for preparation will be known only after you attend Scrum Open and Michael's quiz. Less than 50% in first attempt means - solid time needed (in terms of many weeks). Around 70% - At least few weeks involving daily preparation. More than 80% in first attempt - Few days of prep.  - The test is very tough. Not true. 80% of questions can be correctly answered immediately if you have spent good time to understand Scrum. 15% questions require some cross thinking and elimination of bad choices one by one. Only 5% of questions (that is 4) are ambiguous, since we are not able to guess the assumptions made by question setter (Scrum.org seriously need to look at this). Due to forum restrictions I cannot provide a sample of what I mean. But if scrum.org wants me to share with them separately, I will be glad.  All the best   A Sathyaraj",7346
"01:50 pm September 22, 2016                    Hello Sathiyaraj,  Thank you for your interest in Scrum.org and congratulations on passing the PSM I assessment!  We are always striving to continuously improve the high-quality of our Professional-level assessments for certification. If you should have assessment feedback or refinement suggestions, please send them to support@scrum.org. We will be happy to share your input with our team of experts for review and consideration.  Congratulations again on achieving PSM I certification! Enjoy your day, Sathiyaraj!          Log in or register to post comments",7346
"08:25 am September 23, 2016                    Thanks for sharing @Sathiyaraj and it would be great to give Scrum.org feedback about those question you say are ambiguous.  Congratulations!  Scrum on!          Log in or register to post comments",7346
Log in to reply,7346
Messages,7341
"07:39 am September 20, 2016                             Hi there, could anyone provide some guidance on how Nexus / SPS manages external dependencies once identified during Grooming / Spring Planning?  I’m specifically interested in domain knowledge (people) for example is it recommended that these people are drawn into the team(s) for the duration of dependencies? Thanks.",7341
"03:11 pm September 22, 2016                    If you are referring to dependencies which are external to the Nexus itself, then the short answer is yes. A Nexus of teams must have all of the skills and resources necessary for turning product backlog into Done increments of potentially releasable work.          Log in or register to post comments",7341
"03:17 pm September 22, 2016                    Thanks Ian, appreciate the concise answer.           Log in or register to post comments",7341
Log in to reply,7341
Messages,7342
"01:02 pm September 20, 2016                             Background: one product backlog and one (client) PO; two teams (soon to be three) and a ""core"" team; 2 week sprints  Issue: Cross Team Communication > sometimes there are dependencies or relationships that are not identified when PBIs are created or during backlog grooming with regards to work being done by both teams (team 1 figures out during the sprint that work team 2 is doing has a relationship with what team 1 is working on and it creates a lot of ""stepping on toes"").    Question: How do the Scrum Masters facilitate/encourage necessary communication between teams?",7342
"02:52 pm September 20, 2016                    Jamie,  To what degree are the stories being accepted by each team ""independent""?   If the stories have dependencies on other stories, why is that, and what can be done to remove those dependencies?   I think you will find that as you increase the amount of independent stories that deliver business value, you will reduce the pain associated with cross-team coordination and communication.  I have served teams that have served a single PO with other teams.   It is not advisable for such teams to groom stories in a silo without sharing the information with other teams.   There needs to be additional communication and coordination across the teams serving a single PO.  What has worked well for me in the past is to have a team groom a story with the PO, and then for a single team member from that team to meet briefly with another team, actually performing as a proxy PO for the story.   It helps not only to confirm story understanding for the original team, but also introduces the story to other teams.   This aids information sharing across teams and promotes flexibility for Sprint Planning.           Log in or register to post comments",7342
"03:30 pm September 20, 2016                    Have a look at the Nexus Guide available elsewhere on this site:  http://www.scrum.org/Resources/The-Nexus-Guide  Might that be used as a frame of reference in your case?          Log in or register to post comments",7342
"08:35 pm September 20, 2016                    Maybe, some resources from the Scrum.org site can help :  https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…  https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…          Log in or register to post comments",7342
Log in to reply,7342
Messages,7344
"06:58 pm September 20, 2016                             Hi everyone!  Thanks for posting your suggestions and experience for taking up PSM1 which helped me a lot (thought I've little experience in Agile/scrum) to complete my certification. Below are my learning to clear PSM1:  1. scrum guide in scrum.org  2. Understanding scrum and its concepts clearly by reading through forums and other relevant sources (Gone thru many videos of Mike Cohn)  3. MPlaza's 3 different simulation exams (http://mplaza.pm/professional-scrum-master-certification-preparation-pr…)  4. http://mlapshin.com/index.php/psm-quiz/  Thanks again to everyone who shared their experience to help and guide others to rock PSM1  All the very best to PSM 1 aspirants:-)",7344
Log in to reply,7344
Messages,7312
"03:10 pm September 1, 2016                             Hi All,  The agile transformation of our company unit already started in a bottom-up approach. Being the Scrum Master for a pure software development team is working out fine. Scaling up to cross-domain projects usually managed by the classic project management approaches is a different story.  One of the questions I have not found a good answer for is ""How can I be sure that the team get all backlog items done within the time frame scheduled?"". From my point of you the experiences from lots of others projects which were not finished in time is the reason for this question. I trust in the Scrum framework to improve overall efficiency, but being a project manager myself for over 10 years I can fully understand the desire to get an early warning in case the Scrum team is not able to get everything done in time so e.g. additional developers can be assigned to the team. After some sprints when the team velocity has stabilized and the backlog is more and more refined I deem it possible to give an early warning to the project manager applying scenario techniques. Still, it will hardly convince a senior project manager. As SM I consider it my job to spread the understanding for agile development in our company, so I am eager to hear what answers you would give in my situation or what strategies you would apply to calm down/encourage the classic project manager.  Thanks a lot for all your ideas!",7312
"09:44 am September 2, 2016                    Andreas,  For planning purposes, velocity is most useful when expressed as a range, such as: ""Our Scrum team is able to complete between 40 and 50 points each sprint."" With a velocity range we can more accurately provide an answer to the question like you mentioned and at the same time communicate our uncertainty. We can't guarantee that all backlog items will be finished within the time frame but we can forecast what will be done and what might be done.    Let's imagine that we:  - groomed the product backlog to a sufficient depth by creating, estimating the size of, and prioritizing product backlog items;  - estimated the team's velocity as a range;  - calculated the number of sprints (NoS) in the range.  Having this data available, we can answer to the question:  -  ""What will be done?"" by multiplying the slower velocity by NoS.  - ""What might be done?"" by multiplying the faster velocity by NoS.  If the answer to the question ""What will be done?"" is not acceptable for Product Owner, you, as a SM, should recommend actions to be taken in order to increase the productivity of the Scrum Team, decrease the number of PBIs, etc.  Good luck!           Log in or register to post comments",7312
"01:35 pm September 2, 2016                    Andreas, and don't forget that you can use burndown / burnup charts to visualize the progress of the development during a Sprint as well as the progress of the whole project. If any substantial deviations from the planned project path are noticed, you, as a SM, should analyse it and make appropriate recommendations.          Log in or register to post comments",7312
"01:47 pm September 2, 2016                    If the answer to the question ""What will be done?"" is not acceptable for Product Owner, you, as a SM, should recommend actions to be taken in order to increase the productivity of the Scrum Team, decrease the number of PBIs, etc.   One thing that Scrum does very well is make visible that which is typically hidden.   Andreas cited this in the opening post when highlighting the benefits of early detection in a sprint.   In my experience with traditional project management, everything is usually on target until the last third of the time line, when everything then turns red, and people look to cut corners wherever possible to keep to a faulty schedule that was developed when we actually knew very little about the project or the effort needed.  With traditional Sr. Project Managers, it is all about education, and showing them how inefficient their comfortable practices are in providing actual value to the company.   A solid Scrum practice improves technical debt, improves predictability, facilitates greater communication and collaboration, fosters learning, addresses vulnerabilities in the organization, just to name a few benefits.     Become knowledgeable about the benefits of Scrum, along with having an Agile mindset.   Also understand the inherent benefits of Lean thinking.   Then become experienced and skilled in communicating these attributes and practices to those new to Agile/Scrum.  I do want to point out one item mentioned in the original post:  I can fully understand the desire to get an early warning in case the Scrum team is not able to get everything done in time so e.g. additional developers can be assigned to the team.   It is simply not Scrum if we do not promote the benefits of stable teams.   Velocity as a reflective and forecasting metric is rendered meaningless if the roster of the team is allowed to change based upon sprint progress.   In fact, there are many studies which prove that adding resources late to a struggling ""project"" actually slows progress, and also deprives the team from learning and growing on their own.  Is the team allowed to ""accept"" the stories that are offered each sprint, based upon their expertise and capacity?   This must be allowed.   The team needs to control 100% the amount of work that is forecasted for completion each sprint.   Any other variation of this is again not Scrum.   It is critical for those doing the work to estimate the work and determine what can be done each iteration - no one else!  An identified Sprint Goal may help matters, as this could allow some accepted stories to remain incomplete or not started if the team is still able to meet the Sprint Goal.   Read up on this in the Scrum Guide.  It is not a bad thing for the team to fail completing all of their forecasted items each sprint.   As a Scrum Master, allow the team the freedom to find their way and learn what they are capable of doing.  The ""Project Management"" in your company may object to this approach.   If so, understand that they are likely misleading themselves about what the team and the organization are truly capable of.   Again, Scrum makes visible that which prefers to stay hidden (i.e. - capacity).  Good luck.           Log in or register to post comments",7312
"02:23 pm September 2, 2016                    Dear Oleksii,  The idea of a team velocity range is a good one. I will keep this in mind! Thanks!          Log in or register to post comments",7312
"04:56 pm September 6, 2016                    Dear Timothy,  Thank you very much for your elaborated answer! Maybe I should stress and explain what I mean with a cross-domain team. The projects we are dealing with have a fixed timeframe with a fixed scope of supply (contract of work and services). Several levels of our automation systems must be adapted or even newly implemented according to the contract. All levels are tested together on the final hardware before shipping everything to the customer. The different levels are realised in completely different ways of e.g. programming. This is what I referred to as cross-domain.  The traditional approach is/was that all levels try to be ready for the final test at a given date. Actually, this is never the case. That means besides checking interfaces, integrating everything and testing the functions our automation solution has to provide, everybody tries his very best to get his piece of work done.  I already finished two of such projects applying (as much as posssible) the Scrum framework. Only the lead engineers of each level were part of the development team. Otherwise, the maximum recommended team size would be exeeded significantly. Nevertheless, it already helped us quite a lot to gain a functional perspective over all levels.  Adding additional ressources to a 'sub team' is therefore not directly influencing the Scrum team, just the respective lead engineer has more ressource to get his part of backlog items done.          Log in or register to post comments",7312
"03:02 pm September 7, 2016                    Andreas, All levels are tested together on the final hardware before shipping everything to the customer.Only the lead engineers of each level were part of the development team. Otherwise, the maximum recommended team size would be exeeded significantly. Adding additional ressources to a 'sub team' is therefore not directly influencing the Scrum team, just the respective lead engineer has more ressource to get his part of backlog items done. It appears from your statements that you (or your organization) are simply not following Scrum.   Scrum seems simple at first, but it is far more than just iterative development and a handful of standardized meetings.  Scrum is based on the concept of stable teams.   That doesn't mean a Development Team is assembled from a cross-section of subject matter experts, like past project teams were created.   You need to flip your ""creation"" order.   Instead of creating ""work"" (i.e. - projects) and moving teams through the work (traditional approach), Scrum/Agile wants you to create stable cross-functional teams, and then move ""work"" through them!  At the end of each sprint, you should have something that is deliverable to the customer.   The concept of assembling multiple pieces of work at a future point, and undergoing a large integration effort (i.e. - ""hardening"" sprint) is again not Scrum.   Work to reduce or eliminate the dependencies between teams.   Lessons on story-splitting and the benefits of flow may help your understanding of the benefits of this approach and the folly of your current practice.  And finally, with a true Scrum Team, there is no role defined on the Development Team besides Team Member.   There is no Lead Engineer, or Team Lead, or any variation.   Any work accepted by a Scrum Team for a Sprint is the responsibility of the entire Scrum Team to complete according to the Definition of Done.   Nothing is ever the responsibility of a single Team Member to complete, although individual Team Members can certainly work on any Sprint item.          Log in or register to post comments",7312
"06:22 pm September 7, 2016                    Is the team allowed to ""accept"" the stories that are offered each sprint, based upon their expertise and capacity?  Yes. So basically the only two options available in our 'implementation' is to reprioritize the BIs and take into account that we do not get everything done or to add additional ressources to the sub teams lead by each developer.  I forgot to mention that all developers (also those of the 'sub-teams') are involved in Sprint Retrospective and the Daily Scrums we do. The concept of assembling multiple pieces of work at a future point, and undergoing a large integration effort (i.e. - ""hardening"" sprint) is again not Scrum.  This was the old way without any Scrum approach. I tried to explain that we are now working over all levels together continuously with the integration test always running in parallel and follow the goal to always create a potential shipable increment during a sprint. That we actually prove during the spint.  I am really aware that some items are not according to the Scrum guide and not as I consider them best or OK, but I am working on the transformation of a company towards one embracing agile values. Actually, that is my role as a Scrum master and I prefer a 'divide and conquer' approach about being stuck with the old ways forever. And that is also my motivation to get some input how to speed up this transformation without risking it because of some 'nice, but not fitting our business' ideas.          Log in or register to post comments",7312
"06:28 pm September 7, 2016                    'nice, but not fitting our business' ideas I meant that this is most likely the perception of a project manager not being taken seriously with his concerns and the management level for which the old ways worked out just fine for that many years.          Log in or register to post comments",7312
"04:54 pm September 8, 2016                    Adding a new team member usually decreases the velocity at least initially for a few sprints, as I had seen practically.          Log in or register to post comments",7312
"12:15 am September 17, 2016                    > I prefer a 'divide and conquer' approach about being stuck with the  > old ways forever. And that is also my motivation to get some input  > how to speed up this transformation without risking it because of  > some 'nice, but not fitting our business' ideas.  Divide and conquer what? Organizational inertia? Where is the sponsorship for organizational change coming from?  The problem you describe is certainly very common, but without clear executive sponsorship you can only expect local optimizations. That is often worthwhile in itself, since it represents improvement, but isn't agile transformation. You need clear sponsorship for that, and most of all, the sense of urgency for change that goes with it.          Log in or register to post comments",7312
"11:14 am September 20, 2016                    In fact, there is not that much sponsorship from top level management. From the other posts one could get the idea that you establish a Scrum team and rearrange the remaining company around it. This will hardly work out without any evidence of a benefit. Therefore, my approach was to start with some projects and collect some evidence that this new approach will also have advantages in our business.  I really consider this the thoughest responsibility of the first Scrum Master in a company, to advocate Scrum throughout the whole organization.          Log in or register to post comments",7312
"12:17 pm September 20, 2016                    > From the other posts one could get the idea that you  establish a Scrum team and rearrange the remaining  > company around it. This will hardly work out without any  > evidence of a benefit.   If you do not start with one Scrum Team, through which the value stream for a product can be inspected, adapted, and made transparent, what evidence of benefit is likely to be obtained?  In my experience you are most likely to achieve local optimizations which do not empirically and clearly evidence improved product value. It can be worth doing in itself, on the basis that it still amounts to a progress of sorts, but it is non-transformational in nature, and of course it won't be Scrum.  Yet transformation does not actually begin with one Scrum Team. It begins earlier, with an organizational understanding of how value ought to be defined and empirically evidenced. On that understanding you can implement a Scrum Team to gather such evidence; without that understanding there is little case for having a Scrum Team at all.           Log in or register to post comments",7312
Log in to reply,7312
Messages,7340
"09:00 am September 19, 2016                             There are currently more than 120 different architectural languages through which practitioners can specify their software architectures and perform various operations such as analysis, simulation, code generation, etc.  The list of architectural languages includes the existing formal modelling languages, informal modelling languages, and architecture description languages. To better understand practitioners' practical knowledge and experience on software architecture modelling languages, a survey is being conducted.  The survey can be accessible here: http://bit.ly/2bGpSN4  The survey results will be presented on international conferences an aim to be published in well-regarded scientific journals.  We strongly believe that the survey is not only funny but also has high potential in broadening the scope of practitioners on software architecture modelling.  Any person with any level of knowledge on software development can complete the survey in 3-10 minutes.",7340
Log in to reply,7340
Messages,6369
"05:54 am May 29, 2015                             Hello,  I´ve a question in case of roles:  What is the tactic a Scrum Master should use to divide a group of 100 people into multiple Development Teams?  I´m not sure and hope you can help me, thank a lot!  Kind regards, ANke",6369
"03:30 am June 1, 2015                    Dear Anke,  Although I am still a student of SCRUM, I like to share my thought over your question. As I read from your question, it is more about Scaling the SCRUM. The answer in brief can be:   Facilitate a discussion between PO and the Developers to figure out what sort of skills are required to deliver the product increment.   some more thoughts:  1. In such context, one must remember the rule around scrum team size which should be ranging between 3 to 9.  (Scrum recommends smaller self organizing teams because they are much more effective in such size).  2. Crossfunctional Skills: the teams should be arranged such that they are cross functional and possess skills that are required to create a production increment.  3. The PO should go through the PB along with the Developers and check what sort of skills may be required to deliver the same and accordingly discuss the team formation. The involvement from the Dev team (those 100 developers) is essential.  4. Although, on this particular point, there can be various opinions, but it is possible to form larger teams and assigning smaller teams to these larger teams for better functioning.  (or can be scrum of scrum).   hope this helps.   Best Regards,  Hemant          Log in or register to post comments",6369
"04:01 am June 1, 2015                    The ""facilitation"" part that Hement mentions is very important. When reading your question, then ""a Scrum Master should use to divide"" could be read in a way that the Scrum Master decides the set-up of the teams. That would be incorrect. The Scrum Master facilitates the discussion and gives the general guidelines mentioned above but the set-up of the teams is for the developers to decide.          Log in or register to post comments",6369
"08:52 am June 1, 2015                    The following related question occurs in the Practitioner open assessment.  The answers were considered in this thread on the 16th February: http://www.scrum.org/Forums/aft/1292  Which two ways of creating Development Teams are consistent with Scrum's values?  a) The Chief Product Owner determines the new team structures and assignments.   b) Bring all the developers together and let them self-organize into Development Teams.   c) Managers personally re-assign current subordinates to new teams.   d) Existing teams propose how they would like to go about organizing into the new structure.   e) Managers collaborate to assign individuals to specific teams.            Log in or register to post comments",6369
"07:48 pm January 25, 2016                    I took the PSM 1 exam yesterday and got 96.3%(77/80). I would like to thank everyone in this forum who gave all helpful hints. It did help me a lot. I also read Scrum Guide multiple times until I was real sure about what each section meant. It was a great experience.          Log in or register to post comments",6369
"03:17 am January 26, 2016                    Congratulations Brindha. Good score.          Log in or register to post comments",6369
"05:11 pm September 18, 2016                    I had difficulties with this question too, but Scrum master is providing guidance, teaches Scrum so then the vision is the same, and Dev Team is also self organizing itself, so there you go          Log in or register to post comments",6369
Log in to reply,6369
Messages,7299
"12:14 pm August 22, 2016                             Hello  I am currently working as a gambling systems manager and was looking to progress to becoming a Scrum Master.  However can a Scrum Master progress to becoming a CTO/CEO?  Or is it better to become a Project Manager if you want to climb the ladder?  Regards  B",7299
"09:01 pm August 22, 2016                    Bal,  Becoming a Scrum Master implies that you seek to become a servant-leader, and therefore your motivation is to find ways to improve your team and your organization through the practice of Scrum.  Becoming a Scrum Master is definitely not about selfish ambition.   If that is what you seek, perhaps a different career path is a better option for you.          Log in or register to post comments",7299
"11:02 am August 24, 2016                    Hello Bal,  I agree to Timothy, don't choose to be a Scrum Master if you want to climb the ladder. From the career perspective you could be stuck being a good Scrum Master.  You wrote youa re currently working as manager. My recommendation for every organization is to not combine a traditional manager and a Scrum Master role.   Cheers  Joerg           Log in or register to post comments",7299
"08:01 am August 26, 2016                    In fact, as a good Scrum Master with an agile mindset, you should go against ladders for a more horizontal organization ;)          Log in or register to post comments",7299
"12:06 pm August 26, 2016                    If you define success as becoming a great leader, then a Scrum Master position will be a move in the right direction.  You can chart a path for yourself to move from filling a Scrum Master role for a single development team to being a Scrum Master on a Nexus team with responsibilities for integrations for larger projects. From there you may lead an organization from within, to adopt better agile practices.   People who run companies need the ability to lead and get results. That is exactly what practicing Scrum helps you to do.   Climbing a ladder is a phrase that implies hierarchy where leaders are only at the top and workers need to fight and climb over one another to improve their personal relative status. Do you really want to be at the top of a hierarchy like that, or do you really want to build an organization where employees work together towards a common goal Think about your true goals. I wish you success.          Log in or register to post comments",7299
"05:02 pm September 18, 2016                    > However can a Scrum Master progress to becoming a CTO/CEO?   Might it possibly be the other way around? Shouldn't a C-level executive progress to being a servant leader?          Log in or register to post comments",7299
Log in to reply,7299
Messages,7308
"06:33 pm August 29, 2016                             Hi,   I need to better understand ""DoD"". Precisely, I wonder when is it most appropriate for a Dev Team to change the definition of ""DoD""?   I think that good moment for change it is prior to starting a new Sprint, but I am not sure. Maybe is better for Dev Team to do it during Sprint Planning meeting?     I hope someone will be able to help me with this.  Br.",7308
"07:13 pm August 29, 2016                    A team's Definition of Done can really be modified at any time, especially if changing it improves their process or their ability to deliver.   A mid-sprint DoD change would therefore make sense.  I do agree with you that a great opportunity to change the DoD is prior to a new sprint starting, perhaps as a result of Sprint Retrospective discussions.   However, that doesn't have to be the only opportunity available to change it.           Log in or register to post comments",7308
"08:42 pm August 29, 2016                    There is no specific rule when DoD can be changed.   1. It is also a good practice to check any possibility of improvement or change required in DoD at the end of sprint Planning meeting due to newly selected SBI.  2. I found it more suitable to change DoD at the end of Retrospective meeting as product and process feedback is with the team.   3. I tried to avoid any change to DoD during the sprint as it could affect all completed items.           Log in or register to post comments",7308
"12:01 pm August 30, 2016                    During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of “Done” as appropriate.http://scrumguides.org/scrum-guide.html#events-retro          Log in or register to post comments",7308
"04:49 pm September 18, 2016                    > I think that good moment for change it is prior to starting a new Sprint  It isn't a bad one, which is why the Retrospective is commonly used for this purpose. However, the general principle to be teased out is that inspection and adaptation should occur as close as is *reasonably* possible to the time and place of work being performed.   In the case of the DoD, if it is suspected at any point during a Sprint that quality can be improved, then the DoD may be enhanced accordingly. This helps to avoid technical debt, rework, and other waste. A well-executed Retrospective should limit any such waste to the current increment and the Sprint boundary.          Log in or register to post comments",7308
Log in to reply,7308
Messages,7286
"04:00 pm August 15, 2016                              Hi All,  Multiple teams working in the same projects must be the same definition of ""done"" or each team have your own definition?  Regards.  Márcio.",7286
"02:14 am August 16, 2016                    Hi All,  To heat more discussion. I am answering some questions from the M Plaza (www.mplaza.pm) and missed this:  When multiple teams are working on the same project, how many Definitions of Done should they use?  a. There can be multiple definitions, as long as they are capable of creating a potentially releasable Increment  b. There should be only one Definition of Done for all teams  c. There can be multiple definitions, as long as they are well communicated and understood among teams and with the customer  d. Each team defines its own Definition of Done independently of others   I answer b, but it is incorret and M Plaza consider a. as correct answer.  In Scrum Guide, related this: ""If there are multiple Scrum Teams working on the system or product release, the development teams on all of the Scrum Teams must mutually define the definition of “Done.”  What should i consider?  Someone who took the exam?  Regards.  Márcio.           Log in or register to post comments",7286
"02:20 pm August 16, 2016                    If there is a single product, then there should be a single product backlog. If there is not a consistent definition of ""done"" understood by all teams working off this backlog, what impact do you anticipate on this having on the teams' ability to integrate their code, and work sustainably over a period of time? Do you think that the state of work would be transparent for all to see, particularly the Product Owner?          Log in or register to post comments",7286
"05:20 pm August 16, 2016                    I take now the similar question in Scrum Open Assessment:  ""When many Development Teams are working on a single product, what best describes the definition of ""done?""  Correct answer: C)  A) Each Development Team defines and uses its own. The differences are discussed and reconciled during a hardening Sprint.  B) Each Development Team uses its own but must make their definition clear to all other Teams so the differences are known.  Correct answer  C) All Development Teams must have a definition of ""done"" that makes their combined work potentially releasable.  D) It depends.  Feedback: Scrum requires an Increment to be releasable. This is an Increment of product. Many teams working on a single product are expected to deliver such an Increment.""  Well, i will assume this, that is all Scrum Teams must have the same definition of ""done"".  Thank you for your help.  Márcio.           Log in or register to post comments",7286
Log in to reply,7286
Messages,7281
"06:22 pm August 11, 2016                             Hi,   I'm new to scrum and wanted to go for PSM I certification. As I was going through scrum.org, I see 'SCRUM OPEN' and 'DEVELOPER OPEN' in open assessments. Wanted to know what is the basic difference among them? And for taking PSM I, which assessment should I go for?   Please suggest any book(s) / site(s) where I can read / take more assessments for getting certified.",7281
"07:06 am August 12, 2016                    Scrum Open is exclusively focus on the Scrum framework. It is your main target for the PSM I.  Developer Open deals also with ""engineering"" practices like ATDD / TDD, Continuous integration, pair-programming...          Log in or register to post comments",7281
"07:07 am August 12, 2016                    For PSM 1 your primary focus should be on Scrum Open. Developer Open is designed more for the PSD track.   That said, you will probably find it beneficial to work through each of the Open assessments, practicing & learning until you can consistently achieve 100% because this will help to ensure that you have good rounded knowledge. This will [a] help you be effective in your job in a Scrum team (whatever that role might be) and , help you with your certification.          Log in or register to post comments",7281
"08:11 pm August 12, 2016                    ""Scrum open"" is for PSM and ""Developer Open"" is for PSD. For preparation there are many resources availbale out there. Things which I referred are:  1. keep the scrum guide as your main reference.   2. Read the ""Scrum - A Pocket guide""  3. ""The Scrum Master Training Manual"" from management plaza.  For assessments you can try following two free assessments :  1. http://greenmirage.com/posts/scrum-master-psm-certification-mock-exam/  2. http://mlapshin.com/index.php/psm-quiz/learning-mode/  You can also try the following paid (but cheap) assessment, it has some good set of questions:  http://scrumstar.com  Apart from this you can also register for management plaza emails, which are free. Everyday they will send you details of one topic, which is very informative.          Log in or register to post comments",7281
Log in to reply,7281
Messages,7273
"06:11 am August 3, 2016                             Hi,  My question is: Could PO attend (not participate) the daily Scrum?   First of all: is there difference between ""attend"" and ""participate"" at the Scrum Guide context?  Ok, I know, there is a lot of articles talking about this.   BUT, at the Scrum.Org assessment, what should I answer? Let's suppose in the PSM I ou PSM II, what's the right answer?   IF the PO can't attend (listen mode), which are the reasons? Because the agility and Scrum advocate for transparency.   regards,  Carlos",7273
"06:21 am August 3, 2016                    Sorry, there is a active topic about daily scrum.          Log in or register to post comments",7273
"11:54 am August 12, 2016                    According to the scrum guide, the PO does not need to attend the daily scrum, same holds for the SM.  However, as a PO i attend the daily scrum as often as possible and like the developers I give very short updates on my activities. It is good to know about the progress and issues the team experiences and sometimes stakeholders have questions in between about progress. Also it can be useful to clarify about ongoing issues or the PO can help to solve priority issues right away. So many good reasons to attend, but as a PO you need to know your place as a guest in the daily.  For the assessments the correct answer is that PO and SM do not need to attend the daliy. The SM has a role to make sure the daily happens and is functional.          Log in or register to post comments",7273
"07:40 pm August 12, 2016                    Hi Carlos, the correct answer to the question will depend on the context.   It’s possible for the Product Owner to have a dual role and be a Product Owner and part of the Development Team. Therefore, if they are then they should attend and participate in the Daily Scrum. However, if the Product Owner is not part of the Development Team then according to the Scrum rules they should not attend or participate.    I like to refer to the Daily Scrum as a meeting for the developers by the developers. The Scrum Master is the guardian of Scrum for the team and teaches everyone how to apply it which includes running events like the Daily Scrum. They’re a servant-leader and should not attend or participate in the Daily Scrum or less they’re also part of the Development Team.             Log in or register to post comments",7273
Log in to reply,7273
Messages,7268
"06:36 pm July 30, 2016                             Ok, ok, I confess. You will notice anyway I've been a software developer all my live and not one of those business type of guys who somehow ended up in IT and usually work in sales, marketing or even worse become a project manager and nowadays Scrum Master. You surely know these guys who talk about and often are responsible for software development while actually being unable to tell a static method from a Boolean and will look for a String pool in Acapulco, never suspecting this to be non-isle Java.  I've been spending my live engineering software, which means doing UML, data modeling, BPMN before eventually actually coding. Java, in my case (yes, there are String pools!). I'm one of those die hard kind of guys who still claim thinking before coding works best and who hate any sort of quick hacks, dammit! Dirty of some sort might be funny elsewhere, but not in my code.  I recently noticed a disturbing trend towards 2 week Sprints and blame mentioned business people for it. I understand why: biz folk don't know what's going on, don't understand developers and the code they come up with and therefore need timely Increments to at least have a feeling of control. What else can they do than hope for something clickable that doesn't crash?  So let's have a look at a 2 week Sprint, say we're starting Monday. There's the Sprint Planning taking place which shouldn't take longer than 4 hours, given you've got 8 hours for a 4 week Sprint. So half a day of your 10 work days is already gone, if developers actually start working on the Increment right after planning. Despite continuous integration, the application needs to be tested before an Increment can de delivered.    Even if you actually got world's fastest and best testers, you'll have to have code freeze on the 2nd Wednesday, at the latest. My bet is this won't work and you're gonna end up with an almost untested Increment. But let's assume a lunatic Wednesday freeze at lunch time, so you're left with just 7 days in a row to produce software. So do you really think you're gonna get much done in just 7 days including thinking about the best approach for a task, talking to colleagues to make sure you merge smoothly, write code with unit tests and do continuous integration in general? What about incidents and misunderstandings that will happen and cause some code to be worked on twice?  Well, all those tasks can of course be done by a development team of 3 - 9 members, but I wonder what kind of application you're working on. 'Hello World' for your girlfriend's phone?  My experience says 7 days is usually too short for professional software development, even if you've got a perfect Sprint Backlog and no questions will pop up during work. What if a question actually pops up that causes the Product Owner to turn to the stakeholders, who of course need at least 1 day to come up with a hopefully reasonable answer? In what kind of world will be no Impediment that causes delays?  Shall I assume a perfect Product Owner who's Product Backlog never contains a single mistake? Once again, what are you working on, a mobile banking app or another 'Hello World'? I bet there will be lots of panic and hellotta short cuts and quick hacks toward the end of every Sprint, just to meet the deadline. People will start to code as soon as possible, reduce thinking time which will of course cause trouble down the line and pretty soon lots of technical debt. Sprint after Sprint, the Increment will become less stable as developers stopped talking to each other to save some more time. Good luck with your 2 week a.k.a. 7 day Sprints! If you allow time for Review and Retrospective, you're gonna end up with even less development time.  I'd plea for this: Have a Product Owner and a Scrum Master who actually understand software development and can trust developers or at least are able to ask the right questions in between. They could and will be happy with a 4 week Increment, knowing it will enhance quality to allow developers to work 15 days in a row without trying to fake stability every 2 weeks. This would actually allow code freeze end of Monday or Tuesday of the last week if needed to thoroughly test the application before delivering a stable, releasable Increment.  My conclusion is this: The greater the shortage of competence outside the development team, the shorter the Sprints. Just for a feeling of control nobody has anyway. Black box fear doesn't make for a sound strategy, does it?  To me, 2 week Sprints don't make any sense if we're talking 'bout demanding, serious software. 4 week Sprints should allow enough time for professional software development, including thinking, arranging items with colleagues and proper continuous integration and stakeholders to be happy with progress.  Just make sure Product Owner and Scrum Master at least understand software development and you're gonna be fine. And please don't forget to take time into account for Daily Scrums plus Review and Retrospective at the end of each Sprint. Those important events will surely fit much better if one got 4 weeks.  Pinky promise (I was told this is the most valuable),  Marc Smeets  P.S. a dedication I promised: Thanks Bazzar Café @ Metro Düsseldorf for serving lots of food and Cappuccino and enduring me while writing. Girlies there unfortunately refuse to type my handwritten stuff, let's see if this dedication is gonna help.",7268
"05:41 pm July 31, 2016                    Thank you for sharing your thoughts, Mr. Smeets.  I've worked in productive two-week Sprints quite a bit and even advocated one-week Sprints for one product.  I'd like to better understand your experiences and hope that the following will be helpful.  We certainly agree that thinking before diving into coding is invaluable!  With refinement of the Product Backlog, Sprint Planning, and daily inspection and adaptation are you seeing Scrum and Development Teams stumbling?  Is it a manifestation of bad practices?  Is there an expectation of more up-front documentation?  You made a comment regarding work not beginning after the Sprint Planning event.  Has the Development Team decomposed enough tasks to begin work?  Do they need to complete a bit more white boarding before ending Planning?  Testing is also key to the agile software development philosophy and Scrum.  What practices, such as Test or Behavioral Drive Development, could improve the quality of the increment?  Does the Development Team operate in a Waterfall manner and need to become more collaborative?  From your comments it sounds as if that is how things are operating which is deadly.  Are the automated build, automated testing, and continuous integration solutions inadequate?  There is a relationship to the previous issue and a panic near the end of a Sprint.  Are the Sprint Backlog items too large?  Is the Development Team biting off more than it can chew?  A code freeze that far from the end of the Sprint is often indicative of a process of late testing.  Would better collaborative test planning, test development, test execution, and test evaluation help alleviate the pain?  Needing to return to the customer for clarification during the Sprint absolutely has an impact on progress.  What can be done to mitigate that?  Does it happen frequently?  Perhaps the conversations in developing the items need to be more effective.  Some uncertainty may still arise, so how is that handled?  Can a decision be made based on past experience?  Is it more beneficial to just make a decision now than to delay the work?  Is there a issue with implementing something then eliciting feedback during the Sprint Review event?  The comment about allowing time for Sprint Review and Retrospective is very troubling.  The lack of the former means that the customer is not reviewing every increment which may be a contributor to some of the other issues.  The lack of the latter means that reflections and improvements are not occurring which may be a significant impediment to change for the better.  In a two week Sprint, there are a base 80 work hours per person.  The events remove a maximum (assuming half of the one month time-box length and 10% refinement) of 18 hours.(4, 2, 1.5, 2.5, 8).  So we still have 62 hours (almost 8 days) per person to collaborate on meeting the definition of done for the increment.  Sure there will be more time consumed by business requirements but the goal is to reduce them in order for the Development Team to focus.  It is is difficult to grasp the concept of a cross-functional team needing more time than that to create even a small piece of functioning and tested software; there must be other factors causing that ineffectiveness.  In the end, the length of the Sprint must be whatever is best for the Scrum Team to create a done increment.  Bringing to light those smells that indicate that there are problems with processes or organization is a benefit of the Scrum framework.  Not identifying and addressing those issues means that they will probably continue to manifest despite a longer Sprint time-box          Log in or register to post comments",7268
"06:51 pm July 31, 2016                    Hi Alan (if I may address you like this),  thanks for participating! I'm glad you have different experiences than mine and you're of course right with your analysis. You surely remember my fairy tale post (https://www.scrum.org/Forums/aft/2043), you replied to that too. This post is basically the second part and the result of recent experiences.  You saw me advocating for a Product Owner who at least understands software development, and this is the major point and main reason for longer / 4 week Sprints. If your Product Backlog is far from perfect, you're gonna run into trouble sooner or later and end up with questions only stakeholders can answer and changes of scope of committed items at the end(!) of a Sprint. You can surely imagine how fast you're running out of time under those circumstances.  Continuous integration, BDD and the like unfortunately don't make up for improper requirements, but your 100% right about the value of those, of course. Allowing time for Sprint Review and Retrospective sometimes actually requires quite some 'catfights', given you're dealing with clients used to waterfall. You surely encountered the same problems and needed to convince people. Sometimes, it just takes a while as it is hard to change old behavior at client's side.  Thanks again for your reply, you're welcome,  Marc           Log in or register to post comments",7268
"01:19 am August 3, 2016                    Yes, sir, Alan is fine.  I went back to enjoy your tale once again!  It helps to read this thread with the continuation aspect in mind.  I wish you well on that journey.  I can understand your desire for a Product Owner with solid technical understanding.  My experiences have shown me the opposite where the Product Owner continuously attempted to dictate the how.  Finding and developing the right mix of people can be challenging.  Displaying the value of incremental and iterative software development to the customer can be an adventure.  If they do not want to commit to reviews (whether weekly, bi-weekly, or even monthly), then the product will suffer.  It's even more challenging if the Scrum Team is having difficulties performing well.          Log in or register to post comments",7268
"08:21 am August 3, 2016                    Thank you very much, Sir! I surely should have marked this post as second part. If I come up with another follow up, I will flag it as such.  I assume we all have the same problem world wide: people have difficulties switching from waterfall to Scrum. I can surely understand the difficulties you had with a dictator kind of Product Owner. Jesus Christ...  I think all we can do is try to help people understand what Scrum can actually do for them if properly implemented and keep pushing for improvement. I won't give up and you surely sound the same.  Thanks again for your replies and remarks,  Marc            Log in or register to post comments",7268
"02:43 pm August 8, 2016                    Hi,  I think longer sprints would enable us to think about software architecture before starting to code. I would like to have time after code freeze for code review. Of even greater importance would be a continuous clean up cycle (independent from the current tasks) for merging code fragments, restructuring and code supervision in general to enhance quality.    Greetings     Jörg          Log in or register to post comments",7268
"08:55 am August 9, 2016                    whatever the length of your sprint, you can allocate, let's say, around 15% for architecture debate ; around 5% for clean-up...  Your increment must respect the DOD, whatever the length of your sprint.  If you don't have enough time in one-week sprint for architecture / test / review, how would you have enough time for that in 4-weeks sprint ?          Log in or register to post comments",7268
"10:25 am August 9, 2016                    > Your increment must respect the DOD, whatever the length of your sprint  Correct, and furthermore it is better to have longer Sprints in which a better DoD is observed rather than shorter ones with a weaker DoD.  Clients often tell me that they are doing 1 or 2 week sprints, and try to wear this as some sort of badge of honour. However the DoD is usually either absent or weak or simply not being observed. Ironically, when I advocate longer sprints of closer-to-release quality, they think I'm advocating a reduced level of agility. Politics is often behind the situation as short sprint length can be paraded as a vanity metric, whereas the technical debt being racked up is hidden and potentially someone else's problem.          Log in or register to post comments",7268
"11:36 am August 9, 2016                    Some work during a sprint cannot be measured relatively in percent.  There is always a minimum effort for conversation:   going to the meeting room, say hello, some nice smalltalk to be friendly.  So the shorter the Sprint, the more influence of this (not useless) absolute time.  Einstein is not always right: ""not everything is relative""          Log in or register to post comments",7268
"02:32 pm August 11, 2016                    Longer Sprints can assist with achieving a stronger Definition of Done.  They can also result in the business or customer expecting more features delivered.  If the team is less amture it could also lead to larger accumulations of technical debt.  I believe there is a balance to be sought through understanding the Scrum Team, the organization, the customer, et al. that could change as the factors change.  Of course I'm not advocating frequent Sprint length changes!  Agreed . . . Wearing Sprint length as a badge of honor is certainly a mistake either way IMHO.          Log in or register to post comments",7268
"03:09 pm August 11, 2016                    I propose you this metaphor.  You drive your car, and you want to drive as fast as possible, so you need high level of transparency on your speed.  If your speed is too high, you get arrested by the police and pay a fine. You lose money and time = technical debt.  You want your digital ""speedometer"" to be updated very frequently (ie short feedback loop = short Sprint)  But you also want your ""speedometer"" to be accurate (ie high level of quality = strong DOD).  A short feedback loop whithout accuracy gives poor transparency, and the opposite also.          Log in or register to post comments",7268
"12:09 pm August 12, 2016                    I think it depends a lot on the kind of stuff on your backlog how a 2 week sprint duration turns out. I am the PO of  a devops team that has 2-week sprints. Usually we only need 1 hour for the sprint review, 1.5 hour for the retrospective and rarely more that 2 hours for the sprint planning.  Sometimes we have complex issues involving other teams that cannot be completed in 2 weeks. In this case we may assign a separate user story for integration testing, which is usually very complex and time consuming in our case.  Also we start our test preparation we we are still building the software. We should do this better, because the developers can anticipate better ont eh test cases to expect.   It is still hard to complete all items in a two week period. But the advantage of a 2 week sprint is that it helps a lot to create focus. It forces developers to co-operate on a few items (we usuall hve less than 10 user stories in a sprint, with 8 developers). It helps to do devops. It allows to start a sprint with some larger issues and fill it with really small issues near the end.          Log in or register to post comments",7268
"07:30 pm August 12, 2016                    Scrum states that team size should be 3-9 developers. A smaller application will require fewer developers while a larger one would require multiple teams of developers. It’s nothing profound in my last statement but bear with me.   The tricky part with an immature team is correctly gauging their capacity. There are no silver bullets and of course there’s the relative estimating strategies and team-consensus decision making ones like Planning Poker and Fist-of-Five. While these are certainly helpful, inexperience teams may not provide accurate estimates. Therefore, the only way to truly know is to run some Sprints and monitor/analyze the progress. Doing so will give the team quantitative data that they can input back into the upcoming Spring Planning session to subsequently construct a more feasible Sprint Backlog.    I would recommend paying closer attention to the team’s velocity. Refer back to any Sprints in which the team deviated from the Sprint Plan and try to indentify the culprit.  An interesting case study analyzed a software engineering class using agile software development and concluded that the velocity stabilized after three Sprints: https://www.researchgate.net/publication/224236694_A_Capstone_Course_on…  This will vary by team, but working towards a stable velocity could assist with frequently releasing quality software to the market, which is a pinnacle in software development.            Log in or register to post comments",7268
Log in to reply,7268
Messages,7276
"01:20 pm August 5, 2016                             Could someone please elaborate on this.   Its part of what a Scrum Master should do towards the Product Owner.  Empirical environment? Is this another way of saying that product planning should be done by being able to assign the ""correct"" number of story points based on similar features and know the Velocity based on the past?",7276
"03:45 pm August 5, 2016                    No.  An empirical environment is one where improvement and direction is guided by experiments and experience.  So, how could product planning work in an empirical environment?   How could the Scrum Master help?          Log in or register to post comments",7276
"07:26 am August 9, 2016                    Experience is based on the past, right? So the Scrum master use experience to experiment with the planning. But how? Guiding the team to do planning with knowledge on how earlier plans was carried out. Do anyone have any real cases that they can tell about?          Log in or register to post comments",7276
"04:02 pm August 9, 2016                    Jan,  Recall the context where the thread title came from.   Who is responsible for product planning?   The Scrum Master?   The Product Owner?   The Development Team?  In your mind, how can an empirical process (i.e. - learning) be used to support product planning?   Consider how products are planned for in Scrum to help your understanding.          Log in or register to post comments",7276
"02:42 pm August 11, 2016                    Jan, forecasts can be made based on what has been learned from the past and what is known about the present.  Many aspects affect empirical planning including factors such as past performance and capacity differences this iteration.  Only the known can be used to create a plan which forecasts the delivery.  The amount of uncertainty in a forecast increases as you look further into the future.  What is know about a month from now?  A quarter from now?  A year from now?  There is a lot that could change.          Log in or register to post comments",7276
Log in to reply,7276
Messages,7280
"10:59 am August 10, 2016                             Hi,  I'm new to scrum and wanted to go for PSM I certification. As I was going through scrum.org, I see 'SCRUM OPEN' and 'DEVELOPER OPEN' in open assessments. Wanted to know what is the basic difference among them? And for taking PSM I, which assessment should I go for?  Please suggest any book(s) / site(s)  where I can read / take more assessments for getting certified.",7280
"09:57 am August 11, 2016                    For the PSM I certification, the SCRUM OPEN is the open assessment to go. Developer Open is more focused on the PSD I exam.   You can find more details here:  https://www.scrum.org/Assessments/Professional-Scrum-Master-Assessments…  You can find the PSM Subject Areas over there where you have plenty of suggestions on what to read.  Personally, I recommend ""Agile Estimating and Planning"" by Mike Cohn. It helped me when I took the PSM exam.  Good luck!           Log in or register to post comments",7280
"01:40 pm August 11, 2016                    Vishnu,  Assessment and Scrum.org questions should be directed to the other forum.   You will likely get a better response there.          Log in or register to post comments",7280
Log in to reply,7280
Messages,7277
"05:22 pm August 6, 2016                             [This is a follow up to https://www.scrum.org/Forums/aft/2043 and https://www.scrum.org/Forums/aft/2176. Thanks Alan (https://www.scrum.org/User-Profile/userId/190703), for the hint. I take full responsibility for that Somegile term.]  Push comes to shove. That's the way it is, isn't it? What can go wrong will go wrong. What under any circumstances can't go wrong will of course go wrong, too. Especially, if you're dealing with people crying for trouble as loud as they possibly can.  If you noticed part I and II of this series, you know what's been going on until now.  Scrum was actually expected to help in a magic way as no changes whatsoever were made at client's side. The company stayed the same: product, program and project managers acted as before. ""Scrum by name only"" is surely nothing new, but people actually insisted they're doing Scrum. I even went as far as citing the Scrum Guide word by word to proof I'm serious about it and a Sprint Backlog is a Scrum Artefact and none of my pipe dreams, to no avail.  People finally realized the fairy tale turned horror story, Scrum being ""implemented"" (they really call it like that) a year ago, things are not what they're supposed to be. After being unhappy with progress using old school waterfall, Scrum was supposed to be the silver bullet. One could come to the conclusion that if waterfall doesn't work properly and Scrum too, while other people present great success stories, maybe something's wrong with one's own approach. Well, one could...  At least, people finally came to the conclusion they might need some help. But as the fairy tale already turned horror story, they of course didn't listen to a Scrum Master (remember: they saw no necessity to have a Scrum Master on this project) who's been pushing for improvement and full implementation of Scrum all the time. Instead, they turned to yet another Agile Coach who was hired as a kind of standby consultant, appearing for a few hours on demand. Obviously, people have given up on waterfall, there's no way back.  So that's no bad idea - in general. An Agile Coach should be expected to analyse the situation, recognize the missing / unimplemented Scrum components and help fix that uncomfortable and unproductive state of affairs.  Well, not this one!  This fantastic Agile Coach actually offered this conclusion: ""It is impossible to implement Scrum here."". Can you imagine this, dear Scrum people? ""Impossible."" Period. No Scrum or whatever reasoning. Though the company got permanent Product Owners, Scrum Masters and even Agile Coaches they just don't listen to. Or there actually is a bad witch who holds them in captivity.  Seriously, now. A professional Agile Coach, doing nothing else, actually says it is impossible to have a Scrum team consisting of a Product Owner (check), a self-organizing Development Team (check) and a Scrum Master (check). A Product Backlog (though a crappy one due to the unfit Product Owner) exists, too.  He then went on to tell my dear client to use Agile instead of Scrum. In case you think you might need glasses: no, you're fine, ""Agile instead of Scrum"" is what the Agile Coach said. I already had my ears checked as I doubted my hearing.  So here's what happened next: Scrum was officially given up, Sprints including Sprint Planning (it never was one, but they use the term), Review and Retrospective (both just implemented recently) stayed. Wow. If you dear readers think it hurts: yes, it actually does. The great German philosopher Friedrich Schiller once wrote ""Against stupidity the gods themselves contend in vain"". The original German is much more soigné, but that's of course due to translation.  They're officially ""agile"" now, though there's no definition what that actually means in this case. This of course allows the Agile Coach consultant to say and recommend whatever he wants to without any analysis. How can something agile be wrong, given there are no rules and guidelines to follow now with this company? What do you care about a definition of done, just say ""agile"" and you're fine.  This is of course all gonna end in tears as this Somegile will be worse than 50% Scrum after the poor results they got from waterfall.  So if anybody here thinks he's greater than Schiller's gods and got a cure for stupidity (maybe in bottles or as pills), I'll be happy to read your recommendations. But please keep in mind people won't listen to reason. Maybe something clownish might help, I don't know.  I still won't give up on Scrum though I'm still not waving any magic wand. Have a nice day & great projects,  Marc Smeets",7277
"08:11 am August 7, 2016                    Thanks Marc Smeets, your good explanation. I understand the term ""Somegile""  hope to read your contribution.          Log in or register to post comments",7277
"06:23 pm August 8, 2016                    Thank you very much! It's an honour to receive your first post, Lisa.  We're gonna see if people adopt Somegile, aren't we?          Log in or register to post comments",7277
"07:45 am August 9, 2016                    Hi Marc    Your story sounds familiar to me and as an (very active) Agile Coach it also hurts to read that some coaches are doing what you describe but on the other hand, I’ve been so many times in that situation where the client is just waiting Scrum to solve all the problems in the company without any efforts.  I think this is clearly up to the Agile Coach to explain that the Scrum framework needs, to be efficient, to have motivated individuals that are ready to collaborate and being committed to the product.  When your start the migration to Scrum it shows all inconsistencies, all problems, all deficiencies in the company (not only the Scrum team) and everybody must work hard to solve them, Agile Coach first.   Most of the time, this is when those problems are very visible that the company/client is likely going to go for your “Somegile”, certainly because Scrum has been presented as the solution to anything but the truth is much more difficult to handle.   Management strategy, personal job protection, misunderstanding, stubborn people are just a snapshot of what an Agile Coach is going to fight with.   Mastering the Scrum theory is not enough to be a good coach, you must, of course, be assertive, positive, inventive but also strong and always accept that people hate change, people hate to be out of their comfort zone.   Having some fake Scrum events organized in a so called time-box is of course easy for some people as it is “visibly” Agile but allows to hide the real problems and when a project fails, this is also easy to accuse “Scrum” of being the root cause of the failure.   Truth is there’s one major reason of a project failure: human   I like the “Somegile” word, I personally was calling this hybrid way of handling project the “iterative waterfall”, the idea is the same.   You can lead a horse to water, but you can't make it drink says the proverb but as an Agile Coach I will use all my energy to convince him to do so.   I just have one advice: continue fighting, Scrum has strong pillars and very good human values.   Good luck with your projects            Log in or register to post comments",7277
"01:56 pm August 9, 2016                    That certainly mirrors my experience with an ""Agile Coach"" in a previous organization.  One of his favorite phrases was something along the lines of, ""Don't just do Agile, be Agile"" when he made unfounded directives or the business suddenly changed course drastically and expected development work to continue unaffected.  It does seem to be impossible to implement the Scrum framework or agile software philosophy within some organizations.  Without the proper culture and support, attempts can result in deteriorated conditions.  If open-ended questions such as ""Can we improve XYZ?"" are constantly met with quick ""No"" answers, and discussions are not permitted or repeatedly end with ""Because I said so."" . . . what is to be done?  I've always enjoyed phrases such as ScrumBut and ScrumWaterFail . . . now I can add Somegile.  Thanks!          Log in or register to post comments",7277
"05:10 pm August 9, 2016                    Thank you very much for participating, guys!  @ Alexandre: I know there are great Agile Coaches out there who help clients and support poor Scrum Masters. We unfortunately got this one who just adds insult to injury. Scrum and Agile will be blamed when this finally crashes.  @ Alan: You're obviously a ""coach"" victim, too. I like ""ScrumWaterFail"", I didn't know it before.  Have a nice day,  Marc          Log in or register to post comments",7277
"05:34 pm August 9, 2016                    Marc,  I hate to say this but it is very common these days because business has retaken what Scrum and Agile was created for, to put things back in control with those who may know better.  Sometimes problems are bigger than you and you might be able to find a small air pocket to survive in and make small changes to prove value and progress things forward or sometimes if you have the luxury and the timing is good parachute out before your the blame for things failing and that sticks to you. Sometimes the headaches you have are not meant for you to own.  Good luck!  Mark          Log in or register to post comments",7277
"05:35 pm August 9, 2016                    Scrum contains many solid practices, but rarely solves anything alone.   What Scrum is really good at though, is to make everything visible.  It is not a panacea that will make everything better.   It is actually a lot like the red pill in The Matrix.   It will show things for what they really are.   However, if the company then decides it is more prudent to sweep such items under the rug, that is unfortunately their decision.  I do see a separate distinction between Scrum and Agile though.   I view Agile as a mindset, and not to support any re-labeling of existing practices.  One of my favorite quotes about Agile is from Christian Toivola from ""The Other Side of Agile"":  Being Agile is truly nothing more than being nimble and adapting to change, and above all: to never stop questioning if you can do better. This can be done outside of Scrum, but if it isn't being done and supported, then it simply isn't Agile.          Log in or register to post comments",7277
"07:31 am August 10, 2016                    Thanks, Mark! I really expect this to become a nasty 'Game of Blames' without too many small air pockets, no Khaleesi in sight...          Log in or register to post comments",7277
Log in to reply,7277
Messages,7278
"11:19 am August 9, 2016                             Im hired as a Scum Master for one distributed team. Im fairly new in this role (10months) and so is the development team. Im frequently asked from management to ensure that the development team is registrating time, following development and deployment processes and other ""team lead"" stuff. How do you see this? Will this secure trust in the Scrum team or will it disturb it? How can I manage both roles and still be seen as ""the friend"" by the development team?",7278
"04:24 pm August 9, 2016                    Jan,  Is management's desire to have you oversee the team's time entry, development practices, and deployment processes, a sign of trust to you?  In the role of Scrum Master, my advice to you is to serve the team and focus on helping them work better.   It is not the responsibility of a Scrum Master to be a ""friend"" to the Development Team, or to micro-manage them on behalf of management.  Scrum Master's main duties:  1)  Serve the Development Team, Product Owner, and Organization (in that prioritization order!)  2)  Enforce Scrum  Sounds easy, but it is incredibly complex and difficult.   Good luck to you.           Log in or register to post comments",7278
"04:21 am August 10, 2016                    These are totally 2 different roles which is common in most of the organisations to be done by an individual who does in the conventional PM methodology People Manager being an integral part.  You wll have to clearly define your responsibiliies in these 2 roles and communicate as wel. This way it will be clear for the team to be aware what responsibilities you have during SCRUM ceremonies.  The main duties are already mentioned.          Log in or register to post comments",7278
"06:08 am August 10, 2016                    > Im frequently asked from management to ensure that the   > development team is registrating time, following development  > and deployment processes and other ""team lead"" stuff. How do you see this?   I'd see it as an opportunity to coach the wider organization about the value and practices of Scrum. Why is logging developer time thought to be valuable, rather than the meeting of Sprint Goals and the delivery of product increments? Why does the organization's perception of value and accountability diverge from this? If management are keen to sponsor the correct application of Scrum, what do they intend to do about it?          Log in or register to post comments",7278
Log in to reply,7278
Messages,6702
"09:59 pm February 15, 2016                             Hi Team,  I failed PSM-1 this morning. Scored 82.5% so fell short by just a tad :(  This is how I prepared -  1. Read the scrum guide many times.  2. Took open assessment many times and was consistently scoring between 95- 100 %  3. Took the mock exam here - http://mlapshin.com/index.php/psm-quiz/real-mode/ and consistently scored above 90%  I was found wanting in the following areas -  1. Cross-functional, Self-organizing Teams - Scored 76% here  2. Coaching and Facilitation - Scored 58% here  Any ideas for improvement please?  Thanks  Best regards    Girish",6702
"12:32 pm February 16, 2016                    Did you look at few other helpful things? Like  - Regular monitoring of this forum on scrum discussions  - Psm exam guide book by mohammed  - Not just going for apparent right answer but also Analysis of why other choices are not best choices - in scrum open and scrum developer open           Log in or register to post comments",6702
"08:15 pm February 16, 2016                    Hi Rafael,  Thanks for your inputs.  Yes, I did go through various threads on this form for study tips.  Where can I find this book - Psm exam guide book by mohammed   Regards    Girish           Log in or register to post comments",6702
"12:53 pm February 24, 2016                    Hi Girish,  Scrum Narrative and PSM Exam Guide: All-in-one Guide for Professional Scrum Master (PSM 1) Certificate Assessment Preparation  Link: http://www.amazon.in/Scrum-Narrative-Exam-Guide-All-ebook/dp/B018JXYRNA  Br,  Pugal          Log in or register to post comments",6702
"11:29 am February 25, 2016                    Thanks Pugal          Log in or register to post comments",6702
"02:21 pm February 27, 2016                    Hi Girish,  I actually just completed the PSM1 exam today with a 92.5%. I found this practice test created by Mikhail Lapshin very helpful in preparing for the exam. You should be able to complete this 80 question practice exam with 100% everytime and understand why the answers are the correct choices.  http://mlapshin.com/index.php/psm-quiz/learning-mode/  Thank you Mikhail!  Good luck Girish!          Log in or register to post comments",6702
"05:14 pm March 3, 2016                    I second this test, it's quite good. His blog also has quite a bit of tidbits worth reading.          Log in or register to post comments",6702
"09:01 am March 4, 2016                    I already took that test at least 4-5 times and passed with 95% , but as my luck would have it flunked when it mattered  the most. Anyways, started preparing again. Bought the book by Mohammed.  Lets see how it goes this time.  Also planning to take up - http://www.bostonagiletraining.com/Scrum_Master_Certification_Practice_…  Regards           Log in or register to post comments",6702
"06:28 am March 8, 2016                    I passed the PSM 1 certificate two days ago with 95 % score .   This is how i prepared :  - Read the scrum guide one   -Took Open Assessements   - Read the book by Mohammed : Scrum Narrative and PSM Exam Guide    -Took the exams of mplaza management   ==> There are some informations some times you have to digg for , like the Scrum of Scrum (Scaled scrum )   - Read the scrum guide again ( it remains the reference )  Regards            Log in or register to post comments",6702
"11:00 am April 7, 2016                    Finally passed PSM1 today with 95%  Thanks all for your valuable inputs :)  My preparation plan -  Read the scrum guide many times.   -Took Open Assessements    - Read the book by Mohammed : Scrum Narrative and PSM Exam Guide    -Took the exams of mplaza management          Log in or register to post comments",6702
"11:36 pm April 7, 2016                     Finally passed PSM1 today with 95%   Congrats!           Log in or register to post comments",6702
"02:57 am April 8, 2016                     Posted By Jemer Garibay on 07 Apr 2016 11:36 PM   Finally passed PSM1 today with 95%     Congrats!   Thanks :)  Now, will start preparation for PSM-II later this year.  Any pointers will be helpful. Experts please suggest the preparation roadmap.          Log in or register to post comments",6702
"07:24 am August 8, 2016                    Hi,  I am thinking of preparing for PSM II shortly.  Any suggestions please.  Thanks  Best regards    Girish           Log in or register to post comments",6702
Log in to reply,6702
Messages,7245
"06:36 pm July 14, 2016                             Hi I am preparing for scrum master certificate.   I am wondering is it online test or location based?  When I trying to register for it doesnt ask for location preferance. If anyone has given recently would like to know their experience..",7245
"07:11 pm July 14, 2016                    Hello Ujwala,         Thank you for your interest in Scrum.org. You can find an answer to this specific inquiry at the following Support FAQ link:     http://tinyurl.com/zvhkqv4    You may also find other answers to frequently asked questions on our Support FAQ here: http://support.scrum.org/          Thank you again for your interest in Scrum.org and enjoy your day, Ujwala!          Log in or register to post comments",7245
"02:32 am August 5, 2016                    its Online. You can choose from anywhere in the world to give this test online. Just ensure you have a good internet connection.          Log in or register to post comments",7245
Log in to reply,7245
Messages,7275
"11:41 am August 4, 2016                             Hello,  Are 3 questions, suggested by scrum guide, mandatory for Daily Scrum. I am confused since these questions suggests "" how"" of conducting daily scrum   Thanks,",7275
"01:38 pm August 4, 2016                    Manish,  What is critical for the Daily Scrum is providing the Development Team a daily opportunity to touch base around progress, issues, and the health of the Sprint and the Sprint Goal.   It also can be useful in providing transparency to others (i.e. - Product Owner).  The Scrum Guide, and many other sources, promote the 3 questions as a way for the Development Team members to communicate to each other.   I have a personal preference for ""walking the board"" and having the conversation centered on the sprint work instead of individual team members (too much like a status report).  Also, questions about scrum are better-suited to be asked in the other forum.   This forum is mainly about Scrum.org and certifications/assessments.   You run the risk of your inquiry going unaddressed when posting here.          Log in or register to post comments",7275
"04:06 pm August 4, 2016                    Thanks Timothy for your response.  I understand that Scrum related questions be part of other forum but this thought question came to my mind while preparing for PSM 1 exam.  If something like this comes up   Are 3 questions mandatory to be answered by development team in Daily Scrum  A) true  B) False  If I am have understood correctly your response ,the answer should be false.  Is that correct?  Thanks           Log in or register to post comments",7275
"05:16 pm August 4, 2016                    The Scrum Guide doesn't say anything about answering 3 questions in the Daily Scrum. It does say that each Development Team member must explain 3 things. How the explanations are provided is up to them.          Log in or register to post comments",7275
Log in to reply,7275
Messages,7232
"11:20 am July 8, 2016                             Hi all,  Just reading through the new Scrum guide and I found a section I found strange.  The section on the daily scrum the text states ""The Scrum Master enforces the rule that only Development Team members participate in the Daily Scrum."".  The definition of the development team is the developers and the scrum guide states that  ""The Product Owner and Scrum Master roles are not included in this count unless they are also executing the work of the Sprint Backlog"".  I think this needs to be clarified, surely the product owner and the scrum master should participate in this meeting ;)  Also, referring to the story about chickens and pigs, why would chickens not be allowed as long as they a silent?  I assume the text should be read as ""The Scrum Master enforces the rule that at minimum Development Team members participate in the Daily Scrum"".   If this has changed can you explain why this has changed? Makes no sense to me.  Regards,  Fredrik",7232
"01:28 pm July 8, 2016                    The Daily Scrum is a collaborative event for the Development Team. It is a work session focused on turning PBIs into working software, a formal opportunity for the Development Team to inspect and adapt their plan for the next 24 hours on creating the Increment.  I see the Daily Scrum as how the Development Team knows when to react to help each other, where they coordinate tasks to complete the PBIs they’ve forecasted, and when they work together as a team to be successful. It is where they understand how to work together as a self-organizing team to create the anticipated Increment. So, unless the PO or Scrum Master are actually executing work on the Sprint Backlog they do not participate.  I do agree that for transparency sake others can attend a Daily Scrum, as long as they remain silent.           Log in or register to post comments",7232
"02:49 pm July 8, 2016                    Fredrik, I believe your confusion stems from equating participation and attendance.  The Scrum Guide does not place any limitations on Daily Scrum attendance.   A Product Owner may attend a Daily Scrum, provided they do not participate (unless explicitly requested to by the Development Team in regards to an issue or impediment).     The same guideline applies for a Scrum Master, although a Scrum Master may initially need to help facilitate the Daily Scrum for the Development Team until they are able to conduct it themselves.  As stated, the Daily Scrum is specifically designed for the Development Team to collaborate around the current sprint.          Log in or register to post comments",7232
"04:16 pm July 8, 2016                    > The definition of the development team is the developers and  > the scrum guide states that ""The Product Owner and  > Scrum Master roles are not included in this count unless  > they are also executing the work of the Sprint Backlog"".   >  > I think this needs to be clarified, surely the product owner  > and the scrum master should participate in this meeting ;)   Why should they participate if they are not members of the Development Team? Can you explain your reasoning?  > If this has changed can you explain why this has changed?  This hasn't changed, it's been in the Scrum Guide for many years.          Log in or register to post comments",7232
"04:47 pm July 8, 2016                    The point is the difference between ""participate"" and ""attend"" to the Daily Scrum.           Log in or register to post comments",7232
"11:58 pm July 10, 2016                    As many have stated, The Scrum Guide does not bar others from observing the Daily Scrum event.  I feel that there are important things to consider when permitting an audience.  The conduct and content of the event may change.  The maturity and experience of the Development team and the business roles of others observing may affect the how and what of the discussion.  The Scrum Master MUST enforce the rules, preferably ensuring that it is well understood prior to the event.  If the individual in either the Scum Master or Product Owner role cannot remain silent, then be assured others will also not be.  Many so-called Scrum references (Scrum for Dummies, Mountain Goat Software, Scaled Agile Framework, etc) encourage not just observation but participation by those outside the Development Team especially the Scrum Master.  Such a practice inhibits the Development Team from being truly self managing and self organizing.          Log in or register to post comments",7232
"08:58 am July 12, 2016                    Hi All, In my view sometime user story is not clear to scrum team and they can develop something else which may not required by PO,  So better for a Product Owner to attend standup meeting and try to check whether team is going in right direction or not. If there is clarification required for any user story  then it can be discuss in standup or offline. So practically in my view Product owner should attend standup at least once at the mid of sprint.          Log in or register to post comments",7232
"04:00 pm July 13, 2016                    There should be every attempt to verify story understanding between the PO and the Development Team during grooming and Sprint Planning.   Still, the Development Team may begin working on a story with an incorrect understanding of the PO's request (it can happen).  We should not advocate a PO attending only one Daily Scrum each sprint, even if it is a ""minimum"" suggestion (don't promote the idea that one Daily Scrum per sprint is acceptable!).     To mitigate the above situation, along with any other potential sprint issues, the PO should attend every Daily Scrum.           Log in or register to post comments",7232
"08:57 pm July 13, 2016                    There should be a solid understanding prior to the Sprint Planning event, that's part of the purpose of refinement.  Sprint Planning may surface a misunderstanding.  As stated, it can happen that the misunderstanding surfaces during the Sprint.  So how can that be remedied?  Hopefully the backlog items are small enough to ideally be completed in a short amount of time.  Utilizing continuous integration techniques, each item should be reviewed by the Product Owner throughout the Sprint.  Should a disconnect arise, the Product Owner and Development Team can discuss and determine a course of action: reset the item and begin again, discard the work and create a new item in the Sprint Backlog or Product Backlog, keep the work and create a new item in the Sprint Backlog or Product Backlog, etc.  The Daily Scrum is not for the management to get a status update, Product Owners to check on the Development Team, Scrum Masters to validate progress, stakeholders to evaluate the product, etc.          Log in or register to post comments",7232
"08:03 am July 14, 2016                    Hi all,  Thanks for the replies and explanations. I have read them through and it seems that the general opinion is that it is mainly the dev team that contributes to moving work forward and that the PO and SM can attend if they keep silent unless requested by the team to be involved.  I do not fully agree with this. The reason is that I do see the necessity for the SM and the PO for being as committed to delivery as the dev team, they are not just involved, and as such they should sit with and participate fully. I see it as a big risk that if the PO doesn't participate daily that the PO becomes disengaged and not committed . If they do not participate daily and you put solely the dev team in the driving seat you might have the situation that after 30 days (or however long your sprint is) that the PO comes back and says that ""ohh, great delivery but this is not what I wanted to have"".  Even if the backlog is groomed and ready we don't want to go into more details than for the team to be able to understand it well enough to to start working on the story. There will always be room for mistakes and clarifications and I think that the daily scrum is one of the most important tools for making sure everyone is on the same page. Also a PO who attends the daily scrum and sees the progress can take much better decisions and is in a much better position to inform management, stakeholders etc. This helps to avoid situations where to dev team is seen as a black hole you feed requirements and nothing else. Daily communication and collaboration builds trust and understanding between team and PO as well.   I guess the main difference here is that I don't see the daily scrum as mainly a forum for the dev team. I would agree that if you have a PO that sits together with the team who is assigned 100% to the project where the team can ask questions directly would not need to attend the daily scrum if all that is discussed in the daily scrum is technical problems but my understanding is that the daily scrum is mainly for transparency and collaboration and not for the dev team only.           Log in or register to post comments",7232
"12:56 pm July 14, 2016                    I do appreciate what the scrum guide says and can understand it's reasoning for the strict restriction of development team only however currently we allow both the SM and the PO to attend and participate when there is something related to the increment that can be contributed, for example the SM doing code reviews (in which case is part of the development team at that stage) or the PO passing on a clarification on a story being worked on.  I feel it also contributes to the scrum value of openness and in this particular case works well for the team dynamic making all feel part of it.  I'd be interested in any views on that.          Log in or register to post comments",7232
"02:15 pm July 14, 2016                    Andrew,  While items like PO feedback certainly have value, it is my opinion that creating more ""openness"" around discussion topics in the Daily Scrum gets away from the intent of the meeting, and diminishes the scrum value of Focus.  The Daily Scrum is intended to provide the Development Team with a daily point-in-time to come together and discuss the current sprint, progress, and issues.  In your example, the SM contributes as a Development Team member, not as a Scrum Master.   The PO contributes clarification on sprint work, which is ok if the Development Team raises an issue with a sprint story, but in my mind it is not ok if the PO volunteers that information on their own.  The PO may attend the Daily Scrum, and reply if called upon.   Otherwise, they are a fly on the wall.          Log in or register to post comments",7232
"09:49 pm July 14, 2016                    > I see it as a big risk that if the PO doesn't participate daily  > that the PO becomes disengaged and not committed   Correct, but daily participation by the PO is not the same thing as attending the daily Scrum. There are 23 hours and 45 minutes left in the day, any portion of which can be used for collaboration between the PO and the Development Team.  > ...my understanding is that the daily scrum is mainly for  > transparency and collaboration and not for the dev team only.   Why? Why should the Development Team be denied just 15 minutes out of a busy day, during which no end of collaboration may occur and transparency provided, to reflect and refocus on their own plan to meet the Sprint Goal? Why is that too much to ask?          Log in or register to post comments",7232
"03:07 pm July 15, 2016                     Posted By Timothy Baffa on 13 Jul 2016 04:00 PM   To mitigate the above situation, along with any other potential sprint issues, the PO should attend every Daily Scrum.   It always good for PO and SM to attend daily scrum.  But when they have other responsibilities, or several teams to work with, they don't always have opportunity to attend all the daily meetings.  Clarifications with the PO could be done out of these 15 minutes meetings. Especially when a whiteboard can help and more than few minutes is needed.           Log in or register to post comments",7232
"02:26 pm July 18, 2016                     But when they have other responsibilities, or several teams to work with, they don't always have opportunity to attend all the daily meetings.   Clarifications with the PO could be done out of these 15 minutes meetings. Especially when a whiteboard can help and more than few minutes is needed.  Sedera,  I really cannot respond to this issue any better than Ian did in a previous post; therefore, I will paraphrase his response:  ""There are 23 hours and 45 minutes left in the day, any portion of which can be used for collaboration between the PO and the Development Team.   Why should the Development Team be denied just 15 minutes out of a busy day to reflect and refocus on their own plan to meet the Sprint Goal? Why is that too much to ask?""          Log in or register to post comments",7232
"11:52 pm July 18, 2016                    Should a manager, customer, CTO, HR representative be allowed to attend a Sprint Retrospective?  Isn't it possible that person might have input into how the Scrum Team could improve?  Is that a valid method for any of them to solve an issue with the Scrum Team?  How many of you shudder at that thought?  Why?  Is it the loss of self-organization?  Fear of micro-management?  The fact that it violates the rules in The Scrum Guide?  Is it that the detrimental affect to the value of the event is easily understood?  Why is it that so many fight to uphold the sanctity of the Sprint Retrospective yet are willing (or even demanding) to violate the Daily Scrum event?  Is it because Retrospective affects you directly as the Scrum Master or Product Owner?  Is there a lack of trust?  Or a fear?  Please take some time to honestly and critically think about that inconsistency.  ----------  There is value in having the Scrum Master coach a Development Team new to Scrum on methods for conducting the event; preferably this is done outside of the event itself, perhaps via a workshop.  There can be value in occasional observation by the Scrum Master to later provide feedback to the Development Team.  IMHO there is never a reason, only excuses, for skewing or violating the purpose of the Daily Scrum.  If there is a problem, don't dis-empower the Development Team; find a solution that doesn't alter the immutable rules of the framework.          Log in or register to post comments",7232
"12:02 am July 19, 2016                    Even having said that, I feel that I am simply justifying having an observer to silence the cries for transparency.  Encourage your Development Teams to try different approaches, research online, discuss with other Development Teams, and whatnot for self improvement.  Commitment to excellence shouldn't just be about the technical aspects; it should also include the Scrum skills.  Inspiring that level of investment goes a long way.          Log in or register to post comments",7232
"05:42 pm July 31, 2016                    I was really hoping that a discussion would be sparked.          Log in or register to post comments",7232
"10:33 pm July 31, 2016                    +1 to Tim Vandewalle and Ian's responses above.  In my view, the main reason that PO and SM shouldn't be mandatory attendees nor participants is that the Dev Team is self organizing.  Requiring attendance or participation by one of those other two roles or any other person implies that the Dev Team cannot even self organize to hold a 15 or minute less synchronization meeting.  That seems pretty ludicrous to me.  It is very common for teams to hold an ""After Meeting"" or ""After Party"" just *after* the Daily Scrum has concluded, in which non Dev Team members can participate.  I go into this much more in the following article only my web site:  http://www.scrumcrazy.com/Overview+-+Daily+Scrum+Patterns          Log in or register to post comments",7232
"10:37 pm July 31, 2016                    Also worth nothing that the ""Dev Team members participation only"" rule has been in place since at least the 2007 Scrum Guide.          Log in or register to post comments",7232
"01:26 am August 3, 2016                    Thank you for comments, Mr. Bradley.  I've poked around the Scrum Crazy site a bit in the past, but not too much.  Perhaps there will be some time for more reading there in the future.  I should have been more clear about the spark.  I would really love to hear thoughts about my question:Why is it that so many fight to uphold the sanctity of the Sprint Retrospective yet are willing (or even demanding) to violate the Daily Scrum event?Maybe that needs to be a new thread?          Log in or register to post comments",7232
"06:32 am August 3, 2016                     Posted By Ian Mitchell on 08 Jul 2016 04:16 PM   Why should they participate if they are not members of the Development Team? Can you explain your reasoning?   And why not?   There is a lot of reasons for the PO attend (listen mode), but I have no one about why not!  And how about SM? How could he/she coaching the team if don't attend the meeting?  See here: http://tomulrichconsulting.com/Scrum_Guide.pdf  Scrum Guide 2009, written by Ken  ""The ScrumMaster also enforces the rule that chickens are not allowed to talk or in anyway interfere with the Daily Scrum."", page 10.  Did Ken change his mind?  regards,  Carlos           Log in or register to post comments",7232
"08:33 am August 3, 2016                    > And why not?   If non-developers participated in the inspection and adaptation of the Development Team's plan, do you think that would be a good way of working? Do you think it would be representative of sound agile practice?  > Did Ken change his mind?   He dropped the pigs and chickens analogy, and put the focus instead on the matter of participation and accountability.          Log in or register to post comments",7232
"08:34 am August 3, 2016                    And why not?   There is a lot of reasons for the PO attend (listen mode), but I have no one about why not!  Because of the observer effect.  Even in ""silent mode"", the PO ""could"" disturb the Daily Scrum of the Dev Team.          Log in or register to post comments",7232
"02:11 pm August 3, 2016                      Because of the observer effect.    Even in ""silent mode"", the PO ""could"" disturb the Daily Scrum of the Dev Team.  If the team members, SM and PO work as team player, practice the five scrum values, have transparency, WHY PO could disturb the Daily Scrum?  It's not make sense for me.            Log in or register to post comments",7232
"02:20 pm August 3, 2016                      If non-developers participated in the inspection and adaptation of the Development Team's plan, do you think that would be a good way of working? Do you think it would be representative of sound agile practice?   The PO could not ""participate"" (talk to the team for example), but why not could PO attend (silent mode) this meeting? Where is the problem? Where are the 5 values of Scrum?  At second part of sprint planning, the Development Team create theirs plan, and ""The Product Owner can help to clarify the selected Product Backlog items and make trade-offs""            Log in or register to post comments",7232
"07:00 pm August 3, 2016                    > The PO could not ""participate"" (talk to the team for example),  > but why not could PO attend (silent mode) this meeting? Where is  > the problem?  The Daily Scrum is an opportunity for the Development Team to inspect and adapt its plan for meeting the Sprint Goal. The Scrum Master will enforce the rule that only they participate. Furthermore the team and/or SM would be quite within their rights to veto the PO or anyone else from attending, even if they do not speak, due to the observer effect that Olivier mentions.   The Scrum Values include Focus and Respect. When the Development Team seek focus, this must be respected. The Daily Scrum is an excellent example.          Log in or register to post comments",7232
"08:14 pm August 3, 2016                    Mr. Martrins, the link you provided is for the 2009 version of The Scrum Guide.  As previously noted there have been several changes.  Please see http://scrumguides.org/ for the latest.  I believe that a string Development Team with a good supporting cast (Scrum Master and Product Owner) and supporting organization (management) would be less affected by the observer affect.  Ultimately that should be the goal.  It is often the case that the purpose and value of the Daily Scrum event is not understood.  The Development Team may be having good planning conversations while addressing the three questions without an audience; once there is an audience that may change to a pass-the-baton status meeting then the real planning is done later.          Log in or register to post comments",7232
Log in to reply,7232
Messages,7256
"11:55 pm July 19, 2016                             You are the Scrum Master and your Development Team of 6 members has completed six Sprints with the  following information:  Sprint 1: 10 pontos  Sprint 2: 11 pontos  Sprint 3: 15 pontos  Sprint 4: 14 pontos  Sprint 5: 15 pontos  Sprint 6: 10 pontos  The remaining story points for product development total 42. What is the approximate number of Sprint  required to complete product development?  A. 6  B. 3  C. 5  D. 4  Why is 4 the correct answer ?",7256
"03:31 pm July 20, 2016                    What do you know about team velocity, and using that reflective metric to forecast completion of future work?  I would read up on that subject, and the answer should then make sense to you.  Also, the Scrum Guide does not recognize velocity, so it is my guess that the above exam question originates from one of the many ""offshoot"" Scrum organizations/sites.   You should be wary of any information such sites provide regarding Scrum.          Log in or register to post comments",7256
"08:48 pm August 1, 2016                    4 Sprints *could* be a valid answer, and it's certainly possible to work back from this and deduce one or more methods which *would* give this result.  But what significance does the stated team size, or being a Scrum Master, have to the velocity calculation?          Log in or register to post comments",7256
"09:47 pm August 1, 2016                    Hey ana,  the average is 12.5 points, so in 4 sprint the team will probably achieve around 50 points. 3 are not enough as it adds up only to 37.5  Michael          Log in or register to post comments",7256
"05:52 pm August 3, 2016                    The average of last 3 sprints is 13. To complete 42 points you need 3.23 sprints which is nothing but 4.          Log in or register to post comments",7256
Log in to reply,7256
Messages,7272
"05:02 am August 3, 2016                             Hi everyone!  I have been done some assessment from Scrum.Org, and I realized that the word ""Productivity"" appears in some questions.   What is Productivity for Scrum.Org? Is the same of Velocity?   thanks.  Regards,  Carlos",7272
"05:15 am August 3, 2016                    First, what do you understand is meant by the term ""velocity"", and how is it measured?  Now, what problems do you think might arise if velocity is considered to be productivity?          Log in or register to post comments",7272
"06:01 am August 3, 2016                    maybe:  -> Velocity is how much points the team developed per sprint. In this case, the team needs to estimate the items in points. Jeff says that is a key metric.  -> productivity could be express in terms of business value delivered.   So, the team could have a good velocity but bad productivity.   Am I completely wrong?           Log in or register to post comments",7272
"08:23 am August 3, 2016                    > So, the team could have a good velocity but bad productivity.   >  > Am I completely wrong?   Nope, that's exactly right. A team could have a good velocity but bad productivity. They are not the same thing.          Log in or register to post comments",7272
"08:31 am August 3, 2016                    So, the team could have a good velocity but bad productivity. And the opposite is also possible !  The team is supposed to start to work on the Product Backlog Items with the highest ROI first.  When the team improves after several sprints, the velocity could raise, but then, the team will be working on lower ROI item !          Log in or register to post comments",7272
Log in to reply,7272
Messages,7269
"04:31 pm August 1, 2016                             How many Scrum Master have one Development Team?",7269
"04:53 pm August 1, 2016                    Skill for Scrum Master?          Log in or register to post comments",7269
"06:58 pm August 1, 2016                    Every Development Team should have one and only one Scrum Master.  It is ideal to have a 1-to-1 relationship between the Development Team and the Scrum Master, although there are circumstances where a Scrum Master may be asked to serve more than one Development Team.  A Scrum Master should have a solid understanding of Scrum, along with an understanding of team development, how to lead without authority, a servant's heart/attitude, empathy, and patience.   That just touches the surface, though.   This forum is much too small to list out all of the skills needed to be an effective Scrum Master.           Log in or register to post comments",7269
"01:29 am August 3, 2016                    Ditto to Mr. Baffa's response.  There is a nice list of resources as a starting point for skills right here on this site: https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…          Log in or register to post comments",7269
Log in to reply,7269
Messages,7270
"10:38 pm August 1, 2016                             Let's suppose that:   A Development Team is waiting for a specific software component that they need to integrate and use.   The backlog items with highest priorities depend this specific component to be implemented.   What does the Product Owner should do?  1) Re-order the Product Backlog  to maximize utilization of the Development Team  2) Nothing. His primary concern is the flow of value reflected in the ordering of the Product Backlog. Timeline of the flow might be influenced by such dependencies but doesn't necessarily change the ordering.  3) Remove this dependents items from product backlog and create a new one for it.   4) Transfer this items to the integration team  I think the best option is number 2, because no matter what happens, the Product Backlog always must reflect the business value!  And you?  regards,  Carlos",7270
"03:50 pm August 2, 2016                    Carlos,  How is the Product Owner determining business value in their backlog?   Is allowing an impediment to prevent delivery of any work a ""valuable"" strategy?  On another note, it seems if the Development Team in question was fully cross-functional, they would not be dependent on another team.   Most likely, the PBIs are designed incorrectly, since they reflect a component/specialization view, instead of an e-2-e view.  What effect do you think it would have if your team's Definition of Ready included a criterion stating that every story must be independent?          Log in or register to post comments",7270
"06:43 pm August 2, 2016                    Timothy,  I got it what you told, but, I think we are talking about different stuff.  The team is cross-functional and the product backlog is based on features (end-to-end view, as you said).   BUT, let's suppose the PO have 4 items, ordered by business value:  Item A:  Value: 500  Item C:  Value: 400  Item D: Value: 300  Item B:  Value: 200  However, the item C is dependent of external component, like a report generator (let's suppose that a business decision was made about buy rather than make the component). This component will be delivered just 3 months from now.   My question is: Should the Product Owner re-order the product backlog? Like this...  Item A:  Value: 500  Item D: Value: 300  Item B:  Value: 200  Item C:  Value: 400  See, the business values keep the same! But the order was changed.   OR, should the PO keep the original product backlog's order?  regards,  Calors          Log in or register to post comments",7270
"07:54 pm August 2, 2016                    The ordering of the Product Backlog is a key mechanism for reducing and eliminating dependencies.  Does this change your answer?          Log in or register to post comments",7270
"09:41 pm August 2, 2016                    I got it.  Let's re-order the backlog! Thanks Ian and Timothy!          Log in or register to post comments",7270
Log in to reply,7270
Messages,7271
"11:45 am August 2, 2016                             What if there is a there comes a user story Identified which cannot be developed as a usable component in a single sprint? I can see some of the options as below but just thinking which could be the best option.  1. Dividing the User Stories into smaller one. But i feel this doesn't make sense b'cause each of those smaller one doesn't provide any Usable Output during the sprint.  2. Drop all the other user stories in the sprint and applying all the development efforts to complete this single implementation.  3. Development of the Story started but not included in the goal, so that this can be carry forwarded to the next few sprint to plan to have a usable output in the coming sprint.  Thanks,  Rammohan B.",7271
"04:02 pm August 2, 2016                    Scrum: easy to learn, very difficult to practice correctly.  You start with an incorrect assumption: that you have a user story that cannot fit into a single sprint.  Splitting stories is an art unto itself, and is difficult to learn.   Do not take your inability to split the story and conclude that it cannot be split.  Also, splitting is not dividing.   There is simply no value in cutting up a story into smaller pieces that are all still dependent upon one another.  There is no magic formula, although there are plenty of guidelines out there:  http://agileforall.com/wp-content/uploads/2012/01/Story-Splitting-Flowc…  http://blogs.adobe.com/agile/2013/09/27/splitting-stories-into-small-ve…  Some context around the story may help with a splitting discussion in this forum, but I would personally veto all three of your initial suggestions for mitigating a large story.           Log in or register to post comments",7271
"07:38 pm August 2, 2016                    > What if there is a there comes a user story Identified which  > cannot be developed as a usable component in a single sprint?   Then the Development Team should not plan it into their Sprint Backlog. They are under no obligation to accept it. The Product Owner must articulate smaller backlog items which *do* provide value to stakeholders and which the Development Team believe they can action. The team can help the PO to do this during Product Backlog Refinement.          Log in or register to post comments",7271
Log in to reply,7271
Messages,7249
"07:31 am July 16, 2016                             Hi guys,  I was wondering about the following.  What to do if there is a conflict within the team. You as Scrum Master has done everything possible but the conflict remains.   What's the next step?",7249
"02:13 pm July 18, 2016                    Pablo,  What constitutes ""everything possible"" in your opinion?  What do other team members have to say regarding the conflict?  Is the conflict affecting the team's ability to meet their sprint forecasts?  It is difficult to even consider what the next step might be without understanding some of the dynamics and history around the conflict.          Log in or register to post comments",7249
"04:54 pm July 18, 2016                    ""You"" as Scrum Master ? What is the role of the team ? What does the team say? They are after all, supposed to self-organize....          Log in or register to post comments",7249
"04:19 am July 19, 2016                     What constitutes ""everything possible"" in your opinion?   For the sake of argument, let say the Scrum Master has done everything that is required. (facilitate, mediate, coached, talked to team etc etc.) Despite all that, the conflict remains...    What do other team members have to say regarding the conflict?   The entire team suffers from it.   Is the conflict affecting the team's ability to meet their sprint forecasts?    Yes           Log in or register to post comments",7249
"05:10 pm July 19, 2016                    Pablo,  To sum up the situation, the entire team is apparently aware of this conflict within the team, and it is affecting the team's ability to meet their forecast each sprint.  As a Scrum Master, there simply isn't any magical dust that you can sprinkle on the situation that will make it better.  While you say that the entire team is suffering the consequences, you haven't said what they're feedback is.   Do they feel powerless?   Have they had any suggestions?   How would they manage the situation if it were up to them?  Because ultimately, it is up to them.   And as a Scrum Master, you need to support the health of the team in any way you can.  If the team is having trouble meeting their forecasts because of this conflict (and I wonder privately if this is situation is being held up as a scapegoat, but I digress), then it is the Scrum Master's responsibility to work to resolve all impediments to the team meeting their forecasts.   If the situation needs to be escalated, so be it.  When in doubt, visibility and transparency are safe paths as a Scrum Master.   Make the situation and the repercussions as visible as possible, and look to either the team or others within the organization to manage it.  Good luck.           Log in or register to post comments",7249
"02:10 pm July 27, 2016                    Hello   Timothy has summed up the discussion -   1) First of all - team being ""self organizing"" is suppose to suggest/provide feedback and propose solution - this could very well be a recommendation to replace a particular team member.   2) As SM - ownership/responsibility of resolving/removing 'impediments' is with you.   Identify the root cause(s) of the conflict (personality clash, ego, behavior of a particular team member) and use warning/escalation/decision path!   Good Luck!          Log in or register to post comments",7249
"03:14 pm July 28, 2016                    Hi Pablo,   Conflict is a natural and I'm glad you're taking attempts to work thru this. I would ask a philosophical question -- what if some level of conflict is acceptable to the Team?   Without getting into conflict resolution training / skills / tips, I would do what you're already doing -- look for help.   Now, supplement this with who can help within the organization?   Good luck.          Log in or register to post comments",7249
"09:05 pm August 1, 2016                    > I was wondering about the following.   >   > What to do if there is a conflict within the team. You as  > Scrum Master has done everything possible but the conflict remains.   >  > What's the next step?  As a Scrum Master you are a coach to the wider organization. What message would you take to them about this, given that conflict affects one of their teams, and the options thought to be available have been exhausted?          Log in or register to post comments",7249
"09:58 pm August 1, 2016                    Pablo,  It would be very helpful to understand how this conflict started. Is it a new team member that recently joined? I had a similar situation where a new team member stirred the team and triggered a conflict (and he was not necessarily the bad guy).  Michael          Log in or register to post comments",7249
"07:10 am August 2, 2016                    Did the same team has former working experience without this conflict ?  How was it ?           Log in or register to post comments",7249
Log in to reply,7249
Messages,7263
"12:54 pm July 27, 2016                             Hi All,  My question is simple and straight forward .  If the Dev Team has taken up 5 PBIs for the sprint.  Towards the end of the sprint due to some blocker or dependency with other system or some Technical challenge one the PBI not completed on time.  So does this mean to kill the Sprint just because of one PBI was not completed??  I know we can create an Impediment and return the PBI to Backlog again.  Is there anything else we can do (Assume that nobody from Dev Team raised the Impediment )??  I am open for all possible options.  Thanks,  Gourab",7263
"06:35 pm July 27, 2016                    Gourab,  What does the Scrum Guide say regarding the following:    1)  What are reason(s) for terminating a sprint?    2)  Who has authority to terminate a sprint?  Based on these answers, how would you manage the above scenario?          Log in or register to post comments",7263
"11:47 am July 28, 2016                    Hi Timothy,  A Sprint would be cancelled if the Sprint Goal becomes obsolete.   This might occur if the company changes direction or if market or technology conditions change.   In general, a Sprint should be cancelled if it no longer makes sense given the circumstances.  This i understood but my question remains unanswered...  If the Dev Team has taken up 5 PBIs for the sprint.  Towards the end of the sprint due to some blocker or dependency with other system or some Technical challenge one the PBI not completed on time.  So does this mean to kill the Sprint just because of one PBI was not completed??   Thanks          Log in or register to post comments",7263
"01:38 pm July 28, 2016                    Gourab,  Is the PBI still valid for the company even if it is not finished in the sprint?     Can the Sprint Goal still be achieved without the unfinished PBI (assuming the other 4 are completed)? So does this mean to kill the Sprint just because of one PBI was not completed?? What do you think?           Log in or register to post comments",7263
"03:17 pm July 28, 2016                    Hi Timothy,   To answer your queries..  Is the PBI still valid for the company even if it is not finished in the sprint? - YES  Can the Sprint Goal still be achieved without the unfinished PBI (assuming the other 4 are completed)?   Sprint Goal was set with the 5 PBI to complete. 4 finished but 1 not.Ideally sprint Goal was not achieved.But my question lies here is it possbile to finish the sprint with 4 completed PBIs ???   If YES - what needs to be done with the unfinished PBI?  If NO - Does it mean to kill the sprint just bcz of 1 unfinished PBI??  Thanks,          Log in or register to post comments",7263
"03:39 pm July 28, 2016                    Hi Gourab,   Nice to see you on the forums. Sometimes, we don't get direct answers, but people are well-meaning when responding.   .  .  .  .   So does this mean to kill the Sprint just because of one PBI was not completed?? A Sprint is not ""killed."" There is either a sprint cancelled (abnormal termination of the Sprint) or the timebox expires. I'm having a slightly hard time reading your question as 2 scenarios come to mind.   A) The timebox is over and it is time to go for the Sprint Review   - If such, this just happens and unfinished work is reassessed and returned to the product backlog. From what I have seen, usually, this goes up high on the product backlog and the Team takes it in the subsequent Sprint.   B) There are still a few days remaining before the start of the Sprint Review  - What happens here is situational and is different for various Teams. While certainly a retrospective item here are a few thoughts.   -- A Product Owner, having ordered the backlog may have something that the Dev Team can continue working on. To keep the cadence, the Dev Team may pick something else.   -- Or, the PO may cancel the Sprint.   Some added clarity on your scenario will help.          Log in or register to post comments",7263
"05:15 pm July 28, 2016                    Hi Nitin,  Thanks for your reply..  A) The timebox is over and it is time to go for the Sprint Review   - If such, this just happens and unfinished work is reassessed and returned to the product backlog. From what I have seen, usually, this goes up high on the product backlog and the Team takes it in the subsequent Sprint.   so something is unfinished and timebox for sprint got over, then we can return the work item back to product backlog . so what will be the status of this backlog item, as this has been taken in the sprint work item status will be Approved.Now as we are returning back this item to product backlog with high priority the work item status will be new or Ready to Groom again????  B) There are still a few days remaining before the start of the Sprint Review   - What happens here is situational and is different for various Teams. While certainly a retrospective item here are a few thoughts.   -- A Product Owner, having ordered the backlog may have something that the Dev Team can continue working on. To keep the cadence, the Dev Team may pick something else.   -- Or, the PO may cancel the Sprint.   PO may cancel the sprint just bcz 1 item can not be completed ??? i know the decision lies on PO only.  Thanks,  Gourab           Log in or register to post comments",7263
"05:32 pm July 28, 2016                    I often find that everything in Scrum has a domino effect.   so what will be the status of this backlog item, as this has been taken in the sprint work item status will be Approved.Now as we are returning back this item to product backlog with high priority the work item status will be new or Ready to Groom again????   [Via NK] -- It depends.   -- If other information has emerged or the Team has learned something new, there can be refinement. (Minor note: the word ""grooming"" was replaced in the Scrum Guide.) Some Teams may have formally defined ""Ready"" and what that means? It is also acceptable to discuss this during the next Sprint Planning.  -- OR If everyone is aligned it is simply a familiar product backlog item  -- OR the item may not be ""ready"" as there is a clear dependency / impediment around this  -- OR the item may now be obsolete (rare)  .  .  .  PO may cancel the sprint just bcz 1 item can not be completed ??? i know the decision lies on PO only.   [Via NK] -- Yes.  Hope that some of this helps you, as well as others following this thread.          Log in or register to post comments",7263
"08:26 pm July 28, 2016                      So does this mean to kill the Sprint just because of one PBI was not completed??   No.  The reasons for terminating a sprint are listed in the Scrum Guide.   Failing to complete one PBI, or determining that one PBI no longer applies to the Sprint Goal, is insufficient for Sprint Termination consideration.  This is a lot of hand-wringing over an exception scenario that many will never encounter.          Log in or register to post comments",7263
"09:51 pm August 1, 2016                    Remember that you can have a successful Sprint even if *none* of the originally planned PBI's are delivered. Not even one.  This is because the Sprint Backlog represents a *forecast* of the work needed to meet the Sprint Goal...and it is the Goal, not the forecast, which represents the team's commitment.          Log in or register to post comments",7263
Log in to reply,7263
Messages,7257
"09:25 pm July 20, 2016                             Hello All, I have been preparing for scrum master PSM1. Went through scrum guide. I have confused many times while reading, because  product owner and development team has more responsibilities than Scrum master. so my question is what exactly he does/supposed to do  in day to day basis .",7257
"03:58 pm July 21, 2016                    Ujwala,  Another reason why you cannot ""learn"" Scrum just by reading a book and memorizing the answers.  Do you know any Scrum Masters?  They could give you some context around Scrum Master responsibilities.  What do you believe a Scrum Master should do on a day to day basis?          Log in or register to post comments",7257
"01:06 pm July 22, 2016                    Hi Ujwala,  Well is quite a long list of tasks that the SM do on a daily basis. Some days prepares for all the meetings that needs to be facilitated for the team(review, retrospective, planning), other days speaks with the PO and the customer to groom the backlog, speak with the team if they have any issues, give them some framework explanation(if needed), follow up the action points taken in any of the meeting, keep the team happy and satisfied, remove impediments, discuss technical issues...this is pretty much a simple list. If you are SM for more than 1 team all of this by 2. Sometimes(quite often actually) the SM also read to increase his/hers knowledge about the process...And on top of that the SM might need to attend management meeting about the introduction of Agile methodology and Scrum framework in the company. So it may get even more busy. This is more or less in a nutshell :). Good luck with your exam.           Log in or register to post comments",7257
"09:43 pm August 1, 2016                    > ...product owner and development team has more responsibilities  > than Scrum master.  Are you sure that these responsibilities can be thought of and compared quantitatively?          Log in or register to post comments",7257
Log in to reply,7257
Messages,7254
"07:25 pm July 18, 2016                             Hi all,  I was wondering about the following:  Lets say there is an issue. When does a Scrum Team decide to wait for and discus it in the Sprint Retrospective and when does it need to be addressed immediately?",7254
"09:31 pm July 18, 2016                    Does the Development Team feel that the issue may affect their ability to achieve the sprint goal?   If so, then it should be discussed immediately, and not have to wait for the Retrospective. (critical)  If the issue is non-critical, it is up to the team whether to address it before or at the Retrospective.   An assessment of team capacity and progress towards the sprint goal are a couple weighing factors for making a decision to discuss now or wait until later.           Log in or register to post comments",7254
"04:14 am July 19, 2016                    Thanx, sounds logical          Log in or register to post comments",7254
"08:36 pm August 1, 2016                    Inspection and adaptation should occur as close as possible to the time and place of issue. This is as true in Scrum as it is in any other lean or agile way of working. Failure to do this incurs waste. There's nothing in Scrum which says remedial action for an issue must delayed until a formal event such as a Sprint Retrospective.          Log in or register to post comments",7254
"09:39 pm August 1, 2016                    Hi Pablo,  let me ask you a rhetorical question: if there is an issue in your family, or in your car or in your gang, when should it be addressed? The answer, of course, is: when appropriate, taking into account the severity, the context, the settings, the people's traits and other factors.   Scrum retros are mandatory events because an improvement process is considered critical and they are an attempt to enforce it in the typically stressful environment where they may very easily be omitted. As Ian mentioned, there is no reason why issues cannot be handled early on.  Hope this helps,  Michael          Log in or register to post comments",7254
Log in to reply,7254
Messages,6615
"06:26 am December 17, 2015                             Hello there,  Hope you're OK,  Please recommend a good source for exam questions to get me prepared well for the real exam.  Have anyone tried Management PLAZA (http://goo.gl/bjK989)?  Please let me know your thoughts!  P.S. I've read Scrum Guide and took the open assessment of Scrum.org many times.  Thanks,  Mohamed",6615
"10:59 am December 17, 2015                    Mohamed,  Scrum.org takes care in not disclosing the exact assessment questions and their answers through any avenues. Their objective is to preserve the integrity of the assessment from becoming a vanity means to claim Scrum knowledge. some sites and sources provide mock questions. But beware of them. Usually, we find that those questions can be misleading.   Here are couple of items by me. It may sound like promoting, but I cant avoid as this will serve as direct response to your question. You may want to checkout and decide  Book:   Scrum Narrative and PSM Exam Guide :   https://www.smashwords.com/books/view/592973  ( pdf / mobi / pdb /  html / online / rtf / txt / lrf formats)  The author of this book respects Scrum.org view of not revealing original assessment questions. Rather than reproducing the original questions, the author has designed a full range of questions, around 250+ to completely practice Scrum knowledge areas and be comfortably positioned to answer PSM 1 questions.  Preparation Tips:   How to pass PSM in first attempt? Five steps to get the most meritorious Scrum certificate   https://www.linkedin.com/pulse/how-pass-psm-first-attempt-five-steps-ge…           Log in or register to post comments",6615
"01:11 am December 26, 2015                    Dear Mohammed, I found your eBook in another thread, bought it - and am completely satisfied. I posted this review on amazon.de:  ""Yesterday I passed PMI's ""Agile Certified Practicioner"" (PMI-ACP) and wanted to give PSM 1 a try before Christmas. Scrum is part of PMI-ACP, but not on a detailed level. In the past, I've read some books on Scrum, too, but that was some time ago. In addition, I have real live experience, but never before concentrated on learning Scrum by heart to get a certification.  Mohammed's book is a great source for preparing for PSM 1. I started reading it tonight and passed with 98% (85% required) 12 hours later. The eBook covers all the material in the Scrum Guide and delivers a lot of interesting and helpful knowledge that is relevant for implementing Scrum, and which is not included in it's core (clearly marked as 'detours'), a mapping of Scrum to the Agile Manifesto (which anyone interested in Agile should know by heart: agilemanifesto.org) and even some hints on different types of questions to be expected. The book provides a lot of test questions, too, which from my point of view very well resemble the character and difficulty of those in the real exam.  Other sources I used for preparation were (as recommended by Mohammed) the different open assessments on scrum.org (Scrum Master, Developer, Nexus) and a bit Wikipedia. Nothing more is really needed.  Thanks Mohammed for doing a great job in summing up everything that is relevant for the test in a very clear and concise way! Merry Christmas, Marcus""            Log in or register to post comments",6615
"09:50 am December 30, 2015                    Dear Marcus,   A huge THANK YOU for your great feedback and the review. I am very glad that the book - Scrum Narrative and PSM Exam Guide helped you.  My motivation to write this book came from two facts:  1..- Before writing PSM 1 assessment, I had plenty of years of experience in Scrum and few other agile manifesto compliant frameworks. PSM 1 was a surprising eye opener for me to understand Scrum for what it was, with its common sense based but groundbreaking fundamentals. Scrum Guide and many good sources recommended by Scrum.org for PSM 1 enriched my knowledge and I thoroughly enjoyed the new knowledge that started soaking in. Then came a thought - why not I crystallize my learning for others benefit. So, in a way, this book is sort of a thesaurus for Scrum Guide.  2..- Scrum has not only changed the way that I and my teams work, but has brought in a whole new perspective on how I approached other things outside the profession. The empiricism as a driver for scrum approach has answered many of the questions on the complexity of events and how to make decisions amidst this complexity. The second driver of scrum, namely the people aspect, made me realize the limitation of one man centered leadership styles and the subjectivity associated with that. A truly transformational concept changes your life not just professionally but personally as well. And Scrum had come to influence many of my other activities with examples such as  ...The approach to planning and building a small construction project. Though I am an architect by education, I heavily utilized Scrum principles in evolving the design of the building, rather than the traditional approach of detailed upfront horizontal and vertical layout  ...Personal Investment and portfolio building  ...The amount of transparency that I brought in my communication with family, friends, and many other stakeholders in my professional network  ...Many more….  I am little jealous that you got 98% in your first attempt while I could only clock 95% back then :)  If at all possible could you provide your email id that I can reach you? You can drop in at musthafa.s@gmail.com  Again, thank you so much and Season greetings!!           Log in or register to post comments",6615
"07:09 am January 5, 2016                    Dear Mohammed,  > I am little jealous that you got 98% in your first attempt while I could only clock 95% back then :)   But you did not have your book for preparation ;-)  > If at all possible could you provide your email id that I can reach you? You can drop in at musthafa.s@gmail.com   Of course: marcus.gemeinder@web.de  Bye,  Marcus          Log in or register to post comments",6615
"06:11 am January 19, 2016                    As I read your comments , i decided to purchase the book and read it . thank you for this guide .  Before taking the PSM 1 exam i  decided to take some mock exams , so i purchased the testtakeronline one , but i really find their questions/ answers confusing   Do you have any feedback on this ?   Thank you for your answers ( if any :) )          Log in or register to post comments",6615
"01:08 am January 20, 2016                    Nouha,  As for the PSM questions, Scrum.org takes care in not disclosing the exact assessment questions and their answers through any avenues. Their objective is to preserve the integrity of the assessment from becoming a vanity means to claim Scrum knowledge. Some sites and sources provide mock questions. But beware of them. Usually, we find that those questions can be misleading.  Misleading sources – Example 1  Following are few examples of mistakes found in a popular training manual on Scrum.   •       It introduces definition of “Done” as an artifact. In fact, definition of “Done” is not an artifact. There are only three artifacts defined by Scrum. So, after reading this manual, if you see a question like the following,   Which is a Scrum Artifact:  a)   Definition of Ready  b)   Definition of Done  c)   Design Document  d)   None of the above  You may choose ‘b’. But the correct answer is ‘d’  •       The manual states that “The Sprint Backlog is frozen when the Sprint Planning is done” This is incorrect. Sprint Planning produces a Sprint Backlog with just enough detail. It is not frozen but emerges during the Sprint as the Development Team learns more about the work and accordingly modifies the backlog   •       The central theory behind Scrum is empiricism. There is not even a mention about empiricism in the training manual.  Now to your question on some site. It is an example of poor articulation of the question itself.  I understand its intent. It requires some rephrasing.  Read it as follows (I just assume that is what they intended): o	Which of those events Is an opportunity    for the scrum team   to inspect and adapt the  scrum team itself : -Sprint Review -Sprint Retrospective -Daily Scrum -Sprint Planning. Now you know that - given the options, retro is the right choice.           Log in or register to post comments",6615
"05:18 pm July 25, 2016                    Unfortunatley only scored 81.3% was able to pass all the open exams 100% 3 times in a row and read the scrum guide 3 times but a lot of the questions asked in the test are not in the sources suggested.   Also I find that the questions are asked in a confusing way and a lot of might's, coulds, possiblys and maybe's in stead of will, are, is etc. So any tips? I was unable to find the information required to pass the test in the sources given apparently.          Log in or register to post comments",6615
"04:43 pm August 1, 2016                    could have one Developement Team two different Scrum Master?          Log in or register to post comments",6615
"09:19 pm August 1, 2016                    > could have one Developement Team two different Scrum Master?  A Scrum Master can be replaced, so two different people may reasonably perform the role at different times.          Log in or register to post comments",6615
Log in to reply,6615
Messages,7262
"11:40 pm July 26, 2016                             Hi, all.  I did the official PSD I training course, and I'm doing sprints right now.  Most of Scrum has been easy to pick up and difficult to master.  However, one thought has passed my mind that I really can't figure out the correct answer to.  Suppose the theoretical situation where there is agreement that a two week sprint needs to be abnormally terminated four days in.  The Goal is useless, the tasks have been superseded, etc, etc.  Scrum prescribes that a new Sprint starts immediately on the conclusion of the prior sprint.  This will have one of two effects:  1. The new sprint is shorter than normal, set to be the length of the remaining days of the prior sprint (6 working days, in this example case), and therefore information like the velocity must be scaled appropriately, plus any metrics produced from the sprint must be considered inconsistent and therefore clearly marked when doing any sprint history analysis.  I personally believe 1 sounds more likely, however, there is a comment in the footnotes of version 5.2 of the PSD I official training that ""All sprints have the same duration"".  Therefore, there is a second possibility in my mind:  2. The new sprint is a full-lengthed sprint.  However, this increases general complexity as the day of sprint planning has now changed, possibly affecting stakeholder availability, and possibly affecting meeting room bookings, which is explicitly against Scrum's intention to always reduce complexity by keeping things consistent.  I would be very interested to hear what you have to say.  I know that sprint terminations are very rare, and therefore unlikely to be mentioned copiously across literature.  Thanks!  Simon",7262
"07:00 pm July 27, 2016                    Sprint terminations are indeed extremely rare.   A fundamental shift in priority and direction of a company (i.e. - corporate merger, competitive pressure) is needed in order to render a Sprint Goal meaningless.  In my mind, you are right about predictability and consistency.   This is just my preference, but if a sprint was abnormally terminated, I would keep the schedule the same, and begin the next sprint on the normally-scheduled day, same as if the sprint was not terminated.  Since there is now a ""gap"" of a few days between the abnormal end of the previous sprint and the start of the next sprint, that time can be spent re-assessing the situation, grooming, and preparing for the next sprint.  I would not count the terminated sprint in any metrics.          Log in or register to post comments",7262
"08:59 pm August 1, 2016                    Use the remainder of the Sprint Timebox to leverage and release as much value from the work done as possible. A viable goal may be reframed along with a backlog sufficient for the remainder of the timebox. This may be done regardless of how early or late cancellation occurs. Sprint cadence ought not to be affected.          Log in or register to post comments",7262
Log in to reply,7262
Messages,7267
"12:14 pm July 30, 2016                             Hello   My first name in the PSM I certificate got changed automatically. The current one reflecting in the certificate  is not the name that was there in the initial certificate issued to me. The initial certificate carried the name I asked for but somehow it got changed recently.   I wrote to support@scrum.org about the same on July25,2016, but yet to receive a reply.   Is there any other way I can get their attention ??  Cheers...DB",7267
"01:53 pm August 1, 2016                    Hello Dipayan,  Thank you for your interest in Scrum.org and congratulations on your achievement in earning your PSM I certification. We received your email to support@scrum.org and made the edit you've requested. If you should need any additional support, please do feel free to contact us again at support@scrum.org. Congratulations again on your achievement and enjoy your day, Dipayan!          Log in or register to post comments",7267
Log in to reply,7267
Messages,5861
"12:36 am May 2, 2014                              I am sure this topic will be covered and I must have missed that discussion. What is the difference between a Product Owner and Product Manager role?  I heard that Product Manager is more outward while Product Owner is more inward towards the team. Or there can be just one either Product Owner or Product Manager?  Cheers  Sanjay",5861
"01:06 am May 2, 2014                      I heard that Product Manager is more outward while Product Owner is more inward towards the team.   You have summed it nicely. In our company, where we are working on product based project, we have product owner(s) and a Product Manager.   Product Owner(s) have duty of requirement gathering, backlog maintaining and running sprints (+ other responsibilities as mentioned in Scrum Guide). However, product owners don't define quarterly / yearly road-map of product.  Product Manager in our company defines the road map of the product, costing of project, he deals with sales and marketing teams, resource management (HR) teams etc.   You can see a clear distinction here, I think it all has to do with how you define the role of Product Manager.          Log in or register to post comments",5861
"04:25 am May 2, 2014                    I may be wrong here but there is no mention of Product Manager anywhere in Scrum. There are no courses, guides or any other references to that role. I believe in an ideal scrum framework the road map of the product is defined by the product owner with input from stakeholders and discussions with the scrum team. Sales and Marketing maybe considered as stakeholders and should be liaising with the Product Owner. The Product Owner can provide input into resource management issues.          Log in or register to post comments",5861
"06:02 am May 2, 2014                    A traditional project manager can fulfill the roles of a scrum master or a product owner depending upon his or her skills/inclinations.  In case of a traditional project, a project manager fundamentally manages the project.  However, in a scrum project, the work is managed by the development team.  In scrum, the PO is responsible for maximizing the product value in addition to the work carried out by the development team. The PO is the sole entity responsible for creating and managing the product backlog.  The product owner “owns” the project on behalf of the stakeholders. He or she assumes a servant-leader role to facilitate the colloboration and transparency features which are very important in scrum. The project manager generally assumes a more autocratic role and decides everything pertaining to the project. The person also issues commands as to how the team should carry out the development activities - something never done by the PO in scrum.          Log in or register to post comments",5861
"03:15 am May 8, 2014                    Hi Sanjay,  In nut shell of Scrum, here is difference. The P.O is part of scrum team where as the P.M doesn't having any role in the scrum team. You can put P.M in the stakeholder profile.   The P.O having final vote which user story goes in the sprint and the team and P.O can create stories. P.M won't do that.  Scrum Team Members: P.O, S.M, D.T  P.O: Product Owner  S.M:  Scrum Master  D.T: Development Team  Thanks,  Kapil   scrum-mines.blogspot dot in          Log in or register to post comments",5861
"09:31 am May 9, 2014                    > What is the difference between a Product Owner and Product Manager role?   In Scrum the correct use of vocabulary is important. If there is any evidence or suspicion that the Scrum vocabulary is being compromised...for example by conflating or splitting roles...then Scrum is not being done well. The difference between a Product Owner and a ""Product Manager"" could therefore be the difference between a sound implementation of Scrum and a poor one.          Log in or register to post comments",5861
"12:31 am May 14, 2014                     Yep, I also see it as implementation issue, no product manager role in Scrum. He can be a marketing or sales guy though.  Cheers  Sanjay          Log in or register to post comments",5861
"08:47 am July 23, 2014                     Actual question:  What’s the difference between a Product Owner and a Project Manager?  My initial thoughts are, PM doesnt exist in scrum so why are we comparing them.  If we go a bit deeper takes us down another avenue.  PM  PM is responsible for managing a project so has the skills to scope, time, cost,communication,risk,quality.  PM would not always work with self organising teams or have the skills to adapt, top to bottom.  PO  Would have skills to scope, time, cost,communication,risk,quality.  PO would always work with self organising teams as its Agile, bottom up.  So they are roughly the same but do the job differently is another option.  This question for me is a bit like this  Bob is a PM, he is six foot three, likes sport, and drinks ten pints.  Dave is a PO, five foot four, doesnt like sport, tea total.  (Dave is my PO but dont go out drinking with Bob)  Isnt it irrelavant what the difference is, if we think of it as a question of value in scrum.  In pints yes I could see some logic as Dave would be on a mission.  We dont have PM, its PO, does any PST for PSPO know what the thinking is behind this.  Scrum guide doesnt compare them.  This is like the ""Who would be the best choice for PO question"".  Michael          Log in or register to post comments",5861
"09:31 am July 14, 2016                    the role of the product owner is a key in any Agile/Scrum methodology. At the same time, expectations and definitions of this role are even more blurred than the roles of Scrum Master and Scrum Team as the whole. If we speak in metaphors, the Scrum team is a powerful (or not really) car, and how fast it goes may directly depend on the driver’s level of experience, who is the Product Owner.  from here https://blog.craft.io/2016/06/28/product-owner-product-manager-whats-di…          Log in or register to post comments",5861
"05:33 pm July 14, 2016                    From my experience, organizations that utilize a Project Manager are most often still operating in a classical, top-down, directive style.  When implemented properly, a Product Owner is operating in an agile, bottom-up, self-organizing style.  How the role's duties are performed may vary, but the intended purpose is clear.  Being ""responsible for maximizing the value of the product and the work of the Development Team"" and ""one person, not a committee"" while most likely representing ""the desires of a committee"" makes the Product Owner role vital to both the Scrum Team and the business alike.  Input from all stakeholders funnels through him or her to guide in the creation and prioritization of the Product Backlog: the ever evolving collection of possibilities for the product.  Providing clear understanding of what those items mean (in both function and value) aids in maximizing the efforts of the Development Team.  The Product Owner and the product will be most effective and rewarding (both financially and personally) only when the statement ""the entire organization must respect his or her decisions"" is actually lived.  Although I like the analogy of a driver, I prefer navigator.  He or she has a strong and shared vision of the final destination (product).  He or she plots and adjusts the proposed course (Product Backlog) as the needs and desires change.  He or she provides the understanding so that the goal of each short segment of the trip (Sprint) can be achieved without gong in a wrong direction.          Log in or register to post comments",5861
"04:20 pm July 22, 2016                    I noticed in this thread that the original question has been misread by some responders.  The OP asked the difference between ""product manger"" and ""product owner""... NOT ""project manager"".          Log in or register to post comments",5861
"05:46 pm July 31, 2016                    Good catch, Steven Lee.  Sanjay Saini, despite the error, do you feel that the you have received a helpful answer?          Log in or register to post comments",5861
Log in to reply,5861
Messages,7210
"12:46 pm June 27, 2016                             Hello,  I wanted to know if any standard is or should be followed for writing User Stories. I have seen Stories varying from being at business rule, to a field validation rule, to output delivered as a result of user action, to usability related.  Would like to know if others follow any standard.  Thanks.",7210
"10:15 am June 28, 2016                    From my experience the User Story itself should be quite simple. It should reflect the reason and intention of solution. What makes difference is the additions to User Story in my opinion and here I find 2 which makes sense to me.  1. Scenarios  Describe what should happen. I cannot even tell how many weak points of solution were found quickly while trying to define the exact scenario. I use gherkin syntax to write scenarios. If the agile project management tool gives you syntax higlighting you have another win.  If you find BDD topics interesting you win another time :)  2. Acceptance criteria  You can specify almost everything in scenarios. If you find it too long to write all scenarios in front of the rest of the team, use additional Acceptance Criteria.  I'd recommend to specify many items here including validation rules, output etc.  I try to make sure that team will know 'how to test' the story.  Of course giving examples can make things much easier for the team to implement. It is better to specify sample title of the email, color palette etc. if possible.  Not everything has to be given when planning, some details can be delivered later - in last responsible moment :)          Log in or register to post comments",7210
"08:29 am June 29, 2016                     Not every detail can be specified/detailed as part of the user story.    So my question is - as project team learns/discovers more about a particular story(requirement) - additional details like field level validations/business - where should these be captured and documented?   These details also help enhance the acceptance criteria/testing conditions applicable against the story before same can be marked as ""done"".            Log in or register to post comments",7210
"10:14 am June 29, 2016                    An user story should be non technical and independent, and for sure written  from the users eyes.  That is captured or is doing on refinement / grooming  process, as you said you can get more details of backlog, remember that the PO is the owner of PBL, and the team can modify the sprint backlog at any time.   You should use the standard for uses story  I as <user> I want to <do....> so the benefit <...>   Considers the 3Cs (card, communicated and confirm)  and INVEST for get more clear backlog.   The backlog is in continues changing.  The best,  Gabriel            Log in or register to post comments",7210
"11:05 am June 29, 2016                    A User Story has 3 parts: Card, Conversation, and Confirmation.  Which part or parts do you think would be most appropriate for capturing the field-level validations and business rules you describe?          Log in or register to post comments",7210
"01:34 pm June 29, 2016                     Business Rules/Field level validation are best suited for ""Conversation"" part of the user story!    Common understanding of ""Definition of Ready"" should support the level of details including conversation and confirmation be captured /available for each PBI/User story!            Log in or register to post comments",7210
"03:05 pm June 29, 2016                    Yes are part of the story,  but keep it simple as standar mentioned above, and  the acceptance criteria encompass its.     And for your second part of the discussion, for me is not, remember one agile value ""working software over compressive documentation"", and the right way to create story and developed the product backlog, that is not documentation, the story need to cre written as a user or client eyes.   Best   Gabriel          Log in or register to post comments",7210
"02:27 pm July 1, 2016                    Hi Ashish,  there are several criteria to a good US:  1. It should have a DoD  2. It should follow the ""CCC"" rule:        Card: the description should be short enough to fit on an index card. The description should be documented.        Conversation: there should be conversation between the PO and the team where PO details the requirements. No need to document.        Confirmation: description (by the team) of what they are going to present to the PO at the review meeting at the end of the sprint. This should be documented.  3. It should satisfy the INVEST criteria (see https://en.wikipedia.org/wiki/INVEST_(mnemonic))  Hope this helps,  Michael          Log in or register to post comments",7210
Log in to reply,7210
Messages,7204
"08:08 pm June 23, 2016                             Hello Everyone,  I want to split the user stories in such a way that each user story can be completed in 1 or 2 days. I went through lot of blogs on this and observed that vertical slicing of user stories will be a better option. But I'm stuck on how to vertically split the user stories for RESTful APIs/Webservices.  Till now we were using API document as a basis for development of a user story. API document will have which http method to use, what would be the response in case of success/failure, field definitions, etc..  For example: Let take a user story where I want to create a user using RESTful API. For this I used to create a document with complete details like   http method:POST  payload formats: JSON/XML  authentication mechanism: oauth2  http status in case of success: 201  location header: /users/<user id>  http status in case of failure: 400  exception messages:  .....  .....  Field definitions like   FIELD_NAME         DATATYPE           MANDATORY  =======================================  FIRSTNAME           STRING(50)                  Y  LASTNAME            STRING(50)                  Y  MIDDLENAME       STRING(25)                  N  DOB                          DATE                             N                             ....  ....  Can someone help me in splitting this kind of user stories such that development of each user story can be completed within 1 or 2 days.",7204
"07:10 am June 24, 2016                    Which options does your Scrum Team suggest ?          Log in or register to post comments",7204
"02:10 pm June 24, 2016                    Is your focus on completing development in 1-2 days, or meeting your team's Definition of Done in 1-2 days?          Log in or register to post comments",7204
"03:03 pm June 24, 2016                    We are planning to split the user stories such a way that development can be done in 1-2 days meeting team's DOD.          Log in or register to post comments",7204
"04:23 pm June 24, 2016                     Posted By Somasekhar Reddy Palle on 24 Jun 2016 03:03 PM  We are planning to split the user stories such a way that development can be done in 1-2 days meeting team's DOD.  Somasekhar,  I guess I am a little confused now.   Apologies in advance if it is just me.  There are definite benefits to creating similarly-sized stories (reduced variability, improved sprint flow, possible elimination of relative estimation).  However, what is your DoD criteria that requires code complete in 1-2 days?    If coding were to take 3 days, is that considered a failure?   What other criteria are part of your DoD besides development/coding?   What is the length f your sprints?  One splitting strategy that has worked well for me and others is to split stories based on outputs or deliverables.   Split stories by platform, by screen or report content, whatever is directly facing the business that they can use and gain value from it.     Once you have that division, all work is then defined as tasks that roll up under the story.  Keep in mind that if your team builds something that the business cannot use, it is either incomplete, incorrect, or unimportant.          Log in or register to post comments",7204
"02:57 pm June 25, 2016                    Timothy,  Thanks for your response.  Code complete in 1 or 2 days is not a DOD criteria. All the user stories that our team estimated till now are exceeding 40 hrs. So basically I'm looking for splitting the user stories such that each user story estimate will be in the range of 6 hrs to 12 hrs.  As we are working on development of Web services, I'm looking for help in splitting up the user story for web services like creating an entity, updating an entity, etc...  May be some example on splitting the user story for creating an entity using web service helps.  Thank You          Log in or register to post comments",7204
"04:30 am June 26, 2016                    Timothy,  Thanks for your response.  Code complete in 1 or 2 days is not DOD criteria. All the uses stories that our team estimated till now are exceeding 40 hrs and it will be very late for getting the feedback. So I'm looking to breakdown the user stories in such a way that any user story can be completed in 1 or 2 days.  I have referred the following article and trying to implement the same in our product development- http://blogs.adobe.com/agile/2013/09/27/splitting-stories-into-small-ve…  So I'm basically looking for some examples how to split the user stories for web service development.          Log in or register to post comments",7204
"01:20 am July 1, 2016                    Howdy, Somasekhar!  Vertical slicing is a great technique.  Sometimes those vertical slices are very ""tall"" because they don't require work in other layers and that is okay.  While many consider it ideal for a user story to represent no more than a day or two of work, sometimes that is just not practical.  The Development Team should slice them as thinly as it feels comfortable and the Product Owner can accept the risks of longer efforts.          Log in or register to post comments",7204
Log in to reply,7204
Messages,7217
"01:24 pm June 30, 2016                             Hi all,  Picture this scenario: we are a scrum team working on a product backlog, we agree that our first sprint has a 30 days length. Do you think that is possible that the scrum team can have a new agreement so the next sprint has 15 days length or since we define a 30 days length all remaining sprints must have 30 days length?   Thanks for help in advance.",7217
"02:45 pm June 30, 2016                    Mael,  While the guide states that sprint length should not exceed one month, the widely accepted standard around sprint lengths is in weekly increments, not in day increments.   Teams usually work in 1, 2, 3, or 4-week sprints.   This helps to create a rhythm from sprint to sprint (similar times/days for sprint ceremonies) and dramatically reduces variability.   A common custom is to also schedule a mid-week beginning/end of sprint, to accommodate typical holidays that occur on Mondays or Fridays, and again reduce variability around rescheduling.  Your question is basically asking whether variability in sprint length is a good practice, which it unfortunately isn't.   That doesn't mean you are ""stuck"" with your initial sprint length, but you should have very sound reasons for wanting to either shorten or lengthen the sprint duration.  Why did you initially select a 30-day (4-week) sprint length, and why do you want to now reduce it to a 15-day (2-week) sprint?          Log in or register to post comments",7217
"03:55 pm June 30, 2016                    I would say once should put serious considerations and account all parameters while deciding the length of the sprint and it should remain intact during the scrum cycle for that product.          Log in or register to post comments",7217
"05:15 pm June 30, 2016                    A number of factors need to be considered before deciding on a sprint's length. Its definitely no advisable to change the duration sprint to sprint but, for a new team, I would recommend running 2-3 sprints with a length that the team considers right initially and validate. If the team think the length is not optimal, please feel free to adjust and try that out. You may not have to adjust more than once to find the right duration.           Log in or register to post comments",7217
"06:58 pm June 30, 2016                    > Do you think that is possible that the scrum team can have  > a new agreement so the next sprint has 15 days   It's possible, but it isn't necessarily a good idea. It's generally better to improve the Definition of Done, so better quality is delivered, than it is to reduce a timebox and observe a lesser standard.          Log in or register to post comments",7217
"10:18 pm June 30, 2016                    Hi folks!  Thanks for your replies. All the answers were very useful to our team. We are just adopting scrum, and this point came up in a meeting. We were worried about not do anything that could put scrum framework adoption in risk in our company.  Thanks all of you once more,  Bests.          Log in or register to post comments",7217
"12:20 am July 1, 2016                    There are many reasons for consistency in the time box for Sprints.  Some have already been mentioned and there are a few others that come to mind.  Remember that Scrum is founded on empirical process control theory.  Changing the Sprint time box means adding a variable which affects predictability.  If the results of changing the length are not what is expected, then determining correlation versus causality is more complex.          Log in or register to post comments",7217
Log in to reply,7217
Messages,7214
"12:43 pm June 29, 2016                             While going through mock tests - encountered the following question   What belongs solely to the Development Team?  Among the options -   1) The Sprint Backlog   2) DoD  And the correct answer was 1) The Sprint Backlog  The scrum guide also suggests that it is Development team who creates the DoD and refines the same as part of retrospective inspections as well.   Shouldn't DOD be solely belonging to Development Team?",7214
"01:06 pm June 29, 2016                    Hi,   The DoD bring transparency and another benefits of course, thinking more in deep on transparency I think that the DoD should be developed and accepted by all scrum team, all stakeholders involved  in the company as well.   Best   Gabriel          Log in or register to post comments",7214
"01:31 pm June 29, 2016                    Pankaj,  This specific forum is targeted for certification questions only.   Please keep that in mind in the future.  That said, why do you think the Development Team should solely determine when an item is ""done""?          Log in or register to post comments",7214
"01:44 pm June 29, 2016                     Timothy - My question is related to PSM-1 exam only.    I understand and agree that determination of DoD is done by Sprint Team rather than just by Development team.    My question is about ""Belonging"".   Can Product Owner or Scrum Master make changes to DoD during the sprint?            Log in or register to post comments",7214
"02:13 pm June 29, 2016                    The DoD could be changed at retrospective meeting.   The best  Gabriel          Log in or register to post comments",7214
"02:30 pm June 29, 2016                     Posted By Pankaj Ahuja on 29 Jun 2016 01:44 PM  I understand and agree that determination of DoD is done by Sprint Team rather than just by Development team.     My question is about ""Belonging"".    Can Product Owner or Scrum Master make changes to DoD during the sprint?    The DoD may change during a sprint based on increased ability, understanding, etc.   However, any changes made to a Scrum Team's DoD must be both transparent and agreed to by the Scrum Team.     Your question about ""unilateral"" changes to the DoD (by role) would therefore violate that practice.          Log in or register to post comments",7214
"02:43 pm June 29, 2016                    I'm agree with you Timotly,  a especific discussion, to no violate the practice DoD should the updated at retrospective meeting correct? in order to keep the transparency of DoD that evolve.   And I think that DoD need to be agreed by the Scrum Team as you said, in additional by another stakeholders as well, what do you think?            Log in or register to post comments",7214
"03:44 pm June 29, 2016                    Gabriel, while the Retrospective is a convenient point to make improvement experiments visible, it is not a requirement.   The Scrum Team should be able to make changes to their DoD at any time - why should the Scrum Team delay any potential improvements until the end of the sprint?  Regarding your second point, the PO must be the voice of the stakeholder(s) within the Scrum Team.   The DoD is agreed to between the SM, the PO and the Development Team.   Stakeholder involvement in the crafting or modification of the Scrum Team's DoD is not needed.          Log in or register to post comments",7214
"04:17 pm June 29, 2016                    > Shouldn't DOD be solely belonging to Development Team?   If it did, what would the implications be for the wider organization? Since the DoD asserts product quality, what should the organization do regarding the DoD to ensure risks to branding, reputation etc. are managed?          Log in or register to post comments",7214
"07:54 pm June 29, 2016                    Thanks you Timothy, I'm agree with your the continued improvement should happens ASAP., I think that at retrospective is a good instance to update DoD officially for the team and maybe another stakeholders.   Good perspective from view the discussion Ian.   Thanks you guys.   Gabriel          Log in or register to post comments",7214
"07:20 am June 30, 2016                    Thanks every one for your insights.     They way I see key reason for Sole belonging of Sprint back log to Development team is   - Self-organizing teams choose how best to accomplish their work, rather than being directed by others outside the team.    - The number of items selected from the Product Backlog for the Sprint is solely up to the Development Team.   - Only the Development Team can assess what it can accomplish over the upcoming Sprint.    - DoD guides the Development Team in knowing how many Product Backlog items it can select during a Sprint Planning.  Also notice the use of language in Sprint Guide - for Sprint Backlog - it mentions ""development team"" and for DoD it uses the term ""Scrum Team"".   Thanks everyone!          Log in or register to post comments",7214
Log in to reply,7214
Messages,7213
"12:39 pm June 29, 2016                             During the sprint - Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned!   This Does not only mean that re0negitionation would result in DE-scoping of work?    What if PO does not agree to descope the work? While Development team is expected to be fully competent and have all the required skills in order to be able to deliver the agreed scope?    However, it should not happen that in view of technical challenges/difficulties faced by team - they start using ""De-scoping"" as means of buying more time or Shifting PBIs?",7213
"01:34 pm June 29, 2016                    What is your exact concern or question, Pankaj?          Log in or register to post comments",7213
"01:51 pm June 29, 2016                    My question/concern is coming out from the following questions   While going through the sprint, additional tasks/work gets identified which needs discussion with PO for potential re-negotiation of Sprint Backlog scope.  However, PO is not fully convinced with the recommendation to have scope reduced? As a scrum master what are the possible approaches to handle such a situation?           Log in or register to post comments",7213
"03:09 pm June 29, 2016                     Posted By Pankaj Ahuja on 29 Jun 2016 01:51 PM  > While going through the sprint, additional tasks/work gets identified which needs discussion with PO for potential re-negotiation of Sprint Backlog scope.  However, PO is not fully convinced with the recommendation to have scope reduced? As a scrum master what are the possible approaches to handle such a situation?   I am making the following assumptions based on the example you outlined.  - The Development Team forecasted work in their sprint backlog based on the offer from the PO, and agreed to a sprint goal with their PO.     - The items in the Development Team's sprint backlog were groomed with the PO, and there is a shared understanding within the Scrum Team on all of the items offered and accepted.  - During the sprint, the team identified additional work needed to meet the Sprint Goal, and the forecasted work now exceeds the Development Team's comfort level (capacity).  If the above is accurate, then my response is as follows:  The Development Team has responsibility and authority for ""how"" the Sprint Goal is achieved (the solution).     If the scope of the solution has changed, then a discussion with the PO about the remaining Sprint Backlog items should take place.  However, is the ""additional"" scope so significant that it requires a re-evaluation of the Sprint Backlog?   Perhaps it is a larger solution than originally considered, but where is the team in the current sprint?   I would assume that it is early in the sprint, so one question is whether it is worth the ""hit"" to the current sprint to have the team meet separately with the PO to discuss what the team ""might"" be able to finish?  Perhaps transparency and awareness should be the initial approach?   Ensure everyone is aware of the solution changes and the potential impact to the remaining Sprint Backlog.   It is important that the team work on Sprint Backlog items in priority order, so that if the PO is unwilling to renegotiate scope, any potential ""carryover"" of items will be the lowest-priority ones.  As the sprint progresses, either the Development Team will exceed their expectations and remain on track for finishing their forecast despite the increased solution scope, or the impact of the increased solution scope will become more and more evident, and the PO will need to consider whether de-scoping any items is practical.  What is critical is to continuously promote the collaboration between the Development Team and the PO regarding the current sprint.   They will figure it out, and any issues will create excellent topics for the Retrospective.  Good luck.           Log in or register to post comments",7213
"04:29 pm June 29, 2016                    > However, PO is not fully convinced with the recommendation to  > have scope reduced? As a scrum master what are the possible  > approaches to handle such a situation?   Think about the continued ability of the Development Team to meet the Sprint Goal. Might a Scrum Master provide focus on that consideration, to help the team and the PO collaborate and find a remedy?          Log in or register to post comments",7213
"07:39 pm June 29, 2016                    Hi,  The scope, the sprint backlog in that case should not change, the team goes for the sprint goal, the team can identifies new tasks and update the product backlog task and of course renegotiate the sprint backlog is its necessary but it's shouldn't happens to stay the team focus and productive.   Best,  Gabriel          Log in or register to post comments",7213
Log in to reply,7213
Messages,7215
"01:07 pm June 29, 2016                             What are the recommended approaches/best practices for addressing and minimizing technical debt?",7215
"01:22 pm June 29, 2016                    Hi,   Starting quickly, do you need reflect its on the DoD to maintain a high level of trasmperency and of course verify that it's understand for stakeholders, then continue the improvement, depending of the company, identify the technical debt of the team and just put the HCM plan to run.          Log in or register to post comments",7215
"04:34 pm June 29, 2016                    > What are the recommended approaches/best practices for  > addressing and minimizing technical debt?  Look at it the other way around. From your reading of the Scrum Guide, what is the best approach for ensuring that team deliverables are of release quality?          Log in or register to post comments",7215
Log in to reply,7215
Messages,7216
"01:16 pm June 29, 2016                             What are the best practices around ""Acceptance Testing"" in order to ensure that increment is ready to be shipped/released to production?   By including Acceptance Testing as part of the Sprint Backlog (either as tasks or as DoD) -   - Should it be completed ""increment"" that should be offered for Acceptance Testing or should it be done PBI by PBI?    - What about End to End testing for the final increment?  When and how same should be conducted?   Pankaj",7216
"02:09 pm June 29, 2016                    Hi Pankaj,   Here my input, good points.   The acceptance testing need to be written by the development team, the development team is the owner of the sprint backlog and accept it , the development team accept stories and each story has the testing included itself, the transformation from story to increment is clear for all in order of the DoD, so at the end of each sprint the PO accept or reject the increment according to the DoD., the stories transformed to increment are potential to move to production immediately if the company decide it,  on real circumstances, so, the unit test, the integration testing, the regression testing are done at this time.   The end to end testing its need to be performed continuously into the each sprints, the continue delivery is the best concept  around its,  Best,  Gabriel   The acceptance testing is part of each story and it need to be performed into of the sprint          Log in or register to post comments",7216
"04:08 pm June 29, 2016                    > Should it be completed ""increment"" that should be offered  > for Acceptance Testing or should it be done PBI by PBI?  From your reading of the Scrum Guide, what ought to be acceptable for potential release...the PBI or the increment? What do you think the answer means for quality control? Might there be different levels of ""Done""?          Log in or register to post comments",7216
Log in to reply,7216
Messages,7202
"02:45 pm June 21, 2016                             Hi all,  I'd like your take on this  I am hired as a project manager for a client  Client has their own waterfall-like methodology with phases, milestones, decision points, steering committee etc. but is interested in trying a more agile way of working and will allow me as a project manager to suggest a methodology or framework to use.  Project goal is to install a new standard system to replace an old legacy system and migrate data from the old to the new system, so no software development.  Therefore the end goal is clear and we don't see that any requirements will change during the project and no customization will be implemented by us. The area with most risk is likely the data migration process.  Project team will be co-located, cross-functional and able do all the work required to move the project ahead. Likely, no or minimal external dependencies.   We're only just starting so I may be able to provide more detail later.  Do you see a fit for Scrum in this context?  There are some obvious ""incompatibilities""  Project goal is set and will not change, no items to prioritize, no new requirements. No obvious product owner role.  No ""working product"" at the end of the sprint, at least nothing that necessarily builds on any previous increment. No obvious business delivered until system is taken into production.  Still I would not consider this a simple project (is there such a thing?)  There are unknowns, like the data migration part which could be complex.  Am I better off using Kanban for this project or use the standard waterfall-like project model?  Thanks  Fredrik",7202
"04:31 pm June 21, 2016                    > Do you see a fit for Scrum in this context?   Not unless there is a stakeholder appetite for the empirical evidence of progress.  If the risks that need to be controlled are those of data migration, what increments could be delivered which would clearly evidence their mitigation, and thus prove the value of this initiative on an ongoing basis?          Log in or register to post comments",7202
"02:25 pm June 22, 2016                    Thanks Ian,  Progress is of course always nice 8-), my issue is with providing business value throughout the project at a steady pace. For end-users the business value is only delivered when the system is set into productions. For a software project this is a no-brainer. Add new features/value during each sprint, always have a done increment, rinse & repeat. This unfortunately resembles more of a big bang release.  My thoughts for handling the data migration is to migrate a subset of the data, let end-users test and validate the system and then proceed with the rest of the data. However, even this is likely to take months.          Log in or register to post comments",7202
"03:00 pm June 22, 2016                    Presumably you will need to validate the schema in the new system, including the level of normalization to be achieved as well as the quality of data that actually goes in. It can be surprising how much data cleansing is needed. Validation can be done incrementally by tackling certain design elements (tables and their sprocs & triggers) first. Product ownership may be found in the data stewards of the organization, assuming there are any.          Log in or register to post comments",7202
"03:09 pm June 22, 2016                    > It can be surprising how much data cleansing is needed.  I should also point out that much (even most) of this cleansing can end up being manual. Staging tables for migrating data into prod are best built incrementally. The big bang release in data migration is probably fiction...I've never truly seen it happen yet.          Log in or register to post comments",7202
"09:28 am June 23, 2016                    Details of this process is yet to be discussed/decided so the complexity of this is unknown at this stage. I think I need get more details about the project. Does anyone know of any resources that discuss using scrum in other areas than software development?          Log in or register to post comments",7202
"07:30 am June 28, 2016                    It is really depends upon the company culture and its readiness to accept risk appetite.   if the Project goal is to install a new standard system to replace an old legacy system in a single location.. probably the combination of both waterfall and Scrum could work well. Waterfall to deliver the infrastructure necessary for starting the migration. And migration can be planned using the scrum... monthly targeting XX migration of data/users.           Log in or register to post comments",7202
Log in to reply,7202
Messages,7209
"06:32 pm June 26, 2016                             Hi everyone,  A question regarding the Sprint Planning Meeting.  If I read the Scrum Guide and specifically the Sprint Planning Meeting section, I see a certain sequence:  1) What can be done this Sprint. After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a Sprint Goal.  2) Having set the Sprint Goal and selected the Product Backlog items for the Sprint, the  Development Team decides how it will build this functionality into a “Done” product Increment  during the Sprint.   Was wondering why there is this split between first discuss the WHAT, craft a Sprint Goal and then discuss the HOW.   Wouldn't it be more logical to mix it all together, so:  1) discuss the WHAT and HOW it will be done.   2) when sufficient items are discussed and included in the sprint then craft the Sprint Goal.",7209
"07:12 pm June 26, 2016                    Topic 2 of Sprint Planning addresses how an increment can be built which meets the Sprint Goal. Clearly, a goal must exist before a plan for achieving it can be determined.  However, there is nothing to stop a team from conducting these two planning topics non-sequentially. Earlier versions of the Scrum Guide were more prescriptive in treating them as discrete and sequential parts, but that is no longer the case.          Log in or register to post comments",7209
"08:34 pm June 26, 2016                     Posted By Ian Mitchell on 26 Jun 2016 07:12 PM  Topic 2 of Sprint Planning addresses how an increment can be built which meets the Sprint Goal. Clearly, a goal must exist before a plan for achieving it can be determined.  This part I'm not really getting. For me it sounds much more logical to first determine a plan. Once this is done, you'll have a better understanding of what and how it needs to be done. After that you create Sprint Goal that kind of encapsulate all the items in the Sprint Backlog.  However, there is nothing to stop a team from conducting these two planning topics non-sequentially. Earlier versions of the Scrum Guide were more prescriptive in treating them as discrete and sequential parts, but that is no longer the case.  Most teams which I facilitate ask the following question: ""How can we create a Sprint Goal if it is not sure whether it is realistic or not"" To gain a better a better understanding we need to go more into the details          Log in or register to post comments",7209
"08:37 pm June 26, 2016                     Posted By Ian Mitchell on 26 Jun 2016 07:12 PM  Topic 2 of Sprint Planning addresses how an increment can be built which meets the Sprint Goal. Clearly, a goal must exist before a plan for achieving it can be determined.   Don't get me wrong. I understand that there needs to be a goal before a plan can be created. But in this case it feels odd          Log in or register to post comments",7209
"08:53 pm June 26, 2016                    Perhaps it would make more sense if you think of each sprint as a project. Characteristic of a project is that there is a start and end date with a clear goal.   For example:  Prior the sprint starts, during the Sprint Planning, the Product Owner discusses his/her objective for upcoming Sprint.   Let’s take the Sprint Goal example from Mike Cohn’s website:   Implement basic shopping cart functionality including add, remove, and update quantities.   How the Development Team knows what the Product Owner wish to have, but it is up to the Development Team to decide what they can accomplish within their Sprint. Perhaps, the update functionality is for some reason too complex and won’t make it in the Sprint. Perhaps an easier implementation of adding, removing, updating can be done in order to meet the objective of the Product Owner.   Once everyone is happy, the Scrum Team crafts its Sprint Goal.   Does this make sense?           Log in or register to post comments",7209
"09:33 am June 27, 2016                     ""How can we create a Sprint Goal if it is not sure whether it is realistic or not""   Sounds to me, as if you are estimating Tasks (where Tasks describe what to do to implement a PBI – the how).  According to Scrum we estimate PBIs rather than Tasks. From the past we know how many Story Points we can deliver during one Sprint, so we know how many PBIs we can pick before defining the Tasks.  Based on these we can define our Sprint Goal.  From this, a discussion on estimation may arise, there are many discussions on this topic out there already. I have experienced many teams that wanted to estimate real and absolute time needed instead of abstract, relative points. With this mindset, it is very seducing to estimate Tasks rather than PBIs.  This rarely is my number one priority, but once it is time and I ask the team to give Story Points a chance and try it out. They usually become able to estimate relatively quite fast and want to stick to it.   Because estimating and everything linked to it – like your point, get so much easier when estimating relative Story Points!  Once your team is even more mature and your process is working smoother, you can even think about regarding your Sprint as a project, define a goal first and then pick the PBIs to best meet this goal.           Log in or register to post comments",7209
"10:21 am June 27, 2016                    That secuence makes sense for me.     I see the first part (What can be done this Sprint) enought to select items and craft a Spring Goal. I think how should not be important here. More over, in this part the Product Owner has to give a Sprint Goal. About this point I got a lot of suggestions about the Develpment Team  should also work actively in the Spring Goal.  https://www.scrum.org/Forums/aft/2065     In my opinion, the Product Owner might not be physically in the second part. And, regard to the Scrum Guide, we only need how to know to implement the first Sprint Backlog Items in order to start the Sprint. Work planned for the first days of the Sprint by the Development Team is decomposed by the end of this meeting, often to units of one day or less          Log in or register to post comments",7209
Log in to reply,7209
Messages,6890
"03:02 am May 31, 2016                             Hello,  I would like to understand if Scrum can work well when the functionality to be delivered is very less, but to get to that there is a lot of non-functional work involved.  Example : A project requires 4 new reports to be delivered. That is the functionality that a business unit wants.  To get to this following steps are to be followed :  1) Design & Creation of a new database tables.  2) The input data for the reports come from external systems. That input data has to be mapped to the data tables created.  3) The data from the new tables has to be extracted and mapped to the XML format, before that is used to produce the reports.  Major portion of work lies in the steps 1 & 2 which involves gap analysis, database creation and mapping.  Can a project like that work well using Scrum principles, since the PO will have a very limited part to play in creating the product backlog items.",6890
"03:44 am May 31, 2016                    > Can a project like that work well using Scrum principles...  That depends upon the risks. If the process is well understood and the risks are low, then there may be little point in using Scrum.  Complexity often brings risk however, and so if the process is a complex one a Product Owner may reasonably seek empirical evidence of risk control. Supplying a PO with analysis, design, and mapping data is not empirical evidence, as these are promissary notes used in place of value and are not increments of product that prove value. They are typical of staged waterfall methods, but not of agile practice where the only acceptible evidence of risk mitigation is the delivery of valuable increments of working product.  > ...the PO will have a very limited part to play in creating the  > product backlog items.  If that is indeed the case, then there is no point in attempting agile delivery as the PO will not be in a position to benefit.  The question then is, does the PO want to see risks being controlled by means of incremental delivery? Would this provide valuable assurances to stakeholders? If so, what would those increments look like?          Log in or register to post comments",6890
"11:21 am May 31, 2016                    Along with what Ian posted, these are my observations:  I am confused as to why you believe the PO will have a limited say in creating the backlog items.   If the report requirements come from the PO, and if each story represents business value to the PO, then why wouldn't the PO be involved in crafting and offering the stories to the team?  Ashish, you have laid out a typical waterfall (phased) approach to developing these new 4 reports.   Each step does not result in functionality that the end-user can benefit from.   It is a technical approach, which unfortunately does not represent effective story mapping and writing.  Database table creation means nothing to the end user.   Data mapping also means nothing.   The only value to the business unit are the 4 new reports to be created, and the accuracy of the data contained.  Therefore, you need to ask yourself if there is a different way to look at the customer-facing items.  Is there value in providing the business unit with what each report will look like?   Can this be done without ensuring the accuracy of the data shown?  Do all 4 reports need to be done at once?   Can each report be delivered separately?  Do all of the attributes for each new report need to be done at the same time?  Ask yourself - What is the smallest piece of functionality that I can actually deliver to the business unit that has value to them?  What is critical is making the feedback loop from delivery of functionality to story requirements (and then back to delivery) as short as possible.   That approach will do more than anything to help your organization transition to Agile.  There is a tendency for those in IT to ""batch"" items together.   This is incredibly inefficient.   Read up on Lean concepts to learn why.  Try not to think of the ""work"" from a development perspective (I'm opening this code, so it makes sense to batch up all of my changes to update it only one time).   Think more holistically (end to end).   What is the testing effort?   Release and change management considerations?  Good luck to you.           Log in or register to post comments",6890
"07:43 pm May 31, 2016                    If you are producing statutory reports, putting data that already exists in the system into specific places on the form, go waterfall.  On the other hand, you may be falling into the trap of starting at the solution (I need a report) instead of a user story:  ""when I'm trying to do X, I need to decide Y or Z...if I can see ABC, that tells me....""    You get the picture.    That user story gets built by asking ""When do you run the report? Why do you run it?  What decisions give you the most struggle?  Why? How often do you run it? Does it have to be a report?""  We turned on logging in order to cull out unneeded reports, and I found that one user ran a particular report over and over all day long...sometimes more than once in a minute.  After discussing what she was trying to accomplish, we gave her a way to view inventory with lots of columns that she could filter. And then we killed her old report.           Log in or register to post comments",6890
"04:23 am June 1, 2016                    Thanks for all the comments.  @ Timothy, to your points :  1) 'Limited' because yes each report can taken as a separate story, however it cannot be decomposed any further. So there would just be 4 stories in all.  2) Yes, each report can be delivered incrementally, however the sequence of steps would still remain the same. So a lot of activities as mentioned in my steps 1 & 2 would be done for each report,  irrespective if they are all carried out once for all reports or carried out individually for each report.   My question however is a more generic one and I used this example to make my point that for projects like these where non-functional work is far more than what the user would get as functionality, would Scrum still be effective.          Log in or register to post comments",6890
"10:44 am June 1, 2016                    Ashish,  I do not understand your assertion around non-functional work.   It seems all of the work you are describing is going towards functional requirements (new reports).  If your question is whether Scrum is appropriate for a lot of development and testing work that results in a small amount of functionality (according to your opinion), the answer is yes.  There has been a lot of valuable information and advice posted in this thread.   Take it all to heart, and good luck to you.           Log in or register to post comments",6890
"01:41 am June 7, 2016                    If i understand correctly.. the User story will be what has been mentioned before ""When do you run the report? Why do you run it? What decisions give you the most struggle? Why? How often do you run it? Does it have to be a report?"" ""  During your sprint planning the following are tasks: 1) Design & Creation of a new database tables.   2) The input data for the reports come from external systems. That input data has to be mapped to the data tables created.   3) The data from the new tables has to be extracted and mapped to the XML format, before that is used to produce the reports.   Once you have them, estimate and do your sprint planning. If the same database, tables are being used for multiple reports then you can accordingly split your sprints in the first being completing the common task which will be used in all reports.           Log in or register to post comments",6890
"07:25 pm June 26, 2016                    Ashish,    As rightly highlighted by Rishi - scrum framework can very well be used and applicable for scenario you have described -   I feel that the scenario described by you first needs to  have Spics and Stories properly defined - In your example- Generating Reports seems like a ""Epic"" - which can be potentially be broken down into stories - e.g.   1) Story -1 As a ""role"" - I should be able to capture ""transaction Data"" and save the same for subsequent retrieval and summary/detailed reporting/analysis.   2) Story-2 As a ""role"" - I should be able to able to query the information for defined Criteria so that ""benefit/value""  etc  As part of Product Grooming/refinement effort - each of the story can then be sized and assessed for level of completeness (Ready) as per the common understanding of the Team.    PO should then help with prioritization of each story using associated business value, risk, size and other applicable factors.  As part of Sprint Planning session - Development team should then agree on the PBI's for the next sprint in accordance with the team's velocity.    All the Engineering activities around Design/Architecture, Analysis, Coding, Integration and testing are nothing but Tasks against each PBI and should form the part of the Sprint Backlog as part HOW part of sprint planning.  (Create Database schema, Define Index, Create Views, XML structure, Coding etc)  Elements like NFRs - for accessibility, performance, security etc should be part of DoD (Coding completed, Code Reviewed, Automated Test Cases Created, Unit Test Passed, System Testing, Integrated and Tested, OAT completed, Performance Testing Completed, Documentation completed etc).   Once all the Tasks identified during Sprint Planning (and any additional tasks identified during the course of work/Daily stand-ups) and DoD check points are completed - should be Backlog item be marked ""Done"".    Sprint Review meeting should then be used for demonstrating the functionality/capability of ""Done"" PBIs to PO/Stakeholders for gaining final acceptance.   Hope this helps.   Pankaj           Log in or register to post comments",6890
Log in to reply,6890
Messages,6913
"11:11 am June 15, 2016                             Hi,  We've recently started to use the Scrum framework and we gradually went from 1 team to 5. I am doing the Scrum Master role. In the last months, each Development Teams worked on their Definition of Done (DoD) with the Product Owner. Each Teams have negociated their own DoD. There are some differences between each DoDs.  Today, there is 1 Product Owner and 5 Scrum Masters and we want to use a unique DoD for all the Teams. What do you propose we should do to harmonize the DoDs?  Proposals that came out of our discussions:  - Each Scrum Masters work with the Product Owner to build a new DoD that they'll present to their Team.  - Each Team elect a representative (Developer) that work with the Product Owner to build a new DoD that they'll present to their Team.  In both cases, this would be an iterative process so that each Team could provide feedback and adjust.  Thanks in advance!",6913
"05:21 pm June 15, 2016                    > What do you propose we should do to harmonize the DoDs?   A Definition of Done properly applies to the increment. Are the teams collaborating to jointly provide a fully integrated, tested, and usable increment to the Product Owner each and every Sprint?          Log in or register to post comments",6913
"08:11 pm June 15, 2016                    All the Teams Product Increments at the end of each of their Sprints go in the same code base for one product release.  There is often some collaboration required between the Teams to achieve this.  Until now, each Team has its own DoD.  The question is: who works with the Product Owner to create a unified DoD?  Some of the Team members (Developers) or the Scrum Masters?          Log in or register to post comments",6913
"02:11 am June 16, 2016                    The Nexus Guide says:  ""The  Nexus  Integration  Team  is  responsible  for  a  definition of  “Done”  that  can be applied  to  the Integrated  Increment  developed each Sprint.""  What does the Nexus Guide say about how a Nexus Integration Team is formed?          Log in or register to post comments",6913
"03:16 pm June 16, 2016                    That is a great tip to check up the Nexus guide.  It's possibly what we need: a Nexus Integration Team.  Other than a PO and a SM, the Team members are skilled individuals that can coach and guide the other Scrum Teams to properly integrate all the work to a Definition of Done.  Once the Nexus Team DoD is defined, other Scrum Team ""may choose to apply a more stringent definition of “Done” within their own teams, but cannot apply less rigorous criteria than agreed for the Increment.""  I'll share that with my colleagues.  The challenge is that basic Scrum is not yet fully in place, so we need to achieve a solid base before we move to a Nexus...  Thanks!          Log in or register to post comments",6913
"12:07 pm June 17, 2016                    I like the second and then each team can add but not subtract from the overall product DoD. I also like the idea if possible to get all the teams together in space if possible to review the DoD and review/make any tweaks so everyone can hear the discussion and feel ownership in the product DoD.  May have to be creative in facilitation so the discussion is focused.          Log in or register to post comments",6913
"05:30 pm June 26, 2016                    While it is logical for each scrum team to have their own DoD which is in conformance to the type/nature of work being done by the team and forecast of PBI.    Multiple scrum teams working on the same product/project and using product backlog - DoD across all teams must be aligned to ensure that final outcome/deliverable is a working increment and potentially ship-able.            Log in or register to post comments",6913
Log in to reply,6913
Messages,6867
"10:43 am May 15, 2016                             Hi  I had heard last ear that the SCRUM.org had plans to replace the PSMII with PSE.  Please suggest if this has happened  If not when its going to happen",6867
"11:46 am May 16, 2016                    Thank you for your interest in Scrum.org and our assessments for certification. We have not replaced the PSM II assessment with a PSE assessment, nor made any other changes to our family of certifications at this time. We continue to evaluate our assessment program for improvement. Please continue to monitor our site and announcements where we would detail any changes if they should occur.   Thank you again for your interest in Scrum.org and enjoy your day, Venkata!          Log in or register to post comments",6867
"05:05 pm June 26, 2016                    Hello there,  On 2015, there was a post on Scrum.org that a new certification PSE is coming up. As of June 2016, Scrum.org has no official information on PSE.   I found a post from a Scrum.org trainer in the UK, where he claims that PSE indeed replaces PSM-II  http://www.thescrummaster.co.uk/scrum/pass-professional-scrum-expert-ps…  Aside from the point whether PSE replaces PSM-II or not, my question is, when would the PSE certification be official on Scrum.org?  Sincerely,   Henry Freedman          Log in or register to post comments",6867
Log in to reply,6867
Messages,7208
"03:47 pm June 26, 2016                             Good Afternoon.   I am looking for a Scrum Master with Java experience for my client based in Dusseldorf.   If interested please contact Will at Will.roeder@select-tech.co.uk  Candidates must have:  – Java  – Fließende Deutsch- und Englischkenntnisse  – IT Projekt Management  – Exzellentes Verständnis in der Verwendung von agilen Methoden und Tools.  – Kenntnisse in einigen der folgenden Technologien: JEE, Java 7 und 8, JavaFX, JUnit, Maven, Spring, Hibernate, Tomcat  Candidates nice to have:  – Zertifizierter Scrum Master  – Erfahrung im Großkundengeschäft im Energieumfeld  Career Level:  – Professional / Experienced  – Senior Professional / Project Manager  Keywords:",7208
Log in to reply,7208
Messages,7207
"08:05 pm June 25, 2016                             Hello Friends,  Just wanted to let you know that I passed PSPO I with 88.8%. I must say that this exam is much complex compared to PSM I. The complexity of questions and multiple choice questions were pretty daunting.  To prepare for this exam I studied for about 2 weeks after completing my PSM I exam. Read couple of good books and made note. The in-depth knowledge is required to pass the exam.   Thank You  Gunjan Modi, PMP, PSM, PSPO",7207
Log in to reply,7207
Messages,7206
"12:09 pm June 24, 2016                             Hi All. Just my info about PSM assessment and maybe some tips how to pass.  I done the exam 2 times. The first time I was really close 83.7(67 correct) so I was disappointed. I study the Scrum Guide inside out, I have been Scrum Master for 2 team for more than 1 year, done the online exams on 100% many times and still I messed up.  On the second try I passed with the fantastic result of 98(2 wrongs only out of 80), so I ma proud a bit :). What was the difference. Well I done some more reading on Agile, Scrum, here in the forum also. Done the online exams again plenty of times, lapshin test also many times and also the Scrum Practitioner many times.   Well what I can recommend is first to get some experience and real one(cause a lot of companies/teams )think that if they are doing a Daily then they are doing Scrum. As mentioned before is a mindset, not just open the book and you are ready. Even in my daily work I still have some issues which I will explain in different forum. So experience, if you don't have it then I guess do everything that is free on the market(assessments, exams, books, etc). On top of that Scrum Guide until is clear..every point you can explain to yourself and then some more tests and also Scale Scrum(more than 3 questions in the test).  Good Luck to everybody.",7206
Log in to reply,7206
Messages,6911
"05:05 am June 14, 2016                             Hello,  My first post here, hope everybody is doing great.  I'm planning to take up PSM 1 Exam. Just wanted your suggestions and advice on preparations?  I have taken open assessments multiple times with 100% score and also read Scrum Guide. Anything else I need to focus on. I have been reading 'Scrum Pocket Guide' as well for the preparation.   Can someone suggest some more details on mock exams?  Appreciate your help!  Thanks,  Vishal Shinkar",6911
"09:59 am June 16, 2016                    Hi Vishal  You should read scrum.org Scrum Guide multiple times. If you are already in the role of Scrum Master then it will be easy for you to score good marks. Otherwise you should work closely with a Scrum team. There will be scenario based questions. For that you should imagin about each and every scrum rule, what is the logic behind that, how it will work, what are the benefits. Best wishes!!          Log in or register to post comments",6911
"03:15 pm June 16, 2016                    Thanks for your inputs Sanjay.          Log in or register to post comments",6911
"11:57 am June 23, 2016                    Need to know from where can I download my certificate ?          Log in or register to post comments",6911
"02:21 pm June 23, 2016                    Hello Sameer,  Congratulations on passing the PSM I assessment and earning PSM I certification! Your PSM I certificate and badge is available for download from your Scrum.org member profile. To access your profile, please first log in to your Scrum.org member account (your username is the email address you used to register for the account). After logging in, click your display name at the top of any page on Scrum.org.  For the full Support FAQ article on this topic, please see here: http://support.scrum.org/knowledgebase/articles/467790-where-can-i-find…  Congratulations again on your achievement and enjoy your day, Sameer!           Log in or register to post comments",6911
Log in to reply,6911
Messages,7199
"11:27 pm June 18, 2016                             I have a query on adding team members to scrum team. Trying to understand with an example.  ""I am working in a health IT project team and need to deliver an increment as part of a Healthcare reform mandate. (product must go live without any delay to meet federal mandates)  There are 10 tasks in sprint backlog and all our Dev teams are fully engaged with that(say we have 9 folks working in that sprint). Suddenly we came across a critical technical issue which is not resolvable by our current DEV team. We think one person who is working with another team can help us to resolve (since he faced the issue before - assume he faced the issue when he was in another organization) but he also need some time to understand the developments to fix the issue. In this case can we borrow him as a 10th resource in our team?  I just want to give this example because, say current organization 'A' do not have any details/documentation of the particular issue.  Again, we need to consider him as an outside helper for the scrum team or another scrum member who has responsibilities of the product.   I think he may be considered as outside helper, but would like to know what is the difference between outside helper and 10th team member if he code from scratch or fix the issue in his own way?",7199
"03:25 pm June 20, 2016                    Arun,  It is certainly permissible to arrange for subject matter experts outside of the team to provide assistance to the team.   What is strongly suggested is that this ""outside expert"" not complete any work, but collaborate with 1 or more Development Team members on the solution.  It is important that the development team not accept any sprint work dependent upon the availability of the outside SME unless that SME has capacity to work with the team.  Adding them to the team is a poor option.   It creates variability within the team, and reinforces silos of information within the organization.  Having them perform the work (code/test) is also a poor option, because it does not address the knowledge gap within the current Dev team.           Log in or register to post comments",7199
"04:30 pm June 20, 2016                    > We think one person who is working with another team can help us to resolve   Is that other team working on the same healthcare reform product as your team?          Log in or register to post comments",7199
"11:17 pm June 20, 2016                    Hi Lan. Thanks for looking into my query.   It can be another feature of same product (like benefit year process or calendar year process etc); but the other person is a Techie with all necessary technical skills and prior experiences.  But my question was more on the technical side.  How to fix a technical issue in short period of time within the scrum frame work - by utilizing outside help.  So the 'responsible' development team member himself needs to correct the code with the guidance of external member or we can allow the other person to code and fix. This is the query I have.  Sorry, if the question not make sense!!!          Log in or register to post comments",7199
"11:22 pm June 20, 2016                    Thanks Timothy for the help in understanding the concept. So its individual team member (who was responsible for that issue) needs to code and fix instead of having the other person to touch the code. That will be fruitful for self organization and cross-functional excellence as you advised.          Log in or register to post comments",7199
"04:39 pm June 21, 2016                    If the requisite skills are to be found in another team working on the same product, then those teams should consider replanning their work instead of moving team members around. Variability in team structure is best avoided, as Tim has mentioned.          Log in or register to post comments",7199
"05:44 pm June 21, 2016                    Thanks Lan. It makes sense.          Log in or register to post comments",7199
Log in to reply,7199
Messages,6916
"09:39 am June 16, 2016                             I have a operational team of 10 members. They work on daily, weekly, monthly and quarterly tasks. They work in 3 shifts. Each shift has 2-3 members. Some of the tasks are monitoring of network, perform start of day and end of day for branches, running batch jobs etc. Same set of daily, weekly, monthly and quarterly taks will keep on repeating for lifetime unless until any new task gets added or any modification in existing task.  As a Scrum Master can I implement scrum for above situation. But to start with Scrum I need to work with Product Owner to prepare Product Backlog. Should we include these daily, weekly, monthly tasks as Product Backlog. But at the end of monthly sprint, same set of tasks will be required to include again in Product Backlog.  This team do not work on any incidents or changes. They have predefined tasks to perform.  Can somebody suggest on this situation.",6916
"03:07 pm June 16, 2016                    Have you looked at Kanban? It may be more appropriate.          Log in or register to post comments",6916
"03:29 pm June 16, 2016                    Scrum is optimized for delivering complex software systems under conditions of uncertainty. Would you say that this describes your situation? Would value be maximized by achieving Sprint Goals, each of which mitigates a substantial element of risk?          Log in or register to post comments",6916
"10:42 am June 17, 2016                    Sanjay -   Alternatively you can try Scrumban - a hybrid of Scrum & Kanban which is often used as a transition method between Scrum and Kanban proper. Even with predefined tasks visualizing work in Kanban might help your team identify bottlenecks and improve the overal flow of work.  https://en.wikipedia.org/wiki/Scrumban          Log in or register to post comments",6916
"01:35 pm June 17, 2016                     Scrum is designed to embrace change and facilitate empirical and frequent feedback.  The scenario you describe Sanjay consists of repeatable, known tasks, which are actually very well-suited for waterfall management.     I would agree that efficiencies and improvements may be gained through the use of Kanban to visually manage the work flow.   Use the board to track all tasks, regardless of duration or frequency.     A daily stand-up within operations may improve communication and collaboration within operations.   A periodic retrospective may also improve learning and making process improvements.     However, I feel the application of Scrum in this predictable and repeatable work environment introduces a lot of unnecessary overhead and waste.            Log in or register to post comments",6916
"11:50 am June 21, 2016                    Thanks Timothy & all other members for your valuable suggestion. I also think that Kanban will best suit for this situation which will improve transparancy. Daily stand-up and retrospective will also improve learning, process improvement and team work.          Log in or register to post comments",6916
Log in to reply,6916
Messages,6553
"10:17 am October 8, 2015                             Hi,  As I understand that all scrum teams part of nexus do not have to have same sprint length. If so, not sure how does it work as all teams need to participate in nexus review, retrospective and next planning. Do the team members who have finished their sprint as it was shorter roll off to some other work and come back when next nexus planning starts. That must be very difficult to synchronize. Ideally I would have expected all teams to have same sprint length which I believe can be done by selecting appropriate number of backlog items from product catalog.   Any thoughts will be greatly appreciated.",6553
"09:04 pm October 9, 2015                    Let me explain you with an example:  Let us assume there is a nexus with 3 Teams T1, T2, T3.  Nexus Sprint Length: 4 weeks  T1 Sprint Length : 4 weeks; # of T1 Sprints within Nexus Sprint: 1  T2 Sprint length: 2 weeks; # of T2 Sprints within Nexus Sprint: 2  T3 Sprint Length: 1 week; #of T3 Sprints within Nexus Sprint: 4  So, although T1/T2/T3 had different sprint lengths they all gets synchronised at the end of each Nexus Sprint.           Log in or register to post comments",6553
"09:40 pm October 9, 2015                    > As I understand that all scrum teams part of   > nexus do not have to have same sprint length  I think it's more a case that each team *should* have the same sprint length, in order to avoid the inefficiencies you describe.           Log in or register to post comments",6553
"02:45 am October 10, 2015                    One of the best things about Nexus when compared to SAFe & LeSS is :  Nexus is less prescriptive.  There are n+1 number of ways to solve the inefficiencies, if any   but definitely not by making it prescriptive.          Log in or register to post comments",6553
"08:47 am October 10, 2015                    Hi Syed,  May I please ask if your explanation is based on real life example or understanding of Nexus framework?  The way you have put it, it would mean 2 Sprint planning for T2 and 4 for T3 while T1 has only 1. Not sure as Nexus guide says that Nexus spring planning does not end until individual Sprint planning of T1, T2 and T3 end. Also, there is no individual Sprint review as it  is replaced by Nexus review. That would mean that T2 or T3 will finish their sprints and jump to Sprint retrospective directly without a review. Is it really like that? I am now more confused.          Log in or register to post comments",6553
"09:59 am October 10, 2015                    Hi Kamal,  It is based on my discussions on Nexus Framework in various blogs/forums and real life implementation of other Scaled Agile frameworks, but not Nexus (not sure whether so far it got fully implemented elsewhere).   Nexus Sprint and Team Sprint(s) are entirely two different things.  Nexus Sprint Planning is like ""Release Planning in SAFe"" and of course a lot less prescriptive at the same time, including that no sprint cadence (all teams must have same sprint length of 2 weeks in SAFe) is needed.  If you are not having any idea about SAFe, then I can explain you how it could be implemented in detail in Nexus exactly based on your scenario or a hypothetical one.           Log in or register to post comments",6553
"12:16 pm October 13, 2015                    Hi Syed,  As you wrote, all teams have same sprint length of 2 weeks under SAFe and so I don't think that scenario we had applies there.  I am still not clear when Nexus Sprint planning will be over when T1 team has a sprint length of 4 weeks, T2 has for 2 weeks and T3 has for 1 week. When T1's 1st planning gets over, it has not covered other 3 weeks of work and so cannot provide all the input to Nexus sprint planning which can be completed only after all teams have finished their planning.  Further, as there is no Sprint review at Nexus level after 1 week, will T1 jump to its retrospective without having any sprint review? Same goes true for T2 after 2 weeks?  I hope that someone who has a practical experience of Nexus where teams had different sprint length can help us understand the scenario better otherwise all teams having same sprint lengths is a better approach to avoid hitting these issues.          Log in or register to post comments",6553
"11:55 am October 20, 2015                    Another issue with different length of sprints of scrum teams within Nexus. When will Nexus Sprint Review be held? Per Nexus guide, it is to be held at the end of the Sprint. As T1, T2 and T3 in the example quoted will finish their own sprints at different times, will Nexus Sprint review be held only when longest sprint is over?  I am just wondering if each team has to have same length of sprint for Nexus to align with Nexus Sprint planning and Nexus Sprint review but within it, they can have multiple shorter scrum sprints.          Log in or register to post comments",6553
"06:59 am June 13, 2016                    Nexus Guide specifically states that Nexus Sprint Review replaces individual Scrum Team Sprint Reviews (all?). With that being said it's hard to imagine how individual teams would have shorter sprints:   - Without a sprint review? That would be against the Scrum Guide.  - With a separate/internal review? I'm not very convinced to that as well.  ""A Nexus Sprint Review replaces individual Scrum Team Sprint Reviews, because the entire Integrated Increment is the focus for capturing feedback from stakeholders.""          Log in or register to post comments",6553
"12:31 pm June 17, 2016                    First of all it is exceptional to have different sprint lengths if every team can keep to the same rhythm it is ideal. In the end what is important to review is the integrated product increment from a user's perspective. Why would there be a different sprint rhythm? One I can think of is maybe a team produces some sort of interface where other feature's are user's/consumers but their use contributes to the overall increment. Maybe a service or an administrative workflow. Maybe the product is operational and these teams have things that need to go to prod quicker but still need to be part of the new increment.  Individual teams can have individual reviews if it helps with their and the overall success/value of the increment. I would not do different length sprints just because a team wants to, everyone needs to know, understand and contribute to the bigger picture or it all falls apart.          Log in or register to post comments",6553
"12:36 pm June 17, 2016                    I have also seen different sprint lengths in larger SAFe implementations. My team was the one with the different lengths we performed a 4 week sprint while every one else performed two week sprints. Then there was an incremented release review which was placed into production after 4 weeks/sprints.          Log in or register to post comments",6553
"12:41 pm June 17, 2016                    Interesting, how did the Sprint Review look like for the teams having 2 week sprints? Were stakeholders invited and did they give meaningful feedback on the (partial from the scaled perspective) increment?          Log in or register to post comments",6553
"11:56 am June 20, 2016                    I second Mark Troyan's opinion.  I can see that some teams in the Nexus could be working 'off Nexus' or just working at a different pace and not need to match the cadence of others.  Having said that, it would be a logistical nightmare to have different sprint lengths at large.          Log in or register to post comments",6553
"07:26 pm June 20, 2016                    I can imagine a team working totally off-Nexus for a couple of sprints (totally off-Nexus meaning having no common events with the other teams and no dependencies in PBIs)... however I'm interested how in practice such team would deliver a potentially releasable increment that meets the Definition of Done (or actually both DoDs). Not saying it's impossible however the work pulled into the sprint would have to be practically fully isolated from the rest of the product and there is never 100% guarantee that a dependency will not emerge in the middle of the Nexus sprint.  Apart from the above. In the example Syed Shabid Ali brought up one could ask - are teams #2 and #3 actually working as part of Nexus? Do they pull a mix of isolated PBIs and PBIs with dependencies into their sprint? If so - how to they present the latter ones on their individual sprint review - as not (yet) meeting the Nexus DoD? It might not be possible to integrate the work in the middle of team's #1 sprint thus the PBI would not meet the Nexus DoD.  Nexus Sprint Length: 4 weeks  T1 Sprint Length : 4 weeks; # of T1 Sprints within Nexus Sprint: 1  T2 Sprint length: 2 weeks; # of T2 Sprints within Nexus Sprint: 2  T3 Sprint Length: 1 week; #of T3 Sprints within Nexus Sprint: 4            Log in or register to post comments",6553
Log in to reply,6553
Messages,7201
"05:08 pm June 20, 2016                             The four things I did was   1. Read the Scrum Guide at least 4 times, understand what each sentence is trying to say.  http://www.scrumguides.org/  2. Do the Open assessments, Open Scrum, Product Owner as well as Developer until you get 100% at ease.  and  see read the explanations of the answers.  (Developer assessment is optional as it will give a broader view)  3. Take the PSM 1 Practice by Mikhail Lapshin, by far the best PSM practice exam I have seen.    http://mlapshin.com/index.php/psm-quiz/learning-mode/  on your first attempt see where you stand,   I needed to improve  4. So I read the scrum guide again did the open assessments again and paid 10$ for a week access PSM1 practice exams at  http://www.agileprojectmanagementtraining.com/agile-exam-resources/  on the first attempt I got an 85%, that's when I knew I was ready.  Then I went ahead and did the exam by Mikhail Lapshin again.  and right before I took the PSM1  I did the open assessments again as some questions come from the Open assessment.  and passed the PSM 1  ***If you can get 95% and above on Mikhail Lapshin's exam on your first attempt you are well prepared.  And most likely can skip buying assessments and take PSM1 directly. ***  I sincerely thank those that gave their experiences on passing the PSM1 and their advice.    Thank you",7201
Log in to reply,7201
Messages,7198
"04:19 pm June 18, 2016                             First of all, I would like to thank everyone in the community by sharing their experiences which help others in exam preparation. Today I passed with 93.8% first attempt .   The exam is not that difficult however there were one liner questions and options given requires the understanding of what is being asked. I think you should target for 2-3 weeks maximum. Here I will agree with comments mentioned on this forum (https://www.scrum.org/Forums/aft/1892) about Scrum Master Role. So please understand well about SM Role. Even I scored 83.3% in Coaching & Facilitation.  The exam interface was quite slow, it used to take a lot of time between two questions. I used to finish open exams on scrum within 5-10 minutes (30 question or 15 questions). Even on http://mlapshin.com/index.php/psm-quiz/  and http://mplaza.pm I used to finish 80 question in 30-35 minutes. However, here it took me almost 45 minutes just because of the exam interface. So be prepared.  I had basic knowledge about scrum framework and even not sure which certification to go choose from CSM or PSM1. But after reading few blogs I choose PSM1. I started preparing for PSM1 certification before 12 days and wanted to give exam asap.   My tips:  1)  Read Scrum Guide few times. (5 times ideally or until you understand well enough)  2)  Read The-Scrum-Master-Training-Manual-Vr1.6.pdf from Management plaza. It is free so you can download from http://mplaza.pm. (2 or 3 times ideally or until you are not happy with your open assessment)  3)  Watch videos on about scrum here http://www.scrumtrainingseries.com/. Gives you good understanding if you don't have much experience.  Start attending these tests only after your read above books couple of times at least.  4)  Attend open assessment on http://mlapshin.com/index.php/psm-quiz/ until you score between 95% - 100%. Really good questions and really good help because it is completely free. Many Thanks to Mikhail Lapshin.   5)  Attend PSM1, PSPO open assessment on http://scrum.org ( I went through PSD as well however I don't think it is necessary for PSM1 exam)  6)  http://mplaza.pm/product/psm-preparation-practice-test/   This is a really good mock exam to help in your preparation. I scored around 80-85% in three of the exams. The important stuff here is that the explanation of the answer helps you to understand the scrum.  7)   Don't over do by reading more materials. It may confuse you.   I hope my experience above will help people who are planning to give the exam.  Best of Luck!",7198
Log in to reply,7198
Messages,6901
"04:57 am June 8, 2016                              Do we have a scenario where in we have to have a component based team, feature level team may not be the best fit for the situation?  Assuming an organization is working on a mobile app that should be released on iOS and Android both. They have recruited four developers for each platform and formed two teams (2 iOS + 2 Android) and has started sprinting. There are two architects one each for iOS and Android.  For a selected PBI there may be less work in iOS and more in Android, how would you handle it? The developers are reluctant to learn about iOS/Android and vice versa. How to best optimize architect's time, shall we keep them 50% in each team?  Their DoD says a PBI should work on iOS and Android both, assuming it is done for iOS and PO wants to release it then what?",6901
"06:15 am June 8, 2016                    > Do we have a scenario where in we have to   > have a component based team  There's no scenario in Scrum where you would *have* to have a component based team, if that team is to deliver an increment which is usable and thus feature complete.  > feature level team may not be the best fit for the situation?   Feature teams are good Scrum practice, and implementing Scrum well requires deep and pervasive change.  Therefore a feature based team is rarely ""the best fit for a situation"" and we should not expect it to be so. Rather, it is the situation that must be changed in order to support feature based teams and to leverage their benefits.  See the LeSS site for a good treatment of this topic:  https://less.works/less/structure/feature_teams.html          Log in or register to post comments",6901
"07:19 am June 8, 2016                     Assuming a product has to be developed for iOS and Android both that means every feature should work on both the platform.  However the code base is different and there is no requirement of releasing at the same time i.e. if a feature is Done for iOS, let's release it. We will release the Android version later.  So shall we still keep a mix team of iOS and Android or separate teams one each for iOS and Android?           Log in or register to post comments",6901
"08:00 am June 8, 2016                    Regardless of how different the code bases are, what the release schedule is, or whether there are one or multiple teams for one or more products, why would a component team be needed in the situation you describe? Why would any team need to focus on something other than feature delivery for a particular product line?          Log in or register to post comments",6901
"08:01 am June 8, 2016                     Let me clarify - Does it make sense a team focus on iOS product line and the 2nd team focus on the Android version?          Log in or register to post comments",6901
"03:23 am June 10, 2016                    I had very similar situation some time ago. A mobile team started as one and consisted of iOS, Android and Web Developer (for mobile Web). They needed to align frequently, on daily basis, as they were working on common ground and were making architectural decisions that were affecting all 3 platforms. After couple of months they started to de-sync. Mobile Web was the fastest, then Android, and iOS being the slowest. It was caused both because of skills and technology stack. Additional devs were hired to join and 1 team split into 3. There was a QA guy who was on both (iOS and Android) teams to make sure features look the same. (Mobile Web moved into different direction).  Having only 2 people on the team was painful sometimes. It just took 1 person to get sick and weekly plan was already deprecated. But it was still better than having 1 big team where technical issues were different. After a while more people were hired and sensibility to absence issue was mitigated.  To sum up - in our case it made sense. Factors to consider:  - is feature parity between platforms a must?  - are you planning to expand teams?  - difficulty in recruiting devs familiar with both Android and iOS           Log in or register to post comments",6901
"06:09 pm June 12, 2016                    I think it might be beneficial to define the terms. When you say component team, what qualities are you describing? When you say feature team, what qualities are you describing?  For example:  When I refer to component teams, I'm generally speaking of teams divided by code layer - you have a team for the data layer, you have a team for the middleware, you have a  team for the front-end. However, I have seen the term defined as teams that work on an individual component of a product - a view in Spotify - which may cross the various layers.  When I refer to feature teams, as a UX professional, I'm referring to something a user trying to accomplish.  I would contend that, in your example, have an iOS team and an Android team is neither a feature nor a component team - they are ""platform"" teams - each dedicated to developing code for a specific platform.  As a professional developer, I would say - if the product is the same, with different platforms - the features are probably the same (or similar) and relatively easy to port between languages. Separating the teams based on platform could cause an increase in bifurcation of code - whereas having the developers for both platforms (at the very least) speaking to, and reviewing, each other's code could reduce this.  I developed an app for iOS and Android. We were on the same team. We reviewed each other's code. For some features it took him longer to develop - that was not an impediment for him nor me - in those cases, when he took on the next feature, I already had the ""case study"" for how to implement it; thereby, reducing his development burden. In a couple of cases, he was able to do the same for me.          Log in or register to post comments",6901
"03:57 pm June 16, 2016                    I am definitely for feature teams but I also understand that we need to promote self-organizing teams. So, in this scenario, what if the teams think component based structure works well for them? What should the Scrum Masters do this in such a case? Keen to hear as many thoughts as possible.          Log in or register to post comments",6901
"04:40 pm June 16, 2016                    > I also understand that we need to promote self-organizing teams.   > So, in this scenario, what if the teams think component based  > structure works well for them?  The Scrum Guide says: ""Development  Teams  are  structured  and  empowered  by  the  organization  to  organize  and manage  their  own  work.  The  resulting  synergy  optimizes  the  Development  Team’s  overall efficiency  and  effectiveness.""  A team may therefore self-organize in terms of feature delivery, or component delivery, or something else again. But which structure is the most *likely* to demonstrate ""optimal efficiency and effectiveness"" in an empirical manner, through the delivery of usable and feature-complete increments?          Log in or register to post comments",6901
Log in to reply,6901
Messages,6917
"11:48 am June 16, 2016                             Dear All,  I've recently started my PhD in organizational psychology and my research is focusing on agile practices, organizational culture, stress and resilience. I'm looking for software development team members who apply agile practices (including scrum) and are willing to devote some of their time to take part in the study.  I have a questionnaire which takes about 35 minutes to complete (I know, it's super long but the process itself can be beneficial from an individual perspective and in case you want to read the general conclusions, you can provide your email address and get a copy of the study which is expected in Q2 2017).  http://goo.gl/forms/T2CBK0hWgzzfpyeM2  If you have any questions or want to discuss the study, please contact me: doemaap at gmail  Thanks a lot,  Emese Dobos",6917
Log in to reply,6917
Messages,6914
"02:14 pm June 15, 2016                             Hello,  for the PSM test: it's possible, when the Scrum Master is a part of Developer?  Thank you",6914
"05:34 pm June 15, 2016                    From your reading of the Scrum Guide, is there any rule that would make it *impossible* for the  Scrum Master to be a member of the Development Team?          Log in or register to post comments",6914
"07:08 pm June 15, 2016                    No. But in my view the Guid the definitions not clear. Thank you!          Log in or register to post comments",6914
"10:09 am June 16, 2016                    Hi,     I think that the Scrum Master and even the Product Owner could be part of the Develpment Team.     The guide say: The Product Owner and Scrum Master roles are not included in this count unless they are also executing the work of the Sprint Backlog    And the Sprint Backlog belongs to the Development Team.     Obviously, I think is not a good idea to have the Scrum Master in the Develpment Team and even worse to have the Product Owner.          Log in or register to post comments",6914
Log in to reply,6914
Messages,6900
"12:26 pm June 6, 2016                             My Tips to pass the exam in the 1st attempt:  1.Read the Scrum Guide Thoroughly in and out each line.  2.I have practiced the mock tests from mplaza which has 3 assessment tests.(payed package)  3. And also practiced tests in http://mlapshin.com (Very Helpful, infact saved me ).  All the Best !",6900
"06:38 am June 10, 2016                    Hi Meena,  could you please share mplaza package to practice my self  Thanks  Srinivas          Log in or register to post comments",6900
"03:08 am June 12, 2016                    It would be great if you could share the package of mplaza, so I can practice as well. :)          Log in or register to post comments",6900
"12:55 pm June 15, 2016                    Meena Congratulations... Do you think only that 3 think what you did is sufficient to pass test or you read any extra material ? Also have you did did open assessment for nexus or development one?  Thanks          Log in or register to post comments",6900
Log in to reply,6900
Messages,6853
"12:45 pm May 9, 2016                             How does Definition of “Done” help to the Scrum Team?  DoD ensures artifact transparency but not inspection and adaptation ?   Can someone please clarify in detail ? thank you",6853
"01:01 pm May 9, 2016                    What do *you* think the likely impact would be on transparency, inspection and adaptation if a Scrum Team isn't clear about what ""Done"" means?          Log in or register to post comments",6853
"11:51 am May 10, 2016                    For us the 'Definition of Done' helps in several ways:  It avoids the 'done but still needs...' where maybe code is complete for example but not integrated or someone else needs to do something  It helps us on a practical front if a request comes down the line for 'a really small change that should just take x amount of time' as we can point to the definition of done and remind people there are a lot of other tasks to be done before the increment is potentially releasable even if the code change is trivial  We also get the benefit of a check list of items to act as an aide memoir similar to what happens in an airline cockpit!          Log in or register to post comments",6853
"04:31 pm May 10, 2016                    Here is what I've noticed.   A DoD that truly expresses all the work needed before a feature can be released enables the team to know if it is cross-functional and what it needs to learn to do in order to become cross-functional.  A DoD defines the effort needed to make releasable any item of work and therefore enables a team to forecast what it can complete in a Sprint.  A DoD enables a Scrum Team to build trust with the organization by making transparent what it will deliver.  Consistent adherence to a strong DoD reduces waste in the form of rework and especially rework amongst multiple teams working on the same product.  The DoD is the transparent manifestation of the Scrum Team's commitment to producing working software often. When releasable software available often, it may be released and inspected in the market. This is a foundational benefit of agility that the Scrum Team will reap by committing to creating and adhering to the Definition of Done.          Log in or register to post comments",6853
"03:25 am May 11, 2016                     Agree with Jason  As Scrum team matures it is expected to stringent its DoD.          Log in or register to post comments",6853
"07:23 am May 11, 2016                    @Jason, you phrased it so much better than me! Nice one.  One thing I've noticed to be careful of though is making sure that a) the DoD gets inspected as you move from project to project and checked for appropriateness and b) need to be careful about scrutinising what's done and being sure that yes, every part of the DoD is met. Sometime it's easy to just give a proforma once over          Log in or register to post comments",6853
"08:04 pm May 11, 2016                    The Definition of Done is a statement of group professionalism and creates organizational transparency. A Development team spurs other teams on to feats of audacious excellence. They balance their personal conviction with the needs of the organization while not compromising either. They craft a continuously higher standard of working and being. Forgive me for the exultant language, I've had a few drinks today :).  Of course, the DoD should change as the craft improves and as the development team progresses. Ideally, this progression is constantly towards higher quality, customer satisfaction, and organizational benefit. This is done primarily during Retrospective.          Log in or register to post comments",6853
"03:36 am May 12, 2016                    From the above good answers it can be seen that a DoD provides *transparency* over:  1. the work that has been done, and the level of quality thus far attained  2. the work that remains to be done in building future deliverables of the asserted quality  To the original poster's point: the first of these illustrates how a DoD can support the *inspection* of progress, while the second would allow the *adaptation* of the product to revised levels of quality.           Log in or register to post comments",6853
"11:09 am May 16, 2016                    thank you everyone.          Log in or register to post comments",6853
Log in to reply,6853
Messages,6869
"06:18 am May 16, 2016                             Hi Everyone  I'm currently looking to improve Agile processes in my organisation, I'm looking for some opinions on the following narratives (these are ideas which have been put to me), thank you in advance for your opinions and feedback:  1 - If the Product Owner owns the product, then the Scrum Master owns the process  2 - Scrum Agile can follow a strict pre-planned schedule (example: 2 week sprint, 1 week planning and other, followed by another sprint)  3 - Product Owner writes the user story through closed conversation with the client, followed by the developers and testers documenting Acceptance Criteria through discussion with the PO.",6869
Log in to reply,6869
Messages,6862
"03:09 am May 13, 2016                             Hi all,  I have a question regarding the PO role in Nexus.  If you are scaling scrum with lets say 5 teams. There is 1 PO who is  accountable for the Product Backlog.  What about the 5 separate teams? Do they all have a PO?",6862
"04:54 am May 13, 2016                    Yes, they have the same PO.  There should be 1 PO for each discrete product.          Log in or register to post comments",6862
"05:37 am May 13, 2016                     Posted By Ian Mitchell on 13 May 2016 04:54 AM  Yes, they have the same PO.    There should be 1 PO for each discrete product.  So 1 PO serving 5 teams?          Log in or register to post comments",6862
"06:12 am May 13, 2016                    What does the Nexus Guide say about this? What does it say about the Product Owner role iin relation to a Nexus of Scrum Teams, and what does it say about the duties of a Nexus PO with regard to a Product Backlog?          Log in or register to post comments",6862
"10:41 am May 13, 2016                     Posted By Ian Mitchell on 13 May 2016 06:12 AM  What does the Nexus Guide say about this? What does it say about the Product Owner role iin relation to a Nexus of Scrum Teams, and what does it say about the duties of a Nexus PO with regard to a Product Backlog?  The Product Owner is in the Nexus Integration Team.  The Product Owner is accountable for ordering and refining the Product Backlog so that  maximum value is derived from the Integrated Increment created by a Nexus. How this is done  may vary widely across organizations, Nexuses, Scrum Teams, and individuals.   It does not say anything about in the scrum teams          Log in or register to post comments",6862
"01:19 pm May 13, 2016                    The Nexus Guide also says:  ""There is  a  single Product  Backlog  for  the  entire  Nexus  and all  of  its  Scrum  Teams.  The  Product Owner  is  accountable  for  the  Product  Backlog,  including  its  content,  availability,  and ordering.""  So how many PO's do you think there should be for the various teams in a Nexus?          Log in or register to post comments",6862
"06:59 am May 14, 2016                     Posted By Ian Mitchell on 13 May 2016 01:19 PM  The Nexus Guide also says:    ""There is  a  single Product  Backlog  for  the  entire  Nexus  and all  of  its  Scrum  Teams.  The  Product Owner  is  accountable  for  the  Product  Backlog,  including  its  content,  availability,  and ordering.""    So how many PO's do you think there should be for the various teams in a Nexus?  From a Scrum perspective, every Scrum team should have a Product Owner. From a scaling perspective, does it mean that the Product Owner (who is accountable for the Product Backlog) is the same person as in the different teams?  That isn't expliciet mentioned in the guide          Log in or register to post comments",6862
"09:44 am May 14, 2016                    From your reading of the Nexus Guide, do you think it supports the possibility of having more than one Product Owner in a Nexus?          Log in or register to post comments",6862
"03:04 am May 16, 2016                    Perhaps in Nexus+          Log in or register to post comments",6862
"03:08 am May 16, 2016                     Posted By Ian Mitchell on 14 May 2016 09:44 AM  From your reading of the Nexus Guide, do you think it supports the possibility of having more than one Product Owner in a Nexus?  From reading only I do not see any support for more than 1 PO           Log in or register to post comments",6862
Log in to reply,6862
Messages,6860
"02:57 pm May 11, 2016                             Scrum Master’s Role in Spring Planning.    If Product Owner reads and explains the User Stories and team members estimate using planning poker, then what Scrum Master does in spring planning?  Assuming that team is matured in Agile/Scrum",6860
"05:50 pm May 11, 2016                    Abhay, stating that a team is mature in Agile/Scrum can imply a number of many different things.  Often, the role of the Scrum Master in any Scrum Ceremony is to ensure that Scrum is being followed.   It could be as an interested observer, or as a more involved participant in the meeting.  Some questions to consider regarding Sprint Planning (Part 1 and Part 2), and the maturity of the Development Team:  What is the relationship between the Product Owner and the team?   Is the team capable of independently meeting with the PO to solicit the upcoming Sprint offer?  Is the team willing to facilitate their own Sprint Planning Part 2 meeting?  Will they walk through each story and discuss the story readiness in comparison to their Definition of Ready?   Are they willing to engage their PO during SP2 with any questions or issues?  Do they know how to calculate and evaluate their upcoming sprint capacity?     Can they compare the offer to their current velocity, without needing to examine the offered stories or make any determination on which team member(s) will work on which stories?  Is the team considering the impact of any improvement initiative in their sprint capacity?           Log in or register to post comments",6860
"06:18 pm May 11, 2016                    Abhay, you're right that Spring Planning involves the entire Scrum team.  In short, the Scrum Master is part of Spring planning in order to accomplish her primary purpose: that Scrum is understood and enacted.  A Scrum Master primarily is present. (S)he listens, reacts to the needs of the PO and dev team, instructs, facilitates, and understands the dev teams plan. This last part is important. Crafting the Spring Goal and the Spring Backlog is a collaborative effort that consists of simple, human interaction and communication. The SM's input is crucial if an understanding of Scrum is weak or new.  Eventually, the effective SM will find his/her participation in the Spring Planning (and any Scrum event) should wane. This is IMHO the primary measure of an SM's effectiveness as it indicates the dev team has learned and is practicing self-organization and the PO has learned and is practicing effective product leadership.  Does that help? Do you have follow up questions?          Log in or register to post comments",6860
"11:48 pm May 11, 2016                    Thank you Timothy and Jason  it's great explanation.  @Jason, I like this sentence: ""the effective SM will find his/her participation in the Spring Planning (and any Scrum event) ""          Log in or register to post comments",6860
"06:40 am May 14, 2016                    The Scrum Guide states :  The Scrum Master served the DT and the PO by ""Facilitating Scrum events as requested or needed.""  I often see Scrum Teams interpreting it as ""the ScrumMaster is the facilitator of every events""  If the Scrum Team is mature, then the Scrum Master doesn't have to be the facilitator of any event.  I often introduce the ""delegate roles"" approach where each Retro is facilitated by a different member of the team. I like this approach very much to build self-organization.  When the Scrum Master is not facilitating events, she/he can perform its much more interesting and difficult duty as a true coach.          Log in or register to post comments",6860
Log in to reply,6860
Messages,6857
"05:41 pm May 10, 2016                             I work for a company that does not currently value delivery of working ""Done"" software in more than a 3 month horizon. The reason I hear most is, ""Our customers are not (currently) willing to accept updates more frequently.""  It's an uphill, coaching challenge for me as SM and Agile Coach. My activities thus far have not shifted this organization mindset.  I'm a developer, SM and believer in people working effectively in this way. I've seen it work. How would you counsel me to go about demonstrating that they actually should want to practice Scrum?",6857
"06:04 pm May 10, 2016                    This situation is quite common and it's absolutely ok to not release into production after every sprint. What we have to strive for is to have ""potentially shippable and usable"" increment at the end of each sprint. Release into production can be planned by the PO based on the agreements he has with the customers/stakeholders.          Log in or register to post comments",6857
"11:24 pm May 10, 2016                    > I work for a company that does not currently   > value delivery of working ""Done"" software in   > more than a 3 month horizon. The reason I   > hear most is, ""Our customers are not   > (currently) willing to accept updates more frequently.""   That's 3 months of risk. It's 3 months of work founded on assumptions which may not have been validated. It's 3 months of wasted opportunities to elicit feedback and to build a better product.  If the risk and the waste is low enough to be acceptable then the company doesn't need Scrum. That might be the case with simple products, but it is rarely true with complex ones.          Log in or register to post comments",6857
"07:29 am May 11, 2016                    As per the previous reply it builds up the risk so maybe you could build a case around mitigating the big panic to test and fix at the end of 3 months by doing a done drop into UAT every sprint even if the production drop is only done every three months? At least it'll all be 'done' code  I could be wrong but it sounds like there isn't regular engagement with a customer representative in this project?          Log in or register to post comments",6857
"07:31 am May 11, 2016                    Oh yeah, and kudos for your response to Definition of Done in the other forum! Liked the way you phrased it and if OK may borrow some of that wording sometime :-)          Log in or register to post comments",6857
"09:42 am May 11, 2016                    Jason,  What you can do in your situation (which is not uncommon) is to try and make visible the risk and ""negatives"" with their approach.   Ask pointed and powerful questions that can stimulate discussion and reflection.  Why is a 3-month customer feedback loop preferable to a more frequent one?  Why is accumulating code changes in 3-month batches preferable to releasing code more frequently?  What are the main reasons for customers unwilling to accept more frequent releases?     How frequent are the customer interactions?  What are some ways to reduce time and effort managing code versioning (with the current 3-month release cycle)?  Good luck.           Log in or register to post comments",6857
"02:18 pm May 11, 2016                    Thanks for the reply Ranjith. I totally get it; the goal is potentially releasable. We don't currently to even that. The impetus to change isn't there, and I'll have to expose the dysfunction of our current ways of working to reveal the improvements that are possible with this aspect of Scrum.          Log in or register to post comments",6857
"02:22 pm May 11, 2016                    We definitely have a complex product and we definitely need to mitigate risk by more frequent inspection of releasable software.  The challenge is convincing, cajoling, or persuading the organization (mainly management) to build cross-functional teams and get work done completely each sprint rather than relying on a ""search for defects"" phase a.k.a. regression testing. This is the choice to build quality in at the start rather than inspect for defects later.  This is the crux: we have too many managers, and the org likes to manage from top down. This is why being the SM in an orge with 40+ devs is hard right now.          Log in or register to post comments",6857
"02:24 pm May 11, 2016                    I completely agree, that added risk mitigation could be a primary driver for this change. Additionally, truly cross-functional teams that are allowed to self-organize would increase productivity greatly and greatly improve developer satisfaction and drive. These are things I'm preparing in short order to bring to management in a concerted effort to change things. I feel this is my professional duty in order to ensure Scrum is both understood and enacted.          Log in or register to post comments",6857
"03:16 am May 12, 2016                    > The impetus to change isn't there, and I'll have  >  to expose the dysfunction of our current ways  >  of working to reveal the improvements that   > are possible with this aspect of Scrum.  Correct. The first step in an agile transformation is often to build transparency. If people can't see problems, such as the waste that is being incurred, then they will perceive no reason to suffer the inconvenience of change. Typically, the next step is to see who cares enough about the evidence to want to improve.          Log in or register to post comments",6857
"06:29 am May 14, 2016                    +1  It remind me one day I explained Scrum to a team ion my company. I explained the goal of having potentially shippable product each Sprint. Because of that, they quickly understand they will have a LOT of work to refund their technical debt, because of their very low testing-practices.  But they were not able to see any reason to change for Scrum, because they feel ""it's kind good by now"" !  And then I asked how many time they spend each month for expedite items because of bug in production ; if the customers are satisfy ; if the rythm is sustainable for everyone...          Log in or register to post comments",6857
Log in to reply,6857
Messages,6786
"11:13 am March 31, 2016                             Hi  I'm looking for some tips about how prepare for take the PSM II assessment; especially some real world study cases.   thanks",6786
"12:11 pm April 11, 2016                    PSM II is really hard, it's about resolution of team conflict, implementation of scrum, scaling.  There is a lot of things, mixing essais and QCM questions.  You need to be sufficiently fluent in english (not my mother tong) and to manage your stress.  For me it was 34 questions and I can assure you, the 120 minutes were just enough...  I hope it will guide you to the PSM II path.  Work a lot and hard ;-)          Log in or register to post comments",6786
"06:57 am April 28, 2016                     Out of 34 how many were multiple/short answer and essay type.  BTW how much did you score?          Log in or register to post comments",6786
"04:45 pm April 28, 2016                    Hi,   it was something like : 10 QCM and 24 essays.  I scored 81%  This assessment is the most challenging, I think.  I give myself some time to read, watch, practice.  I'll test myself with PSP          Log in or register to post comments",6786
"01:06 am May 1, 2016                    Please refer https://www.scrum.org/Forums/aft/1956#10381          Log in or register to post comments",6786
"07:38 am May 1, 2016                    I agree with Benjamin, PSM II is very challenging.  PSP is a good check-point between PSM I and PSM II.          Log in or register to post comments",6786
"02:02 am May 14, 2016                    Simon Kneafsey a Scrum.org PST has launched PSM II assessment. Please see the link:  http://www.thescrummaster.co.uk/professional-scrum-master-ii-psm-ii-pra…          Log in or register to post comments",6786
Log in to reply,6786
Messages,6851
"07:09 am May 9, 2016                             I have been working on a programme which is a global implementation , the development is done using agile, we have 8 to 9 scrums, each of them are integrated and quality signed off before giving it to the region for performing integrataion testing and UAT.  My query is on the  role of test manager during product development, will he fit in with in scrum or will he be part of the shared service in scrum of scrums",6851
"12:54 pm May 9, 2016                    From your statement, integration and UAT testing are not part of the DoD for the programme; therefore, sprints do not result in items that are ready for production.  You are working with an imperfect version of Scrum.   How you decide to manage the testing and release tasks is up to you.   Ideally, these duties would be completed within the sprint.  It seems to me that the preservation of a ""Test Manager"" is simply preserving a non-Scrum role and reinforcing a phased development/testing approach.   You will continue to be challenged with such questions and issues until you figure out a way to incorporate integration and UAT within the sprint, perhaps embedding such testers within each of the 8-9 Scrum teams?          Log in or register to post comments",6851
"04:14 pm May 9, 2016                    > My query is on the role of test manager during  > product development, will he fit in with in   > scrum or will he be part of the shared service   > in scrum of scrums ...  From your reading of the Scrum Guide, do you think that test management should be handled by a Scrum Team or by another party? What are the 3 roles in Scrum? Which of them is responsible for developing an increment, and are sub-roles such as Test Manager allowed?  Must each increment that is developed be of release quality, or can there be outstanding work that is still left to be done, such as integration testing and UAT?          Log in or register to post comments",6851
"07:20 pm May 12, 2016                    I totally understand that test manager doesn't fit in a scrum, I think I have to rephrase my query  We do a product development which has 8 to 9 scrum teams and  before deploying this code in different region they need to be integrated with local systems for that region   Now when the core product uses scrum framework can't that be extended to the deployment as well for different region.   Then there would not be a need for a test manager   Ot may be this hybrid framework is for initial implementation and subsequent delta changes would use Agile in totality   Have any one of you come across this kind of scenario          Log in or register to post comments",6851
Log in to reply,6851
Messages,6859
"08:49 am May 11, 2016                             JIRA’s that was part of Sprint 1, but when the sprint was closed, these JIRA’s somehow failed to move to the next future sprint or backlog. Looking at this list you will see they are in various states, except closed, and, they are not part of a future sprint, or backlog. Therefore, something must have gone wrong when we closed the sprint.  This same situation exists for the 2 sprints after Sprint 1. Would you perhaps know or have some insights into why this has happened, or how we can stop this from happening?",6859
"10:45 am May 11, 2016                    Do you have a Scrum Master?   Do you hold retrospectives?           Log in or register to post comments",6859
"12:12 pm May 11, 2016                    Luvo, this sounds like an Atlassian help issue, and not something Scrum-related for this forum.          Log in or register to post comments",6859
"02:30 pm May 11, 2016                    Luvo, I agree with both Ranjith and Timothy.   If you haven't already done so, ask the Scrum Team to solve the problem. They should be encourage to self-organize to solve their own problems if they are to become a happy, hyper-performing team. If you are on the Scrum Team and need help, definitely reach out to Atlassian. There support forums are generally pretty good:  https://www.atlassian.com/resources/support  If you continue to have problems and are at your wits end, you can email me at jason dot knight at vitals dot com. I'll see if I can help you.          Log in or register to post comments",6859
Log in to reply,6859
Messages,6854
"11:31 am May 10, 2016                             Hello  I would like to know if there is a way for me to post a blog article on Scrum.org. It is highly relevant and I think could be useful for everyone.  Thanks  Guy",6854
"11:50 am May 10, 2016                    Thank you for your interest in Scrum and Scrum.org! We appreciate and commend your desire to contribute your article to the greater Scrum Community using our blog as a platform. However, at this time, our blog is only available for article contributions from our Professional Scrum Trainers. If you have written a relevant Scrum article, you may feel free to post its content right here on the Scrum.org Community Forums.     Note: Should you have any interest in becoming certified as a Professional Scrum Trainer, you may find more information as well as application links here: https://www.scrum.org/About/Work-With-Us/Trainers    Thank you and enjoy your day, Guy.          Log in or register to post comments",6854
"08:51 am May 11, 2016                    Ok, thanks.  I wrote my blog article on Linkedin and I posted a link from the forum.          Log in or register to post comments",6854
Log in to reply,6854
Messages,6858
"08:49 am May 11, 2016                             Hello  If you are looking for a way to improve the standard burndown chart so it shows information about the scope of the sprint, I just wrote a blog article on Linkedin about it:  https://www.linkedin.com/today/post/article/improved-burndown-chart-sco…  I hope this can help some of you with your teams!  Guy",6858
Log in to reply,6858
Messages,6856
"05:08 pm May 10, 2016                             Please guide to  prepare  for PSD.",6856
"05:38 am May 11, 2016                    First steps :  Read a few of the recommend books (especially Refactoring ; TDD ; Continous Integration)  https://www.scrum.org/Courses/Professional-Scrum-Developer/PSD-Subject-…  and take the different Open Assessment.  https://www.scrum.org/Assessments/Open-Assessments           Log in or register to post comments",6856
"07:33 am May 11, 2016                    Attend a PSD course ;-)          Log in or register to post comments",6856
Log in to reply,6856
Messages,6855
"01:27 pm May 10, 2016                             I am doing my master degree in software engineering and had a agile course last year. I just passed the PSM I certification yesterday. Right now, I have a lot of classes about project management, human resources and project estimations to eventually become a team lead. My current team lead has a PMP certification and acts as the product owner for our software.  I was wondering about the PSPO certification and if it had any value in my case or if the PSM I certification is enough.",6855
"04:19 pm May 10, 2016                    I would suspect strongly the course would be valuable for you, though consider my bias and my caveat. I'm soon to be a Professional Scrum Trainer and have not taken the course personally; however, I've interviewed several people who have taken it and all so far report a great experience that helps them professionally.  I strongly suspect you will find value there given both what you describe as your near term professional course and the current software development environment.  I would encourage you to take the Open (free) PSPO assessment to see the sort of things you will be taught:  https://www.scrum.org/Assessments/Open-Assessments  Also, find a course that seems viable based on your needs:  http://courses.scrum.org/classes/title/professional-scrum-product-owner  Then, reach out to the trainer who will teach the course, and reach out to them:  https://www.scrum.org/Find-a-Scrum-Trainer  Ask them your hard questions. Ultimately, I believe this approach will help you more effectively answer your original question. You'll have more confidence in the value you personally are likely to get.          Log in or register to post comments",6855
Log in to reply,6855
Messages,6835
"04:58 am April 29, 2016                             Hello!   Small question for you guys/girls, what does the sprint backlog consist of?  I can't get a clear vision of this,  scrum source says that it contains userstories, while other sources say it contains tasks.  Thanks for your help.",6835
"02:11 pm April 29, 2016                    The Scrum Guide states that the Sprint Backlog consists of ""items"".   It makes no determination whether those items are stories or tasks.  I would be wary of other sources that may contradict what is stated in the Scrum Guide.   Many of those alternative sources have been proven to contain misinformation.          Log in or register to post comments",6835
"03:14 am April 30, 2016                     As per the Scrum Guide - The Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and realizing the Sprint Goal.          Log in or register to post comments",6835
"03:28 pm April 30, 2016                    I dont understand you guys. He is asking a question for a exam that costs a lot of money. And you guys are giving him answers that dont answer his question.  Now to OP. In the product backlog they are user stories. In the sprint backlog they are tasks.  Correct me if i am wrong someone.          Log in or register to post comments",6835
"10:19 am May 1, 2016                    The stories that have been committed to by the development team for the sprint, along with their tasks and estimates (at least for the first few days), high level understanding of how the team will go about delivering these stories. If you use a tool like jira, you move selected  stories from the backlog to the section under sprint. If you are using a physical board and using user story maps, this will be stories moved from the story map to the sprint task kanban board. Hope this helps.          Log in or register to post comments",6835
"06:58 am May 2, 2016                      scrum source says that it contains userstories, while other sources say it contains tasks.   As soon as you break down your user stories you end up with tasks. So I consider both as correct. I would even go a step further and add bugfixing tasks (from previous sprints) to the sprint backlog to make them transparent.  Cheers  Joerg           Log in or register to post comments",6835
"06:32 pm May 4, 2016                    Great question, and yes it can be hard to sort through the many sources out there. I would highly recommend keeping http://scrumguides.org/scrum-guide.html on speed dial if you ever have a question.  In short, the Sprint Backlog consists of Product Backlog Items and a plan to accomplish them.  Elaborating just a bit, these PBI's have been selected from the top of the Product Backlog by the Development Team based on their forecast for what they think they can make ""Done"" in a Sprint. ""Done"" means complete according to their Definition of Done (also in Scrum Guide link above). The plan can be whatever the development team chooses to create e.g. a list of tasks, a set of stickies on the wall, a gantt chart, a seven-panel comic. The point is that they provide a transparent look at their approach to the Product Owner and the Scrum Master so that daily inspection and adaptation can easily occur in the Daily Scrum.  Does that help?          Log in or register to post comments",6835
"06:36 pm May 4, 2016                    I presume he's taking a Scrum.org exam? If so Sanjay's answer is correct.   ""The Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and realizing the Sprint Goal."" - The Scrum Guide  Anything else mixes in common, industry practice or personal opinion.          Log in or register to post comments",6835
"09:03 am May 6, 2016                    > I presume he's taking a Scrum.org exam? If so Sanjay's answer is correct.  >  > ""The Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for > delivering the product Increment and realizing the Sprint Goal."" - The Scrum Guide  >   > Anything else mixes in common, industry practice or personal opinion.  Correct. The Product Backlog *might* be represented by user stories (and often is), while the Sprint Backlog *might* include tasks for implementing the selected items (and often does).  Scrum is a framework. It isn't prescriptive enough to mandate either user stories or task specification, nor should it be.          Log in or register to post comments",6835
"11:37 am May 10, 2016                    The way we do it the product backlog consists of user stories. The user stories have an associated story point size. We'll look at how many of those stories (PBI's, product backlog items) we can take into our sprint based on our average velocity and when we do detailed planning we break those stories up into tasks so our sprint backlog has the PBI's we are doing that sprint and the associated tasks. As we go along and learn more about the story we may add further tasks to a PBI in the sprint backlog.          Log in or register to post comments",6835
Log in to reply,6835
Messages,6850
"12:01 am May 9, 2016                             Hi everybody !!!  - I have a trouble in project management by SCRUM, I hope everybody help me solve it, thanks alot  - When can I make plan and estimate general of entire project ? Becuase I must to give information about deadline and cost of project to customer as soon as possible, I can not make plan and estimate in begin of each sprint so I don't know duration of project",6850
"12:47 pm May 9, 2016                    Thinh,  Your inquiry leads to many more questions that in my mind need to be answered/addressed:  1)  How many team(s) will be working on the project?  2)  How long are the sprints?  3)  How long have the team(s) been working together?   Does each team have an established velocity based on previous sprints?  4)  What does the DoD look like for the team(s)?   Is there work needed outside of the sprint for production release?  5)  Has the project scope been identified?   Has this scope been broken down into items that the team(s) feel can be completed according to the DoD within a sprint?  6)  Have the team(s) estimated the project items?  7)   Have the project items been prioritized in order (must have's, nice-to-have's)?  This is only the beginning of the information and preparation you would need in order to begin forecasting a potential delivery date.  I look forward to your response.           Log in or register to post comments",6850
"04:23 pm May 9, 2016                    > When can I make plan and estimate general of  > entire project ? Becuase I must to give   > information about deadline and cost of project  >  to customer as soon as possible,  Where is the desire to use Scrum coming from on this project? Who wants to use it and why?          Log in or register to post comments",6850
"10:31 pm May 9, 2016                    I want to forecast how long project will be, so  that I can answer deadline to customer          Log in or register to post comments",6850
"10:32 pm May 9, 2016                    Thanks Timothy !!!          Log in or register to post comments",6850
"11:28 am May 10, 2016                    It may be useful to you to have a look at burndown (or burn up) charts. If you have an idea of the number of story points in the release and the average velocity of the team you can then project an end date. That being said if you're looking at being more accurate on end etc then you may wind up having to descope some story points (or with luck bring extra in!)  Either way I'd suggest a look at burndowns and sites such as https://www.mountaingoatsoftware.com/agile/scrum/release-burndown            Log in or register to post comments",6850
"11:29 am May 10, 2016                    Thinh,  Following Ian's point, what is your motivation for using Scrum to forecast the project?  Also, can you provide answers to the questions that I posed to you?          Log in or register to post comments",6850
Log in to reply,6850
Messages,6846
"07:02 am May 7, 2016                             Hello   My organization would start adopting scrum and I did the PSM recently to get acquainted to it.   I was asked by my manager to present a first hand awareness session to couple of our senior managers.  My organization follows old style and I am sure I will face lots of resistance in that presentation. My ask is.   a) Some good suggestions that I can include to convince that scrum is a better way and also to convince not to modify scrum. ( I was told during a conversation couple of days ago that actual scrum looks like a theory).  b) Do you think it would be a good idea to include methods of agile planning/estimation, release planning for minimum marketable feature etc after couple of iterations(Scrum does not talk about these).  Cheers..D",6846
"11:28 am May 9, 2016                    Scrum isn't theory.   There are many real-life examples out there - just search ""Scrum success"".  Please do not take offense Deep, but if your organization is looking to an inexperienced Scrum Master to justify the value and use of Scrum, then unfortunately your company's Agile initiative is doomed from the start.  You need experienced Agile practitioners, preferable Agile coaches, to guide your executive management.   The ""buy-in"" for Scrum should have actually been agreed to by your senior management prior to any training.  Good luck.          Log in or register to post comments",6846
"12:33 pm May 9, 2016                     Hey Deep  If are based out at India and in Delhi/NCR then I can help you on free :-)          Log in or register to post comments",6846
Log in to reply,6846
Messages,6845
"05:11 pm May 6, 2016                             Hello,  I'm interested in applying Scrum to the project development process in a non-software/IT industry. I come from the commercial solar project development world, where cross-functional team members work together to design, finance, and construct large-scale solar projects. I see substantial upside for Scrum to improve how work is done. Can anyone share any experiences/take-aways when applying Scrum to non-software/IT environments? Appreciate the insight.  Dennis W",6845
"06:50 pm May 6, 2016                    I should also note, I was inspired after reading Jeff Sutherland's book on Scrum and have since obtained my CSM. However, I've been having a hard time finding practitioners outside of the software/IT world for shared experiences...  Thanks for any guidance anyone can offer!          Log in or register to post comments",6845
"09:48 am May 8, 2016                    Hi Dennis  sorry this is not going to be a short answer.  We have a good deal of experience of using Agile methods in non-software environments but also believe it is not always possible or sensible to do so and explain our reasons [code]<a href=""http://www.pmis-consulting.com/when-agile-cant-be-used-on-projects/"">here</a> [/code]          Log in or register to post comments",6845
"01:23 am May 9, 2016                     I don't have any experience in applying Scrum in non-software industry but I am ready to work as a volunteer for this initiative.          Log in or register to post comments",6845
"11:04 am May 9, 2016                    Kevin, thanks for the link - very helpful article. On point for what I've been looking for re: large capital-intensive projects, which traditionally take the waterfall approach. It makes sense that certain principles can be used/adapted while others are best left alone. Thank you for posting! (PS your PMIS site seems to be blocking user comments to your article..)          Log in or register to post comments",6845
Log in to reply,6845
Messages,6849
"01:40 pm May 8, 2016                             Hi to All  I just pass my PSM I and what to tell how I prepared myself  read the Scrum Guide  --- at least 5 times... understand each line (believe me devil is in details :))  open assessments (do it until reach 100% almost every time ) DO all 4 of it ..even Nexus   https://www.scrum.org/Assessments/Open-Assessments  do scaled scrum open assessment as well  https://www.classmarker.com/online-test/start/?quiz=7rt5464b55300026  I found that this site is also gr8 for testing purpose  http://mlapshin.com/index.php/psm-quiz/  NOTE :   during test be careful to not accidentally  hit ""Save and Finish"" button (happened to me first time :( )... It it to close and after hour of answering you are getting less careful   Final note :  we are doing scum in company but after this I understand what we can do to do it better :)  Good luck to all",6849
Log in to reply,6849
Messages,6844
"02:03 pm May 5, 2016                             Hi,  I have a few clarifications. I find these a bit ambiguous.  can the sprint goal change during the sprint ?  does the Product owner actively help the scrum master in removing impediments.  can new work be added to the sprintBacklog during the sprint?  Are scrum's roles,artifacts,events and rules immutable?  regards,  Ramya",6844
"04:08 pm May 5, 2016                    It should not change. If the Sprint goal becomes invalid, then the Sprint is canceled. This is a destructive process that results in a good deal of waste, so it is rarely done. If the business model is unstable and results in changing priorities, consider a much shorter Sprint e.g. 1 week. If the work is largely unplanned in nature, Scrum might not be the best since it assumes a certain level of stability.  Anybody on the Scrum team may remove an impediment, though it remains the Scrum Master's job to be responsible for serving the Development Team this way. Many times, the SM will need to partner with the PO or developers in order to remove impediments.  Work can absolutely be added to the Sprint Backlog so long as the Sprint Goals is not threatened. Be sure to be transparent and communicative with the PO, since it's their responsibility to maximize the value of the Development teams work.  If you're asking, can the nature of the roles change, the answer is, ""Not if you are to continue using Scrum."" Scrum is specifically defined and requires each aspect of it's events, roles and artifacts as they are interdependent. However, as teams gain master of the principles of agility Scrum teaches, they may reach a state where they will desire to transcend Scrum. This is ultimately the goal of Scrum IMHO, to provide a practical working on of agility such that it may be used to improve the profession of software development.          Log in or register to post comments",6844
"10:24 am May 6, 2016                    > does the Product owner actively help the scrum master in removing impediments.  Yes, but think of it this way: the PO must actively help to maximize the team's delivery of value.  If the Scrum Master needs the PO's help to remove an impediment, then the PO would be wise to consider the impact of a failure to help on the value which can be produced.          Log in or register to post comments",6844
"02:26 am May 7, 2016                    Thank you, Jason and Ian. its clear now. And I passed PSM1 with 93.8% :)          Log in or register to post comments",6844
"02:28 am May 7, 2016                    As we work through a sprint, the development team might find the work more complex than anticipated or the estimated time falling short in which case we can work with PO to clarify scope for the sprint.  Is it fair to say - that's an example of change in sprint goal, or is that an expected adjustment to delivery in a specific direction/functionality/most useful items? I am keen to hear any thoughts on these.          Log in or register to post comments",6844
Log in to reply,6844
Messages,6803
"06:26 am April 9, 2016                             Hello,  I have an interview coming this week and they have set a hypothetical practical exercise where one of their clients is experiencing a problem with their app and for the candidate to present a suitable solution to improve user experience given various technical constraints. I'm wondering how the problem could be approached - tools, exercises, deliverables, check-lists, etc.  Ordinarily I would list and prioritize the biggest pain points and business risks and then work with the team to brainstorm possible solutions and work through each to determine our collective, best approach. From there I'd work through technical feasibility and implementation which would naturally initiate development once we are all happy to go ahead. I think it's safe to say that they are looking for more rigour in the approach and I'm wondering what they may be looking for.  Any help would be much appreciated!",6803
"02:13 am May 7, 2016                    Hi,  The interview could be subjective ( where people might expect a right answer as per their expectations) - but i would consider adding an approach where one of the interviewer's volunteers as a client where you effectively whiteboard challenges with the product, build a product backlog as a starting point          Log in or register to post comments",6803
Log in to reply,6803
Messages,6830
"06:13 am April 26, 2016                             Hello,  A while ago I was reading about some general rule of thumbs for Scrum and found one that said something about the amount of time a Product owner and his team would have to allocate as a percentage of the time spent by the developers.  Unfortunately I didn't remember what the percentage was and I can't find the article anymore.  Has anyone heard about such a number or maybe someone can give me an estimate based on personal experience?  Thanks in advance,  Greetings Martin",6830
"11:13 am April 26, 2016                    Martin, what does the Scrum Guide say about the % of time a Product Owner and Scrum Team should spend on refining Product Backlog items?  I am assuming your inquiry is about time spent around grooming, since you don't specify that activity in your question.  Also, you refer to the Product Owner and his team, and I am assuming by ""team"" you are referring to the Development Team.  http://www.scrumguides.org/scrum-guide.html#artifacts-productbacklog           Log in or register to post comments",6830
"11:20 am April 26, 2016                    ???  Depending on the context, this percentage will evolve... If the team just hired new developers, the PO should spend more time with them for example.  If the PO feels he is spending too much time with developers, he should tell them during the retrospective. And try to find solutions during this event (increase clarity of items in backlog during the Sprint Planning meeting for example).          Log in or register to post comments",6830
"04:33 am April 27, 2016                    The mandatory time a PO needs to spend with the development team can be determined by adding up the times for Scrum-meetings the PO needs to take part (however, these meetings are timeboxed and could take less time).  I do not know of a general rule of thumb a PO needs to spend with the team on top of that mandatory meeting time (and I doubt that such a rule makes sense). It heavily depends on the project, the maturity of the development team, the maturity of the Scrum process, etc.           Log in or register to post comments",6830
"06:51 am April 28, 2016                     If it is just about the Refinement then it should not be more than 10% of the time.  A PO should be available for answering queries related to requirements, business value etc. In case of non-availability of PO, Dev Team can take the decision to best of their knowledge.          Log in or register to post comments",6830
"07:23 pm May 4, 2016                    Those using grooming, just search google with the term ""grooming"" to see why grooming was changed to ""refinement."" It's a good change :).  The Scrum guide establishes no rule or timebox for refinement. All it says is that, ""Refinement usually consumes no more than 10% of the capacity of the Development Team. However, Product Backlog items can be updated at any time by the Product Owner or at the Product Owner’s discretion."" - http://scrumguides.org/scrum-guide.html  Do what you need to in order to make good release decisions and productive Sprint Planning events. Consider that refinement changes over time as the product is better understood or as the market changes.  Does that help?          Log in or register to post comments",6830
"06:42 am May 5, 2016                    What evidence could you observe if the PO doesn't work enough time with the Dev Team ?  What evidence could you observe if the PO does work enough time with the Dev Team ?          Log in or register to post comments",6830
"09:45 am May 6, 2016                    > Unfortunately I didn't remember what the percentage was and I can't find the article anymore.  In all seriousness, perhaps that is just as well. Wouldn't it be better to empirically determine the ""right"" amount of time through a self-organizing team, rather than by seeking a dubious rule of thumb that has fallen into decay?          Log in or register to post comments",6830
Log in to reply,6830
Messages,6834
"02:21 am April 28, 2016                             Can you use diagrams in Scrum? Could it be useful or simply not allowed? Where is this defined in Scrum?",6834
"05:12 pm April 28, 2016                    Scrum does not specify methodologies or technology to develop great software. Neither how you are supposed to design and/or document your software. It is up to your scrum team. :)  I like, as an example, when I see my teams using UML diagrams to clarify their ideas and find common sense. Used that way increases transparency.          Log in or register to post comments",6834
"06:55 pm April 28, 2016                    +1  Scrum does not prescribe a particular method of technique. Teams are free to choose the ones that work well for them. I had been in teams that used uml heavily to communicate design and ideas and also in teams that almost had no clue about UML. And all these teams still were able to deliver.          Log in or register to post comments",6834
"07:18 pm May 4, 2016                    Take 2 UML and call me in the morning :). Seriously, this the beauty of Scrum. Within the transparency, inspection and adaptation of an empirical process framework, you have complete freedom to try out whatever you want!  Take a moment to revel in the freedom and creative liberty....ahhhhh!  Use this freedom to encourage developers to scratch their itch for UML. The Scrum Master should be faithful to observe the effect of the new activity and measure it's effect. During the retrospective, the effect is examined and found to be helpful, neutral, or a hindrance. The developers decide to continue, adapt, or jettison the new practice. What an ecstasy of self-actualization!  If UML is being foisted on the developers, the SM should step in. He/she should look to the source of the well-intentioned if misguided request and search for the objective or goal of the request. If necessary, he/she should consider taking the accountability on him/herself and ask the team to satisfy the need in their own way. This is the SM being the heat shield for the team. If the UML ask is harmful interaction with the team, the SM coaches the asker, teaches why the ask is harmful, or ultimately says (in the voice of Gandalf) ""You shall not pass!!""  Does that help?          Log in or register to post comments",6834
"09:35 am May 6, 2016                    Go to this scrum.org page and scroll to the bottom. You will see an example of a diagram being used.  http://courses.scrum.org/classes/show/3418  A couple of things to note:  - The diagram isn't UML, but it could have been. Perhaps in this case UML was unnecessary.  - The diagram provided context for a value-generating time-bound activity which has now been completed.          Log in or register to post comments",6834
Log in to reply,6834
Messages,6831
"10:15 pm April 27, 2016                             i got wrong this question in the open exam for PO and I just want to be clear...  The question were:  A Product Owner is entitled to postpone the start of a new Sprint after the conclusion of a previous Sprint for the following reason:  my answer:  The Product Owner has not identified a Sprint Goal.  The correct one:  There is no acceptable reason. A new Sprint starts immediately after the conclusion of the previous Sprint.  I just can't understand why that is correct. I mean, it is not posible a PO with some Product Backlog he has to review to see next but he or she is validating against the stakeholders even after sprint review because in the Sprint review the stakeholders were a kind of undecided about what to do next.  I don't understand WHY IT HAS TO start the Sprint immediately one sprint ends I think the Scrum Guide it is not too much clear about.",6831
"06:41 am April 28, 2016                    This is from Scrum Guide - ""A new Sprint starts immediately after the conclusion of the previous Sprint."" This is a recommendation you can do whatever you want but then you are doing Scrum.  As a PO I am responsible for making sure that I have Product Backlog ordered for the upcoming Sprint. There can always be some changes, based upon the stakeholder's feedback during the Sprint Review but those should not stop me from starting the Sprint with whatever information I have.           Log in or register to post comments",6831
"08:30 am April 28, 2016                    I agree. The team can already start to work on the highest prioritized issues, no matter if a Sprint Goal has officially been decided upon or not.          Log in or register to post comments",6831
"10:56 am April 28, 2016                    If I think about in that way it makes sense !, thanks          Log in or register to post comments",6831
"06:35 am May 1, 2016                    Suppose after the end of the current sprint (end of the Sprint Retrospective) you delay the start of the new Sprint (Sprint Planning Meeting).  What will the Dev Team do before the new Sprint Planning Meeting ?          Log in or register to post comments",6831
"12:50 pm May 1, 2016                    According to the Scrum Guide the sprint starts immediately after the previous one. There is no delay. However, if putz of whatever reasons there was no time for a sprint planning yet, I would let the team work in the next prioritized items in the product backlog or let them so some backlog refinement, work on actions resulting from the retrospective, etc. Usually there is always something useful to do 😉          Log in or register to post comments",6831
"06:41 pm May 4, 2016                    I'm glad this is becoming clearer for you :).   Consider also the lesson this is teaching. Namely, the team's time is valuable to the company and some forethought is required to maximize the value the team creates. PO planning and vision is important and should not hold up the constant value creation of the team.   The planning needed is not be extensive; just enough to keep the team rolling, focused and at a sustainable pace.          Log in or register to post comments",6831
"09:20 am May 6, 2016                    > ...a PO with some Product Backlog he has to review to see next but he  > or she is validating against the stakeholders even after sprint review  > because in the Sprint review the stakeholders were a kind of undecided  > about what to do next  That is one of the many unacceptable reasons for delaying a sprint.  A Product Owner is responsible for managing stakeholder involvement, and the release of value to those stakeholders, in a timely fashion. If the Product Owner is not prepared for the next sprint then he or she is remiss in the duties expected of that role.  There may be an ""acceptable"" reason for a Nexus to delay a sprint, in so far as scrumbling might be needed, although it is a non-canonical practice.          Log in or register to post comments",6831
Log in to reply,6831
Messages,6832
"02:08 am April 28, 2016                             Is this because the prod code has not been checked in or the prod code does not exist yet or because automated test harness has to ran?   I would incline to say prod code does not exist ... thoughts?",6832
"04:53 pm April 30, 2016                    What do you understand by TDD?          Log in or register to post comments",6832
"02:34 am May 2, 2016                    TDD is test driven development. The question was very ambiguous. When I work in a TDD environment I checkin.my unit test first. It fails because I have not checked in my prod code.           Log in or register to post comments",6832
"09:30 am May 2, 2016                    Hi Am,  A couple of days ago I came across the following post on Uncle Bob's blog. Maybe it will provide you with the answers you are looking for: http://blog.cleancoder.com/uncle-bob/2016/03/19/GivingUpOnTDD.html   A test first approach requires that the tests should be written before proceeding with the actual code. In short you should follow the principle ""Red-Green-Refactor"".          Log in or register to post comments",6832
"09:51 pm May 2, 2016                    A test first approach means that you write tests before you write the code. It doesn't mean you check in the tests before writing code.  Write your test, write code for it. Write more test, and write the code. Repeat that until the task is done, and then you check in the whole code. ;)          Log in or register to post comments",6832
"07:31 am May 6, 2016                    Let me try structuring the answer better...  In TDD we write ONE test first (not tests (pl)), we see it failing, we write the minimum code for the test to pass. If it passes, we ask ourselves a question: is there anything in what's just been written that needs to be re-factored? If so, we do the refactoring trying to keep the unit tests (pl) passing. When everything is green, we start with next test.  Once you completed one ""loop"" of TDD, nothing blocks you from committing your change so that it is visible to everyone. Yes, you CAN and in some circumstances you even should commit the unfinished work, as long as the tests are green. There is no rule requiring you to wait until ""the whole story is completed"", etc. But there is also no strict rule that you must commit after EVERY loop.  Other thing is, depending on the version control tool you are using, commit may have different meaning for you. In Git, for example, you commit to your local repository and it is actually the ""push"" command that causes your changes to appear in the main repository so other can see them. For this thread, I assumed the word ""commit"" means ""make change visible to everyone"".  Piotr           Log in or register to post comments",6832
Log in to reply,6832
Messages,6435
"07:01 am July 12, 2015                             Dear people,  I made the PSM 1 exam and unfortunately failed by scoring 83%. The graph provided by Scrum shows that I scored bad on the self steering / self organizing team topic with a score of 71%.   I was looking for more information about self organizing teams, but I can't find much in the scrum guide or on this forum.   Can anyone give me some tips in where I can find more material related to self organizing teams in Scrum?  Thanks in advance!  Regards,  Robert",6435
"12:24 pm July 13, 2015                    Robert,  Each section is covered in the material in PSM here.  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…  Michael          Log in or register to post comments",6435
"09:03 am July 14, 2015                    I was not aware, thanks Michael!          Log in or register to post comments",6435
"08:05 am May 4, 2016                     Have you attended a PSM I class?  Scrum.org trainers cover a lot of case studies and activities based upon self-organization and cross-functional, it will be really helpful.  Note - I am not associated with Scrum.org in any form on selling their course :-)          Log in or register to post comments",6435
"02:23 pm May 4, 2016                    I would add a short, inspirational video that presents the concept of self-organization very powerfully:  https://www.youtube.com/watch?v=APD7oQ3xrSA  Harrison Owen in the creator of Open Space Technology. It's one of the purest expressions of self-organization I've found. The purity helps to strip away old style Taylorism in software project management from thinking. As such, it's pretty challenging.  Do read the books recommended to you above. Here's a short video from the author of ""Drive"" to get you on your way:  https://www.youtube.com/watch?v=APD7oQ3xrSA          Log in or register to post comments",6435
"06:58 pm May 4, 2016                    Kids playing soccer are actually very good at self organisation 😉           Log in or register to post comments",6435
Log in to reply,6435
Messages,5645
"07:58 am November 19, 2013                             Hi all,  I’m curious in how many of you all have the following issue.   Step 1: Backlog Refinement Session.  Step 2: Sprint Planning Meeting  Step 3: Sprint!  Step 4: Backlog Refinement Session.  Step 5: Sprint Review     5.1: stories accepted so it goes to “User Acceptance Testing phase” (UAT)  Step 6: Sprint Retrospective  Step 7: Sprint Planning Meeting  Step 8: Sprint!  During step 8 while the team is ‘sprinting’, the outcome of the UAT are more User Stories.   Nothing wrong with that, but here comes the “problem”:  All new stories created, which arises from the UAT, usually have such a high priority that it needs to be fixed/ implemented immediately. In other words, drop the stories in the current Sprint and work on the new stories.   Note: the Sprint Review is already 4 hours. The PO has told the team that he is not able to come up with new Stories DURING the Sprint Review. For that, he needs to take his time to browse over the stories…   Anybody experience with this way of working?",5645
"08:04 am November 19, 2013                    Hello,   I notice that many teams are experiencing similar problems.  The problem is that your Definition of Done is not complete. You still have remaining work left (UAT). So by the end of the Sprint actually you don't have a useable increment of Product.  You should encourage the Scrum Team to do their best to include UAT into the Sprint, that's the Goal.           Log in or register to post comments",5645
"08:20 am November 19, 2013                     Posted By Illya Pavlichenko on 19 Nov 2013 08:04 AM  Hello,     I notice that many teams are experiencing similar problems.    The problem is that your Definition of Done is not complete. You still have remaining work left (UAT). So by the end of the Sprint actually you don't have a useable increment of Product.    You should encourage the Scrum Team to do their best to include UAT into the Sprint, that's the Goal.   Hi Illya,  Thanks for the quick response.  In my opinion the stories that the team delivers are potential shippable. The “problem” is that when we push our deliverables into “Acceptance” phase, new stories arises that (most of the time) has higher priority than the stories in the current Sprint.   As a result, the PO wants the Development Team to work on the new stories instead of the ones in the current Sprint.  I’m not sure if it's a matter of completing the teams DoD.           Log in or register to post comments",5645
"08:29 am November 19, 2013                    The dev team can always refuse to insert the new stories mid-sprint. They own the sprint backlog.  What Illya is suggesting is to incorporate the Acceptance phase into the sprint. The PO could be inspecting the stories before the sprint review so that s/he has the new stories before sprint planning not after.  This is a requirements problem. The PO needs to understand that even if he trades these more important stories for other stories in the sprint backlog (and the team agrees to do this) there is an overhead cost in that planning has already occurred for the stories s/he's taking out, and planning needs to be done ad hoc for the stories being inserted.          Log in or register to post comments",5645
"08:30 am November 19, 2013                    The stories are potentially shippable by the end of the Sprint if you can deploy them production. There should be no remaining work left.   Does your PO invite all key stakeholders including business users to the Review meeting? Maybe that's the case if he/she does not. The output of the Review should be an updated Product Backlog.          Log in or register to post comments",5645
"08:49 am November 19, 2013                     Posted By Robert du Toit on 19 Nov 2013 08:29 AM  The dev team can always refuse to insert the new stories mid-sprint. They own the sprint backlog.   The Development team can indeed refuse insertion of new stories in their Sprint, but the PO has the authority to cancel the entire Sprint. I want to make sure that it’s going to be a Development vs. PO thingie.   What Illya is suggesting is to incorporate the Acceptance phase into the sprint. The PO could be inspecting the stories before the sprint review so that s/he has the new stories before sprint planning not after.   This is actually my suggestion towards the team as well. The only thing we need to encounter is that these “sneak-preview” moments are just for looking. If bugs are found, fine it needs to be fixed, if new features arises due to these sneak-previews new stories needs to be created. This does make the ‘Acceptance Criteria’ even more important than ever! Plus the team needs to be “strong” enough to stand up against a dominant PO in our case. Especially if your team consists of junior developers.   This is a requirements problem. The PO needs to understand that even if he trades these more important stories for other stories in the sprint backlog (and the team agrees to do this) there is an overhead cost in that planning has already occurred for the stories s/he's taking out, and planning needs to be done ad hoc for the stories being inserted.  I often show this picture to our PO. Love it!  http://whatsthepont.files.wordpress.com/2013/09/20130903-233825.jpg          Log in or register to post comments",5645
"08:54 am November 19, 2013                     Posted By Illya Pavlichenko on 19 Nov 2013 08:30 AM  The stories are potentially shippable by the end of the Sprint if you can deploy them production. There should be no remaining work left.     Does your PO invite all key stakeholders including business users to the Review meeting? Maybe that's the case if he/she does not. The output of the Review should be an updated Product Backlog.  Yes, all key stakeholders are present during the Sprint Review.  When the stories are presented, the stakeholders usually “plays” with the implemented features. As a result, it’s either a Go or No go.   No goes refers to findings that are found during the review session. Usually when a story is presented that doesn’t match the Acceptance Criteria or fatal error occurs.   In our case, most stories gets the green light. The problem occurs when the stories are put into Acceptance phase, new stories occurs. These new stories usually have a higher priority than the stories in the current Sprint.           Log in or register to post comments",5645
"09:06 am November 19, 2013                    So how does the Review session differ from the Acceptance? Why doesn't Review session generate a list of new stories/requirements/desirements?          Log in or register to post comments",5645
"09:20 am November 19, 2013                    > In my opinion the stories that the team delivers are potential shippable.  That's fine, because the Definition of Done should be robust enough to ensure completed stories are *potentially* shippable. However, it's the PO's opinion that matters as far as an *actual* release decision is concerned. You can therefore have different opinions about releasability without coming into conflict.  > The “problem” is that when we push our deliverables into “Acceptance”  > phase, new stories arises that (most of the time) has higher priority  > than the stories in the current Sprint.  > As a result, the PO wants the Development Team to work on the new  > stories instead of the ones in the current Sprint.   The Development Team wholly own their Sprint Backlog. The Product Owner can add any new stories to the Product Backlog and prioritize them accordingly (e.g. for the next Sprint), but he or she does not have the authority to change the Sprint Backlog without the team's say-so.  As others have said, User Acceptance needs to be brought in-sprint. However I think you need to be clear that it is a Product Ownership responsibility to do so, since:  - it is UA that is influencing the PO's decisions regarding prioritization and acceptability  - it is UA that is interfering with the PO's responsibility to ensure that ""the Product Backlog is visible, transparent, and clear to all, and shows what the Scrum Team will work on next"" as the Scrum Guide puts it.  - by treating UA as an equivalent stakeholder, product ownership has become the sort of committee that Scrum prohibits.          Log in or register to post comments",5645
"09:27 am November 19, 2013                     Posted By Illya Pavlichenko on 19 Nov 2013 09:06 AM  So how does the Review session differ from the Acceptance? Why doesn't Review session generate a list of new stories/requirements/desirements?  The feedback that I get back from the PO and key stakeholders is that they do see the benefits of a Sprint Review. However most stakeholders are business people who goes into the Sprint Review all blank and not able to test the stories on-the-fly. They need more time to absorb the stories and go through the stories at their own pace.             Log in or register to post comments",5645
"09:43 am November 19, 2013                     The Development Team wholly own their Sprint Backlog. The Product Owner can add any new stories to the Product Backlog and prioritize them accordingly (e.g. for the next Sprint), but he or she does not have the authority to change the Sprint Backlog without the team's say-so.   The team may be owners of the Sprint Backlog, but the Sprint itself is own by the PO. Our PO is a bit stubborn and persistent so if the new stories aren't added in the current Sprint, I foresee that he will terminate the current Sprint and create a new one. In the end, we all have a common goal which is deliver the most important increments first…   I'm afraid if we go to extreme, it will only destroy the relationship between PO and team.   As others have said, User Acceptance needs to be brought in-sprint....  I'm going to think about this option. Perhaps we can include the PO more during the Sprint. However there is still no guarantee that once it has been delivered, new (more important) stories will be created.          Log in or register to post comments",5645
"07:51 pm November 19, 2013                    The PO needs to be coached to understand the impact of frequently changing directions. You (I'm assuming your'e the Scrum Master) could try the aircraft carrier analogy (tough to turn, but when going in the right direction can't be stopped). You could help him understand that any time he inserts a new story, time is wasted understanding that story and the time spent understanding the story that now won't be completed is waste.  To get user acceptance into the sprint, you could have a new status Ready for Acceptance. The PO would then be able to review the story as soon as it is ready and that could give enough time for him to come up with the new stories just in time for the new sprint. I'm a bit reluctant about that, though, because that means the team cannot complete the Definition of Done on their own.  I think a UA period after the sprint is fine, but the expectation has to be set that anything coming out of UA is addressed in the next sprint, not the current one. We have UA, and as a PO I queue new stories for the following sprint. I sometimes sneak in bugs but that is actually bad and the team or Scum Master should probably be stopping me. I wouldn't debate the point because scrum is very clear that the team owns the Sprint Backlog.  The conflict should not occur between the dev team and the PO. It is the Scrum Master's responsibility to ensure that scrum practices are being followed. S/he should be protecting the dev team from the PO in this situation so that if there is any conflict it is between the SM and the PO. While it would be drastic for the PO to cancel sprints in these circumstances, it wouldn't be very productive, and it sure as heck would be visible. You have management support for scrum?          Log in or register to post comments",5645
"07:53 pm November 19, 2013                    I'm a bit reluctant about that, though, because that means the team cannot complete the Definition of Done on their own.   I guess technically the team can still complete DoD since the PO is a member of the team, just not the dev team.          Log in or register to post comments",5645
"10:53 am April 26, 2016                    One team I worked with included an 'empowered UAT' test advocate who was empowered by the business to conduct preliminary UAT on their behalf; the Definition of Done for these Sprints allowed for Done = 'Full UAT ready' by the tester. Formal UAT by actual business users was still conducted, but became part of the Definition of Done for a subsequent Sprint. The team was still releasing increments that were 'close enough' to potentially shippable every Sprint, and the actual UAT itself took about 80% less time and 50% less people to get 'Done' than the previous Waterfall delivery method -- one reason being, no defects were found. I should note that this arrangement suited a Scrum team working for the first time in a secure enterprise environment that had been built along Waterfall architectural principles.          Log in or register to post comments",5645
"09:52 am May 1, 2016                     However most stakeholders are business people who goes into the Sprint Review all blank and not able to test the stories on-the-fly. They need more time to absorb the stories and go through the stories at their own pace.  Sprint Review is not a ""test workshop"" or ""acceptance workshop"".  They are no ""acceptance phase"". They are no phase in Scrum.  The increment is already potentially shippable before the review, because acceptance testing (actually any kind of testing like unit ; security ; performance ; usability ; portability...) was done item by item during the sprint.  The review is a opportunity to inspect the increment with high level of transparency, to get feedback from the key stakeholders and to adapt the Product Backlog accordingly.          Log in or register to post comments",5645
"10:28 am May 1, 2016                    Good. I was trying to understand the aspect of inspect in sprint review by stake holders. This discussion has helped me understand that stakeholders involvement in sprint review.The product owner who understand the needs of the stake holders and also understand the sprint goal is the person who might be capable and  fulfiling the acceptance test sign off role.The stake holder can only allign with the product owners perspectives.          Log in or register to post comments",5645
"10:30 am May 1, 2016                    In situations where there are larger organizational impediments at play (separate business uat teams, uat involving multiple streams who may or may not be on agile, agile/scrum being pushed ground up with the broader org not signed up), the more practical approach is to have some capacity allocated 5o manage the urgent requests. You can either have this reflected as non-feature user stories or as an agreement with the PO and employ lower velocity/ capacity during sprint planning. You start with this as a short term approach and continue to work with PO and broader org to move to the ideal scrum recommended ways.          Log in or register to post comments",5645
"06:54 pm May 4, 2016                    As a Scrum Master observing this situation, I would consider measuring the cost of canceling a Sprint. Ask the people department a.k.a HR and ask them to furnish the team cost for a Sprint of time. Calculate a daily cost of development. Calculate the cost of rolling back un ""Done"" work based on the days needed to make them ""Done"" e.g. 1 day on a 6 person costs X dollars. Consider that cancelling a Sprint also triggers immediate Sprint Planning which is also team time at the daily team rate/salaried equivalent. Also, measure the team reaction to shifting priorities and lost focus. Do these activities piss off your highly paid developers? Will this affect their work in the future? Will they start looking for a more stable job in the future!?  For good reason, the Scrum Guide says, ""Sprint cancellations consume resources, since everyone has to regroup in another Sprint Planning to start another Sprint. Sprint cancellations are often traumatic to the Scrum Team, and are very uncommon.""  If the work generated from UAT is so valuable that it makes sense to continually cancel Sprints. Chances are though, the new work can wait until next Sprint. Your developers will thank you :).          Log in or register to post comments",5645
Log in to reply,5645
Messages,6769
"05:52 pm March 19, 2016                             Hello  I have been attending a course about scrum and it was said, that of the 100% of the tasks only 20% are done. Because the other 80% do not guarantee the return of investment, so to say.  Is there a checklist or a tool which helps to identify which tasks are worth being developped as scrum has also a focus on that.  Thank you  Heinrichxx",6769
"06:25 am March 22, 2016                    Hello Heinrich,  I have very positive experience with SCRUM, if done properly you get a high return of investment and 100% of the tasks are done. This will only happen if you do it properly and if it fits your business. I assume you are experienced in the area you are working in. I recommend that you have a look at the agile manifesto, then you will get an idea about what agile development can help you in your business.  SCRUM is only one approach to work agile, so if you are not sure about it get more background. Check how Toyota used KANBAN, browse this forum etc.   Cheers  Joerg           Log in or register to post comments",6769
"09:13 am March 22, 2016                    Hi Heinrich,  It sounds like the trainer was talking about Pareto's Principle (https://en.wikipedia.org/wiki/Pareto_principle), where 80% of your effects will come from 20% of the causes. This can be applied to many things. In this case it sounds like you are being advised that 20% of your backlog items will possess 80% of the value. This is not to say that 80% should not be done, but that you should prioritize your backlog to ensure that you are focusing on those most valuable items.   In terms of a checklist, I am sure such a thing exists, but I am not sure it would be a good idea to use it if it does. Your Product Owner should constantly be refining the backlog and considering what would have the most influence on the market. These assumptions should be tested by frequent release to obtain feedback.  This will vary from situation to situation.  Hope that helps!           Log in or register to post comments",6769
"03:14 am March 29, 2016                    Hi Joerg  Hi Jade  Thank you very much for your answers. Great.  I agree that tools are not allways an answer but they can give a hint how to find out how to find out the important 20%.  How do you integrate operations and application services in scrum. Operations and Application Services have allways been centralized. So do you have any experience on that.  Regards and thanks for the answers  Juan          Log in or register to post comments",6769
"04:35 am March 30, 2016                    > How do you integrate operations and application services in scrum.  > Operations and Application Services have allways been centralized.   Why do you think that an organization's existing arrangements should be ""integrated"" into Scrum?  Scrum is about delivering value, in the form of release-quality product increments, at intervals of no longer than one month. So rather than trying to make Scrum fit with existing organizational norms, shouldn't the framework be used to shape the organizational change that will be needed?          Log in or register to post comments",6769
"08:57 am April 1, 2016                     Posted By Joerg Karlinger on 22 Mar 2016 06:25 AM  Hello Heinrich,    I have very positive experience with SCRUM, if done properly you get a high return of investment and 100% of the tasks are done. This will only happen if you do it properly and if it fits your business. I assume you are experienced in the area you are working in. I recommend that you have a look at the agile manifesto, then you will get an idea about what agile development can help you in your business.    SCRUM is only one approach to work agile, so if you are not sure about it get more background. Check how Toyota used KANBAN, browse this forum etc.     Cheers    Joerg   My view is that scrum has this in place already with regards to how the product backlog is prioritized and what work is taken into the sprint... This ensures high priority items are developed as part of the increment and with the sprint review the opportunity to inspect and adapt thus ensuring the direction of the project is aligned for subsequent sprints...          Log in or register to post comments",6769
Log in to reply,6769
Messages,6770
"05:56 pm March 19, 2016                             Hello  How does Scrum integrate Application Services or Operations in  there Processes.  Do you have success stories or examples who show how this was done.  Thank you  Heinrichxx",6770
"03:22 pm March 31, 2016                    What do you mean exactly by Application Services or Operations - maintenance, support?  What problem do you want to solve?          Log in or register to post comments",6770
"08:48 am April 1, 2016                     Posted By Andrzej Zinczuk on 31 Mar 2016 03:22 PM  What do you mean exactly by Application Services or Operations - maintenance, support?    What problem do you want to solve?  Not knowing the details - I think you should consider whether scrum is the correct approach should this relate to O&M support, especially if the work does not involve development activities but support/maintenance.... In that case I would consider Kanban to help manage that....          Log in or register to post comments",6770
Log in to reply,6770
Messages,6782
"07:30 am March 30, 2016                             Plaese help with question! Very much thank you!  Select ALL VARIANTS THAT ARE FALSE. In Scrum:  a. Team velocity is constant, but it can be changed by Scrum Master.  b. Team ususallly do the analysis of sprint to identify gaps and reasons of fais  c. Sprint backlog content should often change  d. Sprint backlog has stories taken from product backlog  e. Standert iteration for a Sprint is 4-8 weeks  f. After end of the Sprint team works to achieve a stable version of product that might be delivered  g. Groomigs usually happen before plannings   h. There are daily based regular meeting",6782
"11:01 am March 30, 2016                    Why not state your assumptions about what this question means, and then provide your best answer. If we can see your reasoning we will be better able to help.  Frankly though, this question is so poorly written that its usefulness seems in doubt.           Log in or register to post comments",6782
"12:14 pm March 30, 2016                    I concur with Ian's post.  Jira, I would ask you to not only provide the source of these questions, but also explain what information you are hoping the community can provide to you, other than help with random poorly-constructed Scrum multiple choice questions.  Most of the contributors here are pretty sound in their understanding and practice of Scrum.          Log in or register to post comments",6782
"12:37 pm March 30, 2016                     Posted By Timothy Baffa on 30 Mar 2016 12:14 PM  I concur with Ian's post.    Jira, I would ask you to not only provide the source of these questions, but also explain what information you are hoping the community can provide to you, other than help with random poorly-constructed Scrum multiple choice questions.    Most of the contributors here are pretty sound in their understanding and practice of Scrum.  It's one of the question that I must complete in QA course. It's a general information about Scrum methodology that uses in companies for creating Software products(what happen as usually in Scrum companies), I must to choose uncorrect answers. My answers was: a and e, but I' m not sure in it, so I very very ask your help! Thank you!          Log in or register to post comments",6782
"01:26 pm March 30, 2016                    Unfortunatelly cannot provide a link because this is a test  Please help, last hope on you...          Log in or register to post comments",6782
"02:43 pm March 30, 2016                      It's one of the question that I must complete in QA course...  You mean you are a student and you ask us to give you the answer of your test ?  Do you think it is really usefull and ethical for you ?          Log in or register to post comments",6782
"02:50 pm March 30, 2016                     Posted By Olivier Ledru on 30 Mar 2016 02:43 PM    It's one of the question that I must complete in QA course...    You mean you are a student and you ask us to give you the answer of your test ?    Do you think it is really usefull and ethical for you ?  Yes, because I search and try many times, it's difficult to understand THIS question for me, so I asking this you, please, hope you understand          Log in or register to post comments",6782
"04:30 pm March 30, 2016                    Jira,  What QA course?  And no, it is not ethical to ask others for answers to a test that is supposed to illustrate your competency.  I will agree with you that A and E are false.   I can also see other false options, but again the question is so poorly constructed and phrased that I would simply refrain from answering.  Good luck to you.           Log in or register to post comments",6782
"08:37 am April 1, 2016                     Posted By Jira Jirov on 30 Mar 2016 07:30 AM  Plaese help with question! Very much thank you!    Select ALL VARIANTS THAT ARE FALSE. In Scrum:    a. Team velocity is constant, but it can be changed by Scrum Master.    b. Team ususallly do the analysis of sprint to identify gaps and reasons of fais    c. Sprint backlog content should often change    d. Sprint backlog has stories taken from product backlog    e. Standert iteration for a Sprint is 4-8 weeks    f. After end of the Sprint team works to achieve a stable version of product that might be delivered    g. Groomigs usually happen before plannings     h. There are daily based regular meeting    I agree with all of the above points wrt this being very unclear... One thing for sure you really need to read up on the scrum guide over and over again until its crystal clear as to roles/responsibilities, events, artifacts and rules which binds it together... With that in mind I'll try my best with helping ;-)  a) False - Scrum master does not have this authority.... You need to learn what the role of a scrum master is....  b) This is vague..... Note the sprint review and sprint retrospective in this case and what issues it addresses. It is clear both events are different with addressing different aspects i.e. product development/outcome of sprint versus how the team operates and improvements with regards to the definition of done.  c) True - items get decomposed and tasks/sub tasks identified etc... However one needs to be careful with regards to impact to sprint goal and definiton of done.  d) True - ask yourself the purpose of product backlog and why hold the sprint planning...  e) False - max duration is 4 weeks. Read the scrum guide!  f) False - You need to understand the definition of done and what an increment is....  g) Yes - this  happens through the project life-cyle. My assumption is that you are referring to product backlog refinement so that PBIs are well understood and are ready to be moved into a sprint backlog...  h) Yes -  I assume you are referring to the daily scrum....  Reading through the questions - its very obvious that you really need to take a time out with trying to answer questions.... Instead take the time to understand the framework and focus on learning that first before jumping in with pre-concieved ideas....           Log in or register to post comments",6782
Log in to reply,6782
Messages,6778
"05:11 pm March 28, 2016                             Dear All,  I am preparing rigorously for the 2nd time as first time i failed with 81 % (though i prepared well).  Now i have completely gone through numerous times :  Scrum Guide (more than 3-4 times) +   Open Assessment of PO / SCRUM / Developer on scrum.org (getting 100 )+  Practise exams from mplaza and mplashin  Some more pocket guides and videos from youtube.  Any other suggestions/inputs ?  Also Can someone help in clarfying the below questions:   1.) The Product Owner and Scrum Master should not be part of the Development Team.  True or False ?  I feel its true but always confused how this question relates.  2.)What does it mean to say a Product Backlog item is Done? Choose all that apply   A-The item can be a part of a potentially releasable piece of software   B-The item creates a software that is usable by the end user   c-The item is ready for user acceptance testing   D-The item has all the quality requirements defined by the Product Owner   E-No work left based on the Definition of Done   F-The item is ready for functional testing by the Product Owner   G-All tasks identified for the item are done  3.)Which of the following is the most important concern in scaled Scrum?    a.Assigning items to teams    b.Coordinating the activities of teams    c.Having a clear Definition of Done that works for all teams    d.Minimizing dependencies between teams    e.Making sure there’s enough work for all teams  Regards,  Sadha",6778
"02:05 pm March 31, 2016                    -----  Development Team Size  The Product Owner and Scrum Master roles are not included in this count unless they are also executing the work of the Sprint Backlog.  -----  This statement from Scrum guide shows that Scrum Master and Product Owner can be in Development team           Log in or register to post comments",6778
"02:11 pm March 31, 2016                    I don't have answers to 2) and 3) if I find it, will let you know.  Does these questions came during your 1st attempt ?          Log in or register to post comments",6778
"07:20 am April 1, 2016                    First of all best of luck with taking the exam... Here is what I think are the correct answers:  1) I agree Scrum master and product owner can be part of a development team.  2) Definition of done is based on it being potentially shippable i.e. nothing else needs to be done to an increment... As this is a product backlog item then this indicates the product owner has accepted the work. Therefore: a,b,d,e,g apply...  3) If its just one answer then my view is d) noting c) if its more than one answer... My rationale is that teams must be self organizing, cross functional and be able to create a product increment... Introducing dependencies into that can cause sever impact to work and with regards to ""Definition of Done"" - thats an implicit part of scrum where as organizing teams and splitting work to reduce dependencies requires effort and adequate resources to be in place...   Hope that helps!          Log in or register to post comments",6778
Log in to reply,6778
Messages,6785
"04:24 am March 31, 2016                             Hello everyone  We all know that scrum teams are self organising and therefore everyone has an equal role in that sense, but how do different teams represent ""seniority"" and included in that I mean recognition of an individuals contribution.  We have evolved from a situation of having a reasonably hierarchical delivery team structure with 3 levels of seniority (principal / team lead, senior and junior). A set of competencies were devised and objectives set for individuals to reach these competencies, such that when achieved that person was promoted to that level with title and accompanying pay rise (better than the previous system where you were given it based on how long you'd been at the organisation).  We are now reviewing these competencies in the light of roles within an agile team and asking ourselves the question whether they are moribund?  If we were to dispense with them (in favour of say ""software engineer"", how would people likely react? - would it be seen as a demotion (although we wouldn't alter salaries). Have others been through a similar situation? What worked?  Whatever we might want to say about the semantics of job titles, the reality is in human nature many people care about them.  Thanks for your help  Jonathan",6785
"10:20 am March 31, 2016                    > A set of competencies were devised and objectives set for individuals  > to reach these competencies, such that when achieved that person  > was promoted to that level with title and accompanying pay rise...  ...  > Whatever we might want to say about the semantics of job titles,  > the reality is in human nature many people care about them.   Correct, but the level and the title and the money are not necessarily related.  Example: Job titles can be treated like avatars on a Scrum board. In other words, people may be allowed the freedom to make their own up, as long as they aren't indecent or otherwise breach company rules. There was a spate of this about 5 or 10 years ago when people titled themselves ""Agile Samurai"" and ""Value Flow Maven"" and other such ridiculous confections. They had that put on their business cards. There's less of that sort of thing these days because it's become trite and worn out, but it's still basically harmless. What matters is that when it comes to working on a Scrum Team, you're fulfilling one of the 3 Scrum Roles, and that's it.  ""Title theatre"" can therefore be separated from the matter of pay grades. The glib thing to say is that individuals must be paid what they are worth, and the arbitrage of the jobs market will establish the correct level....if you don't pay someone what they are worth they will simply leave. However, that does not necessarily provide transparency over the inequities that will creep into a complex system like an organization. Perhaps the smartest solution is to come up with an open and transparent formula for remuneration which can clearly be applied to all without prejudice. Whatever you come up with won't be perfect...but the better the formula you have, the more the best people will be inclined to stay.           Log in or register to post comments",6785
"09:09 pm March 31, 2016                    I believe that Job titles and levels are always a part of any organization. This is a simple way for an organization to separate pay grades, skill sets and longevity in the company.  Indirectly, it has nothing to do with Scrum Teams' roles. Inside the Scrum Development Team, everyone is a developer, even though your domain of expertise is in Business Analysis, Testing, QA or Coding.  Directly, the organization job title can help multiple members of the development team achieved their goals. e.g. Pair programming between senior and junior software engineer to tackle complex coding problems, formulating of a better acceptance criteria and test preparations when a business analyst partners with a tester, devops working with developer in automating certain tasks.  This pairing, mix-and-matching of individual team members (with different organizational job title) helps a lot in making the team self-organize, cross functional and empower themselves.           Log in or register to post comments",6785
Log in to reply,6785
Messages,6787
"02:16 pm March 31, 2016                             Friends is it mandatory to tryout PSPO and PSD open assessment for psm1 preparation ?  I have gone through the guide 3 times, took PSM open assessment multiple times and got 100%  Currently doing online mock exam.  Your valuable inputs will be really helpful.  Also could someone post a tricky question which you faced during your psm1 assessment, it may help me to assess where I stand",6787
"04:49 pm March 31, 2016                    Hello,  Sure, every Open assessment will help you to prepare for your PSM1 !  As you can expect, it is strictly forbidden to post real question of the different assessment.  It's fine if you get 100% :-)  Are you at ease with ""why this answer is good"" and also ""why this one is not good"" ?           Log in or register to post comments",6787
Log in to reply,6787
Messages,6777
"04:13 pm March 28, 2016                             I would like to take this Opportunity to thank you all who have posted proper suggestions to get clear this certification . I have followed the instructions and suggestions and confident on my attempting this time.  (In my first attempt I was ended getting 84%. )",6777
"08:45 pm March 28, 2016                    Congrats!          Log in or register to post comments",6777
"09:04 am March 29, 2016                    Congrats!  How many for the second time passed ,Lakshmi :)  How long did you prepare for the first attempt? and then second time?           Log in or register to post comments",6777
"02:18 pm March 31, 2016                    Congrats  I could see many posts stating that 'I have failed 1st attempt and passed in 2nd or 3rd' :-)  Spending 150+150+150 = 450.. why can't we take SCM ....   PSM experts >> your inputs plz          Log in or register to post comments",6777
Log in to reply,6777
Messages,6783
"09:45 am March 30, 2016                             Hi all,  I have some difficulty in understanding the following statement. Hope to get some help.  ""When a Sprint is cancelled, any completed and “Done” Product Backlog items are reviewed. If part of the work is potentially releasable, the Product Owner typically accepts it. All incomplete Product Backlog Items are re-estimated and put back on the Product Backlog. The work done on them depreciates quickly and must be frequently re-estimated.""  What does the `the work done on them depreciates quickly and must be frequently re-estimated` mean?  Thanks in advance",6783
"11:21 am March 30, 2016                    > What does the `the work done on them depreciates quickly and must be frequently re-estimated` mean?   Remember that the Definition of Done applies to the increment and not to a Product Backlog Item. The PBI's that were initially planned into a Sprint may or may not be completed by the end of the Sprint, even though the increment meets the DoD.  This means that partially implemented PBI's can be part of a ""Done"" increment. There will be less work remaining in order to complete those items. However, the work that has been completed so far for a PBI may not be usable until *all* of the work for that PBI is complete. During that delay, the value of the implemented work will depreciate because it is not being put to use and may no longer reflect the latest understanding of scope. The chances of rework being needed will therefore increase, and it will become harder to implement the work that is believed to remain. Estimates must be updated accordingly.          Log in or register to post comments",6783
Log in to reply,6783
Messages,6781
"03:07 am March 30, 2016                             On what basis are product backlog items ordered?  Size  Complexity  Importance  Risk",6781
"11:10 am March 30, 2016                    What does the Scrum Guide have to say about Product Backlog ordering, why it is done, and who is responsible for it?  What general conclusion can you then draw about how product backlog items ought to be ordered?           Log in or register to post comments",6781
Log in to reply,6781
Messages,6779
"08:09 am March 29, 2016                             Please help me with this question!  Please select all correct variants. Scrum Master:  a. Scram Master should help Scrum team remove everything that blocks reaching spint goal  b. the person in between Scrum team and everything that breaks Scrum stability  c. Scrum Master always leader of the team  d. Facilities the Scrum process  e. the person only in between Scrum team and Project Manager  f. Tells each Scrum team memeber what should be done and when  g. Estimates the tasks done by Scrum team  h. Is a person only in between Scrum team and client  i. Sets the deadlines for the task for all Scrum team  j. The person whose absence blocks Scrum team's work.  Thank you!",6779
"11:59 am March 29, 2016                     Posted By Jira Jirov on 29 Mar 2016 08:09 AM  Please help me with this question!    Please select all correct variants. Scrum Master:    a. Scram Master should help Scrum team remove everything that blocks reaching spint goal    b. the person in between Scrum team and everything that breaks Scrum stability    c. Scrum Master always leader of the team    d. Facilities the Scrum process    e. the person only in between Scrum team and Project Manager    f. Tells each Scrum team memeber what should be done and when    g. Estimates the tasks done by Scrum team    h. Is a person only in between Scrum team and client    i. Sets the deadlines for the task for all Scrum team    j. The person whose absence blocks Scrum team's work.    Thank you!  Unsure where this question originated from, or what is meant by ""in between"" in some of the choices.   This is certainly not the clearest question posed about what a Scrum Master does.     Did you create this question yourself, Jira?   I ask because of the many misspellings and incorrect grammar present in the choices.  I can say with certainty that choices from E through J are definitely not Scrum Master responsibilities.   Option C is also incorrect.  Regarding option A, the Scrum Master definitely works to remove impediments that block the team from reaching the Sprint Goal.   This solution effort may or may not involve the team, however.  The Scrum Master is the main authority and individual responsible for Scrum adherence, so I can see option B as a possibility, as well as option D, although the Scrum Master should facilitate only as needed.  This was of course a very long-winded answer.   I would have probably been much better off following Ian's practice of asking the poster what the Scrum Guide states, because the answers are there.           Log in or register to post comments",6779
"04:55 am March 30, 2016                    > I would have probably been much better off following Ian's practice of asking  > the poster what the Scrum Guide states, because the answers are there.  You beat me to it. The only thing I would add is that option C is arguably correct if it is seen in the context of servant-leadership (though again, that is in the Guide).          Log in or register to post comments",6779
"07:10 am March 30, 2016                      Unsure where this question originated from, or what is meant by ""in between"" in some of the choices.   This is certainly not the clearest question posed about what a Scrum Master does.       Did you create this question yourself, Jira?   I ask because of the many misspellings and incorrect grammar present in the choices.    I can say with certainty that choices from E through J are definitely not Scrum Master responsibilities.   Option C is also incorrect.    Regarding option A, the Scrum Master definitely works to remove impediments that block the team from reaching the Sprint Goal.   This solution effort may or may not involve the team, however.    The Scrum Master is the main authority and individual responsible for Scrum adherence, so I can see option B as a possibility, as well as option D, although the Scrum Master should facilitate only as needed.    This was of course a very long-winded answer.   I would have probably been much better off following Ian's practice of asking the poster what the Scrum Guide states, because the answers are there.   Thank you very much for answer, truly, I'm edit something some question, but the general reason the same           Log in or register to post comments",6779
Log in to reply,6779
Messages,6241
"04:12 pm February 4, 2015                             Last week I failed for my PSM I Assesment. (Price 100$)  Now I want to retry but the price has raised to 150$.  Are these price changes communicated on the site somewhere?  If I knew this would came I probably would have retried earlier :(  Regards,  Armand",6241
"12:16 am February 5, 2015                    Agreed.  I have been prepping and studying and was actually all ready to pay my $100 to make my attempt.  Now I see the incredible 50% increase in the cost of the assessment.  How is this warranted?  Where / when was this communicated?          Log in or register to post comments",6241
"12:08 pm February 5, 2015                    PSM II is $500.00          Log in or register to post comments",6241
"06:00 pm February 5, 2015                    Last time I did groceries, I lost 24 Euro!          Log in or register to post comments",6241
"06:09 pm February 5, 2015                    I have the same issue. I have taken the test twice now and my latest attempt received an 83%. In the section of  ""Coaching and Facillitation"", I received my lowest score while the other sections were in the 82 - 90% range.  Can anyone provide guidance on how I could specifically improve this section.   BTW on practice tests (even on paid sites), I was also hitting 100% with regularity and felt quite prepared for the exam.    Thank you          Log in or register to post comments",6241
"11:46 am February 6, 2015                    Re: ""Coaching and Facilitation""  See this other thread on same topic:  https://www.scrum.org/Forums/aft/1280          Log in or register to post comments",6241
"09:00 am February 8, 2015                    I did my PSM-I exam two months ago, and found the exam very serious. More serious than other exams offered by other Scrum associations. So I want to congratulate Scrum.org for this attitude.   My suggestion is to read many times the Scrum Guide, an absolute reference for the exam. For reading more about coaching and facilitation, I can suggest to read the book ""Coaching Agile Teams - A companion for scrummasters, agile Coaches, and Project managers in Transition - Lyssa Adkins"". And if you want a bunch of exercises for free you can email me michele.maritato@pm-progetti.it.          Log in or register to post comments",6241
"05:47 pm February 8, 2015                    PSPO I is $200.00 ...          Log in or register to post comments",6241
"11:05 am February 9, 2015                    I just took the test last week and I missed with only one question which is 84%.  I was thinking re-take just after the exam.   I think 150$ too much, beside that $$$ got some value in many countries. In addition to this , re-take exams are not refunded by the company we work for.  May be first test 150$, but next one should definitely cheaper.          Log in or register to post comments",6241
"04:25 am February 10, 2015                    I have just failed PMS-I with received an 81% (one of the fail reason the page of question 35 wasn't loaded, it took me some minutes and I must copy the url of the failed page to another browser and then I could continue to do the exam, but impacted to me so much. And another reason as I forgot to click finish button when I wasn't ready). So that I want to re-take exam again. Because I wasted time to study this. But the with $150 free is too much, I agree with Ali ""first test is may be 150$, but next one should definitely cheaper""           Log in or register to post comments",6241
"09:25 am April 3, 2015                    I am a bit disappointed about the response on my question.  How is pricing for certification arranged? (who decides these changes)  And again: Can I find announcements of upcomming price changes?  I don't mind if it's price A of B.  I do however mind that I get a 50% increase within a week to retry.  ( That is why I wonder if this is communicated.)           Log in or register to post comments",6241
"10:23 am February 24, 2016                     Posted By Ken Lepere on 05 Feb 2015 06:09 PM  I have the same issue. I have taken the test twice now and my latest attempt received an 83%. In the section of  ""Coaching and Facillitation"", I received my lowest score while the other sections were in the 82 - 90% range.  Can anyone provide guidance on how I could specifically improve this section.     BTW on practice tests (even on paid sites), I was also hitting 100% with regularity and felt quite prepared for the exam.      Thank you  Same issue here: i scored 89%-96% in all sections but 16% (!) in  ""Coaching and Facillitation"".   It's hard for me to find any reason explaining  this 'huge gap' related to this specific section.  I have been through all pages of the scrum guide (i didn't skip any paragraph), i have been very successful on all mock tests i found on the web and also felt 'ready' for the exam.  :\           Log in or register to post comments",6241
"03:49 am February 25, 2016                    Hi,  Those who have taken the PSM 1 assessment recently, did you find questions from the Scrum developer open assessment i.e. where there any technical/development related questions?  Regards  Vishal          Log in or register to post comments",6241
"09:35 am March 6, 2016                    Hi,  I have just passed the PSM 1 today (94%) and havent found any development related question on the assessment.  Cheers.  Filippo          Log in or register to post comments",6241
"10:32 am March 8, 2016                    Hi,  In Open assessment, I got a question:   The Development Team should not be interrupted during the Sprint. The Sprint Goal should remain intact. These are conditions that foster creativity, quality and productivity. Based on this, which of the following is FALSE?  A) The Product Owner can help clarify or optimize the Sprint when asked by the Development Team.  B) The Sprint Backlog is fully formulated in the Sprint Planning meeting and does not change during the Sprint.  C) As a decomposition of the selected Product Backlog Items, the Sprint Backlog changes and may grow as the work emerges.   D) The Development Team may work with the Product Owner to remove or add work if it finds it has more or less capacity than it expected  I answered C but as per system correct answer is B. It also gave the explanation of the correct answer that The Sprint Backlog makes visible all of the work that the Development Team identifies as necessary to meet the Sprint Goal. The Development Team modifies the Sprint Backlog throughout the Sprint, and the Sprint Backlog emerges during the Sprint.  Can anyone please explain me why I was wrong. This was the only question I answered wrong :(            Log in or register to post comments",6241
"03:38 pm March 8, 2016                    Without reading the end of your post Somesh, my answer was B.   Glad I got it correct!  That said, here is my reasoning:  A)  Yes, this can certainly occur if the development team needs clarification on work accepted in a sprint, especially if their initial approach for meeting the sprint goal changes based on the discovery process.  C)  Yes, the Sprint Backlog is a decomposition of the Product Backlog, and as work emerges, stories may change in size.  D)  Yes, scope change may occur in a sprint (up/down), in collaboration with the Product Owner.  B)  No.   While the Sprint Backlog is fully formulated in the Sprint Planning meetings, it is not true that the Sprint Backlog never changes during the sprint.   Just look at the reasons why C and D are correct.          Log in or register to post comments",6241
"12:54 am March 9, 2016                    Take a look at the following scrum.org article and correlate it to what the Scrum Guide has to say about the Sprint Backlog:  Commitment vs. Forecast: A subtle but important change to Scrum  http://www.scrum.org/About/All-Articles/articleType/ArticleView/article…          Log in or register to post comments",6241
"10:35 am March 10, 2016                    Thanks Timothy for response on my post, i'm a bit clear on the answer now.          Log in or register to post comments",6241
"10:37 am March 10, 2016                    Thanks Ian!          Log in or register to post comments",6241
"06:02 am March 16, 2016                    Hi all,   Just to inform that I've passed the PSM I today with 99%. Want to extend my thanks to all who have posted replies to my questions and helped me in getting better understanding of Scrum.   However, I did not see many questions from Scaled Scrum but there were one or two.   Would also like to share some tips, here are below:   1. Read Scrum guide multiple times until you understand the whole Scrum framework very well. Try to question yourself and check whether your answer is in line with Scrum framework/process.   2. Read 'Professional Scrum Developer Glossary' & 'Glossary of Scrum Terms' available on scrum.org   2. Read 'The Scrum Master Training Manual' available free at http://mplaza.pm/product/scrum-mast...ype=linkA. This will help you understand the scrum guide more easily.   3. Attempt all 'Free assessments' viz Scrum Open, PO Open, Developer Open available in website Scrum.org: https://www.scrum.org/Assessments/Open-Assessments, until you are constantly getting above 95%. You will definitely see 15-20 questions straight from Open assessments which will save lot of time.   4. Read the Nexus Guide available in Scrum.org, just to understand how multiple Scrum teams work to create an integrated increment. Also try free Nexus Open assessments multiple times   5. Practice Scrums of Scrum through: https://www.classmarker.com/online-test/start/?quiz=7rt5464b55300026   6. Use following link to test your knowledge on Scrum guide and it will also help you to check your speed of attempting questions during the real exam i.e. it is in real mode: http://mlapshin.com/index.php/psm-q...real-mode/   7. Visit forums on Scrum.org, post your questions/queries, believe me it really helps.   8. Below are some links which will help you in understanding the Scrum better:   i. https://msdn.microsoft.com/en-us/library/dd997578(v=vs.120).aspx   ii. http://www.scrumstudy.com/scrum-principles.asp   iii. https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…   iv. http://pm.stackexchange.com/questio...spike-mean   All the best for your PSM certification.          Log in or register to post comments",6241
"09:39 pm March 16, 2016                    Would you be able to share your experience and guide us?          Log in or register to post comments",6241
"05:07 am March 30, 2016                    Hi Noirita,   Sorry for replying so late on your post.  Sure I'll help you out. As I have already shared the details on how you have to proceed with the preparation, please refer to that. You will find enough resources to prepare for PSM I. However, if you have any specific questions for me then feel free to post.  Apart from that, whenever you decide the day you want to give exam, just follow below notes as well:  1. Take the test at an isolated place, where you can concentrate, with decent internet speed (I took in my company's library room)  2. Take a glass of water with you, as you may feel thirsty or get nervous, so a sip of water will help you.  3. Do not try to google the answers as it will consume time and you may not be able to complete all 80 questions with time frame.  4. Switch off your mobile phone or put it on flight mode, close the office email application, sign out from all communication applications (skype, whatsapp, office communicator etc..) so that you don't get disturbed by notifications.  5. You have 80 questions in 60 mins so if you do the little math you get 45 secs for one question BUT you loose 2-3 secs in moving to next question hence you loose 5 more mins in total, i.e 80 questions in 55 mins - now 41 secs for one question. So, DO NOT spend more than 30 seconds on one question but if you stuck on any question, just mark it as 'Bookmark' and move forward. When you complete 80th question, then go to bookmarked questions and get them completed. This you you'll get enough time to complete bookmarked questions.  6. DO NOT 'Save and Submit' until you finish the bookmarked questions (if any).  Let me know if you have further queries.          Log in or register to post comments",6241
Log in to reply,6241
Messages,5665
"03:31 am December 15, 2013                             Hi all,  I wondering how your teams deals with User Points.  We based our User Points purely on complexity (relative complexity of course) not time as our Sprint is a timebox already.  We do this because of the following reasons:  - no expliciet exact time planning.  - much easier and faster to estimate.  - time can be a personal related factor.  I must say that the team is getting better and better but i cant help to think about the following points:  1) what about simple items that takes a long time. In theory the team can give this item a 1 but it takes 5 days. And perhaps there are items that are more complex but takes 2days.   2) do you change points during the Sprint? I don't mean all the time but only when the team did a totally wrong estimation?  Cheers,",5665
"04:55 am December 15, 2013                    > what about simple items that takes a long time  That's the problem with estimating by complexity. Mundane tasks may not be complex, but they can absorb much of a Sprint. Why not estimate by effort instead?           Log in or register to post comments",5665
"08:00 am December 15, 2013                     Posted By Ian Mitchell on 15 Dec 2013 04:55 AM  > what about simple items that takes a long time    That's the problem with estimating by complexity. Mundane tasks may not be complex, but they can absorb much of a Sprint. Why not estimate by effort instead?   There are 2 reasons which I can think of right now:  1) effort is a relative word. For a senior developer it may take 8hrs while for another less experience developer it can take up to 16hrs or more. The moment we start using effort (time) the estimation process takes a much longer time because they want to get more exact.   2) when the client figure out effort is equal to time, deadlines will be created and before you know it, were doing Scrum in a waterfall environment. I want to keep a strict line between ""how long will it take"" and ""how complex is this gonna be""          Log in or register to post comments",5665
"03:14 am December 16, 2013                    We do estimate by ""effort"" also. It is a way for us to estimate ""everything"" : dev effort ; test effort ; doc effort...  It is very common to have something easy to dev and difficult to test or the opposite.  The estimates don't nedd to be accurate, and we don't re-estimate after the sprint is over because we don't have the need to do that.          Log in or register to post comments",5665
"05:47 am December 16, 2013                    > We do estimate by ""effort"" also. It is a way for us to estimate ""everything"" :  > dev effort ; test effort ; doc effort...   > It is very common to have something easy to dev and difficult to test or the opposite.  The work an agile team does is indeed varied, and some of it can be unusually demanding, even if it is not particularly time consuming. Effort doesn't really correlate to time.          Log in or register to post comments",5665
"05:57 am December 16, 2013                     It is very common to have something easy to dev and difficult to test or the opposite.   So overall it would be a complex item no?  The estimates don't nedd to be accurate, and we don't re-estimate after the sprint is over because we don't have the need to do that.  We also never changed our estimate after the Sprint. What we do do is re-estimate (after the Sprint) if it's needed.           Log in or register to post comments",5665
"02:17 am December 19, 2013                    Our teams based story points based on Effort instead of Complexity. :-)          Log in or register to post comments",5665
"02:13 pm March 29, 2016                    I'm not sure complexity necessarily relates directly to time spent. There can be simple solutions to complex issues that are executed in a short period of time, and vice versa.  Whereas, effort seems to relate more directly to time spent in most cases. If capacity is a constant, a ""large effort"" takes more time than a small effort.  Are there better definitions of complexity or effort that would help me understand the best way to set Story Points?          Log in or register to post comments",5665
"03:52 pm March 29, 2016                    Hi,  I like to come back to the original questions:   1) what about simple items that takes a long time. In theory the team can give this item a 1 but it takes 5 days. And perhaps there are items that are more complex but takes 2days.     2) do you change points during the Sprint? I don't mean all the time but only when the team did a totally wrong estimation?   No matter if you do your estimations by complexity or by effort.  In the end it is just an estimation -  which by definition - doesn't need to be correct. In my opinion there is no need to adapt an estimation after implementation.   I like to add the following: Up to my experience the teams get more precise in estimating over time. For me the most important thing about the estimation is to add insight about the increment (e.g. the discussion when playing ""planning poker"" or the movement of the cards when doing ""magic estimation"") - the number itself is less important.          Log in or register to post comments",5665
"04:49 am March 30, 2016                    The purpose of estimation is to help a team decide how much work it can take on in a Sprint. Strictly speaking, it is up to each team to decide how that assessment should be made. ""Points"" might therefore correlate to time, or effort, or to complexity or to a function of any of these things...or something else entirely.  I generally coach that an estimate may be a function of time, effort, and complexity. This is because a time-consuming activity is not necessarily hard work, a high-effort one is not necessarily slow, and a complex one is not necessarily ponderous or tough to do.  In short, the required pace of work can vary for each item, and estimates should take this into account during estimation in order to avoid underutilization or overload.          Log in or register to post comments",5665
Log in to reply,5665
Messages,6780
"09:01 am March 29, 2016                             HI TEAM,  I'm interested in Scrum and suggested to my Company to use more Scrum.  I'm learning and researching scrum for my Company and have found out below link that include 5 Subject areas and for each of area, they suggest 3 books to read  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…  So there are 15 books in total that I'm sure that I cannot read all of them in a short duration.  Definitely, I will read all of them if I have more time.   That would be great if anyone here who ever read some of them can recommend me which one is the best for each area so that I can focus a book for each area :)  1. Scrum Framework     - The Scrum Guide    - Agile Software Development with Scrum (Series in Agile Software Development) 1st Edition    - Scrum - A Pocket Guide (Best Practice (Van Haren Publishing))  2. Scrum Theory and Principles     - The New New Product Development Game    - A Leader’s Framework for Decision Making    - The Leader's Guide to Radical Management: Reinventing the Workplace for the 21st Century  3. Cross-functional, self-organizing Teams    - The Five Dysfunctions of a Team: A Leadership Fable   - Drive: The Surprising Truth About What Motivates Us   - Peopleware: Productive Projects and Teams (3rd Edition)  4. Coaching & Facilitation    - Coaching Agile Teams: A Companion for ScrumMasters, Agile Coaches, and Project Managers in Transition   - Agile Retrospectives: Making Good Teams Great   - Scrum Mastery: From Good To Great Servant-Leadership  5.Scrum at Large   - The Enterprise and Scrum (Developer Best Practices)   - Software in 30 Days: How Agile Managers Beat the Odds, Delight Their Customers, And Leave Competitors In the Dust   - Our Iceberg Is Melting: Changing and Succeeding under Any Conditions  Much appreciated in advance!  Vinh",6780
Log in to reply,6780
Messages,6774
"06:33 am March 25, 2016                             Hi,  Let's say a team is for the first time going to work in agile-scrum. No one on the team knows how to estimate in story points. They are thinking of effort in hours and trying to map it to story point but cannot. As this is the first sprint, no one knows what is the story point capacity of the team. With this in mind, please help me with the below questions.  1. How can the team estimate in story points 1, 3, 5, 8? I understand a story point is the reflection of complexity and effort but how can someone who is new to scrum understand this and give the correct story point? I guess in this case, it will be but obvious for every developer to think of effort in terms of hours but how does that relate to story points.  2. As this is going to be the first sprint, how can we decide how many story points can the team take up?  3. How is effort for analysis, development, testing, implementation, backlog refinement for next sprint captured in the story point?",6774
"11:14 am March 25, 2016                    Vishal,  This is a common experience with those starting out in Scrum, so take a breath.  I can tell you from my experience and understanding how I managed this with new teams:  1)  Firstly, there isn't such a thing as a correct story point.   It is whatever the team wants it to be.   That probably is even more confusing, so let me explain a little.  The story points simply represent categories of effort.   An “8” story is larger than a “5” story, but is smaller than a “13” story.   One approach is to have the team start out with a medium-sized story, and agree on what value that represents.   They can then begin working to estimate stories in “relation” to the first story.  Another approach is to have the team group all of the available stories in categories of similar size.   There are plenty of examples available on the internet to guide you through this exercise.   Almost always, the team will come up with no more than 5 categories of effort (usually 4-5).   Then just ask the team how they want to apply the Fibonacci scale to them (1-2-3-5-8, 3-5-8-13-21, etc).  It is critical after a few sprints to have the team briefly revisit their past estimates to reinforce the team’s understanding of what an “8” is, or a “3” is, for example.  2) For the first sprint, have the team estimate in story points, but don’t use them to determine how much work to accept.   Simply work with the team to have them collectively judge how many stories they feel they can finish in the first sprint.     The story points will not become valuable until the team executes a few sprints anyway, and a velocity metric can be identified.   Then the team can look at their velocity as a guide for how much work they can comfortably accept each sprint, and the PO can look at the velocity metric to estimate how much of the product backlog can get done by certain dates.  Important!   Estimates are just that, estimates.   They are the best guess based on the information currently on hand.   They are a forecast, not set in stone in any way.  3) The story points are only to capture the size of the effort needed during the sprint (development, testing, perhaps additional analysis) to complete the story according to the team's Definition of Done.   Pre-sprint grooming for current sprint stories, and grooming for future stories, are certainly activities that need to take place, but they are not captured in the story point estimation.   You can definitely come up with other means to quantify and report on those efforts if needed.           Log in or register to post comments",6774
"09:31 am March 26, 2016                    The first Sprint is a Learning Sprint. Whatever number of points the Dev Team will forecast, there is little chance that the mesured Velocity at the end of the Sprint will match this forecast.  Just guess quickly, don't waste too much time looking for a cristal ball, and move forward.  At the end of your first Sprint, you will have a mesured Velocity wich will really help the Dev Team to have a much better forecast for the second Sprint.          Log in or register to post comments",6774
"05:22 am March 28, 2016                    I say, Just go with your guts.  There is a high chance you will be wrong, even after a few sprints down the road. But as the team matures, you will eventually make it almost right most of the time.          Log in or register to post comments",6774
"08:37 am March 28, 2016                    Use this opportunity to set the right course and the right expectations. Development Team members are not meant to be story point accountants. As far as estimation is concerned, they need to forecast an increment for delivery which ought to be of value to the Product Owner. The purpose of estimation is to help a team get its arms around how much work it can do in a Sprint.  The best thing to do is to look at the totality of the proposed work and decide, as a team, if it is realistically achievable to deliver a corresponding increment, to the satisfaction of the Definition of Done, in the time-box proposed.  Estimates for individual items can be relatively sized on that basis. T-shirt sizing can work as it is qualitative, and keeps teams out of the weeds about what the numbers are. Sizes can be mapped to a schedule of points afterwards.           Log in or register to post comments",6774
"09:23 am March 28, 2016                     Posted By Olivier Ledru on 26 Mar 2016 09:31 AM  At the end of your first Sprint, you will have a mesured Velocity.  A common approach for calculating velocity is to average at least three sprints.   After the completion of a team's initial sprint, you would only have the number of story points they completed, in my opinion.   That is not representative yet of how much work the team can complete each sprint, especially with the number of issues and hurdles a team experiences during their first sprint.  I would not refer to the results of a single sprint as representative of a team's ""velocity"", used both as a team guide for understanding their throughput each sprint, and as a metric for Release Planning.          Log in or register to post comments",6774
"11:01 am March 28, 2016                    You cannot calculate velocity because velocity is a mesure.  You can estimate the capacity of the Dev Team for the Sprint, and after the Sprint, you can see if the estimated capacity matched the actual velocity.  And yes, for that estimate, an average of the N last sprint is probably more accurate that only the last sprint.  Around me, some team calculate an average of the 5 or 8 last sprints, without the best sprint and the worst sprint.          Log in or register to post comments",6774
"03:11 pm March 28, 2016                    Olivier, unsure about your statement that you cannot calculate velocity.   How else can you derive it?  Velocity is a reflective metric calculated by averaging the total amount of story points completed over the number of sprints completed.  If a team has three completed sprints of 65, 75, and 100 story points, then their velocity at that point is established at 80 story points (65+75+100 / 3).   Isn't that a calculation?  That ""metric"" of 80 can be used not only as a guide for the team in determining how much work can be comfortably accepted in the next sprint, but also as a forward-thinking metric for the business in estimating how much work a team may complete by a given date in the future.  By definition, to ""measure"" something requires comparison to an established standard (i.e. - dimensions (ex: meters), units (ex: liters), other people, etc.).   There is no set ""standard"" regarding velocity.     You can measure a team's completed story points against their known velocity, for comparison purposes, but the velocity value must be calculated first.           Log in or register to post comments",6774
Log in to reply,6774
Messages,5688
"06:30 am January 6, 2014                             Hi all at scrum,  I thought i would put together how my journey was to PSM and how it was for me.  This will give anyone taking PSM an insight to it.  I moved to a company that uses scrum so had no real scrum experience.  Only what was banded around on e-mails, so no real knowledge as such.  My main reasons I chose to do a course were as follows  1. Scrum is used in a lot of companies to make a difference, so wanted to find out how.  2. Just what is raw scrum? Not just ""scrum"" that people call scrum ""scrum-ish""  3. I didnt just want something that does not add any value or ROI, I wanted something to build on.  Having observed some things I really wanted to do a course, I wanted raw scrum, the real deal.  A big differenciator for me was the way it is used scrum vs scrummish in organizations.  For some reasons it starts as raw with all good intent but gets dilhuted along the way.  Why or how, I have yet to get to the bottom of but in time may have some answers or thoughts.   So by now we have understood why I wanted to, and the how i was going to do it.  Taking a course, you will study for two days raw scrum, as it was my plan.  Coming together in a group gave me time away from the office to immerse myself.  It was great to be in a class with people that could share experiences with, after  all scrum experiences differ from organization to organization.  This is gold dust to have for any potential new candidate seeking to learn scrum  If you dont have practical experience its going to be difficult, make no mistake.  Two days of study and discussion and exercises passed and having done a lot of courses  I can say that I feel that the course worked for me, I could not have done this self study.  My goals were achieved as I now knew what was raw scrum, not least the role of SM.  A role with no real weight but a lot of responsibility from end to end.  A role that you take part as SM in some ways but a member of development team in other ways.  A role that certainly isnt for the faint hearted.  I studied the scrum guide and took the open exam many times, averaging 95-100% on the open.  On the Forums I read of other peoples experiences and questions they faced.   This gave ne confidence, now if you do a course, some courses offer certification included.  One attempt to take it, the flip side is it only has a two week time on it so must take the exam  within two weeks of getting it, remember this.  So if you have no experience and do a course really only have two weeks to cram and sit the exam.  The exam is 80 questions in 60 minutes, so you really do not have a lot of time to play with.  No concessions are given between self study or course takers, the exam is what it is for everyone.  My first attempt at the exam I failed by one mark, the exam is a tough exam for new people into scrum.  On a plus to know 84% of something new is great, but really wont make you feel any better.  If you fail, ask for feedback from scrum or you wont progress in your learning.  You will not see the wrong answers just like you do in the open, its pass or fail.  The feedback is not in the form of the questions and answers you got wrong, but areas that you were weak in.  Of course there are the forums but if you do post something make it has substance if its a PSM question.  I went away hell bent on a second time pass with more study, more open and expanding the guide more.  I resat my exam and passed and if I'm honest was no easier the second time around for an exposure to resit.  Dont expect the same question set, its isnt going to happen so you must know your stuff.  Some tips on how to get the best out of the forums and PSM prep.  Study the scrum guide, have the ability to expand anything in it (Its a Framework not an all inclusive).  There are some very experienced people on here if you are really struggling use the forums.  You will see lots of can you tell me the answer to Q1-Qx, an answer without knowledge behind it is no use.  Do you want to be a SM or just someone who can pass the exam knowing questions?  Take the open, and keep taking the open and keep taking the open.  Everyone is different and their study methods, be it self learn or course.  Everyone has different levels some are experienced SM, some with no experience as SM.  No concessions for experience or no experience, course of self study.  If you do fail, dont give up its a long way to go jut just call time, especially if your so close.  I have no endorsment to anyone, it's merely an insight into how I found PSM with no experience and how I got there. Without any doubt before I contemplate PSM2 I will gain a few years of practical experience.  Am I glad I took PSM, for me yes as its one of the toughest exams out there at present and shows when you take it, good luck on your quests to be SM and the route to PSM qualification.   Will take a note to thank Ian who gave me some guidance me on a question i did struggle with, shows what experience we have in the forums here.  michael",5688
"07:30 am January 6, 2014                    Hi Michael,  thanks for writing.  You just put it right.....   I did not pass the first time and it took a while to get ""behind the scene"", meaning, knowing what they are up to with the questions.  I am very confident to pass the test at second attempt.  Best for now  Frank          Log in or register to post comments",5688
"06:46 am January 8, 2014                    My advice, from the point of view of someone that does not work with scrum yet and only studied for the exam:  - Read the Guide;  - Take Open Assessement;  - Participate in the Forum. This is the best way to get a bit of the experience from people that live scrum every day.          Log in or register to post comments",5688
"03:43 am May 8, 2014                    Hi Michael,   As Fabio very correctly mentioned that Scrum has different flavours, now its upon you which one you like.   For example, in Scrum Alliance they teach that a S.M has no Management role where as Scrum.org teach that a S.M has a Management role. As he is the one who remove impediments :)   If you preparing for PSM or Scrum.org exams or scrum implementations than it best advised that you stick to there scrum structure, as now these days fusion of scrum is coming in market.   Best check what you want than compare then execute the core of scrum remain intact. Keep on constant change. Anything which is constant / fixed in not scrum :)  Thanks,  Kapil   http://scrum-mines.blogspot.in/          Log in or register to post comments",5688
"11:51 am March 1, 2016                    hi all, I saw the fee for PSM1 is $150. What is the fee for second attempt ???          Log in or register to post comments",5688
"05:07 pm March 3, 2016                    This is exactly why someone needs to focus on creating a AG-BOK. I believe the PMI is the only one close to attempting this.          Log in or register to post comments",5688
"01:50 am March 28, 2016                    Is there a time limit in which PSM 1 exam must be attented after registeration?          Log in or register to post comments",5688
"10:55 am March 28, 2016                    Hello Abhinav,   Thank you for your interest in Scrum.org! Please kindly note that Scrum.org Professional-Level Assessment passwords no longer have expiration dates.   You may also find answers to other frequently asked questions at our Support Center here: http://support.scrum.org/   Enjoy your day!          Log in or register to post comments",5688
Log in to reply,5688
Messages,6776
"04:27 pm March 27, 2016                             Is there really a 14 day test period within which i should take my PSM1 test? I see everybody posting the 14 day period ( Which previously existed for the PSM1).   Im sorry, maybe i missed something . but where exactly does it say u have to take the test within 14 days?  ---------------------------------------------------------------------------------------------------------------------------------  Details  Fee: $150 per password. Each password is valid for one attempt only at the assessment.  Passing score: 85%  Time limit: 60 minutes  Number of Questions: 80  Format: Multiple Choice, Multiple Answer and True/False  Difficulty: Intermediate  Language: English only  PSM Subject Areas  Required course: None  Recommended courses: Professional Scrum Foundations or Professional Scrum Master  Practice Assessment: Scrum Open  When you purchase a password, it is set up in our system and emailed to you within one business day. All Students in a PSM or PSF course are emailed a password upon completion of the course (typically within 3-5 business days).**  Certification  If you pass the PSM I assessment you will receive the industry-recognized ""PSM I"" certification, along with a PSM I logo that you can use to identify your achievement. In addition, your name will be posted publicly for colleagues, managers, and potential employers to see.   Unlike other Scrum certifications that require only class attendance, Scrum.org certification requires a minimum score on an online assessment. Attending a course is neither required nor sufficient for certification. This gives Scrum.org certification teeth and ensures that it has true value in the marketplace.  Microsoft® uses the PSM I assessment to validate knowledge as part of its Silver and Gold Application Lifecycle Management (ALM) competencies.  -------------------------------------------------------------------------------------------------------------------------------------------",6776
"10:53 am March 28, 2016                    Hello Adwaita,   Thank you for your interest in Scrum.org! Please kindly note that Scrum.org Professional-Level Assessment passwords no longer have expiration dates.   You may also find answers to other frequently asked questions at our Support Center here: http://support.scrum.org/   Enjoy your day!          Log in or register to post comments",6776
Log in to reply,6776
Messages,6722
"11:45 am February 29, 2016                             Greetings to all!!  I will make a first implementation of Scrum on my Company, im a little bit nervous, any tips?",6722
"01:15 pm February 29, 2016                    If you want feedback, you must provide more details about your company and what you are trying to do.          Log in or register to post comments",6722
"02:42 pm March 16, 2016                    I will try Scrum, first on a single project where the client and the PO are internal. We have a little team with 9 members. The main problem is that they arent multi functional, and exist a little paralelism on their tasks. My objective is decrease all external interferences i can.   Besides that, i need a tool for scrum management and dont know which to use. Im trying a Redmine plugin to scrum.   All hints are welcome.          Log in or register to post comments",6722
"05:39 pm March 16, 2016                    A electronic tool is probably not the first things you need !  It won't help people to build efficient interactions.           Log in or register to post comments",6722
"08:11 am March 21, 2016                    What the first things i need?   I know the theory, i need hints for first implementation!  Tnks for  the tips!!!          Log in or register to post comments",6722
"06:37 am March 22, 2016                    The first things you need is:  - management that had a SCRUM training  - team members, SCRUM master and PO that had a SCRUM training   - task board  (physical or erlectronical, where I would also recommend a real physical board for the start)  - PO that had time to prepare some user stories (a backlog)  - a definition of done,   - a sprint length            Log in or register to post comments",6722
"06:39 am March 22, 2016                    Nice!!  Thanks Joerg!!          Log in or register to post comments",6722
"05:01 am March 23, 2016                    My tip : looks for volunteers :-)           Log in or register to post comments",6722
"06:28 am March 24, 2016                    What is your current SW methodology used by your team for other projects?          Log in or register to post comments",6722
"10:00 am March 28, 2016                    Hi Amir.  There is no methodology. They simply do the tasks that they see on Redmine. Its like a waterfall model with a lot of paralelism.          Log in or register to post comments",6722
Log in to reply,6722
Messages,6772
"07:10 am March 22, 2016                             Hello,  My understanding was Scrum does not allow any additional meetings or events not defined within scrum.  However in the quiz below in learning mode, it  is recommended to have additional meetings if it helps to achieve the sprint goal.  http://mlapshin.com/index.php/psm-quiz/learning-mode/  I would like to understand what i am missing here in terms of my grasp of the rule here.  Regards  RS",6772
"03:02 pm March 22, 2016                    Ramakrishnan,  It is always risky to rely on 3rd party Scrum Master assessment tests.  That said, what meetings did it call for?   Who were the attendees?   Was there an explanation of the answer, besides ""whatever is needed to meet the Sprint Goal""?  Keep in mind, Scrum does not explicitly disallow meetings outside of the prescribed Scrum events.   The Scrum ceremonies should be sufficient.   If additional meetings are needed in the sprint, that is a good topic for discussion during the team retrospective: ""Why did we need these additional meetings?""          Log in or register to post comments",6772
"08:31 pm March 22, 2016                     Posted By Ramakrishnan Subramanian on 22 Mar 2016 07:10 AM  Hello,    My understanding was Scrum does not allow any additional meetings or events not defined within scrum.    However in the quiz below in learning mode, it  is recommended to have additional meetings if it helps to achieve the sprint goal.    http://mlapshin.com/index.php/psm-quiz/learning-mode/    I would like to understand what i am missing here in terms of my grasp of the rule here.    Regards    RS  Scrum allows additional meetings outside of scrum.   The prescribed events in Scrum are there to minimize the extra meetings not defined in Scrum.          Log in or register to post comments",6772
"06:36 am March 23, 2016                    Thank you Timothy and Jemer. I think i am getting the spirit of the answers, there is no explicit prohibition of additional meetings, but it's good to retrospect why are these required in addition to events.          Log in or register to post comments",6772
"07:56 pm March 23, 2016                    One of the things our Scrum teacher taught us over the course of the two day class was the ""Do What Makes Sense"" loosely noted in the Scrum Guide.  The way I look at this from a development team perspective are knowledge transfer sessions.  Typically one or two developers may know a bit more about a specialized topic. I wouldn't necessarily classify that as a meeting, but it could require a group to block off a period of time on their calendars. It facilitates the completion of a task/sprint item/product backlog item in order to keep the sprint moving forward.          Log in or register to post comments",6772
"09:34 am March 26, 2016                    you mean : ""Individuals and interactions over processes and Tools"" :-)  +1          Log in or register to post comments",6772
Log in to reply,6772
Messages,6766
"08:11 am March 18, 2016                             What strategy would you recommend for the following situation.  Web development domain. 7 members of Development Team. Team is Cross-functional, with T-shaped people. They have all it takes to build an Increment. There is a specialist whose work can't be done by anyone else - UX designer. He does everything in timely manner, good quality etc. His work consists of helping other team members implement visual designs as well preparing visuals for upcoming Sprint (part of backlog refinement activities). His occupancy reaches 50% of his time on average.    When I was in such situation, I struggled with:  – sense of team belonging from UX designer point of view. He didn't feel as part of the team.  – UX designer perception, that his potential is not fully used  – allegations that such team composition is too expensive  Have you ever met similar situation? Do you believe it's common?   One obvious solution is to teach UX designer to do things like testing, writing documentation etc. But let's assume he's not equipped with skills to perform such activities and there is no time to train him.",6766
"06:11 am March 22, 2016                    I am working as Agile Coach, we are doing SCRUM in several teams (you could call it large scale SCRUM) and we face similar situations, e.g. with architecture support,  UX support and documentation support. I would say it works fine as the teams accept the situation.   My proposal:   Ask yourself and most important ask the team including the UX designer (in a retrospective) how they judge the situation. If the team has suggestions to improve the situation try to follow up, e.g. by involving management.          Log in or register to post comments",6766
"09:26 am March 23, 2016                    Bartek, you mentioned that your team is cross-functional with t-shaped skill sets, but your UX designer is still I-shaped?   Is that correct?  I have had situations when starting out with Scrum where specialists ""floated"" from one team to another as needed.   That could be one option, if the near-term goal is to leverage their expertise to complete work without taking on any learning activities.  I agree with Joerg that another option (and always an option!) is to turn the situation over to the team and ask what they feel about the situation and if it can be improved at all.  In addition, what does the UX Designer feel about the situation?   Is he interested in moving out of his comfort zone to learn new skills?   Is the team interested in learning some of his UX Design skills?  The one item that raises a flag to me is your ending comment that there is no time to train.   Any product development effort that does not allow for slack to support learning/cross-training is an unhealthy approach, and will simply perpetuate existing issues and concerns without providing the availability to remedy them.  I am fond of a quote from Albert Einstein: ""We cannot solve our problems with the same thinking we used when we created them.”   We need to experiment (try new approaches, inspect, adapt, etc), in order to address our issues.          Log in or register to post comments",6766
"04:32 am March 25, 2016                    Thanks for your inputs guys.  Seems like you both lean towards turning this situation back to the team and UX designer, and ask about their perception. I included it in original question: he didn't feel like a member of the team, and thought his potential is not fully used.   For the slack time for learning, that was just an assumption to simplify the case. I intentionally put this in order not to consider it as an option. I know of some obvious solutions:  - I can ask him to learn other activities  - he can become a member of 2 teams  - he can leave the team and other team member would perform his tasks  None of them is satisfying. But seems like pushing the team even more to come with acceptable solution is the strategy to be taken here.          Log in or register to post comments",6766
"05:25 am March 25, 2016                    I have one query, who picks the development team ?          Log in or register to post comments",6766
Log in to reply,6766
Messages,6759
"10:41 am March 16, 2016                             Hi there.  Very good day to all of you. May I ask your guidance on which certificate is good for scaled scrum?  - cost  - industry recognition  - ease of preparation  I am confused between SPS from scrum.org, SAFe Agilist from SAFe Academy, Disciplined Agile Delivery",6759
"08:05 pm March 19, 2016                    Hi Remily,  My two cents...  Independently from the certification, your knowledge behind it is the engine that will take you longer and farther in the journey. Go beyond the basics, go to the origins (date to say, even TPS) and cross-check the references and insights you might have.   On my specific case, I have CSM from SA, but I'm preparing myself to get SAFe Agilist, PSPO I and SPS. My area of interest is scaled Agile, so it makes sense to have different views, for not two scenarios are the same. Also LeSS could be a possibility, but the striking simplicity of Nexus caught my attention. For now.  Look for people that are serious about Agile (e.g., Ken Schwaber), cross-check the material and book references and pick one according to availability and cost. I would say anything endorsed by Mike Cohn is good. Also Don Reinertsen's The Principles of Product Development Flow is a must read.  Cheers  Gus           Log in or register to post comments",6759
"02:13 am March 23, 2016                     Love the excellent book  Don Reinertsen's The Principles of Product Development Flow.  Thanks for the reply - Gustavo!          Log in or register to post comments",6759
"06:25 am March 23, 2016                    No worries  Cheers  Gus          Log in or register to post comments",6759
Log in to reply,6759
Messages,6760
"11:20 am March 16, 2016                             Hi,  I am a Scrum Master and got a team with developers and testers. Agile testing should mean that testers no longer go for finding bugs, but to prevent bugs, with collaboration from the very start of the story. The team members are aware of that, still somehow the usually 'forget' to talk to each other at the start of a story, and real communication only starts when 'things happen' around the story and there is already something to test. This is too late i think.  I try to push them in the direction of granulating stories into small testable tasks, but i still feel that we would need some concrete practice, a ritual that would fire up communication around the story - at the very start.  Backlog refinement is not creative enough and not close enough to the implementations itself, so it is not enough.  Any thoughts?",6760
"11:46 am March 16, 2016                    > i still feel that we would need some concrete practice, a ritual that would  > fire up communication around the story - at the very start.   How about a test-first approach using Behavior Driven Development (BDD)?          Log in or register to post comments",6760
"02:25 pm March 16, 2016                    Ive been thinking on that, yes, the problem is none of us have ever seen that :)  I tried to poke around a bit, suggesting we should give it a chance, but we feel that having no help at all, we would only misuse it.          Log in or register to post comments",6760
"03:47 pm March 16, 2016                    > Ive been thinking on that, yes, the problem is   > none of us have ever seen that :)   >   > I tried to poke around a bit, suggesting we   > should give it a chance, but we feel that having   > no help at all, we would only misuse it.  Why not start off with 1 or 2 BDD test cases, and determine as a team to learn from the experience and to improve coverage further. It isn't a matter of ""poking around"" and ""giving it a chance"". The Scrum Values include commitment, focus, and courage...and BDD has nothing to prove to you. It will only ever be what you make of it.           Log in or register to post comments",6760
"07:24 am March 17, 2016                     It will only ever be what you make of it.     There is the problem. The fear is that with zero experience we wont be able to make any good for it. But thank you for the suggestion, it actually would help us I think and we should start doing it.           Log in or register to post comments",6760
"03:57 pm March 18, 2016                     Posted By Zoltan Dosa on 16 Mar 2016 11:20 AM  Backlog refinement is not creative enough and not close enough to the implementations itself, so it is not enough.   Perhaps you have identified an impediment to quality?   Your team should not be glossing over at a high level the stories you intend to make available to be offered to your team.   Your team should also refrain from accepting the status quo without looking at ways to improve.  A few practices that may help you:  1)  Place a greater emphasis around acceptance criteria for a story  2)  Try to use the ""Given...When...Then..."" structure for your acceptance criteria  3)  Involve your testing team members when you are grooming the story and creating the acceptance criteria, not after the story has already been accepted into the sprint.          Log in or register to post comments",6760
"02:44 am March 23, 2016                    One of the teams that I am coaching had the same problem: Communiaction between testers and developers happened too late. In a retrospective the team members came up with the idea to have a sync meeting (dev-test) for each user story at the very begginning of the sprint. To remind themselves they write a taskcard for every user story and put it on the board. Best case it is moved into ""work"" the first day of the sprint.  That's the first step towards TDD/BDD, so you could give it a try. I mean if the testers know what to test they can start writing the test...          Log in or register to post comments",6760
Log in to reply,6760
Messages,5775
"01:53 am March 3, 2014                             Hello  I was trying to look up for information about the PSM 1 examination process, but I couldn’t find what I was looking for. Hence, hoping to get some responses on this forum :)  What is the process after purchasing the password? I understand I will receive an email and I need to take the assessment within 14 days of receiving the password. But is the examination online on the internet? If yes, how does it remain fair to ensure that people are not copying or seeking help while giving the exams?  I hope I am not missing something very basic which is already listed on the website somewhere. I have done my PMP wherein the rules are quite stringent since the examination is taken at some registered external agency.  Regards  Satish",5775
"04:01 am March 3, 2014                    Hi Satish,  it is an online assessment and this is the link:  https://www.scrum.org/Assessments/Professional-Scrum-Master-Assessments…  Scrum.org does not spend the same effort as PMI to avoid cheating. As far as I understand it, the purpose of the test is to assess your Scrum knowledge easily without much effort.  Best, Ludwig          Log in or register to post comments",5775
"05:16 am March 3, 2014                    Hi Ludwig  Thanks for the quick response.  You answered my query. But this is almost like an open-book examination. Surely, people with moral values may not cheat :) However, its quite easy to have some knowledgeable person beside you while giving the exams.  Somehow, I kinda lost interest after reading this. Things are often not valued when its easy to get, though that's just my personal opinion  Regards  Satish          Log in or register to post comments",5775
"02:07 pm March 3, 2014                     Hi Satish,  You could have someone with you at the time of exam but doubt they would be with you when you are a scrum master for the journey onwards, which is where you could come unstuck.  Then you have the possibility someone holds the PSM that didn't cheat in the team and can smell a rat when strange things are said by the scrum master.  I guess the only person you would be cheating is yourself and that of your team and organization with the knowledge and value that Scrum gives people as a framework.  You have to keep in mind that even people with experience can fail the exams (PSM I and PSM II).  Is PSM valued? I certainly think so and have come across people with much more experience of the framework than I had, their version of scrum differs to what is actually scrum.  This is where understanding it reaps rewards as you can tell who does and who does not know it, irrespective of what they say or courses they say they have attended.  In order to make it work for the teams and the organization, you should understand it as a scrum master. The exam will test if you do know it at a basic level, and then the journey afterwards will really test you with the teams as some teams are very experienced and will play ""spot the imposter"".  Michael           Log in or register to post comments",5775
"01:21 am March 4, 2014                    I think this is a case of Intrinsic Motivation v/s Extrinsic Motivation.   Personally, I value PSM more than CSM or ACP.          Log in or register to post comments",5775
"03:24 pm March 5, 2014                    [Opinion]   I have taken various exams / assessments over the years. This, as a school / college student, as well as a Scrum practitioner. I have found that whenever a Professor has allowed for an ""open book"" or ""cheat sheet""  some things happen --   A) The Exam tends to be more difficult  B) The emphasis is more on how a student applies concepts  C) Expecting the student to memorize definitions / concepts wasn't the intention and didn't help  On the PSM I --   While many, including me, will confirm that some of the questions are on the Open assessment, there isn't anything conceptual I recall that needs memorization. The assessment is to help gauge your understanding of the framework.   .  .  .  .  Moving on to the PSM II --   Although, this wasn't explicitly asked, an open book, etc. will not really help. The questions are essay based and really look to your understanding and application of the framework. You will not find answers to the questions asked in any particular text, as far as I could recall.   .  .  .  I have certifications from the ScrumAlliance, Scrum.Org as well as PMI. Irrespective of this, what I think will matter is your continued journey into the path to agility and how you perform as a team member at your workplace.   I've never had anyone ask me whether I used a book / internet, etc. while taking the assessment (so far). Rather, I've had people approach me on Scenarios where they needed to bounce an idea. OR I've been faced with scenarios that some of the fundamentals of Scrum are being misinterpreted or are not understood.   I believe that a lot of what I have written may resonate with Bhuvan or Michael.   On value -- I do have my notions of value, but think this goes beyond the examination process. Apologies for the lengthy post, but if you did read this far, I hope some of this was of help.          Log in or register to post comments",5775
"12:51 am March 6, 2014                     Hi Nitin, Bhuvan, Michael  Thanks indeed for sharing your views. What you say, does make sense. Of course, I am yet to start the AGILE journey so my thoughts may differ in some areas. But nevertheless, I do agree that open-book assessment will not help in scenario based questions. Some simple objective-based questions can be found in the book but not the questions which test the understanding of the concepts.  Ofcourse there will be people whose motive is not learning or improving. It could be just to get a certificate. They could cheat ..but then I am sure the gain would be short-lived   Anyway, thanks for the responses.           Log in or register to post comments",5775
"12:44 pm March 6, 2014                    Even though some call PSM as an open book assessment, I don't think one have enough time to refer to a book and answer the questions. At the end you may run out of time and may not be able to succeed.  When it comes to having someone helping you while you take the exam, do remember that Scrum is all about self-managing. So for me it doesn't make sense to keep an individual in a controlled environment like a Prometric Testing center to take a Scrum certification.          Log in or register to post comments",5775
"01:37 pm March 6, 2014                    I suppose that the certifications effectively belong to the holder of a certain email account, i.e. whichever one is used to register at scrum.org for an exam. It's up to the holder of those accounts to proctor their usage, including when taking the tests.  I could register an email and scrum.org account for my dog, who died 20 years ago, and then take PSM I and II on his behalf. If successful, I expect his name would duly appear in the certification registers. All that means is that the holder of those accounts allowed successful tests to be taken.  As long as this level of assurance is understood and accepted, there isn't a problem.          Log in or register to post comments",5775
"06:03 pm March 17, 2014                     Posted By Satish Nair on 03 Mar 2014 01:53 AM  .........But is the examination online on the internet? If yes, how does it remain fair to ensure that people are not copying or seeking help while giving the exams? ......  Scrum is based on trust.  ;-)           Log in or register to post comments",5775
"12:51 pm March 22, 2016                    Hello Satish  Thank you for raising this question.  I love the wisdom of Ludwig, Michael and few more on the responses.  I came from west part of world, especially from India :) and my brought up enforces me to ensure the credibility of exams.  I still expect the Scrum.org to add more exam check points in near future without compromising the online exam facility (some stuff like, remote proctor based exams). This way the corporate talent management team (recruitment team) could have more reliability on candidate certification (helps on selection process :p.  Thanking you  Arun          Log in or register to post comments",5775
Log in to reply,5775
Messages,6771
"07:24 am March 21, 2016                             What is the appropriate scrum certificate for agile tester?",6771
"08:46 am March 21, 2016                    Certifications are broadly aligned to role: PSM for Scrum Master, PSPO for Product Owner, and PSD for Development Team members.  From your reading of the Scrum Guide, which of these roles would be most likely to involve testing skills?          Log in or register to post comments",6771
Log in to reply,6771
Messages,6765
"06:59 am March 18, 2016                             It is not recommended that the Product Owner and Scrum Master be the same person on a Scrum Team. Although this is not strictly forbidden, the potential for a conflict of interest is significant.  To what extent does this potential for conflict of interest remain significant in a Nexus Integration Team? At the level of product integration, does it become more reasonable (i.e. less unreasonable) for the Product Owner to also be the Nexus Scrum Master? Assume that the PO has the requisite Nexus SM skills and understands how the Nexus framework ought to be enacted.",6765
"02:02 pm March 18, 2016                    Ian,  My view is - As the scale increases, the potential for vested interests, less transparency, demand for managing additional overhead increases. Given that, while we can't recommend the concentration of responsibilities at lower scale, we certainly can't go for it as the scale goes up.  Though there is no direct reference to this in scrum guide, I remember Ken Schwaber, Roman Pichler, and few more writing the ""NO COMMON ROLE PLAY"" in certain terms elsewhere.  Reproducing the reasons from my book below, to explain about the potential of concentration of responsibilities and why it could lead anti-self-org:  Considering the primary job of each of these roles - a Product Owner wants to maximize/optimize the value of Development Team’s work. It is possible for them to push for “more work” while compromising on definition of ""Done” or technical quality requirements. They may also overlook the Development Team’s empowerment of deciding for themselves how much work they can select for a Sprint.   In such conflicting situations, a Scrum Master teaches both the Product Owner and the Development Team about their empowerment and balances. So, we can see that there should be situations involving conflict of interest if one person plays both roles. .  The issue is not about who will play what role. By doing any of that, are we going to have Scrum or not - is the question.  Think about the fundamentals of Scrum. It is risk reduction framework for building complex products. Scrum team is not just self-sufficient. It is also built in instability with respect to responsibilities. The risks and subjectivities associated with traditional one man centric Project, are mitigated by distributing the responsibilities between three roles. Now, what happens if you bring Scrum Master and Product Owner under single hat? You can sense the concentration of responsibilities. It increases risk and reduce self-org. Will it be Scrum?          Log in or register to post comments",6765
"05:35 am March 20, 2016                    Here is a scenario which I hope may illustrate the point I am raising.  Suppose company X provides a software product...a suite of office applications. The suite consists of XWriter, XSheet, and XPresenter. Each application in the suite can be sold and used independently, but they are developed and released as a suite. They share common versioning, a common API and object architecture, and there is a common backbone of components.  Each application is therefore a separate product, but they are integrated into a composite product increment which is the entire suite.  In this type of composite-product situation, a Nexus Integration Team is tasked with assuring the integration of component products. Since each component product is discrete and usable in its own right, the problem of integration is one of maximising the value of how delivered products are used.  To the extent allowed by this example, the potential for conflict of interest between Product Owner and Scrum Master roles might possibly attenuate at scale. At the very least, assumptions regarding what the conflict amounts to in a Nexus may deserve some reconsideration.           Log in or register to post comments",6765
"06:57 am March 21, 2016                    Ok. I get that. Assuming that the potential conflict goes down - remember this is still an assumption and the famous saying in under siege II 'assumption is mother of all ***' - the nexus still needs to inspect and adapt this case.   Interestingly, the statement in nexus guide is slightly open about the composition too ""Composition of the Nexus Integration Team may change over time to reflect the current needs of a Nexus""  Having said that, I see that the bandwidth of PO is going to be more demanding in scale and similar is the case for Nexus SM due to the problems of new order in scale and his/her responsibility to coach the teams navigate them. Curious to know why you want to try this and did you get a chance on the ground to see any insights          Log in or register to post comments",6765
"08:34 am March 21, 2016                    > Curious to know why you want to try this and did you get a chance on the ground to see any insights  It's the other way around. I have preferred to avoid vesting the Nexus PO and SM roles in the same person. A Nexus Integration Team is still a Scrum Team, and the experience of Scrum Teams is that there will be an unreasonable conflict of interest.  However, this amounts to received wisdom, and the evidence I am seeing is that the potential for a conflict of interest attenuates (or changes significantly) at scale. Specifically, if there is a Nexus Scrum Master who is *not* the PO, I have observed that the SM will be heavily dependent upon using the PO's skills and influence to resolve integration problems. Essentially, those problems are less likely to be technical and more likely to be a matter of product value and configuration. The SM is very close to being a bottleneck if he or she is another person. However, I don't have enough data yet to assert a pattern or anti-pattern.          Log in or register to post comments",6765
Log in to reply,6765
Messages,6678
"04:29 am February 1, 2016                             Hi all,  i am learing for the PSM I and i have some comprehension questions.   I would be very grateful if you could help me.  First questions: Is one of the activities which has a product owner to do, to providing the Development Team with detailed specifications?  I am not sure, from my point of view its a part of work which has the Development Team to do, but on the other hand the product owner has the contact to the stakeholders and therefore the must search/ask for the detailed specifications.  Am I right in my assumption ?  I think it will be followed more questions later the day :)  Thanks for you help!",6678
"09:25 am February 3, 2016                    Hi Jens,  According to the scrum guide the Product Owner is responsible for Product Backlog Management which includes:  - ""Clearly expressing Product Backlog items"" and   - ""Ensuring the Development Team understands items in the Product Backlog to the level needed""  This means that the product owner would be responsible for getting clarity on Product Backlog Items and clearly expressing them to the team.  That being said, it is both a responsibility of the PO and the Development Team to take part in Product Backlog refinement for up to 10% of each sprint. During refinement items will be decomposed and planned to a level that the team believes they can begin work on the item.  In short, while the product owner may bring the initial tasks to the team through the Product Backlog, making them detailed is the responsibility of both the PO and the Dev Team.   Hope that helps!          Log in or register to post comments",6678
"11:13 pm March 20, 2016                    Thanks Jade for the answer and who is responsible to update requirement, JIRA backlog item.  I assume that PO will explain to Development team and one of member will in charge of documenting and updating them for team to keep track?          Log in or register to post comments",6678
Log in to reply,6678
Messages,6716
"06:17 am February 27, 2016                             Hi Guys  I wrote an ebook about Scrum, I should be thankful if you could DL and make a review so I would get some professional feedback. Thanks.   http://www.amazon.com/gp/product/B01BT7NH9I?redirect=true&ref_=cm_cr_ry…",6716
Log in to reply,6716
Messages,6714
"05:41 pm February 25, 2016                             A situation arises where we have for example 21 Story points currently planned for a product. Now, suppose we plan for 3 sprints based on a velocity of 7. the team manages to complete  12  story points by the end of the 2nd sprint. The team predicts that they can handle another 6 story points in Sprint 3. So, 3 story points remain. The team is confident that the 3 story points won't fill up a whole new sprint. They suggest to the scrum master that Sprint 3 shall be extended a little longer to fit in the 3 story points as well !! (Scrum Master knows that that's just wrong as per Scrum, as it impacts the velocity, etc).   What do you think they should do in this situation? If the team happens to complete 6 story points by the end of the 3rd sprint, and the 3 story points indeed do remain to be done, shall they start a new sprint with just 3 story points? Or shall they God-forbid extend the sprint? :)  The remaining 3-story point story is quite important too (not as important as prior stories though), so it's ideal to have it ready for release ASAP (rather than wait until an uncommitted sprint is over).  Note that this is very similar to an actual situation I am facing as a Scrum Master / PO. There's a lot of pressure from a lead developer on the team to extend the sprint and be ""flexible"". In light of this, my suggestion is to keep the sprint length the same, as I don't believe in extending Sprints whatsoever. But, rather than starting a new SPRINT of the same length, finish that 3 story point outside of a sprint and have a short review right after (e.g. this 3 SP won't count in our burndown and velocity reports), just for the sake of the urgency of releasing it ASAP.  I'm not sure if this is the best approach as I am still thinking over it. What do you guys think?",6714
"12:10 pm February 26, 2016                    > ...I don't believe in extending Sprints whatsoever.  > But, rather than starting a new SPRINT of the   > same length, finish that 3 story point outside   > of a sprint and have a short review right after   > (e.g. this 3 SP won't count in our burndown   > and velocity reports), just for the sake of the   > urgency of releasing it ASAP.   Why not allow a new Sprint to start with the same length, even if only a 3 pointer is forecast for delivery? Why don't you want it to figure in burndowns and velocity? What actual problem do you hope will be solved by conducting this work outside of a Sprint timebox?          Log in or register to post comments",6714
"01:16 pm February 26, 2016                    The thing is, that 3 story point story, for example, can/will be finished before half-way through the sprint. So what will the team do for the rest of the sprint if we are to stick to the same actual sprint length? Normally in these scenarios you add more work from the backlog to the sprint, but the backlog of that product would be empty in that case, and a new product would be the next focus for this team, with a backlog refinement as the next step.   So, my point is, the team could technically handle more than 3 SP in that sprint, and the reason the velocity would be 3 for that sprint is simply lack of work. I prefer not to have this impact the overall velocity calculation.   On the other hand, that 3-sp story is relatively important. So it should be released as soon as possible rather than wait for the end of the sprint to do the review.   In reality, in my scenario, there's actually some lower priority work that can still be done in the extra sprint to keep the team busy, but then again, that feature is more important, and it's prefered to release that an hit a firm limited release window than delay it and release a few weeks after.  So you see, the problem is we want to review and release that story on day X after it's done, rather than wait for day X+Y on which the sprint time expires.          Log in or register to post comments",6714
"01:33 pm February 26, 2016                    > The thing is, that 3 story point story, for example,  > can/will be finished before half-way through the sprint.  > So what will the team do for the rest of the sprint  > if we are to stick to the same actual sprint length?   Assuming that the Goal for that Sprint has been met once the 3-pointer is complete, the team can do whatever they want. They could even start work on a completely different initiative. The Sprint timebox would simply be left to expire.   > I prefer not to have this impact the overall velocity calculation.   Why not? What harm could it do, if there are no more forecasts to be made for that product?  > ...the problem is we want to review and release  >  that story on day X after it's done, rather than wait  > for day X+Y on which the sprint time expires.  You can do that. You can hold a review and effect a release of the increment as soon as the Sprint Goal has been met. That's the time to do it, so value does not depreciate. The Sprint timebox can't be abbreviated, but it can be left to expire.          Log in or register to post comments",6714
"02:56 pm February 26, 2016                    Nima,  You are correct, in that is is highly discouraged to adjust sprint lengths to accommodate sprint work.   Managing the 3-pointer outside of the sprint doesn't gain you or your team anything except create a lot of unneeded administrative overhead and management.  To address your immediate concern, a team does not have to wait until the end of a sprint to release work into production.   If a story is finished, satisfies a team's DoD, and is production-ready, the option should always be there to release to prod at any time afterwards, even in the middle of the sprint.  So we're apparently doing some hand-wringing over what amounts to a few days.   Keep in mind that the team may still complete the 6 points in your Sprint 3 early, and have capacity to also complete the 3-pointer that you are worried about.  Reviewing your scenario, there are more pressing questions which I believe may be leading to your issue:  1) Why are you performing as both the SM and the PO?   This is a very unhealthy dynamic (conflict of interest) that Scrum expressly disallows.  2) Why aren't there groomed stories in the backlog besides the 3-pointer that would finish up that product version release?   If the team were diligent in grooming each sprint, there would not be a shortfall of ready-for-sprint stories, even if there were another ""project"" involved.  3) Why couldn't that 4th sprint involve the 3-pointer, along with all of the grooming activities needed to prepare stories for the next ""product"" for future sprints?   This grooming work needs to take place anyway, and should have already taken place.   Stop getting hung up on the team velocity metric as an indicator of what a team should be doing.   Velocity helps a team understand how much the may be able to do, and it helps the Product Owner estimate how much work may get done over an extended period of time, and plan accordingly.  You are suffering some pain as a result of not ""priming the pump"".   Good discussion for your retrospective - ""What can we do to ensure that there is always a supply of groomed ready-for-sprint stories to be offered to the team?""           Log in or register to post comments",6714
Log in to reply,6714
Messages,6694
"06:31 pm February 10, 2016                             My company has implemented a new process of having the team be responsible for the Definition of Done inside of the sprint.  In the Sprint Review meeting the PO is shown the work for the first time and they go through each issue in front of the team and then make comments on the issue e.g. ""does it work as intended. if not, how? Defect created...""  Reading lots about Scrum this doesn't seem to be the ""Scrum"" was to do things, in fact a lot of resources explicitly say that having the review meeting as an acceptance meeting is a bad thing and it should be about feedback.  The problem with this is when should the PO be seeing the work? When do we accept/reject a sprint?  We currently don't have the PO testing in a sprint because of a few reasons:  - If a PO is testing during a sprint then the ownership of making sure issues are understood isn't on the team, they could half understand and just implement something and then get an explanation from the PO after they've showed it to them.  - There's also less need for a team to test their own work because they've got the PO there to catch things.  - The PO has a lot of things to do during the sprint e.g. Backlog grooming, meeting clients, if we add in testing during the sprint to this then there may be too much to do.  Again these are all assumptions we have made so any thoughts on these would be extremely helpful.",6694
"10:13 am February 11, 2016                    > The problem with this is when should the PO be seeing the work?  The PO should have a view of the work throughout the Sprint, as this is the best way to control delivery risk in a timely manner.  > When do we accept/reject a sprint?   A Sprint is a time-box which occurs and then expires, it is not something to be accepted or rejected. An increment must be delivered by the end of the Sprint which is of release quality. The decision whether or not to release that increment is a matter for the Product Owner.          Log in or register to post comments",6694
"08:15 pm February 25, 2016                    The Scrum guide establishes a framework, but I think it's up to you to build on top of that framework to do what suits your needs.  The Scrum Guide states that in the Sprint Review: ""The Product Owner explains what Product Backlog items have been “Done” and what has not been “Done”"".  The Scrum also tells you that PO should not participate in the daily stand ups, but they are welcome to attend and just listen if needed. This is so that the team can stay self-organized and focused on what they had planned in the Sprint Planning. However, PO should be available to clarify things if the team needs him/her, or if the team needs to negotiate the scope of the sprint due to some risk.  Therefore, the Sprint Review is really where you get a full feedback on the work done in that sprint, and the work can be accepted or rejected based on the Acceptance Criteria of the User Story. The PO should call the stories Done or not Done depending on the result of the sprint presented in the sprint review. This is different from Acceptance Testing, which should be the result of a UAT rollout to the end users or UAT users, independent of Development's team current sprint.    In other words, first PO comes to accept that the stories indeed meet his/her acceptance criteria as set with the development team, and decides whether or not he wants to release an increment. The UAT is done by the USERS not the PO. A story may meet all of PO's acceptance criteria and the DoD, but the feature might have been designed with a poor understanding of the user's requirements (maybe PO didn't fully understand these requirements himself/herself) and therefore not pass UAT. in that case, PO may consider a new PBI to be discussed in planning later.   Also, this interactive lesson might help you: http://scrumtrainingseries.com/SprintReviewMeeting/SprintReviewMeeting…           Log in or register to post comments",6694
"12:31 pm February 26, 2016                    > The Scrum Guide states that in the Sprint Review:  > ""The Product Owner explains what Product Backlog  > items have been “Done” and what has not been “Done”"".  Here we see an example of how the term ""Done"" can be applied in different contexts, and why the Guide advises us to be clear about how we use it.  The Product Owner should have clear sight of whether or not the items on his or her Product Backlog are ""Done"". In the case of user stories this may be asserted (at least in part) by acceptance criteria. However, the PO does not necessarily have clear sight of whether or not the increment being provided meets the Definition of Done, since that can assert technical qualities of interest to the Development Team.           Log in or register to post comments",6694
"12:40 pm February 26, 2016                     The Scrum Guide states that in the Sprint Review: ""The Product Owner explains what Product Backlog items have been “Done” and what has not been “Done”"".   To who does the PO explains that ? For me it is not to the Dev Team but to the stakeholders.  The Dev Team knows allready what is or is not ""Done"".  So if the PO explains to the stakeholder, he certainly should have this information before the Review.           Log in or register to post comments",6694
"12:52 pm February 26, 2016                     Posted By Olivier Ledru on 26 Feb 2016 12:40 PM   The Scrum Guide states that in the Sprint Review: ""The Product Owner explains what Product Backlog items have been “Done” and what has not been “Done”"".     To who does the PO explains that ? For me it is not to the Dev Team but to the stakeholders.    The Dev Team knows allready what is or is not ""Done"".    So if the PO explains to the stakeholder, he certainly should have this information before the Review.   Yes, definitely. And that is what I also was saying earlier. The DoD should be agreed upon by all members of the Scrum Team (which includes PO) and must be made available to everyone. I personally share this DoD such that anyone even the stakeholders can access it at all times (we use Confluence). As a PO I remind the team about the DoD when declaring storied as Done or not Done because sometimes the team forgets about some criteria that we have agreed. So it's still beneficial to the team as well as stakeholders. For example ، documentation was part of our DoD and the team had missed this for a story they had assumed as Done. I as  PO didn't accept the story and reminded them that documentation was part of our DoD...           Log in or register to post comments",6694
"01:05 pm February 26, 2016                    > To who does the PO explains that ? For me it is not  > to the Dev Team but to the stakeholders.   The Dev  > Team knows allready what is or is not ""Done"".  We might *hope* that the Dev Team would know that, because the quality of the refined backlog items and the ensuing collaboration should have made it clear. However, even though there are a range of good implementation practices that can help de-risk delivery, Scrum does not prescribe them. Hence it is possible, within the strict letter of Scrum, that the PO may be left to account for ""done"" and ""undone"" items at the last minute.  Having said that, I would choose to interpret the words differently...the Product Owner is explaining *back* to the Development Team what work has been done or not done. That's fair enough, and not an unreasonable thing to do in a Review.           Log in or register to post comments",6694
"01:14 pm February 26, 2016                    I understand and agree with your view Ian, the final word comes from the PO.  The issue I see too often is that the Dev Team works on its side during the Sprint and the PO discovers the increment at the review. For these Dev Team, the review is performed as a ""validation"" meeting, and not an opportunity to adapt the PBL with the feedback of the stakeholders.          Log in or register to post comments",6694
Log in to reply,6694
Messages,6715
"11:57 pm February 25, 2016                             Hi all,  According to the Scrum framework, can the Product Owner participate in the daily scrum?  Background  The Scrum Guide, states on page 9 that ""The Scrum Master enforces the rule that only Development Team members participate in the Daily Scrum"".  But other sources, for example, ""Agile Product Management with Scrum"" from Roman Pichler, in the ""Daily Scrum"" section states that:  ""As the product owner, you should attend the meeting whenever possible. It’s a great opportunity to  understand the progress being made and to see if the team needs help (for instance, you might need to answer questions, review work results, or help remove impediments).""  And in another section:  ""As the product owner, you can help resolve the situation by inviting stakeholders to the sprint review meetings and the Daily Scrums.""  So now I am not sure if it is mandatory that the Product Owner (and stakeholders) do not participate in the daily scrums. Can someone answer this?  PS: I saw a similar question in this forum at https://www.scrum.org/Forums/aft/202 but didn’t manage to understand in the end if the Scrum Framework enforces this or not. Since the post is old (2012) I created this one",6715
"12:35 pm February 26, 2016                    To attend and to participate is not the same.  Don't forget the aim of the Daily Scrum.  It's a key inspection point for the Dev Team to synchronize their work and forecast the next 24 hours.  IMHO, the PO can attend, in order to help the Dev Team by providing some usefull informations, but he isn't expected to participate.  Beware of having people outside the Dev Team in the Daily Scrum. TJust by their presence, they will change the Daily Scrum. If they are managers, the risk is they turn the Daily Scrum into a ""report"" meeting.  Only the Dev Team members are required for the Daily Scrum.          Log in or register to post comments",6715
"12:46 pm February 26, 2016                    > So now I am not sure if it is mandatory that the Product Owner  > (and stakeholders) do not participate in the daily scrums.  Yes, it is mandatory that they do not participate in Daily Scrums. But as Olivier rightly says, ""To attend and to participate is not the same"".  > And in another section:   > ""As the product owner, you can help resolve the situation by inviting  > stakeholders to the sprint review meetings and the Daily Scrums.""   It's reasonable for a PO to invite stakeholders to a Sprint Review, and the Guide makes that clear. But inviting them to the Development Team's Daily Scrums? That's like inviting people to a party you haven't even been invited to yourself.           Log in or register to post comments",6715
Log in to reply,6715
Messages,6602
"07:52 am November 24, 2015                             Hi everyone,  I have a question concerning the Retrospective activity ""Focus On / Focus Off"" which is described in the famous ""Agile Retrospectives"" book by Derby and Larson.  The activity is also described here: http://pearllanguage.org/Focus_on_focus_off  The activity states one has to focus on   ""Inquiry rather than Advocacy""  ""Dialogue rather than Debate""  ""Conversation rather than Argument""  ""Understanding rather than Defending""  While I understand (and agree to) each of these statements, I'd say they are kind of redundant.  Inquiry = Understanding  Advocacy = Defending  Dialogue = Conversation  Debate = Argument  I really don't see the differences here... I would really appreciate it, if someone could help me here :)  As I'm not a native speaker, maybe my question is just a misunderstanding of the words...  Thanks a lot!  Regards,  BeMa",6602
"11:37 am February 26, 2016                    Inquiry rather than Advocacy - understanding the need,issue instead defending - let's truly try to understand others needs instead of pushing back saying it is not our fault, we are not in charge of this bla bla bla  Dialogue rather than Debate - yes conversation, being a partner instead of listening to strongest voices  Conversation rather than Argument - try to have win win vs win lose game           Log in or register to post comments",6602
Log in to reply,6602
Messages,6704
"09:21 am February 17, 2016                             Hi,  I was going through the scrum guide to prepare for PSM Level 1 and had a few questions. It will be great if these can be answered.  1.	As per the guide, Scrum makes clear the relative efficacy of your product management and development practices so that you can improve. – How does scrum achieve this because scrum is just a framework and doesn’t have benchmarks to compare an org’s product management and development practices.  2.	A ‘Done’ product increment means that the product increment completed in a sprint meets the definition of Done established by the scrum team such that it is available to be released to the customer, correct? Now, in many projects every product increment goes through phases of testing – Unit testing -> Quality team testing – UAT and all three phases cannot be done in one sprint. In my project, the first two testing phases were completed in a sprint whereas the UAT phase of Sprint N used to start along with the development work on Sprint N+1. So it seems that the definition of Done that the organization was following was that the first two testing phases should be complete in a sprint though the increment is still not releasable. Was the definition of Done incorrect?  3.	The actual scrum assessment has 60 questions to be answered in 80 minutes, however the scrum open assessment has 30 questions to be answered in 30 mins. Are there other open assessments that I can take?  4.	The scrum guide says that in a Sprint Review, The Development Team discusses what went well during the Sprint, what problems it ran into, and how those problems were solved. Should not this be a part of Sprint retrospective?  5.	The guide says that in a sprint review, the entire group (scrum team and stakeholders) discuss on what to do next, how the market place has changed, review the timeline, budget etc. My question is that is all this done in a sprint review or outside the sprint review among the Product owner, key business team and development team stakeholders? It might not be required to involve entire scrum team in the above discussion.  6.	In one of the questions in the scrum guide, it says that the length of the sprint should be short enough to be able to synchronize the development team with other business events. Which business events is this option talking about?  7.	How does the scrum master help the product owner in understanding product planning in an empirical environment?  8.	As per the scrum guide, scrum recognizes no sub-teams in development teams and everyone is a developer. This means that a business analyst, tester would not be a part of the development team. Then where does a business analyst, tester fit in a scrum team?",6704
"02:13 pm February 17, 2016                    Hi, Vishal  1-Scrum is a powerful tool which provide inspect & adapt loops. The efficiency of any practice will be made transparent by Scrum.  2-A Sprint is a mini-project, but definitely not a mini-waterfall cycle with phases. Every task is done inside a sprint, typically analyse ; coding ; unit-testing ; UAT ; performance testing ; required documentation...  3-There are 4 different interesting open assessment on the https://www.scrum.org/Assessments/Open-Assessments page. You should try them all.  4-The Scrum Team present the increment and just the ""big"" picture about how the sprint was executed, in order to adapt the Product Backlog. During the retrospective, the Scrum Team will craft a plan to improve the process, not during the review.  5-Why don't you want to have the whole Scrum Team in the review ? Do you have star-members and slave-member in your ""team"" ?  6-Frequent releases to external customers who don't want to wait 4 weeks before the next release ?  7-The Scrum Master helps the PO ; the Dev Team ; the organization to understand how Scrum works. If Scrum is new to them, they won't catch the agile mind-set in 5 minutes.  8-""Dev Team"" is not ""Coder Team"". Dev Team = the people with the required skills to build the product = analyst + coder + tester + writer +...  Hope it helps          Log in or register to post comments",6704
"07:10 am February 18, 2016                    Thanks for your reply, Olivier.  2. So in my example, is it a gross deviation to conduct UAT of sprint N along with development work of Sprint N+1? I think this was done so that the dev team can pick up more stories/features in a sprint by doing UAT in the next sprint. I also agree there are a lot of cons to this approach. I think in an ideal scenario, every stage (analysis, design, coding, testing, UAT, documentation) should be in the same sprint but if an organization deviates and modifies the Definition of Done as in my example, it seems like an gross exception to the scrum rules which means then that the organization is not following scrum in entirety?  5. I agree the entire scrum team should be present in the demo but I was asking about that portion of the sprint review wherein the Product Owner inspects the work done till now and projects the likely completion dates, inspect how the market/competition has changed to adjust priorities, inspect the timeline, budget etc. Is the entire scrum team required for this as many members of the dev team might not be even interested? So this portion might also be done separately by the PO, key business and dev team stakeholders?          Log in or register to post comments",6704
"09:53 am February 18, 2016                    > So in my example, is it a gross deviation to conduct UAT of sprint N along with development work of Sprint N+1?  It is clearly a deviation from having a potentially releasable increment by the end of Sprint N, which would be the objective of a Scrum Sprint.  > ...Is the entire scrum team required for this as many members of the dev team might not be even interested?  Why wouldn't they be interested? Who else is going to provide the next increment of work and ensure it meets market needs? Who else is going to advise the Product Owner regarding timelines for delivery, and the resources that will be needed to do the work?          Log in or register to post comments",6704
"03:49 pm February 18, 2016                    To add my 2 cents on Ian comment, the review is a good time for the PO to motivate the Dev Team, by providing them a clear vision and target on the product they will build in the next sprints.  They are not coding-robot, they are people, they need a goal.          Log in or register to post comments",6704
"03:07 am February 25, 2016                    Thank you. I have few more questions.  1. A question in the Product Owner open assessment was whether any pre-conditions need to be fulfilled in order to allow sprint planning to begin. I selected ‘Enough Ready product backlog to fill the sprint”. But the correct answer was no such pre-conditions exist. How can sprint planning start without product backlog items that are ready and refined?  2. As per the scrum guide, the backlog items committed in a sprint and the sprint goal should never change but at the same time the product owner and development team can re-negotiate scope in a sprint. So, if the sprint goal is to enable users to search for doctors in and around a particular area using say 10 parameters but the dev team finds out in-sprint that only 5 parameters can be completed due to unforeseen work, didn't the sprint goal change then?          Log in or register to post comments",6704
"01:39 pm February 25, 2016                    > How can sprint planning start without product  > backlog items that are ready and refined?  Why allow it to be an impediment to starting? If the Product Backlog is empty then the team can plan enough of one to allow development to start. The bias in Scrum is towards positive and timeboxed action.  > As per the scrum guide, the backlog items   > committed in a sprint and the sprint goal   > should never change...  Are you sure that backlog items are committed and should never change? Which version of the Guide are you using?          Log in or register to post comments",6704
"03:22 am February 26, 2016                    Hi Ian,  Thanks for your response.  >Why allow it to be an impediment to starting?  If there are no ready and refined backlog items, what is the point of a sprint planning? In that case, the product owner and development team should first refine the backlog items so that sprint planning can begin. So to say that no pre-conditions exist for sprint planning is misleading i think. To clarify it further, here is a line from the scrum guide 'Product Backlog items that can be “Done” by the Development Team within one Sprint are deemed “Ready” for selection in a Sprint Planning.'  >Are you sure that backlog items are committed and should never change? Which version of the Guide are you using?  My apologies. I read it somewhere else and not the scrum guide.          Log in or register to post comments",6704
"05:13 am February 26, 2016                    > If there are no ready and refined backlog  > items, what is the point of a sprint  > planning? In that case, the product  > owner and development team should  > first refine the backlog items so that  > sprint planning can begin. So to say that  > no pre-conditions exist for sprint  > planning is misleading i think.  The point of Sprint Planning is to frame a Sprint Goal and to make a forecast of the work needed for its achievement. If no scope has yet been defined, then that is no reason to delay the commencement of a Sprint, but it is an indication that Sprint Planning must establish an appropriate scope.  > To clarify it further, here is a line from  > the scrum guide 'Product Backlog items  > that can be “Done” by the Development  > Team within one Sprint are deemed  > “Ready” for selection in a Sprint Planning.'   Yes, and so they would be.  However that doesn't make their existence a pre-condition for Sprint Planning.          Log in or register to post comments",6704
Log in to reply,6704
Messages,6713
"04:02 pm February 25, 2016                             Background: I am the SM (also wear a different hat and act as the PO) for a team that consists of junior and senior developers as well as QA Analyst (I do know Scrum states that everyone is a Developer). We do have a product backlog, but it's not really one product but rather various short-length projects that can be done usually in a couple of weeks to a couple months. Our stakeholders are typically internal to the organization.   Our DoD has two levels: presentable for feedback (Dev complete), and quality assured (QA complete). To be releasable we should be ""quality assured"".. but we will still present the ""presentable for feedback"" items in the sprint reviews only to get feedback.   Context: I have agreed with the team to have 1-week (6 business days in reality) sprints for our projects.   The reason for this is   1) I want to minimize the risk to 1 week, since the projects aren't usually that large, so anything more than one week is potentially a significant chunk of the project.   2) Initially we had longer sprints, and I realized the team (new to scrum) tends to start slow and scramble in the end, which would mean stuff wouldn't get done and impact would be relatively big. So I thought 1-week sprints for a while will help fix that habit through frequent inspection and adaptation  3) I felt that the PO/organization/stakeholders are not getting enough transparency on the progress of the projects as per the feedback I had got. With 1-week sprints we can have more frequent reviews and more opportunities for showcasing the current progress. This is especially true in my opinion, because as mentioned, the projects don't span across so many weeks. So if a project is estimated to complete in 1 month, with sprints larger than 1 week, you don't get many reviews/retrospectives/plannings or opportunities for inspecting/ adapting ...  Problem: Organization's processes are such that usually the development of a project/build/story has to be fully completed, and then passed to the QA analysts to get their sign off. Also some of the scripts must go through a review process, done by people external to the team, which can span 1 to 4 days. Usually QA is not allowed to start testing the story pending review until this review process is at completed at a certain tier of the review process.  Our senior dev keeps complaining about the sprint length now, and I partially agree with some of his points. For us, this 1-week sprint means it's very hard for a 5-story point story for example, to go through all the stages of Dev-->QA or script review within the one week sprint. We do try to break things down to smaller chunks, usually 1 to 3 SP. But this is not always possible, because for some stories, further break down makes it hard to be something that can go through QA! The developer thinks longer sprints will help us go through all those stages to deliver higher velocity in the sprint and things feel less rushed. And if they don't commit to such a story, then Dev won't have a lot to do in the sprint and we may waste time due to sprint length.   My suggestion has been to keep the 1-week sprint. I prefer shower lower velocity, and frequently than showing higher velocity and not-so-frequently, though the senior dev really likes to put a lot of related features together in sprint (then argue that it's short :) ). Usually stories that are incomplete or pending QA at the end, go back to backlog and get re-estimated to be done in next sprints.    Sorry for the long post. I appreciate you guys' feedback based on your thoughts and experience. What would you do in this kind of situation?",6713
"03:47 am February 26, 2016                    Hi  Nima,  to me, from what I understand, there are couple of issues:  1) Done Increment is not releasable   2) As a Scrum Master and PO you have conflict of interests  3) Team might not be cross-functional (you wrote: ""team tends to start slow and scramble in the end, which would mean stuff wouldn't get done and impact would be relatively big"", which might be the symptom)  4) The team might not have required skills to complete a Done Increment  > I felt that the PO/organization/stakeholders are not getting enough transparency on the progress.  Are you the PO or someone else? You feel it or you know it?   That sounds like a challenging environment to play Scrum. I have an impression that sprinting is faked and, rather than provide value, is more a way to control the progress and put some time pressure on a team. Answers to those questions would help me understand better your situation:  - Why Scrum was chosen here?   - What value it provides compared to other Agile approaches?  - What's the team size?  - What's the mean for project length?            Log in or register to post comments",6713
"04:48 am February 26, 2016                    > I am the SM (also wear a different hat and act as the PO)  Let's put aside for one moment the potential conflict of interest in having the same person as both Scrum Master and Product Owner, and focus on the bare assertion that you perform both roles.  > Problem: Organization's processes are  > such that usually the development of a  > project/build/story has to be fully  > completed, and then passed to the QA  > analysts to get their sign off. Also some  > of the scripts must go through a review  > process, done by people external to the  > team, which can span 1 to 4 days.  > Usually QA is not allowed to start  > testing the story pending review until  > this review process is at completed at a  > certain tier of the review process.   In Scrum, a team should have control over how it performs its work to create an increment, and it is expected to self-organize accordingly. So how is it that you can be both the Scrum Master, with a responsibility for how Scrum is best implemented by the team, and the Product Owner, with a responsibility for optimizing the value delivered by the team, and yet it is the ""organization"" which decides how work is done?  My advice is to look carefully at how the Scrum roles are being fulfilled in this situation. I think that's the primary concern at the moment, rather than the sprint length.          Log in or register to post comments",6713
Log in to reply,6713
Messages,6458
"06:48 pm August 6, 2015                              I am a big fan of the Daily SCRUM Meeting (and not just for Agile teams - I think all project managers should use these approaches).    I am working on developing an app to conduct virtual daily SCRUM Meetings - I used a commercial off the shelf development tool for collaboration to build my tool - MeetingSphere.     The way I see doing virtual daily SCRUM Meetings is that the team logs onto the app before the designated time and answers the three questions.   Then the team stays logged in when they  get on a conference call with the team.   As the SCRUM Master goes through the posts people comment and document their comments in the tool.  You can try the app here:               https://msp.meetingsphere.com/scrum  I would love to get some feedback and some ideas for features I could add or things I should take out.  For example, I added a ""Mood Meter"" to periodically get feedback on subjects like stakeholder education and the getting to a definition of ""done"" - but I am not sure if this is appropriate in the daily SCRUM Meeting even if it is only used periodically.  I think using this approach makes sense to document and communicate even if the team is not geographically separated - would like to hear what other people think.  Thanks      Peter",6458
"12:55 am September 20, 2015                    I was actually on a widely distributed team for about a year and a half.  This tool looks a little overkill.  We used Lotus Notes Sametime to share a virtual task board in Rational Team Concert and got everyone on a conference call.  I'm a huge advocate of the ""KISS"" Method (Keep it Stupid Simple).  The harder things are to do, the less likely they will be done.  I like the idea of a ""happiness metric"", but the overhead of the rest of the tool is too much.  It is hard enough to get people to enter their time remaining in a tool, to get them to answer their questions online before scrum... not gunna happen.          Log in or register to post comments",6458
"07:52 am November 12, 2015                     I agree, it should be more verbal communication then writing anything in a tool. Also try out tools where in team members can see each other's face.          Log in or register to post comments",6458
"03:53 pm February 25, 2016                    you can use skype, gotomeeting, bluejeans or hangout to have chance see each other          Log in or register to post comments",6458
Log in to reply,6458
Messages,6019
"08:06 pm August 14, 2014                              Hello Scrum.org Forum Members,  Just want to share my experience on the successful journey to take PSM I. I just finished the assessment passing with 90% score and I what to share and help those in the forum who is in the pursuit of it.  Before mentioning the steps I have a few remarks:  - A little bit about my profile. I am very experienced in managing software projects with traditional approach and I had my former team and some vendors working with agile principles and Scrum in quite a few initiatives. So I am familiar with software project environment and I think it helps to figure out some of the tricky questions.  - However I had briefing and general understanding of Scrum before diving on it.  - I had full-time schedule to study. I did not studied full-time but I dedicated several times to focus on it during the last 3 weeks.  - I started studying before choosing which certification to take CSM or PSM I. I read people saying both were ok, however when I found out that CSM required a training and since I wanted to study on my own I chose PSM I because i think the most important in a certification is the process of learning. Besides that for me it seems that PSM I is more challenging.  Here is what I did (I know everybody creates its own methods of study but I hope it may help):  1.	I bought a book I found interesting about Scrum “The Elements of Scrum” based on amazon user review. I have to say I did it before seeing the scrum.org resource and what books they suggest. Anyway it is a very good book that includes additional content about supporting practices like: TDD, XP, refactoring, etc. Things that are good to be aware of.  2.	I created a process of reading the book every day (I had time). After finishing each chapter I summarized the most important concepts in a PPT. It helped to memorize and master the concepts.  3.	After I finished the book I created a mind map summarizing what was the most important concepts. Very good method to organized and group ideas.  4.	I repeated the steps 2 and 3 with the Scrum Guide which is I must read.  5.	Then I read “Scrum Training Plaza” from Management Plaza. Very good material especially because they have additional test available that includes new questions. Just have one remark in the Sample Exam 1 and 2 there is a wrong answer. You will figure it out when you check the answers. If you don’t you haven’t studied enough.   6.	Then a started taking the open assessment. I took it 5 times. First time I scored 86.5%, second time 96.7% and then 100% on and on. Every time I took it I save the results page in EverNote so I could analyze my mistakes.   7.	I did the developer assessment twice. I got 63.3% in the first attempted and 93.3. I wasn’t worried about that because there were too many specific development stuff I supposed that wouldn’t be required in the PSM. In my case it proved to be right. But it´s important to take it and learn a little bit about code coverage and other  8.	And then after studying and review content in the pass days again and again until I felt confident enough I did the exam today and passed.  About the exam:  - I answered all questions after 45 minutes. In order to do that you should be mastering the open exam so the questions that you already know will help you speed things up.  - I bookmarked 16 questions to review at the end and those 15 minutes I used precisely for that. I had to rush a little bit but that was really important.  - I would say that there is something between 20% to 30% of tricky questions, some I hadn’t seeing before. In my case many came at the beginning. My advice is to use the bookmark and check them later. Don’t get stuck otherwise it will make you more worried about time.  - At the end I counted 6 questions I wasn’t really sure what the correct answer was. That would give me a 92.5% if all of them were wrong. So I thought I had done my best and just had 1 minute remaining. It was time to press the “Finish button”.  At the end I actually answered 8 questions incorrectly and got 90%. Not bad at all!   PS: Another interesting source of information is http://scrumtrainingseries.com/ it is an animated presentation with audio in very good quality and that presents the concepts in a very interesting way. I watch some of the presentations today. Use it when you get tired of reading again and again.  Hope it helps those who are on the way to get this certification. Most important in my opinion is the process of REALLY learning and mastering the key concepts. So take your time to study, take courses and do everything necessary to make you feel comfortable with key concepts of Scrum.  Good look.  Mauricio Tripodoro",6019
"08:38 am August 28, 2014                    I just passed mine and managed in in a few weeks - I have used scrum before and found that helped when I undertook the training, I also read and re-read the guide and the management plaza guide as well.  The training, along with reading the guides and also taking the free assessment until I continuously got 100% worked for me!          Log in or register to post comments",6019
"05:22 am August 29, 2014                    Hi Mauricio,  Thank you for sharing your experience! I found it very helpful and useful.          Log in or register to post comments",6019
"09:08 am September 2, 2014                     Posted By amelki on 29 Aug 2014 05:22 AM  Hi Mauricio,    Thank you for sharing your experience! I found it very helpful and useful.  Amelki,  I am glad it helped you and others no study and master Scrum key concepts.          Log in or register to post comments",6019
"02:04 am September 6, 2014                    Hi Mauricio,       Your 8 steps were very useful, infact I was also trying those steps. I am also preparing for PSM 1.  Thank you very much. Can you please share me your ppt & mindmap.  Thanks  Senthil          Log in or register to post comments",6019
"08:37 am September 10, 2014                    Senthikumar,  I would love to share them with you but there is a problem. I have written then in Portuguese (my native language). So I think you will not understand it. Sorry :(  Anyway I encourage you to follow the steps and create yours from your particular point of view. It is a good exercise to grasp Scrum.           Log in or register to post comments",6019
"12:11 pm May 29, 2015                    Team, i wrote an article yesterday in order to help people suceed on PSM I.  Its a review of an material focused on the PSM I Exam Preparation:   PSM I Simulated Exam Review  http://getscrum.com/2015/05/28/psm-i-simulated-exam-review/   Enjoy =)  Hugs  Eduardo Rodrigues Sucena          Log in or register to post comments",6019
"10:31 pm November 8, 2015                    I failed the first time 82% because I didn't take it seriously  I had even taken the PSM class from Ken. My solution was to create a bunch of study questions and study the Scrum Guide and I passed it the second time easily. I then took my notes and created an online practice exam. I have been told it is very helpful. It is very affordable ($9.99 for one-week) and there are also some free practice questions. Fee free to check it out:   http://www.bostonagiletraining.com/Scrum_Master_Certification_Practice_…  Good Luck   Dan          Log in or register to post comments",6019
"03:49 pm February 25, 2016                    Guys, don't you think more important is starting live and think in terms of scrum values rather than finding way how to score exam?  Scrumon!          Log in or register to post comments",6019
Log in to reply,6019
Messages,6462
"07:01 am August 8, 2015                             Does anybody has idea about Agile Metrics that being track during execution apart from tracking BD chart and team velocity?",6462
"11:19 am August 10, 2015                    Dear Sushil,  The main metric in Scrum (and most other agile processes) is the done increment.  It tells us the truth about the status of the project.  In forecast based processes we needed a lot of metrics to tell us if we still stick to the plan. We all know how significant those plans as well as these metrics were…  Management does often not understand the big advantage of seeing actual working software that meets a definition of done and they still want to see meaningless numbers instead. Convince them, that those are not needed anymore.  Scrum believes in change and welcomes change.  So what we should ‘measure’ are changes to our plans, the product backlog.  After each Sprint Review, we can have a Product Backlog Change Report, that describes what has changed in the Product Backlog and why.  Hope this helps  Sebastian           Log in or register to post comments",6462
"11:24 am August 10, 2015                    It appears that the term ""Agile"" is being used rather broadly, so allow me to focus on just Scrum....  Scrum does not mandate the use of burndowns or velocity.  I'm seeing some redundancy in repetitive posts here --   https://www.scrum.org/Forums/aft/1545  Would you like to continue in the thread above, or prefer doing so here?          Log in or register to post comments",6462
"06:44 am February 13, 2016                    Metrics can be tricky - you always need to remember they are not the ultimate goal - only signs to spot if you are on track. Here you can find couple of useful things which organisation should think about   https://www.scrum.org/Blog/ArtMID/1765/ArticleID/14/%E2%80%98Evidence-B…          Log in or register to post comments",6462
"02:07 pm February 23, 2016                    A quote from Albert Einstein:  ""Not everything that can be counted, counts.   And not everything that counts can be counted.""          Log in or register to post comments",6462
"02:32 pm February 24, 2016                    Amen to that Timothy!            Log in or register to post comments",6462
Log in to reply,6462
Messages,6712
"04:04 pm February 23, 2016                             Hi All,  I'm looking to buy a single attempt for the PSM1 assessment. Does anyone know how long the password they send you is valid for?  For personal reasons I'm keen to pay entry for the assessment before the end of the month but am not yet ready for the exam.  Many Thanks if you are able to help.  Matt",6712
"02:25 am February 24, 2016                    14-days          Log in or register to post comments",6712
"08:29 am February 24, 2016                    Hi Matthew,  In 2013, the password was valid for 14 days.  Hope it helps  Good luck  Yours  Olivier          Log in or register to post comments",6712
"09:13 am February 24, 2016                    Hello Matthew, et. al.,  Thank you for your interest in Scrum.org! Please kindly note that Scrum.org Professional-Level Assessment passwords no longer have expiration dates.    You may also find answers to other frequently asked questions at our Support Center here: http://support.scrum.org/  Enjoy your day!          Log in or register to post comments",6712
"11:28 am February 24, 2016                    Thanks for your response Oliver.          Log in or register to post comments",6712
"11:29 am February 24, 2016                    Thanks Rishi          Log in or register to post comments",6712
"11:30 am February 24, 2016                    Thanks very much for the fast informative response.          Log in or register to post comments",6712
Log in to reply,6712
Messages,6705
"05:52 am February 19, 2016                             Hello,  I would like to know if successive projects worked on by the same team should use the same baseline for estimating in story points.  In simple terms, should 5 story points estimated in Project A a few months ago be regarded as having the same complexity as 5 story points in Project B now, assuming the team structure stays the same?  Thank you for reading my post!  Cheers,  Mihnea",6705
"10:02 am February 19, 2016                    What do you mean with projects? Is it the same product wich they continue to develop? In that case I would try to keep the same baseline, so forecasts are easier to make.  What can change (even if the team structure stays the same) is the velocity, which depends on many factors.          Log in or register to post comments",6705
"10:16 am February 19, 2016                    It doesn't really matter. In Scrum productivity is measured in terms of actual delivery, not story points.  From process perspective it makes sense not to change means of communication if they worked, so if the team would like to leave them unchanged, that's fine.  What reasons to change the story points scale do you consider?           Log in or register to post comments",6705
"02:12 pm February 19, 2016                    > I would like to know if successive projects   > worked on by the same team should use the  > same baseline for estimating in story points.  >   > In simple terms, should 5 story points   > estimated in Project A a few months ago be  > regarded as having the same complexity as 5   > story points in Project B now, assuming the   > team structure stays the same?   No, because the team's estimation baseline is not actually a number, but rather their common perception of the teamwork that is likely to be involved. That baseline should be continually improving as a result of their collective experiences.            Log in or register to post comments",6705
"05:02 am February 20, 2016                     No, because the team's estimation baseline is not actually a number, but rather their common perception of the teamwork that is likely to be involved. That baseline should be continually improving as a result of their collective experiences.    AFAIU your answer, the same concept is applicable also for one project. Correct?  e.g. if team estimated story for 5 SP and few months later similar story was estimated for 5 SP means there is no improvement.          Log in or register to post comments",6705
"11:04 am February 20, 2016                    > if team estimated story for 5 SP and few   > months later similar story was estimated for 5  > SP means there is no improvement.  Evidence for improvement in estimation is not a matter of the points given for any particular story. It's a matter of the team being able to give a better forecast of the amount of work they can take on in a Sprint. An improvement *might* have the effect that you describe on a certain kind of user story. Then again, it might result in a better estimation if the team's capacity. The only real evidence for an improvement in estimation is the team's ability to forecast the deliveries they actually make.          Log in or register to post comments",6705
"02:00 pm February 21, 2016                    You need to be careful not to bring command and control behaviors to Scrum. The Scrum team should aspire at self-management, and their measure of success and productivity should be the delivery of value to the customer.   Trying to bring KPIs to the agile software development process is fraught with dangers to the quality of the code, and to productivity.   The best approach to measure the performance of a team IMO continues to be velocity. The mean velocity over time with x standard deviations may be a good measure for process control.   You can also use cycle times, and touch times from Lean to understand how much waste (impediments) are in the way of producing valuable software from the point of view of the customer.           Log in or register to post comments",6705
"02:40 pm February 23, 2016                    if team estimated story for 5 SP and few months later similar story was estimated for 5 SP means there is no improvement That is an incorrect conclusion Bartek.   Story points are based on the size of the effort, not on the time it would take to complete it.   A team's velocity may increase due to their ability to complete more 5-point stories within a sprint.   However. the 'size"" of the story remains the same.  Think of the task of moving a boulder from location A to location B.   A few months ago, the team may have estimated it at 8, and moved it by hand.   Now, the team may have gained the technical/business proficiency equivalent to moving that boulder by crane.   The team can get the job done quicker, but it is still an 8-point boulder.  If you are suggesting that a story should have a lower estimate compared to a similar one from a few months ago, wouldn't that result in an overall lower team velocity?   How is a lower team velocity considered an improvement?   And if your suggestion is that it should be higher than the similar story from a few months ago, how is that an improvement?  If the team is stable, then their estimates should remain consistent relevant to the team's understanding of the work.   Also, do not read an increase in team velocity as an indicator of improvement, or a stable velocity as an indicator of a lack of improvement.   Many factors can come into play affecting a team's velocity (team stability, knowledge transfer, cross-training, grooming quality, etc).           Log in or register to post comments",6705
"05:40 pm February 23, 2016                    > That is an incorrect conclusion Bartek.  My conclusion is incorrect, or Ian's reply, which I concluded from, is incorrect?  > A team's velocity may increase due to their ability to complete more 5-point stories within a sprint. However. the 'size"" of  the story remains the same.   Yes, I understand that. How would you reply to the original question, then?   should 5 story points estimated in Project A a few months ago be regarded as having the same complexity as 5 story points in Project B now, assuming the team structure stays the same? >If you are suggesting that a story should have a lower estimate compared to a similar one from a few months ago  No, I didn't mean to suggest that.          Log in or register to post comments",6705
"04:10 am February 24, 2016                    Thank you all for the interest expressed in this topic!  Regarding the latest twist of the discussion, which of the following applies:  -  a user story that is very similar across products is estimated with the same story points count. The result is that the team velocity increases as they become more proficient in accomplishing their work?  OR  -  a user story that is very similar across products is estimated with less story points as the knowledge and productivity around the topic increases. The result is that the team velocity stays the same as they become more proficient in completing their work?          Log in or register to post comments",6705
"09:16 am February 24, 2016                    Either of those scenarios is possible. Improved estimation by a team simply means that they can make a better forecast of the amount of work they can take on in a Sprint.  Note however that if one story ""is estimated with less story points as the knowledge and productivity around the topic increases"", then all stories in the Product Backlog ought to be re-estimated accordingly. The Product Owner may use such data when prioritizing items, and he or she must be in a position to perform meaningful comparisons.          Log in or register to post comments",6705
"11:25 am February 24, 2016                    The story size is relevant only to the team estimating it.   Granted, the proficiency of the team may increase over time, but that does not change the size of the story.  One exercise I have done with past teams is to have them revisit past sprints and analyze the size of the completed stories.   Were all 5-sized stories similar in scope?   Were all '8' story-point stories of a similar size?   This helps the team develop a better understanding and clarity around their communal estimation view of story size.  The team should also have the flexibility to adjust PB estimations as needed based on knowledge gained over time.   Perhaps the team identifies a simpler approach/solution for a story, and it no longer represents the size that the team originally identified.           Log in or register to post comments",6705
Log in to reply,6705
Messages,5687
"05:12 pm January 5, 2014                             Hello Guys,  I have seen some threads related of the same question: How to study / pass PSM I. The most of the answers always is the same, read Scrum Guide, Practice with Open Scrum Test, Formal course and have experience.  I don't have experience in Scrum, however there are some jobs in my country where is required to know about Scrum framework, for the same reason I'm reading, watch videos and trying to improve my knowledge in Scrum.  1 - There is any chance to get PSM I certification without experience in Scrum only reading different books, sources, videos?  2 - How many questions have the PSM I exam? 80?   3 - Some of Open questions appears in the PSM I exam?  Thanks a lot of your advice,  Regards",5687
"03:59 am January 6, 2014                    Hi,  1. yes  2. yes  3. yes  I suggest to go thru this forum. You will find a lot of info about the possible questions and answers.  I did not pass the first time, because the questions within the test are more detailed and more difficult.  You have to get the ""thinking"" of the questions and the documents reading.  It is a kind of logical relations between the information you can get and the questions.  Best  Frank          Log in or register to post comments",5687
"11:40 pm January 6, 2014                    Thanks a lot for your response Frank really appreciate it.  Based in your experience what other information / pages / resources / videos can you recommend to me ?  Thanks a ton,  Regards          Log in or register to post comments",5687
"12:09 am January 7, 2014                      You may be a seasoned scrum practitioner or not , it does not matter.  But cracking the PSM1 exam from scrum.org is different story. you have to get into the scrum framework virtually.  You can score 50% to 70% correct answers with your real-time experience. But the other questions make the difference and matters to clear the test.  There will be many thin variations to the answers from the test perspective which are actually not ""scrum but"" but, leads to confusion while attempting the answers.  My only suggestion is: read the Scrum Guide until you can see that in the dark. It has every thing dormant. (I mean inactive but capable of providing answers when contemplate for a while) wander virtually with in the document :)  there are 1000 rules to succeed in the test.  Rule1: Read SCRUM guide  Rule2: Remaining 999 rules does not matter   scrum on!          Log in or register to post comments",5687
"11:47 am January 7, 2014                    Mouli is perfect in his statement. Also, there's a post that focus on preparation for the test and that has some very helpful links.  https://www.scrum.org/Forums/aft/264  I have a lot of documentation in portuguese, since im from Brazil, but here are some other links to material in english that may help you during your preparation:  - http://scrumplicity.wordpress.com/ :(A lot of tips for SM's)  - https://sites.google.com/site/wicmitchell/home (Blog from Ian, active member of the community), wich helped me a lot to understand some topics like Estimation and Sprint Planning.  - http://www.youtube.com/user/openCollabNet1?feature=watch : Collab.Net Youtube Channel with a lot of Scrum Training videos.  and of course, the 2 most mandatory:  - scrum.org : Share your doubts and learn with other peoples experience  - google.com   Cheers!           Log in or register to post comments",5687
"04:11 pm June 10, 2014                     Posted By Fabio Simeone on 07 Jan 2014 11:47 AM  Mouli is perfect in his statement. Also, there's a post that focus on preparation for the test and that has some very helpful links.    https://www.scrum.org/Forums/aft/264    I have a lot of documentation in portuguese, since im from Brazil, but here are some other links to material in english that may help you during your preparation:    - http://scrumplicity.wordpress.com/ :(A lot of tips for SM's)    - https://sites.google.com/site/wicmitchell/home (Blog from Ian, active member of the community), wich helped me a lot to understand some topics like Estimation and Sprint Planning.    - http://www.youtube.com/user/openCollabNet1?feature=watch : Collab.Net Youtube Channel with a lot of Scrum Training videos.    and of course, the 2 most mandatory:    - scrum.org : Share your doubts and learn with other peoples experience    - google.com     Cheers!   Hi Fabio,  Thanks for the answer, your links will really help me prepare. Do you know any website or forum in Brasil where i may find something more?  I'm looking for people to talk about Scrum and learn experiences as much as i am looking for good material to study.  Saudações.          Log in or register to post comments",5687
"07:16 pm June 11, 2014                    i agree with much of what has been said, having experience is all very well and good ... but agile is a long learning curve of a career, you tend to pick up techniques and make changes under tension with different teams in different environments.   I've found the best thing I've done to date is just ignore everything I think i know about Scrum and Agile, treat this exam like a new instance of Agile , learn like i would any other framework, learn the rules and structures and forget about anything you've seen in training videos or scrum books... Hammer through the open assessments (both) until they become almost instinctive , understand the answers ... read on the forum why the answers are right, and read the Scrum Guide as many times as you can possibly fit in. Its a simple little book, but being able to apply it 100% without any deviation or temptation to other scrum techniques , will be your best bet for passing.   I'll know by tomorrow if I'm right or just talking blindly ..          Log in or register to post comments",5687
"11:14 am February 24, 2016                    Hi,  I would know if the questions of PSM-I are the sameas those containing pepe scrum open.  Thank you.          Log in or register to post comments",5687
Log in to reply,5687
Messages,6709
"07:51 am February 22, 2016                             Hello,  Should the definition of 'Product' be standardized in an organization.  I'm working at a large bank where the challenges we face around this are :  1) Compliance projects - which do not touch any banking Products for example FATCA. Should they even be considered for Scrum.  2) Products can be banking related example Current Account, Home Loan Account etc or sometimes even some of the application systems are called as Products example Mobile application.  Regards,  Ashish M.",6709
"02:40 pm February 22, 2016                    > Should the definition of 'Product' be standardized in an organization.   Yes. It ought to be standardized in terms of managing a Product Backlog, with a clear Product Owner who is responsible for it and the value that is incrementally delivered.          Log in or register to post comments",6709
"03:40 am February 23, 2016                    Thanks Ian.  And what about compliance type of projects that do not necessarily look to build a Product. Do you recommend they can follow Agile & Scrum.          Log in or register to post comments",6709
"10:33 am February 23, 2016                    Have a read of the Scrum Guide, including what it has to say about a Product Backlog, a Product Owner, and delivering through incremental and usable releases. Does the ""compliance"" function have a stake in that process or in the quality of its outcomes?          Log in or register to post comments",6709
"01:04 pm February 23, 2016                    NB bear in mind that a product could be any asset or service under the bank's control, for which a backlog of work can be owned with value  delivered incrementally, and with a corresponding reduction in risk.          Log in or register to post comments",6709
"03:14 am February 24, 2016                    Perfect, thanks Ian, makes sense now.          Log in or register to post comments",6709
Log in to reply,6709
Messages,6711
"09:20 am February 23, 2016                             Hi,  We are implementing Scrum a bit stricter and started with estimating the whole backlog. We did this with a game of three rounds to get the best agreement on the estimation.  After we mapped the outcome to the backlog it appears that we have 10% of the total effort in the current sprint of two weeks.  Everyone knows we wont have all the work done in 20 weeks so what to do?  I am expecting that we start with a velocity which is far to high and will only drop over time while it's more inspiring to have the velocity increase over time.  All ideas are welcome!  Best regards,  Pieter",6711
"10:19 am February 23, 2016                    > Everyone knows we wont have all the  > work done in 20 weeks so what to do?   Never mind what may or may not happen in 20 weeks. What does ""everyone know"" about the current Sprint forecast? Have the Development Team concurred that the Sprint Backlog is achievable, that a potentially releasable increment can be produced, and that the Sprint Goal is realistic?          Log in or register to post comments",6711
"10:25 am February 23, 2016                    When we created the Sprint Backlog we didn't had an estimated effort yet but the team did decide that the work could be done in one sprint (which until today always failed to do)          Log in or register to post comments",6711
"12:52 pm February 23, 2016                    If this sprint's capacity is representative, and the work being undertaken is thought to be realistic, then what reason is there to suppose that subsequent sprints will not be similarly productive?          Log in or register to post comments",6711
"03:05 pm February 23, 2016                    Pieter,  Good that your team went through and estimated all of your stories in the backlog.   A significant effort for sure.   Keep in mind that estimates are never permanent, and the team should feel free to revisit any previous estimate in the backlog for accuracy as they learn more and more about the product they are creating. Everyone knows we wont have all the work done in 20 weeks Who is everyone, and what are they basing their conclusions on?   A key tenet of Scrum is to focus on near-term goals (current sprint).   Think of a road trip from New York to Los Angeles.   Should you really care about a construction project in Denver as you start on your trip, or should your focus be on just heading west and what the road conditions may be for the next 200 miles or so?  You simply do not know what the team may discover after the first few sprints that may increase or decrease the scope of your 20-week projection.   You also do not know what may pop up along the way that may derail your 20-week plan in favor of something else far more critical to the business.  The good news is that, if your Product Owner is diligent in maintaining the prioritization of stories in your backlog, your team  will undoubtedly work on the items most critical to the business over that time period, and in the event the team does not get through the list, the only items remaining should be of the lowest priority variety (i.e. - ""nice to have"").          Log in or register to post comments",6711
Log in to reply,6711
Messages,6703
"06:05 am February 17, 2016                             Hi,  You have 2 developers who point the same story and one is for example a 3 and the other a 5.  The reason one is a 3 is because that developer has more experience.  Let's say that the '3' developer will not be involved in the story does it then make it a 5?  Or is the story size, the story size regardless of who primarily deals with it?",6703
"09:42 am February 17, 2016                    Hi Kyrry,  I am assuming that you are referring to planning poker in this post, but if not please let me know so I can try to answer in a better way.   If the team is estimating using planning poker cards, and 2 parties differ, they will need to talk it out, taking turns sharing their reasoning until they can agree. All stories belongs to the whole team, so the team should consider that any team member could working on that story. The whole team should participate in this activity to get as many opinions as possible, and in the end get the best plan of action in place with their estimates.   Hope that helps!          Log in or register to post comments",6703
"01:11 pm February 17, 2016                    When you play planning-poker, you can't assume which team members will actually work on it.  For me, planning-poker is more a tool to drive a conversation that an tool to create estimate.  3 and 5 are close estimate. Does it worth it to go further in the conversation ?  Around me, when team members hesitate between 2 close value (3-5 ; 5-8) they have actually almost the same level of understanding of the item and they pick the highest value.  That's accurate enough and it protects the team from too long planning poker session.          Log in or register to post comments",6703
"09:42 am February 18, 2016                    > The reason one is a 3 is because that developer has more experience. Let's say  > that the '3' developer will not be involved in the story does it then make it a 5?   The story might be estimated as an 8, which would allow for knowledge-sharing between the more and less experienced developers. If constraints are being placed around collaboration, such that a single Development Team fails to present a unified position on matters which concern that role, then that is the problem that needs to be addressed.   Remember that Product Backlog Refinement serves as an indicator of the team's readiness for Sprint Planning, and not just the readiness of the Product Backlog. It is reasonable to expect a healthy (and at times robust) debate during Refinement, but we should also expect members to reach a working and practicable consensus so the Development Team role can be fulfilled, and which improves the collaborative position. If members can't demonstrate that single-team behavior during Refinement, there is little chance of them collaborating effectively once a Sprint is underway.           Log in or register to post comments",6703
"03:43 am February 23, 2016                    Thanks for the replies guys. Some interesting views.  I guess my main objective is to find out if it is 'true' that the size of a story is dteremined by the most experienced voice in the development team.  I concur with the view that it could be an 8 due to knowledge sharing (and that makes sense).  Also within our team there will be members that take the lead and/or actually do the work/story as opposed to another member that will not be involved in that particular story.  Just in case people are confused we are actualling doing BAU in 2 week sprints (not Kanban). But our BAU work is mainly derived from a Chang Steering Group.          Log in or register to post comments",6703
"02:48 pm February 23, 2016                    The estimate must be agreed to by the entire team.   Certainly there can be differentiation in estimates based on skill and experience.  I have employed a ""best practice"" approach when the team is torn between two close estimates (i.e. - 3/5, or 5/8).   I ask the team if anyone has an issue accepting the higher estimate.   Almost always, in the interest of time, the team agrees to the higher estimate.  As Olivier stated, it is important to remember that these are ""estimates"" based on the current information at hand, and they are never intended to be perfect.   Settle on the higher number, and move on.          Log in or register to post comments",6703
Log in to reply,6703
Messages,6707
"06:14 am February 21, 2016                             International Conference on Parallelism in Architecture, Environment ad Computing Techniques (PACT).  The theme of Parallelism in Architecture, Environment and Computing Techniques (PACT) 2016 explores the relations between computational design software in architecture, organizational and global, ever-changing and pervasive contexts.  This conference looks at how the new trends of architectural technologies and computational thinking can adapt to increase the ability in finding a complex digital fabrication, augmented reality, and intelligent environment.  PACT 2016 aims to gather practitioners and researchers interested in investigating and improving the state of practice of computational design software in the architectural discourse, where practicing design computing experts can explain the challenges they face in their day-to-day practices, and collectively induce an impact on the future of the field.  PACT 2016 is organized by The University of East London (UEL), in collaboration with the International Experts for Research Enrichment and Knowledge Exchange (IEREK) institution.  The conference represents an important forum for computational and digital architecture research that reconciles parallelism in different architectural and computing discourses, and provokes discussion in state-of-the-art themes and topics such as high performance computing, parametric design using Software Like grasshopper, big data, advanced systems and interfaces, ubiquitous computing, as well as advanced fabrication technologies and tectonics.  The conference also includes within its scope a number of workshops and technical sessions.  - See more at: https://www.ierek.com/events/parallelism-in-architecture-and-computing-…",6707
Log in to reply,6707
Messages,6706
"04:37 am February 21, 2016                             Hi there,  I really need your help  Currently I am working on my thesis for my master's degree program.  For this I am doing research within the context of SCRUM.  It's about the product owner in relation to project success.  A topic that is certainly up-to-date.  For this study I developed a 10-minute-during survey.  I would appreciate it very much if you also participate.  You can start the survey by the link below:  http://goo.gl/forms/eV3dBeZvfU  Thanks!  Alex Gant  Student Master of Informatics / HU  Working at Acto Informatisering",6706
Log in to reply,6706
Messages,6697
"03:18 am February 13, 2016                             Hello everybody,  I am one of the Development Team guys who works in a small start-up company which tries to apply the Scrum methodology. However, we always have issues with the scrum.  Company develops several products from Development Team perspective: Android, iOS, Web (Front-end), Eclipse RCP and a complex server back-end (micro-services and etc..).  Business perspective sees all of this is one big product. Development Team consists of one guy per product (one on Android, one on iOS and etc..).  Currently, the Scrum Master is one of the guys from Development Team while the Product Owner is the one of the bosses.   All products are treated as one and we have one big backlog for everything.  The problem is that due to such technology differences involved in the products it's hard for people to be just one team who develops everything as one product.  Instead, people treat everything as separate products and don't care much about the others; for example: Android guy finished his tasks and then he won't go and do something in the iOS when the main guy responsible for the iOS is not cooping with the amount of work.  This continues already for awhile with constantly emerging issues. As I understand, ideal situation to resolve such issues is to have Scrum Teams for each technology stack. However, the company is too small for this.  Are we just a bad team with the lack of deep knowledge of each technology? Is it an issue from the Product Owner side who manages everything as one product within one backlog and expects people to be multi-functional?  Or this is the problem from the business side to catch several directions simultaneously without available resources to do so? The question is, what to do in this case or what can we try to do?",6697
"10:24 am February 17, 2016                    Hi Georgji,  A Scrum team will often start with a group that possesses ""I"" shaped skillsets, that are deep in one area but do not cross over into other areas. The goal of a team should be to work together and change their skillsets to a ""T"" shape, so that you retain your deep understanding of one discipline, but gain a little understanding in others so you can help your team.  As a team member I would encourage you to lead by example, and start finding ways to help your team members out. It takes time and common goals to link a team and make them stronger, so be patient and do whatever you can to spread your agile vision, and show its value.          Log in or register to post comments",6697
"01:02 pm February 17, 2016                    For instance, you can suggest the team fill a skill matrix in order to show where the team members need to develop their skill at first.          Log in or register to post comments",6697
"10:01 am February 18, 2016                    > Business perspective sees all of this is one big product.   Is it in truth one big product, where all of the platform deliverable integrate into a single increment for release? Does business really consider there to be a single stream of value with this product?          Log in or register to post comments",6697
Log in to reply,6697
Messages,6700
"05:53 am February 15, 2016                             Hi Everyone,  We're currently 6 in the scrum team: 1 Scrum Master, 1 PO, 1 BA, and 3 Technical developers.  We've been a team for a year already, but this month, the entire group of technical developers will be replaced with new people. The previous 3 is still in the company and available for consultation.  The PO is saying that the customer should not be impacted by this change, hence the velocity should be maintained, momentum should continue improving.  But I'm reasoning that since our members changed, it is expected that velocity will be impacted, based on the agile philosophy that team members should not be seen as machines.   PO insists that this adjustment should be managed internally and not impact the customer, in other words the velocity of the team should not decrease because of the change in members.  As the scrum master, I'm having difficulty defending my position because the PO sounds right.  I need help to have clarity on my situation and how to manage it.  I'm thankful for insights you could share: how should a scrum master deal with this situation?  thank you,  Ben",6700
"03:58 am February 17, 2016                    Imagine a soccer team in the world cup. You are the coach and have reached semi-finals with them. Now the team manager tells you he will replace the whole team with new players before the finals, but the team performance should not be impacted and the goal is still to win the world cup. Does that also ""sound right""? Because it's the same your PO is telling you.  What you can do is to make the impact on the client transparent to the person who decided that your team is replaced.  The organization must understand the consequences of insane decisions.          Log in or register to post comments",6700
"07:57 am February 17, 2016                    > PO insists that this adjustment should be   > managed internally and not impact the   > customer, in other words the velocity of the   > team should not decrease because of the   > change in members.   If the PO is being advised that a restructuring of the Development Team is likely to result in a short-term drop in productivity, then he or she has a responsibility to manage value and stakeholder expectations accordingly.  The advice being given would appear to be reasonable. A short-term drop in productivity would be the likely result of such a change. In other words, the drop *should* in fact happen, in the sense that it is a reasonable forecast, it is probable, and it ought to be expected and planned for.  If the PO has evidence that such a drop is unlikely to happen in this case, then he or she must provide that evidence to the rest of the team, so more realistic forecasts can be made. Where is it?          Log in or register to post comments",6700
"08:15 am February 17, 2016                    The PO is not responsible for the process and for the velocity. Velocity is never high enough, for any PO.  The Scrum Master is responsible for the process.  Customer is impacted by the value delivered, not by the velocity.  You should expected a lower velocity for your new Dev Team for about 2 or 3 sprint.  The best you can do is to try and help the new Dev Team crystalize as quickly as possible, and to help the PO to prioritized the Product Backlog in order to deliver value to the customer.  Maybe you can use this opportunity to coach your PO to focus on his own duty, which is to maximize the value and not to ask the Dev Team for miracles. Even if your Dev Team doesn't change, the PO can't expected the velocity to be something predictable. Remind the PO that we are using an empirical process.          Log in or register to post comments",6700
Log in to reply,6700
Messages,6695
"03:12 pm February 11, 2016                             Hello,  We have weekly sprints and during sprint we have 2 deploys. When we run tests for deploy we get some bugs which needs to be fixed immediately. However, it effects our sprint goal and performance.  We reduced the velocity and opened some space for bug fixes but they sometimes take more time than expected resulted in incomplete sprint tasks. I know that we have to solve a lot of other tech/process problems for a healthy solution but do you have any suggestions for the short term?   Thank you.",6695
"10:28 pm February 11, 2016                    > I know that we have to solve a lot of other   > tech/process problems for a healthy solution   > but do you have any suggestions for the short term?  How short term do you mean, given that the team has an inspect-and-adapt Sprint cycle of one week, and can apparently deliver twice within it?  What is stopping the team from changing things each and every sprint? That's what sprints are for. It sounds as though sprinting is faked, and that's what needs to be looked at right now.          Log in or register to post comments",6695
"04:43 pm February 16, 2016                    Thank you Ian and yes you are right. Because of the management, it is not possible to apply it correctly. I am trying to show them what works and what does not work to convince them about changing the working style.          Log in or register to post comments",6695
Log in to reply,6695
Messages,6572
"06:19 pm October 27, 2015                             Hi all,  I would like a clarification on the following issue: is the scrum master obliged to provide the product owners with status reports regarding the sprint and/or the user stories of the sprint? I 'd say that since the product owner is member of the scrum team, he/she has to work closely with the developers in order to have a ""continuous flow"" of updates rater than asking the scrum master for status reports.",6572
"10:30 am October 29, 2015                    Agile Principle #4:  ""Business people and developers must work together daily throughout the project.""  If this is not happening within your organization, then there are identifiable opportunities for improvement!  The ""status report"" situation you describe is quite common.   It reflects a comfort level with past inefficient practices.   Help them to understand the waste involved with such reporting.   Introduce them to information radiators around sprint progress like Sprint Burndown charts and Daily Stand-up Meetings.  Good luck.           Log in or register to post comments",6572
"01:29 pm October 29, 2015                    Hi Nikolaos,   I agree that the Product Owner is a part of the Scrum Team and also like the principle Timothy has brought out.   If I were a Scrum Master (SM) asked this question, I would take this as an opportunity to ask and validate whether the (existing?) information radiator needs updating or tweaking. You're still there to serve the Product Owner (PO) and can do this in a mutually acceptable way.   Once in a while, we may have a PO return from an extended vacation / holiday / break so may need a little more support from the SM. However, I would consider this an exception and not the norm.  Some Teams don't use a burndown and the PO is also optional for the daily scrum. Have there been any conversations or norms identified to how information is shared and made visible?          Log in or register to post comments",6572
"05:49 am October 31, 2015                    > is the scrum master obliged to provide the   > product owners with status reports regarding   > the sprint and/or the user stories of the sprint?  No, not at all. However, the Development Team and PO are expected to work together during a Sprint so that transparency towards the Goal is attained. The Scrum Master may need to coach these parties accordingly.          Log in or register to post comments",6572
"05:26 pm February 15, 2016                    it is great opportunity to take PO so he can ask his team directly. Maybe he doesn't even know he can or should.          Log in or register to post comments",6572
Log in to reply,6572
Messages,6536
"09:45 pm September 29, 2015                             Hi All,  I am an IT manager at a mid-sized healthcare network.  We have an electronic healthcare record system with several application modules that are tailored to each organizations needs via configuration.  It's not straight ""coding"", but is essentially a second layer of configuration.  The configuration decisions can be complex with lots of different combinations and workflow designs.  I have a strong interest in trying to apply agile, specifically scrum, methods in this setting.  We have several application modules and teams that support the modules.  The teams are typically < 7 folks and they have a deep understanding of the module across the team.  I have one huge hurdle:  1. Product Owner selection.  In a hospital, you typically have clinical workers, their managers and their directors.  These positions often do not lend themselves to working outside of their environments, which are complex.  We are the internal IS department and we few these folks as our customers.  An example would be pharmacy.  They certainly aren't used to colocating with a development team day in and day out as their other responsibilities are the primary focus.  There is no ""account manager"" in a pharmacy shop to reach our and represent the pharmacy user base.  To add another layer of challenge, we have 8 hospitals and 4 different directors of pharmacy.  How can we establish a single point of contact that can represent the entire pharmacy application as the Owner - working with the application team daily and writing stories on behalf of the pharmacy business unit(s)?  Have you seen this be done in a hospital setting?  If so, how did it work (or not work) for them?  There is a real benefit to making this work, just as it works in other settings, but healthcare seems like a unique and complex challenge for us in IS (IT).  Still, we have tremendous challenges with developing what the users really want and communication is less than desirable.  There must be a way to establish stronger feedback loops and adopt some of these principles.",6536
"01:56 pm October 2, 2015                    Maybe try asking all of those people you mention, if anyone of them a) have the required knowledge and b) want to play the role of product owner and c) have the time to dedicate to play the role.  Another, slightly more risky scenario is to start building what you think they want and show it to people. Generally, they are very quick to jump up and tell  you if it looks bad or good, but quite often don't know exactly what they want before hand.          Log in or register to post comments",6536
"02:10 pm October 2, 2015                    > How can we establish a single point of  > contact that can represent the entire  > pharmacy application as the Owner - working  > with the application team daily and writing  > stories on behalf of the pharmacy business unit(s)  That's not what Product Ownership is about. If the developers are skilled enough, they can write the user stories.  Your Product Owner is the person who is responsible for the ROI of the product, and the maximizing of its value. This can be measured many ways but whoever the PO is, he or she must have a clear view of it and an ability to relate it to the team. The PO would be expected to work with the various stakeholders you mention, and may be internal or external to your own organization.          Log in or register to post comments",6536
"05:20 pm February 15, 2016                    Can you become someone like PO for your team? Trying to organize, sort out and order items in backlog to allow them deliver?          Log in or register to post comments",6536
Log in to reply,6536
Messages,6540
"07:17 am October 1, 2015                             Shall a developer who missed the sprint planning be allowed work on that sprint's increment?  Concrete case is that developers vacation ended a two days after sprint 10 planning. As Scrum Master I advised him to rejoin the developer team only in Sprint 11, as for Sprint 10 he could not:  - hear the Product Owners presentation of the top product backlog items   - contribute to the decision on what can be done in the Sprint  - contribute to the discussion how the chosen work will get done  - agree to the Sprint Goal  Scrum Guide does not explicitly mention this case. So what would you think?",6540
"07:06 am October 2, 2015                    It is the Development Team as a whole which forecasts the work that can be achieved during the Sprint, not the individual developers.  If the Dev Team can confidently make a forecast including the developer who's on vacation (knowing how he works), then they should do so, and the developer should pick up work on his return.          Log in or register to post comments",6540
"01:32 pm October 2, 2015                    The Development Team should self-organize to allow for each others' absence, including vacations. Note that a Scrum Master should beware of giving advice that might be interpreted as a command-and-control decision.          Log in or register to post comments",6540
"01:48 pm October 2, 2015                    +1 to what Ian Mitchell said.  Also, have you considered the implications of 'firing' someone for 1 sprint because they missed sprint planning? Any idea what that will do to morale?          Log in or register to post comments",6540
"04:15 am October 5, 2015                    Team member absence's can be schedule, or not. What if someone get sick one day or has to go to a funeral or has a car crash ?  It could be a good experiment to observe what append when a member is missing the Sprint Planniung Meeting.          Log in or register to post comments",6540
"05:01 pm October 7, 2015                    Thanks a lot for your valuable input. Let me answer Tim's and Olivier's above questions, as I did the ""experiment"" in a development team of 4 (sprint length 3 weeks):  - The developer was surprised to be excluded from the sprint  - He used the time to fully process his pile of work after 2 weeks vacation (e-mails etc.)  - He did an online-training and did work on some other products  - He attended the daily scrums and backlog grooming meetings  - He improved unit-test coverage of the product  - The Sprint completed successfully (velocity went down, but not 25%)  - Morale was and is still good - we are still friends  Anyway, next time I would include a developer who is not available the first few days in a sprint.          Log in or register to post comments",6540
"04:48 pm February 15, 2016                    every time you decide instead of team, you are risking having self-organization not to emerge          Log in or register to post comments",6540
Log in to reply,6540
Messages,6546
"10:22 am October 5, 2015                             Hello everyone,              I have a real-life doubt about how to use SCRUM in this situation:  - We have two scrum teams.  - We have one product owner.  - We have one backlog for all.  - Parallel 1 month's Sprints (2, one for each team)            Imagine that the first UserStory to implement (the one with highest priority) is CreateUser.            This task is in the system two big to develop for one team in a month, because it needs 50% of user-interface and 50% of service and backend development...            So the PO decide to break it on two. There's not longer ""CreateUser"" but two different UserStories:  - CreateUser user interface.  - CreateUser: service and backend.          each UserStory will be on a different SprintGoal and in a different AGILE Board.          or it's better having just one UserStory with two different definitions of done for each team?  Thanks in advance,",6546
"10:58 am October 5, 2015                    Split your big User-story in 2 or more smaller user-stories.  CreateUser : user interface + CreateUser : service and backend are not user-stories anymore but tasks on your sprintbacklog to perform in order to implement the inital user-story          Log in or register to post comments",6546
"11:10 am October 5, 2015                    I agree with Olivier, the User Story should not be decomposed by technology. User Stories or PBIs are intended to each deliver functionality of business value. A backend service does not provide business value directly to stakeholders.  If the story is too large for the development team to bring it to Done in a single sprint, then is does need to be decomposed into smaller stories, but not by tier.  Also, a User Story does not have a Definition of Done, the team has a DoD to determine if the work on a story is complete. Since both teams work on the same product,, the DoDs of the two teams shouldn't be different. If they are, they should at least have a common DoD around what it means for their increments to be integrated.          Log in or register to post comments",6546
"01:59 am October 7, 2015                    > This task is in the system two big to develop  > for one team in a month, because it needs  > 50% of user-interface and 50% of service and backend development...   Why would the ratio of work in technology layers make the story too big for one team in a Sprint?  A Development Team should have all of the skills needed, irrespective of the proportion of work across layers, to complete a user story.          Log in or register to post comments",6546
"09:40 am October 8, 2015                    I agree with the previous comments.   Perhaps a different approach is in order?  From the end-user perspective, what is accomplished by Creating User?  Who has the authority to Create User?  What exception processing should there be around the Create User process?  Are there different methods/paths to create the user?  Are there different levels of user that can be created, with different authorizations/abilities?  Try and take the conversation away from the technical solution, and focus on what the business needs and the value that can be provided to them.   You may be surprised not only by the depth of the conversation, but also the ease in which the ""Create User"" requirement can be broken down into many smaller yet still valuable parts.          Log in or register to post comments",6546
"04:44 pm February 15, 2016                    are those teams cross-functional? Can team really deliver client need end-to-end? Because it sound it is not.  if there is one product - why not to combine teams effort and work in synchronized sprints, or even scale up to have one increment          Log in or register to post comments",6546
Log in to reply,6546
Messages,6676
"01:32 pm January 29, 2016                             Scrum Guide states that ""During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of “Done” as appropriate.""  Does this imply that DoD will be updated after every Sprint Retrospective?  Can you please provide a scenario where DoD will not require update even after Sprint Retrospective?",6676
"04:08 am January 30, 2016                    > Does this imply that DoD will be updated after every Sprint Retrospective?  A Sprint Retrospective is an inspect-and-adapt opportunity to improve the team's implementation of Scrum, including their DoD.  If there is no evidence of a problem then there is no need for adaptation. This is true of any event. The Guide says that adaptation of the DoD is performed ""as appropriate"".  There is an implication that if no problem appears to be in evidence, then this could be because the team have not inspected thoroughly enough. Absence of evidence is not evidence of absence. In theory at least, there should always be an opportunity to improve product quality and hence the DoD. The challenge lies in finding those opportunities within the time box available.           Log in or register to post comments",6676
"12:23 pm January 30, 2016                    Thanks Ian for your excellent explanation. I had same understanding just wanted to cross validated.          Log in or register to post comments",6676
Log in to reply,6676
Messages,6672
"10:11 am January 26, 2016                             Good afternoon all,  Please excuse this post if it is n anyway against the Terms of Use but I am currently looking to recruit an Agile Coach to join Allianz UK based in their Guildford, Surrey Head Office.  The role will be sat within the Retail IT area of our Systems Development team and will assist in the transformation to an Agile environment.  If you would like to learn more about this opportunity please follow the below link to see it our job description.  https://careers.peopleclick.eu.com/careerscp/client_allianz/external/ga…   Many thanks!",6672
"05:39 am January 29, 2016                    Hi Mark,  Terms of Use are pretty straightforward, as you can see on the pinned post on the top of the topic list: https://www.scrum.org/Forums/aft/83.  What do you think about your post in that regard?  Regards,  Bartek          Log in or register to post comments",6672
Log in to reply,6672
Messages,6668
"12:16 pm January 23, 2016                             Scrum Master - Trainer and manager thought QA is a good role to be the Scrum Master on the team even though the trainer did recognize that in a team with a ratio of 4:1 devs to testers, it throws more on the testers plate when they already have enough to do.    I have two issues with QA being the Scrum Master and I would like to see a website make recommendations on the following.   I think there has to be a skill set requirement and a personality match.     On skill set, I have been with my IT company for less than a year and have sat in our planning and daily standups and when the developers start talking about architecture, refactoring and get it into implementation details, that's when I go ""huh?""  My company uses many leading edge technologies and anyone in the IT field knows is you close your eyes for 6 mos, your skills are already out of date.  The type of programming I do is the kind you learn in a ""teach yourself X in 21 days"" and is very rudimentary.   For example, words like Flux, are still a mystery to me.  We recently cited at Scrum training the lack of documentation, knowledge is with a few key individuals, and little or no on-boarding.  I would be afraid as a Scrum Master that a developer would raise an impediment and I would not know what to do with it because I lack context.   In the absence of another developer who needed to work the issue, I could see myself saying to that person, ""go talk to so and so, they have an issue"" rather than try and relay it and muck the message.  On personality, I think a Scrum Master is a coordinator of people.   As a task-driven person, I find that very draining and not my style.  You need managerial skills which I never had nor want.  On Product Owner, which we don't currently have, we have Product Managers that write our stories and provide feedback at review meetings and daily stand-ups (when they do attend).   It seems to be like our teams' UX contact who do user studies, research, and are knowledgeable of business are a good fit for the PO role.  As a QA, I give recommendations to the PM (and or PO if a when that role is implemented) on what high priority bugs should be pulled into the next sprint and keep the backlog of those items ordered.",6668
"02:23 pm January 25, 2016                    Doug,  I'm not sure if I agree with your Scrum Master skills assessment.  A Scrum Master nurtures a team to higher and higher performance.   This involves many soft-skills like empathy, encouragement, relationship-building, and understanding of organizational sponsorship and structures to help resolve team impediments.  Whenever in doubt, turn the issue over to the team.   Ensure they take ownership of it.   In your example where a developer raises an impediment, ask the team what should be done.   A Scrum Master isn't responsible for resolving impediments, but is responsible for making such impediments visible within the organization so that they can be addressed.          Log in or register to post comments",6668
"06:21 pm January 26, 2016                    Our code is too buggy for me to take on any more work.   I think I serve my company and developers well by finding all these issues.  Think of all the support I provide for trainers, doc writers, and customer care eliminating the need for customer calls.  Isn't that what it's al about any way?  Serving the customer and making a company profitable?   Scrum teaches that QA primary role is not finding bugs but that's all I do.  Developers are too taxed to write unit tests and knowledge sharing of tools like Code Climate doesn't happen.   How can we get there?  Just seems like we chase our tails sprint to sprint with refactoring and getting stories that are too big.  What can we do to take the paradigm shift and truly implement Agile?   The only way I see is to hire more people and let bugs go to the field so that we may spend more time with up front planning narrowing scope of stories, documenting architecture, spreading tech leads to review changes that would affect other apps, taking time to automatic testing, build up the unit test suite.   But people leave and many engineers don't write stuff down.          Log in or register to post comments",6668
"04:30 pm January 27, 2016                    Doug,  Just to recap a few of your points:  Our code is too buggy for me to take on any more workDevelopers are too taxed to write unit tests and knowledge sharing... doesn't happen ...getting stories that are too big  It seems that many of your issues relate to inefficiencies in how you work.   Inefficiencies, mind you, that are being exposed by trying to work Agile-ly.  Scrum is not about working more than capacity, yet that is what I am seeing from your explanation.   Team members are barely able to come up for air, and quality is suffering because you are trying to work Scrum into a fixed scope/timeframe.  Keep in mind, traditional project management (waterfall) allows you to adjust any of the 4 project variables (time, cost, scope, quality) in order to ""stay on schedule"".   With Scrum, the only  variable that can be changed is scope.   Time is fixed (length of iteration), cost is fixed (stable team), and quality is fixed.   There simply is no ""shortchanging"" quality in Scrum.   You are experiencing the ramifications of poor quality practices.  Letting bugs go to the field is simply kicking the can down the road.   Stop hiding the problem, and start correcting it.   You will need to go slower, because you were never as fast as you thought you were in the first place.   Don't you think you will go much faster with cleaner code?  How are you ""serving the customer"" by delivering untested, buggy code?   How does your company expect to turn a profit with such a poor product?  Why are your stories too big?   Who is grooming them?   Why are they being accepted by the team if they are too big?  Why are you dependent on engineers ""writing stuff down""?   Isn't all of the information needed for a story captured in it?   If not, it sure needs to be.  Start to follow Scrum, instead of SINO (Scrum In Name ONLY).   Learn about Lean waste and ways to improve your processes.   Start building higher quality into your work product.   Begin reducing the mountain of technical debt that you are dealing with.  There is no quick fix, just a lot of hard work and patience.  Hope this advice helps.   It is just the tip of the iceberg though.   Good luck.           Log in or register to post comments",6668
"08:22 pm January 27, 2016                    It comes down to working with a bunch of cowboys in a very unstructured and volatile environment both quality wise and in building and deploying.   The product that I am getting is no where near QA ready and I end up spending my days thrashing with developers and build issues.   It is very draining.   I don't think the developers have a good idea how to estimate; often they get into the story and realize 3 days into the Sprint that it's another week of effort.  Instead of having the power to stop and split the story up, we raise the issue to our manager who is supposed to groom these stories and just continue chasing our tails.  We recently had to rip the entire flux of our product and replace 21%+ of the code and all the bugs that I am finding; it's like starting over.    Why am I finding so many issues?  Again lack of unit tests, dev qa testing, trouble with IE, limited knowledge in the team, overwork, stress, etc. etc.          Log in or register to post comments",6668
"08:45 pm January 27, 2016                    Sounds like we are not communicating....  - i want developers to document their design so when the system goes down, I know what services/processes to check without feeling totally helpless or pinging a chat room  - I want to understand the reason for major architecture refactors and test implications  - I want documentation so when there is talk of flux, apache web server, apis, front-end, back-end specifics I understand what the hell is being talked about (thus my apprehension about being the Scrum Master) - we cited at a recent Scrum training, that our on-boarding is basically non-existent  - i want to attend architecture reviews and listen to the conversations for buggy areas  - I want formal code walkthroughs and again listen for buggy areas  - I want developers to have more unit test and have me review them  - I want developers who are familiar with static analysis tools to find time to give brown bags so we in QA can learn how to use these tools.  I am fine with teaching mysefl provided someone provides me a road map, order, timeline, priorities, and where to find the information instead of this""figure it out yourself"", keep things to myself job security bullshxx.  - I write detailed manual test cases  - I went and met the tech writer my first day onthe job, affirmed what an awful job they have, and always support them  - I take Cucumber scripts and write API docs for the gherkins on the conditions necessary to run to document all my leg work and save the next tester from the grief  - I comment the hell out of Ruby scripts because that's what I was taught 28 years ago in Comp Sci.  I can't remember what I had to eat two nights ago.  I document for myself and for the troubled soul trying to navigate through all the cryptic Selenium system messages and come on board quickly.   I have seen people dismiss Waterfall because it took too long for a product to get to test.  I think that is ridiculous and preached to my mentees about being there from day 1 and being a part of the process from requirements, design, data design, code inspections, white box test review in addition to writing a test plan and scripts.  There were a lot of good benefits in Waterfall that are lost in SCRUM that I think are the causes of a lot of issues at my place of work.  And do you think I feel good saying all this?   Absolutely not!   But I feel like someone riding a mechanical bull swinging my hat yelling YEEHAW!!!!!   There is only so much a person can take.  Others can just say it's a 40 hour a week job and I am not getting upset if they are not going to train or pay me more.  Guess I need to think like that too....  BTW, I have close to 25 years experience testing.  Had a great performance review.   Been told my internal and external customers that ""I am the best tester they ever met""     The unstructured, thrashing environment is just driving me crazy.   I have no QA manager to vent to.          Log in or register to post comments",6668
"06:01 pm January 28, 2016                    Doug,  If your environment is volatile and unstructured, then I sympathize with your pain.   To me, what you describe is very dysfunctional and in no way reflects an Agile approach.  Unfortunately, it seems you are now venting about your difficult situation, without any clear question or request.  Poor estimation, poor quality, overly-demanding schedules, and a mountain of rework based on these poor practices.   An Agile mindset, and Scrum in particular, can definitely help.   However, without executive-level support, such a transformation will never take place, unfortunately.  Again, good luck to you.           Log in or register to post comments",6668
Log in to reply,6668
Messages,6671
"01:46 am January 26, 2016                             As a business analyst, one of the things I find more difficult on Scrum projects (working with user stories) than I used to on RUP projects (working with use cases) is understanding what the current (""as is"") requirements for the system are.  As I'm not working on greenfields projects, this is a critical thing for me to be able to do. When working with use cases, it was straightforward - the use cases would be maintained as a versioned, living artefact over the years of the product's existence, and if I wanted to understand what the current requirements were for a particular feature (in order to change them) I'd go and read the use cases for that feature.  With user stories, this becomes a nightmare. I've found that trying to understand what a feature is currently supposed to do by diving through a dumpster of historical user stories (I think that's the right collective noun) is difficult, inaccurate and time-consuming. Every time I'm trying to piece together an incomplete jigsaw puzzle just to get an understanding of the baseline, in order to ask the right questions of stakeholders.   How do other Agile BAs deal with this problem? Are there other artefacts (over and above user stories) that people would recommend Scrum projects use to make BAs' jobs easier?",6671
"10:13 am January 26, 2016                    User Stories are primarily a way to manage work. They are not meant to be used as documentation. You could technically still use Use Cases alongside your User Stories for documentation purposes but I prefer to use automated acceptance tests resulting in living documentation (with a tool like Cucumber/Specflow) as much as possible.          Log in or register to post comments",6671
"11:15 am January 27, 2016                    > I've found that trying to understand what a feature is currently supposed to do by diving  > through a dumpster of historical user stories (I think that's the right collective noun) is  > difficult, inaccurate and time-consuming.  A user story is a placeholder for a conversation about a possible requirement. Those conversations occur during agile development. Once the Definition of Done has been met and an increment delivered, the relevant stories ought to be retired, as the conversations for that work have then finished. New or revised work would constitute new stories on the Product Backlog, reflecting the new conversations that will need to be held when developing the next increment.  Scrum is agnostic about how Product Backlog Items are expressed. User stories are merely a convention, although they are a good one because they encourage the feature-complete delivery of small pieces of work. There's nothing to stop you from adopting Use Cases instead if that's a better fit, although I'd be concerned about the level of granularity being too high, and too much work-in-progress accumulating.  User stories can be delivered as documentation, or used as the basis for such documentation, with each increment. If this documentation is required then it may be stipulated as a criterion in the Definition of Done. Alternatively, as Bart has suggested, you may prefer to value living documentation. A BDD approach using Cucumber or SpecFlow is especially useful because they are executable requirements specifications and are traceable to code.           Log in or register to post comments",6671
Log in to reply,6671
Messages,6663
"08:26 am January 20, 2016                             Hi everyone,   This is my first topic and I'm kind of a scrum rookie, so please show mercy if you have already answered that question a dozen times.   I'm working as an engineer in a consulting company and right now I'm trying to bring Scrum into our project work. So far it worked very well. But now I'm facing a problem I don't know how to solve. Due to our job some of our project members spend a lot of time at our clients and others work in our office. So for us it is almost impossible to have a daily Scrum with the whole project team. The first idea was to skip the daily scrum. But in my opinion the daily scrum is one of the most important tools.   Therefore i would be happy to get some suggestions and ideas from people who also had that kind of problems and maybe found a got solution.   Thank you for your help!   Oliver   P.S. Please excuse my English. I'm not a native speaker :)",6663
"01:14 pm January 22, 2016                    What is your organizational structure?   Is work still project-driven?   Is there a Scrum Team?  You are right about the Daily Stand-ups.   They are absolutely critical - skipping daily stand-up meetings inevitably leads to bad scrum.  Investigate ways in which the team (if it is a team) can interact virtually.   There are plenty of tools out there that can simulate everyone being in one location/room.   Facetime or Skype just to name a couple.  Establishing a regular, recurring point of time each day for the team to come together to discuss sprint progress is again, critical, and helps promote the cadence and rhythm that leads to higher performance.           Log in or register to post comments",6663
"05:21 pm January 22, 2016                    The purpose of the Daily Scrum is to refocus the team's joint collaborative effort on achieving the Sprint Goal, and to replan work accordingly.  Do the team currently have a shared view of the goal and the work that needs to be done? Do they collaborate on that work with a sense of joint enterprise...or do they work independently of each other?          Log in or register to post comments",6663
"07:26 am January 23, 2016                    If there is no way of doing one stand-up meeting for the whole team, both in-house and at customer site. I recommend, as a work around, to have two daily stand up meetings.  The first one will be a face to face stand-up with all in-house team members. Scrum Master and every one are encouraged to take notes of all important points especially those points of interest to the absent remote team members.   The second stand-up will be for Scrum Master and remote team members using a tool such as Skype. All in-house team members are encouraged to attend if they feel it will add value.  By this way, co-located team will get full value of being together and remote members will still catch some value, as much as possible.           Log in or register to post comments",6663
"01:13 pm January 25, 2016                    Ahmed,  I would strongly disagree with your work-around proposal, as it sidesteps the issue.  The daily stand-up must be used as a touch-point for the entire team, to come together around the sprint work and the sprint goal.   Why would you propose a model where team members have the option of attending a daily stand-up if they feel it has value?   Why would you outline an approach where co-located team members gain full value around the sprint discussion, but remote team members ""may"" catch some value with a follow-up touch-point?  Your suggestion introduces a significant amount of waste and inefficiency (hand-offs, meeting notes, multiple meetings) into a ceremony(daily stand-ups) designed to reduce and/or eliminate such waste.  If the team is formed with both co-located and remote members, then that is the team.   There cannot be a two-tiered view of a team.   Attempts to promote division between the team based on geographical location (like having two stand-ups) over-complicates communication and harms team formation.           Log in or register to post comments",6663
Log in to reply,6663
Messages,6670
"10:11 am January 25, 2016                             Hi there,  And thanks for letting me join your community. I'm new to Agile Scrum and have a question.  I'm trying to develop a project plan in Project 2010.  it's to develop a data warehouse.  For the iterations I want to be able to develop a prototype for users at each stage.  Any feed back will be incorporated into the solution.  So for the first sprint it would be to get user requirements set up, a data model produced and then a quick development of the requirements so far for a prototype and given to the user to test.  After that, the more complex work of developing that part of the solution will be the next sprint.  How do I incorporate the prototype within the sprints between before the heavy development work?  Sorry if I've not been clear but any advice on how to fit prototypes into the sprints would be appreciated.  Thanks",6670
"11:12 am January 25, 2016                     > I'm trying to develop a project plan in Project 2010  Why not work with whoever wants this to elicit a Product Backlog instead? Teams can then deliver increasingly mature product increments every Sprint. The work to be done each Sprint would be determined not by a plan but by empirical delivery and feedback.          Log in or register to post comments",6670
"12:36 pm January 25, 2016                     Posted By Ian Mitchell on 25 Jan 2016 11:12 AM   > I'm trying to develop a project plan in Project 2010    Why not work with whoever wants this to elicit a Product Backlog instead? Teams can then deliver increasingly mature product increments every Sprint. The work to be done each Sprint would be determined not by a plan but by empirical delivery and feedback.  Thanks for the reply Ian.  I had it in mind to use a product backlog within the plan.  I guess the Project 2010 is just another way of time boxing Sprints.    I'll have a think about it.  Cheers          Log in or register to post comments",6670
Log in to reply,6670
Messages,6654
"11:14 am January 14, 2016                             Application development will always have bugs somewhere.  What do you do when the Development Team delivers a functionality that fulfills the Done criteria, then down the line in some future Sprint, you discover a flaw in the code for that aforementioned Done function?  Do you reintroduce the same Sprint backlog item, or create a new one?",6654
"12:10 pm January 14, 2016                    Teams should try to improve the Definition of Done for each increment, so that the quality of the product can improve with each release.  Setting the quality bar higher may mean that additional work must be undertaken if the product is to henceforth meet that standard. In other words, new ""undone"" work might be recognized as needing to be completed if the quality gap is to be bridged in future increments.  This new work must be included in the Product Backlog and estimated. Features that were once thought to be complete may therefore need to be included again. In this case the estimate given to each of them should reflect the new work needed to meet the revised Definition of Done. These are therefore effectively new items on the Product Backlog.          Log in or register to post comments",6654
"04:32 pm January 14, 2016                    The team completes a story according to the agreed-to DoD.   The business confirms that all acceptance criteria have been met, and gives its blessing.   The sprint is closed.  Later, a flaw/bug/oversight is identified with the original story.   That effort is over and done with.   A new story (or stories) needs to be created to address the issue, and prioritized accordingly by the business for a future sprint.  The retrospective can serve as a good forum for analysis in determining root cause.   Was the functionality tested appropriately?   Were assumptions made that ultimately turned out incorrect?   Was the acceptance criteria insufficient?          Log in or register to post comments",6654
"03:31 am January 15, 2016                    Note that the Product Backlog is not limited to contain User Stories. It can also contain bug fixes that can be prioritized by he PO.          Log in or register to post comments",6654
"06:15 am January 25, 2016                    Interesting, we are struggling with this issue.  Ian, if I understand correctly you are saying: Dev team: ""We just found that last sprints' story crashes the application when doing flow X. So we go to the PO and tell him: we just found a bug, is it important enough to uproot the current sprint? Or do we place the bug somewhere halfway in the backlog so that it never gets solved, as the PO usually has other priorities""  What about having a Definiton of Done that says something about technical debt, or the amount of bugs? As an empowered dev team member, taking pride in my product and fixing this is pretty high on my list of priorities. As a 'scrum anarchist' I would say: the PO can tell us what new things to work on, but we choose how to build it. And part of how is limiting technical debt and open bugs.  So Sanjar, I would suggest: if it is a bug that can be solved in about 2 hours, just fix it, this saves a lot of discussion. If it will take a day or more, you should discuss it with the PO. We currently work as follows (but I doubt this is Scrum);  - Bugs found on stories which were in this sprint, are fixed in this sprint  - Bugs found on stories from earlier sprints are solved next sprint (PO has no say in this)  - Feature requests are planned in the next sprint as the PO requests  The storing of bugs until next sprint is too bureaucratic for my liking (as a tester ;), and they tend to pile up fast. I think Lean (wher the roots Scrum lie) propagates a fix it now and fix it good mentality.          Log in or register to post comments",6654
"11:03 am January 25, 2016                    > Ian, if I understand correctly you are  > saying: Dev team: ""We just found that  > last sprints' story crashes the  > application when doing flow X. So we go  > to the PO and tell him: we just found a  > bug, is it important enough to uproot the  > current sprint? Or do we place the bug  > somewhere halfway in the backlog so  > that it never gets solved, as the PO  > usually has other priorities""  If it is a defect and it can be fixed in the current Sprint without imperilling the Goal, fix it, along with the Definition of Done.  Otherwise the flow that exposes it represents a scope increase that cannot be absorbed. The flow must therefore be accounted for on the Product Backlog so that an improved Definition of Done can be satisfied. Whether it is called a defect, bug, or user story is immaterial. It is work to be done. It should be placed at the very bottom of the Product Backlog because the PO has not yet had the opportunity to prioritize it relative to everything else that has to be done. Priorities of backlog items should be determined by the PO based on the relative value that is likely to be delivered.          Log in or register to post comments",6654
Log in to reply,6654
Messages,6652
"09:38 am January 13, 2016                             Hello everybody,  in the Agile book by Roman Pichler, it is recommended that the Product Owner attends the Daily Scrum, for several reasons: it literally mentions: <<it is a great opportunity to understand the progress being made and to see if the team needs help>>.  The Scrum guide does not explicitly forbid the Product Owner from attending the Daily Scrum meeting, but it mentions a sentence that is not as explicit as the Pichler's one and perhaps slightly contrasting. Specifically, the guide says <<The Daily Scrum is a 15-minute time-boxed event for the Development Team to synchronize activities and create a plan for the next 24 hours.>>  In the guide, how should the ""for"" be interpreted? ""For"" any beneficial outcome the meeting can bring to the Development Team? Or ""for"" attendance of the Development Team. The former seems more inline with agile principles, but the latter appears more immediate language-wise (at least for non-native English speakers).  In the case of the latter, do you see any conflict with the Pichler's statement? Or is there a way out interpretation to this?  Many thanks,  Dan",6652
"10:07 am January 13, 2016                    The Guide says:  ""The  Scrum  Master  enforces  the  rule  that  only  Development  Team  members  participate  in  the Daily Scrum.""  Therefore there is a clear rule forbidding a Product Owner from ""participating"". Why do you think that is, and what might it imply for a Product Owner's ""attendance""?          Log in or register to post comments",6652
"11:30 am January 13, 2016                    My ""best practice"" has been to extend the invitation to the Product Owner to attend Daily Scrum meetings as a non-participant (i.e. - fly on the wall).   There is benefit to both Product Owners and other Stakeholders to listen in on team conversations regarding the current sprint work.     I like the analogy of sitting at the chef's table in a restaurant.   You can observe and listen to how your food is being prepared, but in no way are you commenting on what you see in the kitchen or making suggestions on how to make the meal.   You are simply a silent observer.  It is up to the Product Owner whether they want to attend or not, but it should be made very clear that the Daily Scrum is solely a team meeting for their benefit only.   It provides them a regular recurring opportunity to touch base and communicate progress on the sprint items.  Hope that helps.          Log in or register to post comments",6652
"11:51 am January 13, 2016                    Hello Ian and Timothy,  thanks for sharing your views / points. On my side, it was mainly to double-check / receive feedback on it. The assessment pages suggest the book ""Agile Product Management with Scrum"" by Pichler, who I noticed is involved in the Scrum Alliance.  The book is useful and provides some insights, but there are also ""traps"" like these too - and I thought that sharing it may help other PSPO I would-be as well.  Thanks!          Log in or register to post comments",6652
"01:09 pm January 13, 2016                    Daniele, definitely look to the Scrum Guide first.  Related article about that:  http://www.scrumcrazy.com/Best+Practice+-+Look+to+the+Scrum+Guide+*First*          Log in or register to post comments",6652
"06:24 am January 25, 2016                    Daniele, good question. I believe that this changed in the last revision of the scrum guide. Before, the PO was to attend the Daily Scrum. Roman Pilcher might have based his material on this.  General reasoning I have read for this change is: the PO should know what goes on in the dev team, how he does it is up to him. And yes, he tends to have a busy schedule, so should not limit himself when searching for a timeslot in a stakeholder's calendar          Log in or register to post comments",6652
Log in to reply,6652
Messages,5465
"01:29 pm May 7, 2013                             Hi,  I have worked with scrum in my last project about two years back where we used a tool called scrumworks to maintain our backlog, stories and sprint tasks. It also helped us to fill in our guesstimations and track our daily hours for our sprint tasks.  I am now trying to start scrum for another project and looking for some similar tool to help me out, preferably an  open source tool . Anyone having any pointers for the same would be appreciable.  Thanks.",5465
"01:58 am May 9, 2013                    Hi,  May be you can try with   http://www.pivotaltracker.com/           Log in or register to post comments",5465
"05:45 am May 9, 2013                    I know it's a bit mercenary, but one thing to consider is the marketability of the experience you get with the tool. If the project does not align to any particular solution, why not choose one that will best improve the employment prospects of team members?  When you develop skills with a product, that is an investment and it's reasonable to think about the potential return.          Log in or register to post comments",5465
"10:35 am May 9, 2013                    Hello Shweta,  I'd recommend to have a look at IceScrum: http://www.icescrum.org/en/  Kind regards,          Log in or register to post comments",5465
"09:03 am May 10, 2013                    Are there any reasons not to use a physical board? I would always suggest/advice a physical board over a digital one because I like the team engagement that comes with it.          Log in or register to post comments",5465
"10:48 am May 10, 2013                    I agree with Chee-Hong.  Although online tools are ubiquitous and sometimes useful I consider them a necessary evil.  No tool can provide the visibility, impact and ease-of-use that a physical board does.  That said, a simple spreadsheet, kept up-to-date, will suffice when an online capability is needed.          Log in or register to post comments",5465
"07:44 am May 15, 2013                    Scrumwise is a good tool   http://www.agiledistributed.com/           Log in or register to post comments",5465
"11:04 pm May 15, 2013                    I advise many teams to use Team Foundation Service [ http://tfs.visualstudio.com ]. The terms used in TFS is aligned with Scrum Guide.          Log in or register to post comments",5465
"01:36 pm May 17, 2013                    The topic is about free tools if im not mistaken          Log in or register to post comments",5465
"04:30 pm May 22, 2013                    As the agile manifesto says, ""Individuals and interactions over processes and tools"". If you focus on the tool before you start implementing scrum, the tool will dictate the practices. I would rather let the practices that are optimal for my team evolve. My advice is don't get caught up on the tool. Use a physical board, post-its, spreadsheets, (whatever works). Instead, focus on the people and scrum/agile principles. The tool will fall in place when you feel a need.  As for me, a spreadsheet has worked just fine. I use google docs to share it with the team. But, honestly, if my workplace had a board that was visible to everyone, I would have used that instead. OTOH, the neat thing about a spreadsheet (as opposed to a formal tool) is that you can ""customize"" it. For example, in the current sprint, I had way too many stories spilled over from the previous one and needed to highlight it. I just colored them red, and didn't even have to explain why in my daily scrum!          Log in or register to post comments",5465
"06:28 pm May 26, 2013                    Hi Shweta,  I agree with Chee-Hong, Vasan and anyone which suggests a physical board. I started with a physical board and it is easier for people to be participatory, active and work together. After a whiel, team members change their localization being distributed and I had to use a tool. In addition, managers required reports and so often I had to rewrite tasks or wasting time on bureaucracy.  If you can go straight to what is important, a place visible to all, where the team is active.  If external agents push you to a tool and since you asked I have two proposals:  Kunagi  IceScrum  If external agents push you to a tool and since you asked I have two proposals:  Kunagi  IceScrum          Log in or register to post comments",5465
"10:29 am August 23, 2013                    I would recommend to work with physical board if possible, too.  But my team had to work with shared team IN france, India and Romania and now Morocco, then we decided to use an online tool, not to use excel sheets. In fact the Scrum Master were happy, because they were freed from manually update charts :-)  We use KADOS since almots one year and all users are happy : Scrum Master, Team Members and since a few weeks, some Product Owners are keen to use the Tool instead of their own excel or big editor soft.  KADOS is open-source and totally free of charge. You just need an Apache/PHP server (PHP 5.3 at least, we used a 5.1 to start without looking at the install instructions and had a few bugs :-) ) and a Mysql server.  http://sourceforge.net/projects/kados/  http://www.kados.info/en/          Log in or register to post comments",5465
"03:15 am September 3, 2013                    Hi guys,  I've been using scrum for more than 2 years now and I would also recommend physical board. However in my new office (actually this is my first day in my new job! :) ) physical conditions are not quite suitable for this. This is an open office that is surrounded with glass walls that are not large enough. And if I close one of those walls with my board, it wont look nice. But maybe I'll do it in the future.   As a result of short research, I also found iceScrum which seems nice.   To the ones who have used this tool,   1- Do I need to integrate this tool with other task management tools such as jira Or will I be able to do my task management from here?  2- Does this have an intergration with source safe? It would be nice to commit a code and link it to a scrum task.  Thanks a lot          Log in or register to post comments",5465
"03:27 am September 3, 2013                    Btw, I've just noticed that iceScrum on cloud is not free! :(  I need such an online tool that my team can access. I don't want to host its .war file or make everyone install it on their PCs          Log in or register to post comments",5465
"03:50 am September 3, 2013                    yep, kados seems good. I wish it was on the cloud though. I'll give it a try.          Log in or register to post comments",5465
"08:49 am September 3, 2013                    Yes, a full-edition opensource tool free in the cloud ! I think it's not easy to find ! :-)  It may happens but most of the time it has not all useful functions and you have to pay for them.   You may suggest that to the Kados team. Since they develop a quite complete software for nothing, maybe they will be philanthropists and create a free cloud offer with all features. :-)           Log in or register to post comments",5465
"06:12 am January 25, 2016                    What about this guys? I've tried it and have to admit I'm loving it - http://reqtest.com/features/agile-board/          Log in or register to post comments",5465
Log in to reply,5465
Messages,6655
"08:57 am January 15, 2016                             hey there,   i suggest we exchange tips from experience and articles about getting accepted and gaining trust as a scrum master in new teams/companies where SM's do not have any formal authority and the teams haven't yet realised themselves that they have issues which can be addressed by a SM. so the challenge is to sell them the need and then fulfil this gap.   thank you.",6655
"10:20 am January 15, 2016                    What has worked well for me in the past is to simply observe.   You will alienate people if you come in with a prescriptive approach to how they should be doing things.   Pick your moments to provide your suggestions or views, and be completely receptive to any feedback received.   That will indicate whether to pursue the matter, or let it rest for a while.  Its about leading them to water, and hoping that they drink.   If they don't, reflect on the situation, and look for the next opportunity to lead them to another pool of water.  As a SM, you should not be ""addressing"" anything.   It is your job to make things as transparent and visible as possible to both the team and the organization, pointing out any poor practices and inefficiencies that you see, and backing those observations up with metrics, experiences, or examples that support your case.   Ultimately, it is their decision to be receptive to it or not.  Good luck!          Log in or register to post comments",6655
"12:23 pm January 15, 2016                    > It is your job to make things as transparent and visible as  > possible to both the team and the organization, pointing out  > any poor practices and inefficiencies that you see, and  > backing those observations up with metrics, experiences, or  > examples that support your case.  Correct. If you are not yet an influencer, that may be all you have control over.  > Ultimately, it is their decision to be receptive to it or not.   It's important to:  1) at any given stage know where sponsorship for change comes from, if any, and what its constraints might be  2) set clear expectations regarding how sponsorship must be evidenced, if the expected change is indeed to happen.          Log in or register to post comments",6655
"09:25 am January 17, 2016                    Hi there, let me share here with you site where there are various of short and degree courses to choose from. I hope this could help, good luck. http://www.premiumcourses.net/          Log in or register to post comments",6655
"06:10 am January 18, 2016                    this is useful,   thank you guys))          Log in or register to post comments",6655
"02:13 am January 19, 2016                    Where I am struggling right now, is that I was brought in as a Scrum Master and a sort of Agile Coach to a company that adopted Agile on the exact same day that I started.  So pretty much everyone is looking to me to ""show them how it's done"". With management, however, I am getting conflicting signals.  On the one hand, it was their idea to switch to Agile in the first place. On the other, I'm hearing of a lot of grumbling like, ""Agile has too many meetings, people need to get back to work,"" and ""We don't need Sprint Reviews, the Product Owners already know how things are going and there aren't any other stakeholders that matter.  Anyone else who might want to offer an opinion in a Sprint Review, well, that's time they're wasting when they should get back to work, so let's just not have Sprint Reviews.""  Management seems to believe that if they just have each Scrum Team show off a 10-minute demo of their work, then that's enough.  So I'm kind of pondering how to deal with this. On the one hand, yes, I'm a new Scrum Master to the company. On the other, people are looking to me to ""teach them proper Scrum"". With management, they're clearly interested in trying something new (hence the switch to Agile), and I do have a line of communication to them, but they're really hating the ""all these meetings"" thing, since they see it as a waste of productive time.   How would other CSMs handle this? Try to be more of a Scrum evangelist (which is what I was hired to be), and work harder to persuade management to give Scrum a try, including Sprint Reviews?  Or acknowledge that management may have other factors in mind that I do not since I'm so new to the company, and so acquiesce to their demands for now, but maybe try to push a bit more later?  Or something else?           Log in or register to post comments",6655
"04:17 pm January 19, 2016                    ""they see it as a waste of productive time. ""  Can they display any evidence of this ""intuition"" ?  What is the point of view of the Dev Teams ?  Are they seasoned enough to bypass the ""Shu"" level to the ""Ri"" level (any evidence ?) ?          Log in or register to post comments",6655
"05:31 pm January 19, 2016                    You say that you were brought in as a Scrum Master and also as something of an Agile Coach, and that you were hired as a Scrum Evangelist. This suggests that your role is a fudge of various people's expectations. It's very hard to make progress under such conditions, as your role is likely to be constantly redefined and challenged.  In my experience, the best thing to do in this situation is to make your *own* expectations clear. I'd nail my colors to the Scrum Master role description mast, because that is clearly defined in the Scrum Guide and is not something that can be argued away. I'd make it clear that I expect the Scrum rules, as articulated in the Guide, to be observed. I'd make it clear what those rules are, but leave it up to others whether or not they follow them. If they are not followed I would explain the risks and possible consequences. I wouldn't see it as my job to evangelize anything. That's a different proposition as it requires a more mature and robust level of organizational sponsorship for enterprise change.          Log in or register to post comments",6655
"05:48 am January 25, 2016                    In my experience, getting valuable sprint Reviews is hard. Often they end up with just a 10-minute demo ""we built technical features XYZ"", and stakeholders can't connect, and stay away/complain. Telling them a story (this is where we were, we want to go there eventually, we took these steps this sprint, and coming up next are probably these steps) can keep them engaged, and may lead to valuable feedback.  Elonka, management thinks reviews are a waste of time. What do the other stakeholders think? Are they actively engaged?Can you show the management what important feedback would otherwise have been overlooked? If you are really lucky, you'll get feedback about an upcoming (or built) story ""no that will not work, we need approach y instead"". Then you can show the management: our meeting just gave us valuable feedback (and saved us building a story with marginal value).          Log in or register to post comments",6655
Log in to reply,6655
Messages,6644
"05:17 am January 8, 2016                             Currently we are planning to release a patch, but there is a discussion within our team.  Idea 1:   The PO signals: I want that patched. The dev team emails marketing: we want to release functionality X on date Y, could you please send an email to our customers about the downtime?  Idea 2:  The PO signals: I want that patched, he emails marketing: we want to release functionality X on date Y, could you please send an email to our customers about the downtime?  Both could work, just curious to hear what fits best with Scrum's ideaology.  About our organization: small, informal, well suited to Scrum. We have lunch at the same table as marketing, they work in the cubicles next to us.",6644
"08:42 am January 10, 2016                    One of the main ideas of Scrum, and agile in general, is to make things transparent and allow self-service to all stakeholders.   In practical terms this could probably mean having a wiki page updated with the details of each patch and have the marketing team subscribe to these updates.   Having said that, nothing can replace a real face to face interaction, so someone should go and talk to the marketing team about the patch, and it could either be a developer or a PO or maybe someone from the marketing team will initiate the discussion, it really doesn't matter as the team should self-organize when dealing with such action items (for example - decide on a Daily Scrum who is going to talk to the Marketing team), the important things is to make sure they DO self-organize :)          Log in or register to post comments",6644
"11:53 am January 10, 2016                    Since the Product Owner is accountable for the release of value, and for managing product stakeholder relationships, which of the ideas 1 and 2 you have suggested would seem to be more appropriate?          Log in or register to post comments",6644
"10:20 pm January 11, 2016                    I would opt for idea # 2. The PO should be communicating with stakeholders and coordinating contact actions based on communication with the Scrum Team.          Log in or register to post comments",6644
"05:17 am January 25, 2016                    #2 Letting the PO/PM do the coordination work seems the way to go in traditional companies, however I lean towards #1:  As I understand it, the Dev team* should have the capabilities and is responsible for making and releasing the software. Making sure users are informed beforehand, to me, is a part of releasing, so the dev team should make sure it gets done.  While marketing is also a stakeholder (and should know what functionality is coming up, and accept it), in this case they need to do a task (send an email about downtime and new functionality), I would say they are a 'subcontractor' in this case (and arguably should be part of the dev team).  Boris, I really like your self-service idea, and the pragmatic attitude of your post. Just make sure it gets done!          Log in or register to post comments",6644
Log in to reply,6644
Messages,6620
"02:07 am December 27, 2015                             Wow, what a ride to taking this thing. I'm going to post in the other forum my thoughts on the use of SCRUM in software development, but for this post, I'm going to provide, like others have, some insight that may be useful in terms of studying for and passing the PSM1 Exam.   1. Ignore the advice on this forum to read other SCRUM books and manuals. For instance, like the Scrum Book of Knowledge that's over 300 pages. It's not necessary and can actually be a detriment because information in other books and manuals by third parties (parties other than Scrum.org/the Scrum Guide) can be wrong and just plain confusing. Besides, it's overkill anyway and thus a waste of time unless you have the time to spend on navigating all of that information and verifying it.  2. What did I use to study? a) The official Scrum Guide from Scrum.org. b) The Open Assessment Tests on Scrum.org: PSM Open Assessment, the Developer Open Assessment, the Product Owner Open Assessment, and the Nexus Open Assessment. c) The practice tests on http://mlapshin.com. d) The Nexus Guide from Scrum.org. e) My own practical experience using Scrum for software development and knowledge of it otherwise.  3. I read the Scrum Guide 3 times. I read the Nexus Guide once.   4. I took all of the Open Assessments mentioned several times until I was consistently scoring 100%. On the Nexus, there was a few times where I might get one question wrong and just didn't bother taking that test too many times. I probably took the Scrum Open Assessment at least 10 times: this was my main focus. A few new questions will randomly appear different times you take the test so doing the test several times helps you memorize and get exposed to the other questions.  5. From the Scrum Guide, I created 140 questions using Flashcard software for Mac called Flashcard Hero. By creating these questions, it caused me to think more deeply about what I was reading. I then went through the Flash Cards once to memorize them as best as I could.   I have several years experience practicing as a software development leader and thought I was practicing Scrum. After getting certified, I now realize that I wasn't completely practicing Scrum. Anyway, if a person has no experience in software development I could see this certification being that much harder because of how abstract the concepts really are.  For me, I spent 3 days solid all day studying and cramming for this. That 3 days prepared me for today, and I passed with 94%. I can see there's no end of people offering training and even big Universities offering courses for around $1200. If you feel shaky with the concepts and with software development perhaps one of these courses will help. However, for me, it would be a waste of money and time. The Scrum Guide and the Internet is all I needed. But again, I have practical experience applying Scrum in software development.   I'm probably going to put up a site with 150 questions as a practice test for PSM 1 in the near future.  I can say that a few of the questions on the exam were a bit tricky, and it's associated with multiple Scrum Teams and a few other things. I found that that wasn't really clear and completely covered in the Scrum Guide, so ensure you do get some exposure to Nexus and also to the Product Owner Open Assessments.  But again, do not focus too much on this other stuff. Spend most of your time just working with the Scrum Guide. I've read through many threads on this forum and it's enough to make my head spin. Some of you are really overdoing it and I can only imagine what it would be like to work with you on software development projects. There's a law of diminishing returns folks...   On that note, just keep it simple, focus on the Scrum Guide, study it hard, take the Open Assessments and the practice tests at http://mlapshin.com and you should be just fine. Any questions please let me know.",6620
"12:25 pm January 2, 2016                    Hi Ryan,  I am preparing for PSM I & would like to know if you have posted your collection of questions & flash cards anywhere? If you have posted please let me know the link to practice.          Log in or register to post comments",6620
"09:29 am January 6, 2016                    Could you please send or post your summary?  thank you          Log in or register to post comments",6620
"07:05 pm January 24, 2016                    Hi Ryan,   I am preparing for PSM I. Can you please post your questions and lashcards or provide a link?  I really appreciate your help.  Thanks  Santhosh          Log in or register to post comments",6620
Log in to reply,6620
Messages,6667
"05:08 pm January 22, 2016                             HI All,  I have cleared my PSM I certification by self-study. Thanks to all the suggestion provided. Now, I am planning to go for PSM II.   It would be great, if I could get some guidelines on references I need to go through and what to expect in the exam and tips for preparation.  Since, the training cost as well as exam fee both are costly. I am planning to go for self study and use my prior scrum experience.  Please suggest.  Thanks and Regards,  Krishna",6667
"01:08 am January 23, 2016                    Hi Krishna I think you should try PSP before going for PSM II. PSP is not yet announced for public but it's in trial phase. You can try to reach out to PST Simon Kneafsey at http://www.thescrummaster.co.uk/scrum/introducing-the-professional-scru… for discount code for PSP which can be purchased till 1st Feb, 2016. This will be a good stepping stone for your PSM II preparation.  Also you can refer the thread https://www.scrum.org/Forums/aft/1778 for some inputs on level II exams. You can refer Simon's blog also for some inputs on preparation for PSM II, PSP etc.          Log in or register to post comments",6667
"04:47 am January 23, 2016                    You can also try the SPS and PSPO I.  Those are good check point toward PSM II.          Log in or register to post comments",6667
Log in to reply,6667
Messages,6666
"10:22 pm January 21, 2016                             Hi All,   Please advise how to approach a situation where as a new Scrum Master working with 2 experienced Scrum Masters one learns Scrum practices are not followed but instead a hybrid of Scrum and traditional Project Management practices. Thanks.",6666
"01:05 pm January 22, 2016                    Vikki,  While Scrum is a somewhat prescriptive framework to promote an Agile mindset, it is critical to understand the reasons for everything promoted in Scrum, and the root causes of the dysfunctions that Scrum tries to address.  You likely won't get very far by highlighting areas around their ""hybrid"" approach, and stating that it isn't Scrum.   They likely know it isn't Scrum.   Try to understand the reasons why they are choosing the path they are on.   Try to raise visibility into areas of inefficiency that they believe are necessary.  It isn't your job to change them.   It is your job to get them to want to change.   That is where your focus should be.   And if they decide not to change, so be it, but you still need to raise awareness as much as possible around such poor practices, but in a non-threatening way.   It is quite a balancing act.  A quick example:  I was a Scrum Master at a company that tried a ""hybrid"" methodology as well.   It was a mess of course - I could see it, but others just buried their heads and continued to plow forward.   The company tried to plan out their year in advance, and treated the ""Scrum"" portion as simply iterative development cycles, with all of the old heavy-handed operational and release frameworks in place.  The company spent hundreds of meeting hours with dozens of individuals in year-end planning meetings to come up with a ""fixed"" scope for the next year.   In a PM-based CoP in December (Scrum Masters were considered PMs - talk about dysfunction), one of the PM's who was unhappy with the projections given to her stated that she would probably have a red status in February for being behind.  I asked her why she would agree to a long-range plan if she knew it was wrong (she attended these workshops, not me).   She didn't have an answer.  I asked her and others in the meeting if they've ever completed their yearly plan, or even come close to projections.   None did.  Finally, I asked them why they participated for weeks upon weeks in an exercise that they knew was a waste of time?   They laughed about it, but had no real reply.   Nothing changed, and they continued to be SINO (Scrum In Name Only).  It can be quite difficult sometimes.   All you can do is make your observations known, and then move on.  Good luck!           Log in or register to post comments",6666
Log in to reply,6666
Messages,6664
"09:39 am January 20, 2016                             Hi!   I am just curious if scrum.org is in any way affiliated with the organization europeanscrum.org   Their tests etc, assesments seem to be a carbon-copy of what scrum.org offers.   Any comment from anyone at scrum.org",6664
"12:05 pm January 20, 2016                    Thank you for your inquiry. Scrum.org and European Scrum are separate organizations with different leadership and missions. Scrum.org is a global organization created in 2009 by Ken Schwaber, co-creator of Scrum and co-author of the Scrum Guide. Scrum.org’s assessments, certifications and courseware training materials are also separate and different from those of European Scrum. Scrum.org provides training materials that are highly-tuned and standardized to ensure that all students learn the same core course content from all Professional Scrum Trainers.  Our assessments are globally recognized as an industry standard for Professional Scrum Certification.    As a note, if European Scrum, or any other organization were to copy Scrum.org's Professional Scrum assessment and/or courseware content, they would be in breach of our intellectual property.   We hope this information helps to clarify. Enjoy your day and best of luck on your journey with Scrum, Fredrik!          Log in or register to post comments",6664
"05:56 am January 21, 2016                    On the subject of IP, the site appears to be making use of the 12 star European flag, which I believe is the property of the Council of Europe and licensed to the EU and officially sanctioned affiliate bodies (though I may be wrong and I would be happy to be corrected). The site positions itself as ""official"" and, when I read it, I was surprised that a specific Scrum body might be thus affiliated. I was unable, however, to find any conclusive evidence of such an affiliation, and so the situation confuses me.          Log in or register to post comments",6664
Log in to reply,6664
Messages,6662
"06:06 am January 19, 2016                             I would like to hear people's opinions about whether or not a good Definition of Done might include branch conditions.  Would it be fair practice, for example, to include a deployment condition such as:  ""If the increment corresponds to a Small Change Request, then it must be made available in the production environment by means of a Feature Switch which may be activated by the Requestor. For anything other than a Small Change Request, the increment must be reviewed by an authorized agent of the Change Control Board and made available to the Product Owner in a production-equivalent stage environment for potential release.""  The risk of including conditionals in a DoD is clearly one of integration or deployment failure due to the increased complexity. However, that complexity can be managed, just as the complexity of non-linear code can be managed.  There is perhaps a reasonable case for including conditionals in an organizational DoD, because there may be many integration and release contexts across an enterprise, covering many products and services. This may be countered by making the organizational DoD sufficiently generalized to encompass them all, but it might then be too abstract to be useful.",6662
"02:28 pm January 19, 2016                    I think such conditionals should be part of a Definition of Ready. Then it's clear from the story itself whether a feature switch is needed to make this story Done, without needing to refer to other systems.  I also think that the reporting lines are backwards in the last part of your example. It should be the Product Owner who reviews the increment, not the ""authorized member of the Change Control Board"". The Development Team should never have to wonder ""who do I demonstrate this increment to? "".          Log in or register to post comments",6662
"04:01 pm January 19, 2016                    Your example is a good case of the difference I see can between ""continuous deployment"" and ""continuous delivery"".  This DOD can contain something like ""the increment is deployed"", it is still up to the PO to ask for a deployment.  I agree that the team has to build a complexe switch mechanism, but it is probably not a big deal for a team that is able to have a good maturity and continuous deployment system.          Log in or register to post comments",6662
"04:24 pm January 19, 2016                    oups, I mean ""the increment is delivered"", instead of ""the increment is deployed"", (not sure of my translation of the nuance between the two words but I sure you get my idea, right ?)          Log in or register to post comments",6662
"06:16 pm January 19, 2016                    Thanks for the responses.  Please note that I'm less concerned about the example I gave, as it is just an illustration of how conditional branching in a DoD might arise. My real concern is whether or not it is appropriate to use branch conditions at all.  One way to look at it is to consider the promotion of generalized user story acceptance criteria to the Definition of Done. If these criteria are articulated in the form Given...Where...Then, we may see the case for supporting conditional logic.  On the other hand, this would increase the complexity of Done, and make a consistent and uniform assertion of quality harder to discern.          Log in or register to post comments",6662
"03:59 am January 21, 2016                    Risks I see:  - time consuming debates on what is a Small Change Request, what isn't  - a need for Conditional Branching might be a symptom of existing dependency between the Scrum Team and an organizational body that needs to ""double check"" the increment. In such case CB would institutionalize this dependency  Benefits I see:  - Conditional Branching could speed up the delivery of features with accepted risk of failure  - as part of desired DoD (as a tool of improvement) this could be a step toward continuous delivery  There is one item I would say is both risky and beneficial: when aforementioned Small Change Request is done mid-sprint, it could go straight on production environment. Why wait?          Log in or register to post comments",6662
"04:50 am January 21, 2016                    Another risk I see :  DOD is not only used to ""check"" the done work but also by the Dev Team to estimate the PBL, and then by the PO to order the PBL.  It might be more difficult for the Dev Team to estimate the PBI with a versatile DOD, isn't ?          Log in or register to post comments",6662
"05:38 am January 21, 2016                    Thanks. The institutionalization of dependencies, and an increased difficulty in making estimates, are both very good points.          Log in or register to post comments",6662
Log in to reply,6662
Messages,5595
"07:23 am October 11, 2013                             Hi,  I am studying to take the PSM1 test by doing the tests on testtakeronline and it says that   ""The Sprint Planning meeting consist of two parts, each one beeing a time-box of one half of the Sprint Planning Meeting duration.""  But when I read the Scrum Guide it says that the Sprint Planning answers the following:  * What can be delivered in the incrementresulting from the upcoming Sprint? (Topic One)  * How will the work needed to deliver the Increment be achieved? (Topic Two)  But it says nothing about that the Sprint Planning consist of two ""sessions"" and that they should have a time-box of one half of the Sprint planning Meeting.   Or am I missing something?  Can someone please clarify?  Thanks in advance!",5595
"08:30 am October 11, 2013                    Sprint Planning used to be divided into two parts (What and How), but this changed in the July 2013 revision of the Scrum Guide. Now these are treated as topics to be addressed. They still can be handled as separate parts of the Planning session...but they don't have to be.          Log in or register to post comments",5595
"05:17 am October 15, 2013                    Great, thank you for the clarification!          Log in or register to post comments",5595
"05:31 am October 15, 2013                    We actually started out as 1 meeting where the PO presents the items to the team. After each item the team starts asking (functional) questions  to cover “all” scenario. (“all” is a questionable term) After that the team starts creating sub tasks and provide estimations.     Because the PO had a problem with the time that is needed for the Sprint Planning Meeting (4hours for a 2 week Sprint) we went back to Sprint Planning Meeting part 1 (the what) and part 2 (the how) where the PO is not mandatory in the second part. (PO is aware of the consequences of not attending the meeting)           Log in or register to post comments",5595
"10:56 pm October 17, 2013                    I have worked with having two halves to the meeting and also having one meeting where we discuss each item and the team break down into tasks.  I find that with complex projects, the team forget the understanding behind the acceptance criteria of what we discussed in the first half of the meeting.  Therefore we changed to one meeting where we discuss and breakdown.  For simple projects, I find you can do the meeting in two halves, but I favour the first method.  I can see why the scrum guide got updated.   http://www.freescrumebook.com          Log in or register to post comments",5595
"04:39 am October 25, 2013                    Many a time we have only been able to pick out the items for the upcoming Sprint. We then break off for the rest of the day to think it over since you really don't have the knowhow to breakdown items into tasks so early on the first day of the the Sprint.  We usually have detailed discussions after our Daily scrum meetings and this is where most of the Sprint backlog emerges.          Log in or register to post comments",5595
"10:00 pm January 18, 2016                    My quesution is related to the eastimation.  In which part of the Sprint Planning Meeting, team provide their estimations?          Log in or register to post comments",5595
"04:11 pm January 19, 2016                    The Product Backlog Items are always estimated, ideally during backlog refinement session.  The Sprint Planning Meeting is the very last chance to RE-estimate the items.          Log in or register to post comments",5595
"05:48 pm January 19, 2016                    > The Sprint Planning Meeting is the very last   > chance to RE-estimate the items.  Sprint Planning is the last chance to re-estimate prior to a Sprint Goal being agreed for the associated work. Re-estimation of items, and the work remaining, may continue during the Sprint. Estimates should be kept up to date, as the Sprint Backlog is subject to potential replanning.          Log in or register to post comments",5595
Log in to reply,5595
Messages,6657
"02:33 am January 16, 2016                             The Scrum Guide says -  "" If there are multiple Scrum Teams working on the system or product release, the development team on all of the Scrum Teams must mutually define the definition of ""Done"".  My questions are:  1) Does it mean that there should only be one definition of ""Done"" for a project / product using Scrum framework and all the teams working for that project/product should adhere to that. If this is the case, wouldn't it be difficult for some of the teams to satisfy all of the criteria of definition of ""Done"" and for some the portion of increment developed by them would fall short of some required criteria.  2) Is it true to say that definition of ""Done"" would ""specifically"" be defined only by the Development team and this would be used by the ""entire"" Scrum team to assess whether the work on the increment is completed or not.   Thanks.",6657
"07:08 am January 19, 2016                    > wouldn't it be difficult for some of the teams  > to satisfy all of the criteria of definition of   > ""Done"" and for some the portion of increment  >  developed by them would fall short of some required criteria.   What do you think the consequences would be for the release of a product increment, if one or more of the contributing teams did not meet the agreed ""Definition of Done""?          Log in or register to post comments",6657
"09:20 am January 19, 2016                      2) Is it true to say that definition of ""Done"" would ""specifically"" be defined only by the Development team and this would be used by the ""entire"" Scrum team to assess whether the work on the increment is completed or not.    In my opinion, the DoD should not only be developed by the development team(s) that serve the product, but there should be agreement from the Product Owner as well on what constitutes a ""complete"" story.  There should also be continuous improvement efforts toward an organizational definition of DoD that all teams are capable of achieving.          Log in or register to post comments",6657
"11:55 am January 19, 2016                     Thanks Ian & Timothy !!!  @Ian,  What do you think the consequences would be for the release of a product increment, if one or more of the contributing teams did not meet the agreed ""Definition of Done""?  In my understanding the consequences would be not realizing/ obtaining the full potential/benefits of Scrum and increased Technical Debt.  Can we have it this way. Suppose we have a project that has Technical writers team and a team of developers. Now ""Spell Check"" can be an item in the Definition of Done for the technical writing team but it may not make much of a sense to the Development Team.   My answer to this is they can include ""Spell Check"" as an item in the common Definition of Done for both the teams and Development team can (as this can not be a item for assessing their work) ignore this in assessment of their PBI..           Log in or register to post comments",6657
Log in to reply,6657
Messages,6648
"12:30 am January 11, 2016                             The Scrum Guide suggests that ""refinement usually consumes no more than 10% of the capacity of the Development Team.""  Can you explain if this is for one meeting or total refinement meeting in a Sprint ?  Say if we have 6 DEV in 3 week sprint , and we want to have only 2 refinement sessions , how much time we can spend ?",6648
"04:05 pm January 12, 2016                    In my team we spend, with 8 developers and an iteration length of 3 weeks, 1,5 hours a week on backlog refinement.  3 weeks = 15 days = (15 * 8) 120 hours per developer. 10% is 12 hours per sprint. You can hold the refinement at any time.  If you divide this over your 2 sessions, that would make 6 hours per session which is quite long.  Note that I assume 100% of the time towards working on backlog items. I guess you have some slack built in or other stuff that limits the capacity.  Why not take 2 hours per session and see if that is enough for your team. Over time you might cut down on the time needed to refine or scale up a bit (as you have plenty of refinement time left).           Log in or register to post comments",6648
"07:47 am January 19, 2016                    > The Scrum Guide suggests that ""refinement usually consumes no more than  > 10% of the capacity of the Development Team.""  >   > Can you explain if this is for one meeting or total refinement meeting in a Sprint ?   Product Backlog Refinement isn't a formal Scrum Event, and so it is best to view it as an ongoing activity rather than as a discrete meeting or series of meetings.  Refinement *might* be conducted as meetings, and each may be time-boxed just as if it *was* a Scrum Event. These meetings would typically form at least part of a team's refinement activity, and the formality of a Scrum Event would therefore be emulated to a greater or lesser degree. However, there are other possibilities. For example, refinement can include investigative ""spikes"" where developers prototype certain features in order to better understand them, or the technological choices involved, and so allow the probable work to be estimated more accurately.          Log in or register to post comments",6648
Log in to reply,6648
Messages,6656
"06:05 pm January 15, 2016                             I got a question regarding integration of automated testing into sprints. I am in a very large bid from my company and my guy from internal revision wants that we put a „full blown“ UAT at the end of the development -> what will not work with Scrum as all the benefits go away. It‘s about a portal project (web portal) with an estimated development volume of about 3 Mio. US$.  My internal guy wants a real (anonymised) plan from a ScrumMaster who did these kind of projects in the past (how to plan automated testing up to UAT into the sprints). Do you know anybody I could ask in regards of such a real sprint planning / project plan.  Hope I described my topic understandable. Thx for some feedback. Christian",6656
"07:17 am January 19, 2016                    Wouldn't it be more important, when bidding for Scrum development work, to show how you intend to put increments in the hands of a client? Is the client expecting incremental delivery?          Log in or register to post comments",6656
Log in to reply,6656
Messages,6646
"07:27 am January 9, 2016                             Hi All,  I want to give PSM and have been studying for the same. Came across one question which I want to discuss and get some feedback. Below question is in Product Owner Open.  Who creates the definition of ""Done""? As per my understanding Scrum team creates DOD but as per the answer given Development Team creates DOD.",6646
"10:32 am January 15, 2016                    Scrum guide has:  ...' If ""done"" for an increment is not a convention of the development organization, the Development Team of the Scrum Team must define a definition of “done” appropriate for the product...'          Log in or register to post comments",6646
"11:46 pm January 16, 2016                    This is discussed here:  https://www.scrum.org/Forums/aft/778          Log in or register to post comments",6646
Log in to reply,6646
Messages,6659
"08:22 am January 16, 2016                             Hello everyone,   I would like to take the PSPO II assessment but for time and budget reasons I may not be able to enroll in a training course.  I was wondering if anybody passed the PSPO II without training. In case, which suggestions/recommendations would you offer?   I am not asking for sample questions, but if you have some hints on how the PSPO II question may differ from the PSPO I, in terms of complexity, it would be very beneficial.   On my side, I have some organizational behaviour, hr, leadership background (from business administration studies) plus IT / Computer engineering (studies + professional experience), including some project / product management related (though I am aware Scrum is not about traditional PM).  Many thanks in advance!  Daniele",6659
Log in to reply,6659
Messages,6658
"07:06 am January 16, 2016                             Hello all!  I must say, I'm very happy because yes, I did the course, but I have very short experience in product development and ""value maximizing"" and business. A lot of terms were absolutely new for me like ROI or TCO.. And I'm experiencing real scrum just since three months..  My study tips:  - Read the Scrum Guide many times. try to think about it and question things that are not explicitly written there.  - do the open assessments, the Scrum Open and PO Open. many many times that you always get complete score and don't need time to think about them anymore. and read the feedback on the questions.  - if you did a course, read the documents.   So I passed the PSPO1. What would you recommend for me so I can develop myself in areas like value maximizing?  Since I didn't read the recommended books, which one of them is the best regarding this?  Thank in advance and good luck to all of those who want to take the assessment.",6658
Log in to reply,6658
Messages,6397
"05:36 am June 19, 2015                             I am new to Agile and my apologies if this is a trivial question.  What are the best unit test framework for programs in C?(OS : CentOS)",6397
"02:09 pm January 14, 2016                    A bit late perhaps, but Check is an often used framework or else see C++ frameworks like Google Test. You have to do some additional work to cross the bridge between C and C++ but overall Google Tests works perfectly (unit tests in C++ and production code in C).          Log in or register to post comments",6397
Log in to reply,6397
Messages,6653
"04:49 am January 14, 2016                             Hello everybody,  first of all i will give you some information: we do not estimate time for each task of the story - so the focus is only on the story points for each sprint and the sprint velocity.   But i still want to create a burndwonchart about the tasks for the sprint.   For the y-axis i add up all tasks and for x-axis presents the sprint time. So i can track how many tasks we have for the sprint and when we finished the tasks.   I'm not really happy about this chart because I want to support the team with this chart but I'm not sure if it can.  Have you any ideas for this chart?   Thanks,  Mirco",6653
"10:32 am January 14, 2016                    There's nothing in Scrum which says that tasks must be estimated, or indeed that tasks be used at all when forming a Sprint Backlog. They are simply a convention and estimating them is also a convention.  What is important is that transparency is provided over the work remaining in a Sprint. As the Guide says, ""At any point in time in a Sprint, the total work remaining in the Sprint Backlog can be summed"". Estimation of tasks is one way to facilitate this, but there are other means. One of the simplest is task counting, where the burndown merely registers each task as it is completed. In effect, each task is estimated as being 1 (unity). This can also have the advantage of encouraging a finer granularity of task planning.          Log in or register to post comments",6653
"02:01 pm January 14, 2016                    I agree with Ian.  In my team we divide the story points based on the overall weight of the (sub)tasks. So if I have a story of say 8 points and we have discovered 5 tasks, we try to see if there are tasks that are bigger/smaller than others and divide the points say like [2 points, 3 points, 1 point, 2 points]. This allows us to see how the story is progressing batter than purely task counting.  But see what works for your team and stick with that.          Log in or register to post comments",6653
Log in to reply,6653
Messages,6607
"01:13 am December 1, 2015                             Hi, I'm new to Scrum and we're trying to go by the book here.  Problem is, the developers within the team have different skills and get tasks done at different speed.   At the beginning of each sprint each developer gets assigned an equal number of hours' worth tasks and some finish faster.  What's the best way to handle this?  I thought of not assigning tasks at all - each user can choose a task on the board (we use Jira), get it done and pick another, but that would obvioulsy mean a faster developer will select easier/more attractive tasks, while a slower developer will get the most difficult part.  Do you have any experience in similar problems? Thank you.",6607
"10:55 am December 1, 2015                    Unsure if you are either using or experienced in story writing.   From your post, it seems that you're tracking tasks, and not stories.  Teams will always be composed of members with different skill sets and experience levels.   It is important to promote team identity and growth.   There is a ton of information out there to help this process along.  Do you have a Definition of Ready (criteria for a story/task to meet to safely be accepted into a sprint)?  Do you have a Definition of Done (criteria that determines when a story/task is complete)?  It sounds like you are just starting out.   While Scrum sounds simple, the practical application of it can be quite complex and challenging.  One thing I would point out though.   In Scrum, there is no assigning of work.   The team is responsible for completing the work that they've accepted.  The scenario you described, where a less-experienced developer works on a more difficult item, can certainly happen.   The question is, what will the ""team"" do about it if that item is in jeopardy of not finishing by sprint end?  You cannot have a short-term vision as you work through Scrum adoption.   So what if a sprint is unsuccessful, and some accepted items did not get finished.   What did the team learn through that experience?   What are some ways that the team can try to prevent an unsuccessful sprint from recurring?  In Scrum, failure is not an option.   It is mandatory.   It is foolish to believe that anyone will execute Scrum well right out of the gate.  Failure often creates the right conditions for change.   Allow the team to struggle, and be ready to provide encouragement for things done well, and observations around things that aren't going well.   Eventually, the team will realize that their lives will be easier if they support each other and work as a team.  Good luck!          Log in or register to post comments",6607
"10:40 pm December 1, 2015                    Wow, thanks a lot for such a detailed answer, saved it to read thoroughly.          Log in or register to post comments",6607
"05:52 am December 2, 2015                    > Problem is, the developers within the team  > have different skills and get tasks done at different speed.   What team? What evidence is there of any teamwork in this case?  > I thought of not assigning tasks at all - each  > user can choose a task on the board (we use  > Jira), get it done and pick another, but that  > would obvioulsy mean a faster developer will  > select easier/more attractive tasks, while a  > slower developer will get the most difficult part.   Not assigning tasks would certainly be a step in the right direction. It would remove an impediment to self-organization, though it is unlikely to provide a catalyst for it. I believe you are correct in anticipating that a cherry-picking antipattern is likely to result unless additional action is taken.  I suggest limiting work in progress. The ""team"" should be coached not to bring any new work into progress as long as existing WIP remains undone, and which they ought to help each other with.  Look at the sprint burndown no later than the next retrospective. Members should check how even the burn is, and how better collaboration might improve it. They should also revisit the ""Definition of Done"" for the increment and determine if their work is of the best possible release quality.           Log in or register to post comments",6607
"01:40 am December 3, 2015                    I agree with Ian Mitchell. If the team is behaving the way you described, that is not a team work. In such  case, the WIP Limit will help.   Either way, you can see that the engineer who picks easy items takes more such items, and the engineer who takes the difficult item takes fewer items. In fact, during estimation, the number of story points for a difficult story would be higher than that for an easier story. Thus, what difference does it make if one takes a story of size 5SPs and the other takes 5 stories of 1SP each.  However, everyone has to pitch in if a story has risk of not completing by the end of the sprint and act as a team. That's when, after couple of sprints, for sure, the team falls in the correct paty, i.e. the efficient engineering takes the tough ones and the less efficient engineer takes the easier ones. You can observe these dynamics within the team in 4 to 6 sprints.  Thanks  Ravi Landu          Log in or register to post comments",6607
"09:30 am December 3, 2015                    Also agree with Ian and Ravi.  I feel though that it may not be ideal for a team dynamic to evolve where more experienced team members consistently take on the more difficult stories, and less experienced ones take simpler stories.   While this may be a necessity in the beginning, the Scrum Master should help the team understand that this is an impediment to team efficiency.   It's just reinforcing another type of specialization (experience, skill), like system or domain expertise.   Bottlenecks will occur.  What if the business prioritizes more difficult stories at the top of the backlog, but the more experienced team members are unavailable for the next sprint (vacation, etc)?   Should the business have to postpone the items most important to them because of specific team member unavailability?     Encourage cross-training, pair programming, and knowledge transfer to help the team mitigate this impediment and lift up other team members.           Log in or register to post comments",6607
Log in to reply,6607
Messages,5983
"11:06 am July 22, 2014                             Hello all,  I am new to Agile methodology. We have planned for 4 sprints for the completion of our project. We are currently in the 3rd sprint. Currently our customer wants us to implement a small sprint of 10 days at the end of 3rd sprint in which we can solve the bugs that arises from the previous sprint. Please let me know if this approach is right or wrong ?  Thanks & Regards,  Narayanan K",5983
"02:28 pm July 22, 2014                    What agile ""methodology"" is your question about ... many use the term srpints now.  Is your customer the Scrum Master for your project , why would you change sprint durations, why do you need a sprint just for bugs,  ?   Forum / Scrum.org  Discuss issues relating to Scrum.org including assessments, programs, classes, and any other aspect of the organization          Log in or register to post comments",5983
"07:18 pm July 23, 2014                    How long are your sprints typically?  One of the big things with Scrum is consistent sprint length, so I would recommend against executing a shorter sprint.    As far as bug fixes go, my team typically builds them into our sprints.  For example, each sprint we'll have one or more stories that are bug fixes.  We treat those just like any other story, we point them, and plan them during sprint planning.  I'd try to advise your customer that you can keep the same sprint duration, and still work on the bug fixes.  Of course, they wouldn't see the results until the end of the sprint (which may be what their concern is, they want the bug fixes asap).          Log in or register to post comments",5983
"09:53 pm August 1, 2014                    Are you looking in to the root cause of the bugs?  Each Sprint should deliver a slice (increment) of code that is potentially releasable - meaning it has been tested in isolation and tested integrated in with the app.  Hopefully these bugs weren't ""happy path"" bugs which should have been caught using the Acceptance Criteria.          Log in or register to post comments",5983
"06:02 am August 4, 2014                     Please let me know if this approach is right or wrong ?   To be clear, it is wrong. Your increment is not potentially shippable, which means either your team does not fulfill the definition of done or the definition of done is not complete. What your customer thinks is, that you are doing a project and there is a stabilisation phase in the end. This almost never works. What you really can do:  1. find the root causes of the bugs and eliminate them by adjusting the definition of done and enforce it as the law. From remote, my first guess is do excessive testing within the sprint.  2. Maybe you can reduce sprint length generally, so your client does not have to wait that long. This is up to you.          Log in or register to post comments",5983
"01:00 pm December 1, 2015                    Few of points to be noted here:  1. In Scrum, the Sprint duration should NOT change. If it changes, then it would become difficult to calculate/predict the velocity.  2. The customer needs to be educated about Agile and Scrum  3. The bug fixes also can add as increment. It is basically clearing the debt. The sprint end deliverable will be the functionalities with bugs fixed. Meaning, some functionality which was not working earlier is now fixed and delivered.  4. The bugs need to be prioritized before they can be taken for fixing.  5. If the number of bugs are too many to fix in a sprint, then pick only the top few prioritized defects.          Log in or register to post comments",5983
Log in to reply,5983
Messages,6605
"02:05 am November 30, 2015                             Hi all,  Could you suggest me about below situation:  - My company is developing a big product. My team is in charge of the Core component. Three others team are in charge of other module (trading, maintenance, deposit)  - A day, my boss ask all teams about progress, All these team confirm will complete on expected date. But my team can delay.  What should i(as a PO) do in this case? (work with others to redefine the expected date?, shortent the Sprint?, or remove low value from our Sprint backlog then release as the expected date?).  Thank you.",6605
"02:32 am November 30, 2015                    You seem to be saying that you are the PO for the ""core component"" and that other ""modules"" (trading, maintenance, deposit) have separate ownership.  Are these in fact separate products? Can feature-complete increments be delivered for each of these discrete elements?           Log in or register to post comments",6605
"02:58 am November 30, 2015                    Hi,  Agree with Ian that there is a dependency on whether you are PO of the whole product or the core component only.  The only other thing I'd add is that I would not recommend changing sprint lengths unless there are really exceptional reasons. Makes all sorts of things harder to manage including velocity calculations.  Andrew          Log in or register to post comments",6605
"03:17 am November 30, 2015                    Hi Ian,  thanks for your reply.  Actually, they are not separate products. All of them are part of the same product & have to be delivered at one, together.           Log in or register to post comments",6605
"03:35 am November 30, 2015                    Thank Andrew Lishomwa for your suggestion.   Do you mean i should work with others PO to redefine the expected date, then try to  commit with it ?           Log in or register to post comments",6605
"04:05 am November 30, 2015                    > All of them are part of the same product &  > have to be delivered at one, together.   Who then is the PO for that product? Is it you? You say that ""your"" team is only responsible for the ""core component"".          Log in or register to post comments",6605
"04:31 am November 30, 2015                    Let me explain more detail:  These parts (core, trading, maintenance, deposit) are belong to 4 separate projects, in charged by 4 separate teams.  They are relative independence. But one of them can't be released standalone.  Mean, each of them is a sub-product which is defined clearly its input, output so we can develop one of them independent.  Only relation between them is that: They have to go live together (During development, they are independent with each others)  Other sub-product's NOT used Agile/Scrum (We dont need to care their methodologies). Just my sub-project (core app) is used Scrum.  Whole these sub-projects are managed by one person (Program Manager).          Log in or register to post comments",6605
"06:36 am November 30, 2015                    It seems that you have projects and not products, and project managers rather than product owners. Moreover, the product you actually do have does not appear to have a product owner at all. Instead there is a Program Manager.  I don't see any evidence that Scrum is being understood and applied in this situation. The basics aren't there. Certain things have been renamed by misapplying Scrum terms to non-Scrum practices. This will only serve to cloud understanding of the deep changes that are needed. Before going any further, I recommend that you study the Scrum Guide and critically re-appraise your current way of working.          Log in or register to post comments",6605
"09:50 am November 30, 2015                    Agree with Ian.  The work has been split inefficiently (by technical/system silo), which creates a significant integration effort to even understand whether the separate pieces can function well together.     For Scrum to work, each of your sprints needs to provide something valuable and tangible to the business.   It doesn't seem like that is the case.  From a PO standpoint, you should always be analyzing and prioritizing your backlog.   If they are proposing a completion date, you should have some idea what can be completed within your backlog by that date.  You also need to understand what ""done"" means to these other traditional teams.   While Scrum teams can work with other non-scrum efforts (ex: outsourced vendors), there should be some common idea of what is needed for release.  But as others have already pointed out, the separate projects are still being managed in a traditional, non-Scrum fashion.          Log in or register to post comments",6605
"11:32 pm November 30, 2015                    Thank you all for your suggestion. I get much more clear now.          Log in or register to post comments",6605
Log in to reply,6605
Messages,6580
"12:42 pm November 1, 2015                             Oh Boy.. I passed PSM I with 94%!  It was tough! Nervous! and Challenging!  I failed first time with 80%. So I was very depressed. But took the challenge.  Studied ScrumGuide in and out. Studied, studied and Studied it. Nothing else!  The following mock test helped me a lot. It re-energized my confidence. Much Thanks to Mikhail Lapshin!   Thanks Friend! Great job in putting all test questions together!  I will meet you one day to say thanks personally! :)  http://mlapshin.com/index.php/psm-quiz/  Folks,  If you are planning to pass PSM I seriously..just do the following:  1. Study the ScrumGuid In and Out!. Seriously each line of the guide teaches a point or question for test.  2. Pass all Scrum Open Assessments until you get 100% consistently  3. And Finally and THE most important is..take mock test at mlapshin.com until you get 100% score  http://mlapshin.com/index.php/psm-quiz/  And If you have access to pluralsight..watch this video and get trained.  https://app.pluralsight.com/library/courses/scrum-fundamentals/table-of…  It is an excellent presentation on Scrum fundamentals. Thanks David Starr! It was very helpful to visualize the scrum concepts.  Passing PSM I is worth of the cause. Go for it.  Thanks to all !!!  Raghu Dongur",6580
"05:29 am November 30, 2015                    thank you for sharing          Log in or register to post comments",6580
Log in to reply,6580
Messages,6597
"03:13 am November 19, 2015                             when does the sprint end ?  when the sprint goal met, or when the time-box expires. what should be done if the sprint goal achieved before the time-box expire, can the scrum team allow to end the sprint ?",6597
"03:32 am November 19, 2015                    The Sprint ends when the timebox expires. If the team finishes their forecast early (and meets the Sprint Goal) the team should agree with the Product Owner some additional PBIs that they should complete.          Log in or register to post comments",6597
"09:29 am November 19, 2015                    Agree 100% that the sprint ends when the time box expires, regardless of whether all of the stories were completed or the sprint goal was met.   If the sprint was not successful for any reason, it is a good topic for discussion in the Retrospective to identify reasons why and what can be tried differently to improve the likelihood of a successful sprint.  @ Ramsay:  Agree that one possibility for excess capacity in a sprint is to work with the Product Owner to identify additional stories that can be brought in to the sprint.   This should always be done with a high amount of confidence that the additional sprint scope can be completed according to the DoD by the end of the sprint.  There are other options for the team to use excess capacity though, that do not add risk to the successful completion of the sprint.   Addressing technical debt, enhancing automated testing frameworks, refactoring, cross training, knowledge transfer, other learning...  all of these items can be done by team members when sprint work is finished early, and can improve productivity, quality, and capacity for future sprints.           Log in or register to post comments",6597
"05:26 am November 20, 2015                     As soon as the time box expires          Log in or register to post comments",6597
"12:33 am November 27, 2015                    Since others have answered when the Sprint ends (i.e when the time box expires), I will add more on why there is exception for Sprint wrt ""can not end before time box even if work is complete""  scrum guide: Once a Sprint begins, its duration is fixed and cannot be shortened or lengthened. The remaining events may end whenever the purpose of the event is achieved, ensuring an appropriate amount of time is spent without allowing waste in the process  If you notice the character of these events,  - they are alternative to traditional meetings  - they create regularity (rhythm)  A sprint has additional character:  - it has dependence on external organization for some events - technical or domain experts for planning, key stakeholders for review, other scrum teams if they are working on same product  So, reason 1 - when the Sprint ends early, the synchronization with these external dependencies is upset.  another interesting reason 2- when Sprint ends early, another Sprint begins. Sprint is a container of four events and hence they all need to happen within the Sprint. Shortened Sprint duration now may have excess amount of these inner events, in that ""there might be more time on formal inspection and adaptation than necessary"" In other words the cost of formal inspection and adaptation increases when the Sprint is contracted.           Log in or register to post comments",6597
"01:03 am November 27, 2015                    Missed to add this point:  Though the temporary contraction is not allowed, Sprint can be shortened going forward from next Sprint. But, it should be well informed decision during the retrospective and the new Sprint length should be consistent. The other inner events need to be time adjusted to reflect this new length.          Log in or register to post comments",6597
Log in to reply,6597
Messages,6600
"04:49 pm November 22, 2015                             Hello everyone!  I am currently working on my master thesis about SCRUM. And I am trying to gather some data for it’s practical part. There I will estimate whether migration on SCRUM from any other software development methodology is good idea or not.  If you could help me with that by filling up next questionnaire https://goo.gl/8AAqIk I will highly appreciate that :)  In addition, maybe, you have any case studies on this theme?  Thanx in advance.",6600
"03:36 pm November 23, 2015                    Alex,  Case Studies:  http://ScrumCaseStudies.com  The only justification you need to move to Scrum for software dev:  https://scrumcrazy.wordpress.com/2015/08/17/large-scale-agile-and-scrum…          Log in or register to post comments",6600
"12:21 pm November 26, 2015                     Alex,  You may have difficulty in comparing ""Software Development Methodology"" to Scrum. Scrum is not a sw method. Scrum is mainly a container and collaboration framework for value discovery and maximization journey. In fact it embed other software methods too. It can be compared based on the potential to reduce risk and maximize value using empiricism, bottom-up intelligence, servant leadership and value flow, with any other problem solving framework.   Another minor thing - Scrum is not any acronym like SCRUM          Log in or register to post comments",6600
Log in to reply,6600
Messages,6599
"11:28 am November 21, 2015                             dear sir,  after i got the password, what is the maximum time that i must do the exam with it ?",6599
"03:50 am November 22, 2015                    Hi Ahmed,  The password does not have a time limit on it. I have seen that it helps to use it within 2 weeks of a course, or after a focussed period of study.  Thanks  Simon          Log in or register to post comments",6599
"07:24 am November 25, 2015                    Hello,  I ordered a password for PSM-1 last year in December... but never got around studying and using it.  Now have some free time at hand and was wondering if my password will work?  Any suggestions/advice please?  Regards,  Mohit          Log in or register to post comments",6599
"10:30 am November 25, 2015                    Hello Mohit,  Thank you for your interest in Scrum.org. Our records indicate that your order for a PSM I assessment password was placed on February 17, 2015 (not in December). Regardless, this post is to confirm that your PSM I password that you were sent as a result of that order remains active and valid for one attempt at the PSM I assessment. It will not expire until used.  Thank you again for your interest in Scrum.org and best of luck on the PSM I assessment!          Log in or register to post comments",6599
"03:46 pm November 25, 2015                    Thank you for the quick reply, it was helpful.  Mohit          Log in or register to post comments",6599
Log in to reply,6599
Messages,6603
"12:56 pm November 24, 2015                             Hi folks,  I've an opportunity in my company to promote a 1 or 2 days seminar for the top-managers.  I've already some ideas, but I'll be very happy to read your own ideas.  The focus is not on Scrum or Agile but more on what can be called ""agile-management"".  What particular messages will you try to promote for this special public and how will you deal with that ?  Yours  Olivier",6603
"01:04 pm November 24, 2015                    Olivier,  Another Scrum.org PST and I have a course we call ""Scrum For Executives"" that works for executives as well as managers.  We deliver the training, OR we license it to other Scrum coaches and trainers (i.e. you' don't have to be a certified trainer/coach) to deliver at VERY reasonable prices.  It can be taught as a 1/2 day or 1 day course, and it comes turn-key so that you can easily deliver it yourself without having to come up with all of the content and exercises.  You are also allowed to customize the course as needed, and use a limited number of the slides in any future presentations you do as well.  If you're interested in licensing it from us (or having us deliver it), see http://ScrumForExecutives.com OR you can just email me here:  service (at) scrumcrazy [dot] com          Log in or register to post comments",6603
"04:23 am November 25, 2015                    Hi Olivier,  Maybe this blogpost about Management in a context of agile is as valuable for you as it was for me:  http://guntherverheyen.com/2014/11/26/scrum-master-a-manager/  I have participated in the PSPO course and I think that much of the content is suitable for executives as well.  But of course if Charles has a tailored training, you might want to have a look at that one, too.  Best, Ludwig          Log in or register to post comments",6603
"07:23 am November 25, 2015                    Thank you Charles & Ludwig,  I'll look closely at your suggestions.  The agile teams in my company do quite a good job, but I have so many level of managers that most of them just see Agile as a method to increase productivity of the coders.  I'll work on the idea of motivation (Cf Management from Jurgen Appelo and Drive from Dan Pink with tools like Moving Motivators to explain intrinsic motivation) and on the ScrumMaster role because I totally agree with Gunther point of view.  Yours  Olivier          Log in or register to post comments",6603
Log in to reply,6603
Messages,6593
"07:03 pm November 15, 2015                             I want to prepare for the SPS assesment.  Is it sufficient to know the Nexus framework guide by heart (and the regular scrum guide)? Or does the assesment contain other topics?",6593
"08:04 am November 20, 2015                    Hi Dimitri,  I've just taken the SPS assessment and passed.....YES! You will need to know those two guides like the back of your hand. Are they sufficient to pass? Well, I think they are....just. I suggest you read the other recommended reading in the resources section as well. And if you're doing SCRUM and / or scaling it in your work place, that could be beneficial too.  Also, don't forget the open assessments (all of them). They help to build scrum muscle. 100% continuously in each before you go for it.  Good luck!          Log in or register to post comments",6593
"06:37 am November 25, 2015                    Thanks for your reply, John. Did you follow the SPS course beforehand or did you do exam without?  I'm also quite interested in those ""40 practices to reduce complexity and dependencies at scale"" that the course apparently offers but are not in the Nexus guide.          Log in or register to post comments",6593
Log in to reply,6593
Messages,6590
"12:09 pm November 12, 2015                             Hi All,  My team works on user stories from Rally and issues from Githubs for each sprint. My leadership team wants me to look for a way to see the progress of both these in one place on everyday basis.",6590
"03:04 pm November 12, 2015                    Vasantha,  Is your team working from an accepted Sprint Backlog each sprint that is composed of user stories and issues?   Are all of these items estimated?  A centralized Sprint Burndown chart can provide a dynamic way for your organization to view your team's sprint progress, as long as the team is vigilant in maintaining story status.  I would also propose inviting them to listen in on your team's Daily Stand-up meetings, as this can be another method to gauge sprint progress.          Log in or register to post comments",6590
"07:59 pm November 12, 2015                    In Scrum the ""leadership team"" tracking daily progress is the Development Team. They manage and are responsible for their own work.   Impediments can be raised by them to the Scrum Master. Does the situation you describe represent an impediment to the team and their ability to meet the Sprint Goal?          Log in or register to post comments",6590
"07:44 am November 14, 2015                     Looks like you are maintaining two separate backlogs for sprint - in Rally and in Github. Merge them into one and generate custom reports as per your leadership requirement.          Log in or register to post comments",6590
"11:23 am November 23, 2015                    Take all the work that your team needs to do. Prioritise them. If git hub work is popping in at the middle of the sprint make sure your team manage priorities and work on committed items.  Have all the sprint backlogs in one place to track progress          Log in or register to post comments",6590
Log in to reply,6590
Messages,6598
"09:55 am November 20, 2015                             I'm preparing for my PSM assessment and found the following two items listed on a ""Scrum Reference Card"".  These two items are located in a section titled ""ScrumMaster"".    Would you considered these responsibilities of a SrcumMaster?  - Captures empirical data to adjust forecasts  - Promotes improved engineering practices  Although I'm studying the Scrum Guide as the one source of truth I did get distracted with the reference card and want to ensure I avoid misinformation.    Thoughts?",6598
"06:44 pm November 20, 2015                    I think both of these are poorly worded or just flat out incorrect.  MJ knows quite a bit about Scrum... but...  I think one could re-word to be closer to correct by saying...   - Coaches all on how to use Empirical planning and Empirical process control.   - Coaches the Scrum Team on how to increase their Definition of Done to have more stringent criteria for higher quality  MJ might also be one who doesn't give much deference to the Scrum Guide (I don't know) so... you might be careful with his materials.           Log in or register to post comments",6598
"10:52 am November 21, 2015                    > Would you considered these responsibilities of a SrcumMaster?   >  > - Captures empirical data to adjust forecasts   > - Promotes improved engineering practices   If I had to assess these supposed responsibilities, I would say ""no"" to the first and ""yes"" to the second.  Reasoning:  - It isn't up to a Scrum Master to adjust any forecast  - Development teams with good engineering practices are more likely to be successful, and a good Scrum Master is a coach and facilitator to the team          Log in or register to post comments",6598
Log in to reply,6598
Messages,6595
"10:32 am November 17, 2015                             i found this question in following site   http://tracks.roojoom.com/r/22315#/trek?page=1  the question is : During scrum of scrums approach for a project, what is a best defines definistion of done ? the answer according to site is "" each team uses it is own DOD but must make it clear all other teams""  while i think that all teams working in same project using same product backlog should have same DOD..  what do you think ?",6595
"01:22 pm November 17, 2015                    Hi Ahmed,   Allow me to share some of my understanding....   Firstly, some of the answers are just wrong in this video and I also do not think it has the support of the ScrumAlliance (another certifying body).    [The intro / title of the video says ""Certified Scrum Master Sample Questions And Answers""  Look at section 1:11 --   Question Asked: ""The Sprint Backlog is ultimately owned by ___""   Answer Provided: Product Owner   [Via NK] -- This is incorrect.  .  .  .  I stopped there as there was nothing further needed to assess credibility.   Furthermore, scrum does not mandate or require a ""Scrum of Scrums (SOS),"" which I consider a coordination technique between multiple teams.   Over the years, I have seen different interpretations to the SOS as well.   Some further reading, if you are interested --   http://guide.agilealliance.org/guide/scrumofscrums.html  http://scaledagileframework.com/scrum-master/  This is independent of the ""Definition of Done"" which does have a formal definition and use in the framework. I would refer to the Scrum Guide as authored by Schwaber and Sutherland, the co-developers of Scrum.          Log in or register to post comments",6595
"03:53 am November 18, 2015                    The Definition of Done belongs to the Product Increment. This implies that if several teams work on a single Product, there has to be a definition of done for the whole Product. This ensures that the whole Product is shippable and usable.  However each individual team can use a more stringent Definition of Done for their own work. They just cannot apply less than the Definition of Done of the whole product.  This is described in the Nexus Guide:  https://www.scrum.org/Portals/0/NexusGuide%20v1.1.pdf  This has nothing to do with the Scrum of Scrums, which is just an additional Daily for representatives of the Dev Teams as a scaling technique.  In Nexus, this is called the Nexus Daily Scrum.          Log in or register to post comments",6595
"03:59 am November 18, 2015                    Hi Ahmed,  I'd agree with that answer for a couple of reasons. Firstly the Scrum guide states 'During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of “Done” as appropriate.'. The implication is that with multiple teams the way they each tweak the DoD in their own retrospectives will differ  Secondly I'm working in a multiple team scrum environment at the moment, we established a baseline DoD that all teams must adhere to as a minimum but each team is free to add to it and this seems to be working well. As we move forward we'll share the information about the additions we've made for cross team adoption candidates          Log in or register to post comments",6595
"09:59 am November 18, 2015                    > The Definition of Done belongs to the Product Increment. This  > implies that if several teams work on a single Product, there has  > to be a definition of done for the whole Product...   Correct. There is however a further implication which ought to be stated for clarity. An SoS (or a Nexus Integration Team for that matter) may facilitate the identification of a ""whole product"" DoD, but they do not own it. This is because they do not and cannot perform any of the work needed to build and integrate an Increment. A ""whole product"" DoD is essentially an abstraction layer over those DoD's which are owned and managed by the individual Development Teams working on that product.          Log in or register to post comments",6595
"09:50 pm November 18, 2015                    +100 to Nitin's answer.          Log in or register to post comments",6595
"06:03 am November 20, 2015                    A technique to scale Scrum up to large groups (over a dozen people), consisting of dividing the groups into Agile teams of 5-10. Each daily scrum within a sub-team ends by designating one member as ""ambassador"" to participate in a daily meeting with ambassadors from other teams, called the Scrum of Scrums          Log in or register to post comments",6595
Log in to reply,6595
Messages,6591
"07:17 am November 14, 2015                             Hi,    I have a background in Windows development, although have been working on Linux for the last year, so when taking the PSD course recently and doing practical exercises in C# I at least had some background knowledge, although MVC and TFS were a new topics. I work in a large environment made up of mainly Linux C/C++ developers, so I think they would struggle with the PSD course and so I cannot recommend it to my organisation.    I have been looking at the PSF (Foundations) 2 day course as an alternative to give a basic grounding in Scrum, but note this also states it is a practical course developing an application. Does this also use a windows development platform as part of the course?    Ultimately, if there is a course anywhere that is at least based on a Linux/Unix toolset then that would be much more applicable. Are there courses which can be tailored if the entire audience is Linux based and can courses be run on-site? (i.e. at our company premises)  Mick",6591
"11:11 am November 16, 2015                    Hi Mick,  I'd be happy to tailor the PSF and PSD classes using your technology stack on Linux with  C++.   I can also make myself available and travel to your premise to deliver these classes.  you can email me sbourk [at] gmail [dot] com for more details.   thank you  Simon  bourksoftware.com          Log in or register to post comments",6591
"12:41 pm November 19, 2015                    Thanks Simon,    I'll run your offer past my org. Incidentally we are based in the UK; I note you are based in Canada?  Regards,  Mick          Log in or register to post comments",6591
Log in to reply,6591
Messages,6566
"05:59 am October 22, 2015                             Dear Community,  i want to do the PSPO I Assessment.  how can I prepare best for the exam??  In this site are a lot of books and paper:  https://www.scrum.org/Courses/Professional-Scrum-Product-Owner/PSPO-Sub…  which is recommended for PSPO I Assessment ???  thanks a lot.  Angila",6566
"10:46 am October 22, 2015                    Hi,  1. Read the Scrum guide - in your mother language and English http://www.scrumguides.org/   2. Watch this video from Henrik Kniberg: http://youtu.be/502ILHjX9EE  3. Do the Scrum Open assessment until you can get 100% repeatedly http://scrum.org/Assessments/Open-Assessments   4.Complete the PSPO Open assessment until you achieve 100% repeatedly, try the development one as well (it gives you a wider insight)  5.  Complete the Scrum Practitioner Open assessment to confirm understanding around scaling  6. Use the forums  7. Remember your key role is to be the Value optimiser, focussing on Value and ROI, TCO  Regards  Simon          Log in or register to post comments",6566
"08:34 am November 13, 2015                    Thanks a lot for your replay.  with regard  Angila          Log in or register to post comments",6566
"07:06 am November 19, 2015                    +1@Simon, You can also take some of the free online tests which you would find this forum.   As many have published couple of links or you can google it.  Its very important to be active in many forums , which will definitely help to understand the concepts.          Log in or register to post comments",6566
Log in to reply,6566
Messages,5578
"07:15 pm September 24, 2013                             I tried to do the PSM I assessment today after studying 4 guides, reading the Agile Project Management WIth Scrum, attending a course, finishing the Scum Open a few times with 100%, doing some research and with some years of experience working on Dev Teams and with Scrum.  Unfortunately I failed to pass with a 82% final score.  I first realized that I could almost automatically reply questions that were similar on the Scrum Open, but I was surprised that if the Scrum Open difficulty is 2, then the exam has difficulty 5. It has nothing to do with it. While on the Scrum Open you have direct questions about selecting 2 possible answers, here you have a few questions asking to select whatever response you think it could be true.  Also that if you take longer in some response, you won't have any time to come back to review your doubts at the end (only 45 seconds / question).  What most concerns me, and I am wondering if I will repeat the exam, it's because I have to pay the tax again for this 3% without any discount :(  I believe the exam with the multiple choices and random questions is just a question of luck.  Do you think I should repeat it? How can I study harder? My time is getting limited and I don't think repeating the Scrum Open is a good thing, as the questions I get are always the same, only in diffrent random positions.  Thanks",5578
"09:20 am September 25, 2013                    Hi,  Thank you for raising your concerns. Our Support team will contact you with more information.  Sincerely,  Daniel          Log in or register to post comments",5578
"02:17 pm October 25, 2013                    I'm in the same situation. I tried to do the PSM I assessment after read the Scrum Guide several times, finishing the Scum Open several times with 100% and attending a course. I failed, for the 2nd time, both finished with 84%.   I don't know where I can study anymore, because some situations of the test are not in Scrum Open, course or Scrum Guide. Where I can find these kind of information?  Thanks.          Log in or register to post comments",5578
"09:09 am October 28, 2013                    Hi,  I'm planning to do the PSM I assessment for the first time very soon and have similar worries, seeing that the open one isn't really exhaustive and there could be hidden pitfalls when trying to understand the Scrum Guide. I hope I can give some general advice about what I think is especially important when trying to answer (at first) unfamiliar questions:  Basically, you should keep in mind the key principles the Scrum Guide is built upon and try to discover them in the given questions together with their potential answers. These are the points I identified as especially important:  - The three pillars of empirical work (in the eyes of Scrum): transparency, inspection and adaption. Can you discover these principles in the potential answers of ""what to do"" questions?  - The self organizing principle: you can get help from outside but nobody from outside tells you what to do. Can be applied to the Scrum Team or to the Development Team. (in the line of: Dev.Team has problems, what should the SM do? correct: help them sort them out themselves; wrong: alert management / solve it for them)  - Scrum terminology: Sometimes possible answers seem ambiguous. When in doubt, use the one that uses the most fitting terminology e.g. ""definition of done"", ""product increment"". Such question are often stated as ""what describes best..."" or similar phrases.  - The concept of ""value"" represented in the product backlog and in the work done (see terminology). Get suspicious when non-Scrum terms like ""cost"" are dropped.  - When something can be done immediately, it should be done immediately (but only then). This is not stated explicitly but very important. It's part of the ""inspection/adaption"" pillars.  A last point, it hasn't anything to do with Scrum, but I sometimes made the mistake of choosing the opposite answers than those that would be correct simply because I've got its meaning wrong. Losing points because of this is extremely irritating and unnecessary so take a bit of extra time to make sure you've answered as intended. Watch out for words like ""not"" or a number of correct answers in the question.  Hope this helps and Good Luck!           Log in or register to post comments",5578
"09:21 am October 28, 2013                    Sorry, I want to make a correction/clarification to a point I made above: In a self-organizing team, of course you're working on requirements from ""outside"", the self-organizing aspect refers to how to do it, the specific actions to reach the goal.          Log in or register to post comments",5578
"06:22 am November 1, 2013                    Experience helps to a certain extent. In my case I had worked on Scrum for more than 2 years so it became easy for me to attempt the test. But this is not always necessary.  For total newbies to Scrum I would recommend going through the Scrum Master training before attempting the test. Also increase your knowledge of various Scrum concepts by reading articles and discussions on the forums on Scrum.org and other well known Scrum websites. Many of these discussions pertain to real life issues faced by engineers.  Scrum.org also has several articles by Ken himself. You must most certainly cover all of Ken's videos and articles before the test.  Besides this Mike Cohn who is one of the leading authorities on Scrum maintains a huge repository of Scrum info on his website.  Depending on your level of Scrum knowledge your preparation time can vary between half a day and a month at the minimum.  At the end of the day more knowledge and exposure is going to arm you better to face the battle at hand.   To end on a philosophical note change your goal from passing the test to learning Scrum and you will most certainly reach greater heights.  Good Luck!!          Log in or register to post comments",5578
"04:55 pm October 27, 2014                    If it's true I find this quite unfair that the Open assignment is a difficulty 2 whereas the PSM I would rather be 5. Kind of find that this is going against the non-profit purpose or Scrum.org.  Btw, is it just me or you always end up having the same questions during the open assignment?  I've been doing it three times now over three days (avg 85%) and I've got the feeling I always have the same bunch of questions, the overall being not more than 35 so far I'd say. Any clue why?          Log in or register to post comments",5578
"01:43 pm October 28, 2014                    Something I once heard about the difference between professional athletes and amateur athletes..... Amateurs practice until they get it right, Professionals practice until they can't get it wrong.  When I did the 2 day course and studied for the exam, I lost count of how many times I did the open assessment, but it got to a point where I was getting 100% every time (maybe 15+) before I felt comfortable taking the PSM assessment.   What this did was allow me to pick up on how questions were worded and how some were setup to be confusing on purpose, so that you really have to be paying attention to the test.  For those of you consistently getting 85% in the open test, you're not ready to take the PSM 1 test. You need to be getting 100% consistently to consider taking the PSM 1 test. That is what one of the great instructors from Improving Enterprises told me and I found it to be true.  Also, if you are having the same questions over and over again and are still only getting 85%, learn from your mistakes. Read up on the areas you're getting wrong and try again.          Log in or register to post comments",5578
"04:22 pm October 28, 2014                    Hi Tim,  I guess this message was addressed to me but I must say that it sounds a bit like a set of tautologies, yet well intended. :)  I've been improving and said this was on average, now reaching 96% at the third one my problem is rather to understand why I always have the same questions all the time.  Cheers,          Log in or register to post comments",5578
"01:21 am October 30, 2014                    Bop,I agree with Tim here.  avg 85% in open is not going to cut it.  The questions are NOT exact same every time.  If you look closely, you will notice that.          Log in or register to post comments",5578
"10:41 pm October 30, 2014                    questions are exactly same except the order          Log in or register to post comments",5578
"12:30 am December 30, 2014                    I agree. Questions are same just reordered. Also $100 for each attempt is steep.           Log in or register to post comments",5578
"12:05 pm December 30, 2014                    Hello, I believe the PSM I exam is created quite well. The test questions are balanced to leave enough time for a ""thinking"" type of questions. What do I mean is,  there are quite few questions that require no thinking/processing the question/answers. The answers should be found in your mind in few seconds. So, you safe time on such questions like ""how long a daily stand-up should last"" or ""Which statement best describes Scrum?"". So, if you found yourself ""thinking/processing"" this type of questions more then 30 seconds, this means ""studied not enough"".  The only what I wish is, I could access the questions I replied wrong to understand what exactly I still do not understand correctly.          Log in or register to post comments",5578
"07:40 am November 3, 2015                    Actually the questions are 80% + the same.  A new question is added once in a while.  I have several printed out and verified this.  (Just for the sake of accuracy).  I agree with Galina - (imho) you either know it when the question is asked or you don't.  That has been my experience with any test.          Log in or register to post comments",5578
"01:28 am November 15, 2015                    Unlike many other Scrum certificates, PSM is not a vanity means to claim Scrum knowledge, but a rigorous assessment of the intermediate knowledge in original Scrum.     So, one should appreciate the high standards maintained by Scrum.org.    Some of observations on comments here:    - Be careful about the source of your Scrum Knowledge. While Mike Cohn is great, some techniques that he advocates are not mandatory in Scrum    - Self organizing - There are ofcourse impediments that is outside the team's influence where SM needs to help. Not that they always let the team to solve it themselves.    - Beware of word play in assessments. For example, Product Done Increment	is same as     Done Working Increment  that is same as	Potentially releasable and usable software Increment    A book named Scrum Narrative and PSM Exam Guide will be out in next three weeks          Log in or register to post comments",5578
"07:02 am November 19, 2015                    In my opinion, One has to hit 100% score every time you take the assessment.  Its also important to understand ""WHY"" for each questionnaire, and multiple choices.   As many have, already mentioned its good to read through Scrum guide as many time as possible.  Its okay to take other open assessments, before taking PSM1 to formalize your knowledge on Scrum.          Log in or register to post comments",5578
Log in to reply,5578
Messages,5994
"09:42 pm July 29, 2014                             Many years ago my colleagues and I at Medtronic blazed the trail for using Agile (Scrum + XP + whatever) in the medical device software world. It seems that world has not travelled as far down the Scrum road as other industries, but as a new consultant/trainer, I am not yet connected to the broader Scrum community. Do you experienced Scrum professionals come across medical device companies that are exploring Agile? What impressions do you get about the readiness and willingness of that world to embrace Scrum/Agile?",5994
"05:23 am July 30, 2014                    It was a failed Scrum-but implementation in exactly this industry that encouraged me to become a Scrum Master in 2004.  At the time I was a developer working on a new patient monitoring device (ECG, blood oxygenation, brainwave). We had a technical lead who held daily standups sitting around a table. We had no backlog and no Sprint Planning sessions. If there were Reviews or Retrospectives, developers such as myself were certainly not invited.  We had no Product Owner apart from a senior executive who was notionally responsible for project outcomes. Weak product ownership impeded delivery as there was no scope management or expression of pull. We wrote our own requirements.  It was explained to me that the market for these devices was cyclical, in that hospitals only had budgets for such purchases every 4 years or so. Releases were arranged to this cadence and subject matter experts were lost to the engineering firm over the two or three years of project slack. By the time I was there it had fallen well below the critical mass needed to facilitate production. There were simply not enough stakeholders of the right caliber to own backlogs, to populate and order them, or to explain product scope.  I walked the death march for a year before quitting. A week after I left I attended one of Ken's Scrum Master training courses, which I happily paid for out of my own pocket. I felt that justice had not being done to the framework and that I should find out more about its correct application.          Log in or register to post comments",5994
"07:36 am July 30, 2014                    I have been working for a Medtronic competitor as product manager for a monitoring system of cardiac rhythm management devices.  In those years, I never heard the words ""Agile"" or ""Scrum"", however in this environment the Agile Manifesto and Scrum values were lived more intensively than in any other environment I have experienced so far. We used Feature Driven Development, and the employees somehow just knew how to generate business value in short iterations. I highly doubt it is possible to sell them Scrum or an Agile Coach. Most things a Coach would say, they would just answer: Yes of course, how could anyone think differently? Why should we pay someone to tell us trivial facts?  If you are new in such an environment, you adapt to it and it is a harsh shock when you come into a new environment as described by Ian.          Log in or register to post comments",5994
"06:42 am November 19, 2015                     I agree with ""Ludwig”. Earlier, we haven’t heard the word ""Agile"" or ""Scrum"", but now they become the most important in the environment. Scrum is simply a management framework, generally formalized for software development projects and helps in building customer collaboration. It really offers shift in the way medical device manufacturing processes are conducted. Now better products are developed, which directly improve healthcare and save thousands of lives.          Log in or register to post comments",5994
Log in to reply,5994
Messages,6569
"07:32 am October 24, 2015                             Hello all, successfully completed PSMI today. Though i was not active member in this forum, i have been following the suggestions given by all other members. I would like to thank the entire forum. It was not easy at all unless we understand the whole Scrum framework and calibrate with real time scenarios. Most of the questions were real time.  Well, for those who deem to appear for PSMI- Please comprehend word by word of Scrum Guide. though it is 16 pages, everything is in it.    Practice the open assessments-  Scrum Open, PSPO open in Scrum.org  http://mlapshin.com/index.php/psm-quiz/real-mode/ - this helps a lot  http://scrumstar.com/exam  http://tracks.roojoom.com/r/22315#/trek?page=1  Given as many times as you can and ensure genuinely you get 100 consistently in all attempts. Every time you clear it, you will be more confident.  Finally attempt the main assessment. Am sure you will make it 1st attempt.",6569
"06:15 am October 28, 2015                    Hi Sivakumar,   Congrats!!! Thanks for your tips  Just a clarification should we need to study NEXUS guide and NEXUS open assessment for PSM 1 ?  Also is it necessary to buy Mplaza stimulated exams?  Please let me know  Thanks,  Devi          Log in or register to post comments",6569
"09:22 am October 30, 2015                     Based on many of the other posts in this forum, most of the 3rd party test sites are really bad as they ask totally bogus questions that reflect a complete misunderstanding of Scrum.  They tend to lead people astray.  Having said that, there are some suspicious threads on this forum where people claim to be giving test studying advice but almost always throw in a reference to one of the 3rd party test prep sites that is positive.  It's almost as if they are offering some financial (or otherwise) incentive for their customers to post those reviews.  Seem very suspect to me.  I'm not against 3rd party prep sites per se, but I am against them spreading bad education/misinformation about Scrum.           Log in or register to post comments",6569
"11:52 pm November 2, 2015                    Hi Charles  Thanks for responding to the post. But I am sorry about the comments you mentioned questioning the credibility or integrity of genuine people who seriously prepared and passed the assessment. I am sure there are many people like me who have been following this forum would second me.:)  Just to clarify- i did share 1st thing about referring the Scrum guide word by word and open PSMI and PSPO assessments in Scrum.Org.   Those 3rd party links are being referred time and again in this forum and other forums as well and i just shared for the benefit of others. It is upto the individual who refers to calibrate the correctness of the answers instead of going with it blindly.  And yes i too observed few options and the explanation in the 3rd party open assessments are incorrect, however i looked at it as an advantage to validate the topic against my understanding rather than going with it.   Anyways you have been very responsible to correct and clarify many of our queries. I hope you will perceive my response in a positive manner. Good day! :)           Log in or register to post comments",6569
"05:22 am November 4, 2015                    should we need to study NEXUS guide and NEXUS open assessment for PSM 1 ?          Log in or register to post comments",6569
"01:00 am November 15, 2015                    Rajalakshmi,  Here is an ""unofficial"" answer to your question  Though questions are unlikely on this topic, there were few occasions where some  assessment takers informed about one or two questions they face on large scale Scrum. So, it helps to know some brief information on this that will help should a question or two appear in the exam. Scrum.org provides a framework called Nexus, to scale the Scrum for large product development efforts. You may want to understand the logic behind the structuring of large teams, mutually creating a definition of ""done"" for combined potentially releasable usable increment, scrum of scrum, etc          Log in or register to post comments",6569
"05:31 am November 18, 2015                    dear mr Sivakumar Karunakaram  well done and congrat in passing the exam, i agree that the third party links is have alot of incorrect answers that will confuse the reader... i agree with you that the Scrum guide must be always the reference          Log in or register to post comments",6569
Log in to reply,6569
Messages,6585
"09:43 am November 9, 2015                             While developers are coding away in the beginning of a sprint, what the heck are the testers doing? Sure, they can develop their test plans, but that isn't as time consuming as development, so I usually see testers relatively idle until developers start closing out tasks.  This workflow creates a dilemma, where the sprint is inevitably end-loaded with testing work, leaving little time for rework and bug fixes. Often times, PBIs are incomplete at the end of a sprint, and they spill over into the next sprint for completion.  How do we get testers testing sooner, and prevent developers from rushing to get work in their hands?",6585
"10:35 am November 9, 2015                    > How do we get testers testing sooner, and prevent developers from rushing to get work in their hands?  Any or all of:  1) Limiting work in progress, ideally to single piece flow, so throughput increases  2) Cross-training Development Team members so that they can go to where the work is, instead of waiting for it to come to them  3) TDD and/or BDD techniques          Log in or register to post comments",6585
"10:39 am November 9, 2015                    Ian,  All good suggestions. With respect to limiting work in progress, assuming there is only one work item, we still have the same issue, where most of the work happens at the end - for nontrivial coding tasks, at least.  We don't have an issue with developers running out of work. Did I give that impression? We also don't lack testing capacity. The issue is one of a chronically late hand-off to testers during the sprint.  TDD/BDD doesn't replace an actual QA tester.  - Mark          Log in or register to post comments",6585
"10:48 am November 9, 2015                    > With respect to limiting work in progress, assuming there is only one work  > item, we still have the same issue, where most of the work happens at the end  Yes, you will have that problem if your Sprint Backlog represents an irreducible batch of work. On the other hand, if your Sprint Backlog includes multiple granular items selected from the Product Backlog, there will be the potential for throughput to increase. The more fine-grained the backlog items, the more fluidity there can be in the flow of work.          Log in or register to post comments",6585
"12:56 pm November 9, 2015                     Yes, it all depends on the refinement status of your backlog. Also don't assume that Testers are for black box or functional testing only, involve them in writing unit tests. Test specialist should work in close collaboration with Dev specialist while the later is writing the code. Along with CI make sure that every 2nd/3rd day at-least one story is getting completed.  Regards  Sanjay          Log in or register to post comments",6585
"12:59 pm November 9, 2015                    Mark,  I am working with my current team around a similar issue/impediment.  It is symptomatic of a larger story approach.   One very good solution is to split stories into smaller items that can be completed much quicker, and therefore engage your ""testers"" much earlier in the sprint.  To Ian's point, you can also alleviate this impediment by eliminating the roles you are currently maintaining in your sprint team (developers, testers).   Resist the temptation to support ""hand-offs"" between development and testing, and support ""Team"" ownership of the items accepted each sprint.           Log in or register to post comments",6585
"01:00 pm November 9, 2015                    Sanjay,  In an ideal organization, this would be wonderful. However, we work with block box testers 12 time zones away. The work effectively goes over the wall. They also lack the skills to write coded unit tests.  Very few stories are simple enough to see completion (dev, code review, test, documentation) on day 2 or 3 of any sprint.  - Mark          Log in or register to post comments",6585
"01:11 pm November 9, 2015                    Mark, your response seems to indicate that your stories are too large, in light of your current organizational impediments around testing (hand-off 12 time zones away), and a lack of prioritization around cross-training.  I am assuming that your team is working from a Definition of Done that includes thorough acceptance criteria.   You will continue to struggle if you are not grooming your stories effectively.  If you have complete and thorough acceptance criteria, try creating a story around each acceptance criterion.   While you may initially perceive this as unneeded  ""overhead"", give the experiment a try for a sprint and analyze the results.   I think this approach will improve on some of the issues you are raising.  Good luck.           Log in or register to post comments",6585
"01:49 pm November 9, 2015                    Most acceptance criteria I see here are just the PBI title pasted into the AC field. I don't know why the QA folks don't refuse to test anything like this, but they do. It could be because everyone is an hourly contractor, and it's in their best interest for things to move slowly.  The Scrum Master should be enforcing these things, but she doesn't. I get up on my soapbox every week about these issues, yet nobody changes...lack of consequences?           Log in or register to post comments",6585
"04:30 pm November 9, 2015                    Mark, you are now identifying a number of impediments to your organization's Scrum adoption:  - Lack of ownership for sprint work (no repercussions for incomplete sprints)  - Poor acceptance criteria  - Scrum Master not enforcing Scrum  - Team members incentivized to NOT improve.   Continuous improvement is a KEY Agile principle.  - Sprints resemble mini-waterfalls  - No Definition of Done (probably no Definition of Ready either)  All of this is in addition to your original issue around optimizing your ""testing"" team members, which actually should not be your main concern here.   Instead of worrying about making sure everyone is staying busy, place your focus on the sprint work and getting those items completed before the end of the sprint.  The customer doesn't care if all of the team members were kept busy.   Their focus is on the end work product, and making sure it is useful to them.   That is what you and your team should be concerned with as well.           Log in or register to post comments",6585
"04:35 pm November 9, 2015                    BINGO!  Unfortunately, I have no influence to get these resolved. Raising these issues with executive management would be the only next step. However, I'm already branded a ""boat rocker"" with all my ""process Nazi"" stuff. Not kidding. This place is clearly committed to Scrum in Name Only (SINO?)            Log in or register to post comments",6585
"10:31 am November 11, 2015                    Mark, I think iin this case then it comes down to you:   How invested are you in this endeavor?   Are you willing to ride it out and endure the ineffectiveness or are you willing to risk being thrown out by creating a ruckus...     Hard choices. There are better workplaces.   And as my old Agile mentor taught me: every project gets the employees it deserves.  Your choice.  Are there ways to do a stealth improvement? Are there other project members on your side?          Log in or register to post comments",6585
"10:40 am November 11, 2015                    Ultimately, this team is effective because it ignores the process' shortcomings and just gets things done through brute force. However, they work at an unsustainable pace, all on multiple projects simultaneously, along with nonstop production support tasks. I don't understand how they aren't all burned out.          Log in or register to post comments",6585
"10:43 am November 11, 2015                    Mark,  I feel your pain.  If it is any consolation, I have worked in similar environments, and I am fairly certain many contributors here at Scrum.org have also faced similar situations.  It is a good thing that you are evangelizing proper Scrum and Agile in your workplace.   However, I would not favor a discussion of these impediments with Executive Management if there isn't a clearly visible commitment to Scrum from top management.   If that commitment is there, try to engage those individuals (Community of Practice?) around bringing change into your area.  A key skill for Scrum Masters (and it really comes from experience) is learning how to influence others without having any authority.  It can be a very hard sell job to point out to others they are doing something ""wrong"", and what is the ""right"" way to do something.   This puts people immediately on the defensive, and any help you are willing to offer will often fall flat.  From what you've stated, there are a multitude of ""opportunities"" for improvement in how your organization practices Scrum.   You can't change everything at once.   Start by not raising every dysfunctional item you see.   Identify one area at a time (come up with your own prioritized Scrum improvement backlog), and research it so that you can discuss not only the poor results of that practice, but also the potential benefits from alternatives to that practice.     Then, pick and choose the right moments to introduce your ""observations"".   You are not calling anyone or anything out here.   You're trying to help.   And in helping, you're trying to be an agent of change.  Does your team engage in Retrospective meetings at the end of each sprint?   These meetings are actually the most critical Scrum ceremony there is, as it supports Scrum and Agile principles around learning and continuous improvement.   These meetings are an excellent venue to introduce your observations.     If you're not having these meetings, then this is where you need to start!   Raise this serious impediment, and continue raising it until these Retrospective meetings are occurring regularly.   An organization/team basically has blinders on if they believe there is nothing they can get better at, or that improvement happens in a vacuum.  I like the analogy ""leading a horse to water"".   If they drink, great!   If they don't drink, that is ok, at least you raised the issue, and tried to make it as visible as possible.   Start work on your next improvement item, and look for opportunities to discuss it.   Also, you never know when the ""pain"" of a current practice can get to be too much, and your team/organization will want to revisit an issue you brought up earlier.  Hope this helps.   The soft approach is usually more effective than the ""Process Nazi"" approach.   Good luck!           Log in or register to post comments",6585
"11:29 am November 11, 2015                    Thanks very much for all your insights! I agree the retrospective would be a good place to start. They occur very rarely, and that's the Scrum Master's fault.  I work in a culture where people don't speak up or out. That is, you don't get in trouble for what you don't do.  If I were to point out failings, I would only be able to point to the Scrum Master not doing her job well, and my manager circumventing the process to get his personal goals satisfied. I don't think I can win here.           Log in or register to post comments",6585
"09:44 am November 12, 2015                    Mark,  Perhaps one approach that might apply in your situation would be to not necessarily point out failings, but to simply ask power questions that start with ""Why"", ""What"", and ""How""?  - Why don't we have more frequent retrospectives?  - How can our 2-week sprints be more effective/productive?  - What criteria tells us that a story is groomed (DoR) or complete (DoD)?  What, Why, and How questions do not challenge the recipient, but instead promote dialogue.   Again, I would question much of what takes place in your environment (pick and choose carefully!), but for now, refrain from providing answers.  The best value you can provide right now is just helping others see the impediments and constraints in their current processes.           Log in or register to post comments",6585
"10:20 am November 12, 2015                    Great approach. That's a lot like how a therapist would work. Don't give answers, just lead the client with questions, and help them discover the answers, even if the answers might be obvious to you.          Log in or register to post comments",6585
"06:37 am November 17, 2015                    I am tester myself and how we get involved early is by testing the feature in the developer branch itself. This could be before the code is actually code reviewed. This way we identify any issues early and dont need much time to test after the code is integrated.  Timothy, really like your suggestions. Kudos..          Log in or register to post comments",6585
"04:23 am November 18, 2015                    Hi Mark,  I hear what you are saying about the QA running out of stuff to do early on after putting together the test plans. As scrum master for our team one of the things I also have the QA doing at the moment is 'grooming' the acceptance criteria of the PBI's we get with a view to moving towards automated acceptance testing.  You mentioned that the acceptance criteria for the stories you have are not ideal so one option might be to get your QA to do the same, look at them, tweak and propose the new a/c list as the type of thing that they would like to see ideally, of course you'd need to get the whole team on board and involved and it's a good retrospective topic but from the sounds of things with the SINO this may be tricky??          Log in or register to post comments",6585
Log in to reply,6585
Messages,6587
"11:16 pm November 11, 2015                             Quick question for all of the senior members:  I've watched many courses on Pluralsight including many of Benjamin Day's and David Starr's classes.  I've worked on a 'Scrum under a Waterfall' team for the last 2.5 years, but my mentor is a CSM and PSM II, so she always leads me in the right direction. :)  I am working on my MCSD: ALM Certification and I know the ins and outs of TFS, and how to utilize Scrum with all of the provided functionality.  I have recently re-read the Scrum Guide, and practiced the Open Test over and over until I could reproduce 100%'s over and over.  So, my question is: Do you think I am ready for the test?  I think I am, but I want to make sure I am 100% prepared. :)",6587
"02:55 am November 13, 2015                    It sounds like it. If your mentor has achieved PSM 2 then you can be confident that they know the subject well and will have been steering you in the right direction, so if you have been constantly learning from them as well as doing your own study, and are now able to demonstrate that by consistently achieving 100% in the Open Assessments, I would encourage you to go for it!          Log in or register to post comments",6587
"10:30 am November 13, 2015                     Posted By Ramsay Ashby on 13 Nov 2015 02:55 AM  It sounds like it. If your mentor has achieved PSM 2 then you can be confident that they know the subject well and will have been steering you in the right direction, so if you have been constantly learning from them as well as doing your own study, and are now able to demonstrate that by consistently achieving 100% in the Open Assessments, I would encourage you to go for it!  Thanks for the reply!  I will study a little more today and this weekend and more than likely take the test next week. :)          Log in or register to post comments",6587
"04:15 am November 18, 2015                    Hi,  Good luck, sounds like good prep. I passed my PSM 1 a short while ago and have a similar background, I'm MCSD (but old track) and work with TFS as our tool of choice.  The only things I'd add is for safety also make sure you get 100% on all the open assessments, some of the questions will help. Also I found Mikhail Lapshin's free online test at http://mlapshin.com/index.php/psm-quiz/ to be hugely useful, I redid it until I could confidently get 100%, two questions I did not fully agree with but even that was useful as I went into them after researching myself, answered as per the suggested one but with the caveat in my mind that I'd answer slightly differently on the actual test if asked same. It's all about getting an understanding of the intentions  Good luck anyway!          Log in or register to post comments",6587
Log in to reply,6587
Messages,6560
"04:17 am October 14, 2015                             Hi,  Very pleased. I got the PSM 1 yesterday. Many thanks to people in the forum for providing pointers and tips.  The main things I found that helped me (over and above current experience as scrum master and the agile teams I've worked in) were:  1. Doing all of the open exams on the Scrum.org site and being sure I could get and understand 100% on each. Some questions especially on PO and Developer had a bearing on the SM exam  2. Used Mikhail Lapshin's excellent sample tests on http://mlapshin.com/index.php/psm-quiz/  3. Read the SCRUM guide end to end a couple of times and referred to it while doing the sample tests in learning mode  4. Read SCRUM Mastery and online resources about coaching agile teams. Read the Scrum Study SBOK  Even with that some of the questions in the exam I had to refer to what had been done or I would to in real scenarios and think quite hard. The exam did actually make me think quite hard  Regards,  Andrew",6560
"09:27 am October 30, 2015                     Based on many of the other posts in this forum, most of the 3rd party test sites are really bad as they ask totally bogus questions that reflect a complete misunderstanding of Scrum.  They tend to lead people astray.  Having said that, there are some suspicious threads on this forum where people claim to be giving test studying advice but almost always throw in a reference to one of the 3rd party test prep sites that is positive.  It's almost as if they are offering some financial (or otherwise) incentive for their customers to post those reviews.  Seem very suspect to me.  I'm not against 3rd party prep sites per se, but I am against them spreading bad education/misinformation about Scrum.  Looking at Mikhail's sample test questions, they look pretty good to me, so maybe his site is an exception to this.           Log in or register to post comments",6560
"04:06 am November 18, 2015                    Hi Charles,  Thanks for that, kind of gives me a validation of my view of Mikhail's sample tests. There were two questions where I disagreed but I think it was more a case of language rather than principles, for example daily scrum I did not feel was 'the' key inspect and adapt meeting, just 'a' meeting  Your discussion on studying was one I went through for my PSM exam too :-)          Log in or register to post comments",6560
Log in to reply,6560
Messages,6589
"08:23 am November 12, 2015                             dear all,   I want to taking PSM exam but i am from sudan which has political issues with US government. can i take the exam online ? or i need to go out from my country to another country ?",6589
"02:12 pm November 12, 2015                    Hello Ahmed,   Thank you for your inquiry. You may take our online assessment from anywhere in the world. However, we ask that you please check to see if your country is supported by our payment processor (all transactions, including credit card purchases, are processed through PayPal) before placing your order for an assessment password:   https://www.paypal.com/webapps/mpp/country-worldwide   If your country does not appear on that list, you may need to seek an alternative payment method. Many people who are unable to complete credit card transactions choose to use one of several available virtual credit cards:   https://www.google.com/search?q=virtual+credit+card&cad=h   For more information, please see the following article in our support center: http://support.scrum.org/knowledgebase/articles/468925-where-can-i-purc…  I hope we were able to address your inquiry. We wish you the best of luck in your journey with Scrum.          Log in or register to post comments",6589
"05:18 am November 15, 2015                    dear sir,  thank you for your answers, i am able to complete the payment process using help from my friend in saudi arabia, he have master card credit and later he will send to me the password . after that i will using my own email to enter the exam from sudan..  is that scenario will violate any rules of the scrum.org ?          Log in or register to post comments",6589
"12:17 pm November 16, 2015                    Hello Ahmed,    We're glad to learn that you were able to arrive at a solution for purchasing an assessment password. To confirm, this scenario does not violate any of the rules of Scrum.org. We are not able to process a password order placed from Sudan, simply because it is not on the supported country list of our payment processor (PayPal).    However, after receiving your assessment password, you may make your attempt at the PSM I assessment from wherever you like.     The assessment password is not associated with, or restricted for use by the purchaser only. Before starting your assessment session, you will need to log in to your Scrum.org member account. Your assessment attempt (and certification, if a score of 85% or higher is reached) will then be associated with your member account that you've signed into.    We hope this information helps. As always, if you should have additional questions, please do feel free to contact support@scrum.org. Best of luck and enjoy your day, Ahmed!          Log in or register to post comments",6589
"09:45 am November 17, 2015                    dear sir,  Thank you very much for the clear answer. i will do my best to pass the exam.          Log in or register to post comments",6589
Log in to reply,6589
Messages,6568
"02:30 am October 24, 2015                             Hello Group!  I just enrolled for PSM I assessment today. Request if anyone could let me know with in how many days i should give the assessment? For now i am quite confident about preparation- All inputs shared by others were very helpful. Referring Scrum Guide, taking open assessments in Scrum.Org as many time as possible.",6568
"07:49 am November 15, 2015                    Earlier it was 14 days. Now, that is removed and the password does not expire          Log in or register to post comments",6568
Log in to reply,6568
Messages,6592
"03:05 pm November 14, 2015                             Hi folks,  As I'm not fluent in English, I have trouble to understand this sentence from the Nexus Guide :  ""The duration of Nexus events is guided by the length of the corresponding events in the Scrum Guide. They are timeboxes in addition to their corresponding Scrum events.""  My trivial question is what is the time box of the Nexus events.  For instance, the Nexus Sprint Planning include some work before the parallel Scrum Team Sprint Planning.  How is this over-work time boxed ?  What is the time box of the Nexus Daily Scrum, I guess 15', but I'm not sure ?  What is the time box for the 3 parts of the Nexus Sprint Retrospective, which include the ""regular"" Sprint retrospective + 2 ""new"" parts ?  I am eager to read from you  Olivier",6592
"01:49 am November 15, 2015                    The Nexus Guide says ""Events are appended to, placed around, or replace (in the case of the Sprint Review) regular Scrum events to augment them"".  The ""guidance"" provided by the length of corresponding Scrum Events must therefore be seen in multiple contexts. In general, it can be said that the Nexus events must be of an appropriate length to facilitate the Scrum Events.  An oddity is the fact that Refinement is qualified as an Event in the Nexus framework, although it is not positioned as one in Scrum.          Log in or register to post comments",6592
"04:34 am November 15, 2015                    Yes, I saw the point with the refinement, without the ""guidance"" of 5% to 10% as in the Scrum Guide and with more detail on the content with the focus on removing dependencies.  I guess, as Scaled Professional Scrum is definitely very context-dependent, it is up to the Nexus to adjust its own time boxes for Nexus Planning ; Nexus Daily Scrum and Nexus Retro.          Log in or register to post comments",6592
Log in to reply,6592
Messages,6582
"05:34 am November 5, 2015                             dear all,  Sprint: time-boxed event of 30 days, or less, in our company one month equal 22 working days, so what is sprint time box? is it  22 working days or 30 working days ??  thanks in advance",6582
"11:47 am November 5, 2015                    Hi Ahmed,  it is the elapsed time, and must be less than 30 days (or 4 weeks elapsed time) to call it Scrum.  So if you have 22 working days in 30 elapsed days, it is a 30 day Sprint.  It is common to use a weekly cycle to give a rhythm and cadence to your Sprint, start on a Wednesday, finish on a Tuesday in 2 weeks time.  Regards  Simon           Log in or register to post comments",6582
"12:16 pm November 5, 2015                    Ahmed,  While the Scrum Guide states that sprint lengths are 1 month or less, almost all Scrum implementations establish sprint lengths at 1, 2, 3, or 4 weeks.   A 30-day sprint length simply has too much variability to be effective, as sprints will consistently begin on different days of the week (including weekends!).  Determine what day of the week you want your sprints to begin.   The recommended approach is to have sprints begin mid-week, as that avoids conflicts with Holidays and time-off (Mondays, Fridays).   Then decide on your sprint duration (1-4 weeks).  There are advantages and disadvantages with each sprint length (1-4 weeks).   Keep in mind that the 4-week sprint length creates a very long feedback loop between the business and the team, and is not as ""Agile"" as smaller sprint increments.  Hope this helps.   Good luck!           Log in or register to post comments",6582
"01:51 am November 6, 2015                    > what is sprint time box? is it 22 working days or 30 working days ??   It's the number of days it takes to close the release-and-feedback cycle. This is best measured in elapsed calendar days, and not just working days.  If you exclude *any* elapsed calendar day this is tantamount to asserting that the day cannot be used by you, your customers, or your competitors. This is rarely credible.          Log in or register to post comments",6582
"08:05 am November 14, 2015                     BTW why are you going for monthly sprint, did you give a thought to weekly or two-weekly sprints. Also one week = one calendar week including holidays, Sat/Sun.          Log in or register to post comments",6582
Log in to reply,6582
Messages,6584
"07:16 am November 9, 2015                             Hi all  As a result in a change of role, I'm about to join an existing (10 sprint) project as scrummaster. I've worked on agile teams for a couple of years, have been PO but not scrummaster.   In my old role I've had little involvement in the project - have attended some reviews and worked with the PO on clarifying some requirements.  I've worked with half of the team members on other projects, but 3 others are external contractors I've had little contact with so far.   At the moment I plan to:  * Have some 1:1 chats with the contractors - really just to get to know them  * Read up anything that's come out of past retrospectives  * Get to grips with the backlog and (to some extent) the icebox  Any tips? All advice much appreciated",6584
"12:50 pm November 9, 2015                    Reading what you can about the team's past is good, but doesn't replace the face-to-face communication needed.  I would advocate 1-on-1 chats with everyone on your team (including your PO), not just the contractors.   Begin building the relationships with your team members.   Understand what they view as positive and negative with the team and the work they're doing.   Identify improvement areas within the team, and work with the team (short and long-term) on what they can address.   Your past experience as a PO should give you exceptional insight with this team's PO.   Work with the PO to help them understand the best ways to work with the team in order to create a fun and productive environment.  Good luck!           Log in or register to post comments",6584
"04:48 am November 13, 2015                    Thanks a lot - very useful advice!          Log in or register to post comments",6584
"08:00 am November 14, 2015                     Since you had already worked as a PO with a different team so don't try to be a PO for this team, here you are a Scrum Master, don't get into in a conflict esp with respect to deciding the priorities :-)          Log in or register to post comments",6584
Log in to reply,6584
Messages,6533
"05:09 am September 29, 2015                             Hi,  It is a very practical question. Let's say we are operating a shop online. We are adding step by step, sprint by sprint, new functionality. And, suddenly server break down. Should the sprint stop? I guess yes, but who is taking the decision?  How would it be managed?  Thanks,  Stéphane.",6533
"10:19 am September 29, 2015                    Hello,          In my opinion is a bad idea that the development team that is adding new functionality to the product is also responsible of maintaining the product in Production environment. Working this way the team will be continuosly affected on his sprint goal for events outside the Sprint. This is something that the SM should manage with the Managment.  Regards,  Julio Mieza del Val          Log in or register to post comments",6533
"11:13 am September 29, 2015                    IMO, dev teams should also support their systems in production.  They should ""eat their own dog food.""  Said another way, by having dev teams support production, the dev teams get maximum transparency on the decisions they make, esp wrt quality and customer satisfaction.  Stephane,  See here for one way to handle production support issues that you describe:  http://ScrumCrazy.com/bugs          Log in or register to post comments",6533
"11:43 am September 29, 2015                    Charles,          You are right and maybe they should eat that food, but I think this is againts the SCRUM framework, because none of the tasks needed for put the server up (incluiding hot fixes) are in the Sprint Goal, and the dev team has to work only on the tasks of the Spring Goal in the whole Sprint.           Making the team working on task outside the Sprint Goal is a wrong approach for releasing SCRUM in a company, it would affect the sprints for sure.  Regards,          Log in or register to post comments",6533
"12:58 pm September 29, 2015                    Responding to emergency Production Support issues could be a part of the Sprint Goal, yes?  The Sprint Goal can be just about anything a Scrum Team thinks is valuable.          Log in or register to post comments",6533
"04:25 pm September 29, 2015                    Charles,         As far as I know The Sprint Goal is an objetive set for the Sprint related with the implementation of 1 or more items of the Product BackLog. If we add in the Sprint Goal this kind of unpredictable, unknow and unestimated tasks its going to be very difficult for the team the commitment necesary for finishing the tasks that really are adding value to the product.  Regards,          Log in or register to post comments",6533
"01:22 am September 30, 2015                    If the server breaks down, would the Development Team still be able to deliver a potentially releasable increment?  If not, then the problem should be regarded as an impediment to the Sprint Goal and handled accordingly. The Scrum Master should take a lead on resolving the matter, and the Development Team should self-organize to find workarounds. This may involve finding alternative release environments and/or renegotiating the Sprint Backlog with the Product Owner so the Goal can still be met.  If the server hosts the Product, then the PO would also have an interest in resolving this matter, such as by resourcing alternative hosting infrastructure.            Log in or register to post comments",6533
"02:28 am September 30, 2015                    In the team I work in, this is a constant issue. We are both responsible for delivering new functionality using the Scrum framework, and the (technical) support for keeping the production environment of our system up and running, including 24/7 (standby) support.   My employer says it is ""DevOps"" and I (the scum master) call it a pain in the *ss, but it is something we have to deal with. After a few sprints we know how much time we require for keeping the system up and running and take this into account when planning the sprint. If there are a lot of incidents I discuss the issue with PO and together we decide which stories can be dropped from the sprint.          Log in or register to post comments",6533
Log in to reply,6533
Messages,6528
"08:46 am September 24, 2015                             Hello everyone,  I’m new to this forum and can’t wait to engage in interesting discussions regarding scrum. Currently I’m the product owner of our software and even though we made some huge steps since we started adopting scrum we still have a lot of questions. I’ll try to keep this post focussed on one topic so this discussion will hopefully not go all over the place.  I have a question regarding executing sprints and managing UAT’s for several customers and dealing with bugs that come out of these UAT’s.  First some context;  - We are a small financial software company which delivers software to several local and international customers  - Our sprints are two weeks and our policy states that every 15th of each month customers can decide to get the last deployment installed on their acceptance environment for UAT purposes. Yes I know 15th of the month…. That doesn’t make any sense. This was decided by a manager who didn’t know how scrum worked at the time and is unfortunately still our policy. Will try to change this soon!  - Our software requires a combination of customer experts to test during UAT  - Our software requires a UAT because external interfaces are only available on the customers acceptance environment. Results of interface test done on acceptance are not visible to us but only to our customer. It’s impossible to test the entire software chain  - All customers have different UAT lead time varying from 2 to 6 weeks  - Our automated test coverage is very low  - Our manual test coverage is average  - Our system has a lot of legacy  During sprints where we plan 60% of our time to work on new functionality, rework and technical debt we constantly get back UAT bugs from customers that expect that we fix these bugs and carry out a new deployment when the bugs are fixed a.s.a.p.  Carrying out the UAT’s at this point is still necessary because;  - Automated test coverage and manual test coverage is still too low. In the past this has lead to several crappy releases resulting in customers that don’t trust the quality of the software and demanding to do a UAT  - External interfaces are not testable on development and test environments which results in customers needing to have to test these interfaces during UAT  - We build a lot of new functionality based on customer input. The customer first wants to test and accept this functionality (often including external and internal interfaces). Because UAT’s can take up to several weeks they don’t fit in de sprints  Obvious solutions would of course be to invest in automated testing and install stubs for external interfaces but then, at least for the next year, we will still have customers demanding UAT’s because we still have to proof we can deliver high quality software.  So… regarding everything stated above. Do you guys and girls have any advice you can give me to manage the continuous flow of UAT bugs? All tips and help is very welcome.  Kind regards,  Geert de Jong",6528
"03:16 pm September 24, 2015                    What can be done to get the UAT test criteria articulated ahead of development, so it can become more test-driven?  Also, what can *you* do (as PO) to improve customer representation during each Sprint, so each finished item is quality-assured in the Development environment as part of the Definition of Done?           Log in or register to post comments",6528
"07:00 pm September 25, 2015                    If your definition of ""done"" does not include a reasonable test coverage, then this problem will remain forever. Promise!  You have to get things automated, let alone to make sure that working features are not damaged between increments.   In the sense of scrum, your increments are not delivering 'working' products - that's pretty much the core of the problem.   To get around this, testability should be your #1 priority and you should account for that in the product backlog. It's easy to justify because users can't work with crappy software - actually, the increment/release is worth nothing if no one is going to use it. Before cleaning up the technical debt, you better make sure that re-design and re-factoring doesn't screw up everything. Again, testing is key to success.  Another idea is to make the bugs high priority in the next sprints. You want to get working software out of the door, not a buggy software with more badly tested features.  Regarding stubs and external interfaces, I'd recommend to ask your customers if they can provide (better clone) their UAT environments for nightly development tests.   I hope this is of any help for you.  Best  Greg          Log in or register to post comments",6528
"04:43 am September 29, 2015                    Gregor,  Thanks for your reply. I think your conclusions are spot on! Our biggest impediment at the moment is that we don't have a reasonable test coverage resulting in non working products. And if we don't adress this and free up time to work on this the problem will remain. I'm going to adress this impediment to management so they will also understand the importance so I get the means to solve this.  We are currently already in the process of getting better UAT environments from our customers so we can expand our test coverage with several key interfaces. That said, it's a slow process and will probably take several months before realized.   Regards,  Geert          Log in or register to post comments",6528
Log in to reply,6528
Messages,6526
"10:04 pm September 23, 2015                             Hi All,  I have a question about missing sprint goals and I was unable to come up with an answer - what would you follow scrum masters do in this situation:  ""The PO is very demanding and has to report out to the CEO and the project is on a very tight deadline.  There is also a fixed budget and fixed scope.  It's looking like the Development Team won't  be able to deliver by the intended date.  What would you do?""   Thanks,  Mario",6526
"12:41 pm September 25, 2015                    First of all, I'd tell the demanding PO and the CEO that no one can command success. If the team's not gonna make it, nothing will be delivered. Easy as that - clear language that is even understandable for CxO. Better talk to the PO alone. It's his/her job to get this straight.  .  The SM sort of failed to make sure that Scrum is implemented the right way. He/she should have insisted on a sprint goal. Witthout a goal, it's also questionable that the PO knows the value that's going to be delivered. I'm talking real value - not story points.   Enought said. Let's look at the practical side.   Ask the PO for a definite goal and then reduce some features (sort of 'all features are valuable, but some are more valuable than others' thinking). If the PO can't deliver, than you have a problem. Best you can do is to define a goal yourself and proopose it to the PO. To make the long story short - it's the PO's job to get this straight! Obiously, the team also committed to work it isn't able to accomplish in the sprint.   One more word about a 'demanding' PO. It's the team that decides what can be done in a sprint (of course talking to PO and taking the most valuable backlog items into accuont). No one else. No PO, no CEO, no SM can command what's getting done in a sprint. To me it looks like people are having problems to play their roles according to scrum. Also important - the SM sort of a 'Scrum Ambassador' in the organization. CEO, business units, user groups and other stakeholder must understand how (and why) scrum works ... and play their roles the best they can.  Best  G.          Log in or register to post comments",6526
"06:27 am September 27, 2015                    Hi,  Fixed deadline, fixed scope and fixed budget. I would say that in this scenario Scrum is really hard to implement.  Questions: Will you deliver a minimum marketable product after the first, second or third sprint? What's the intention of the CEO? Why do you want to use Scrum?  Best  Daniel          Log in or register to post comments",6526
"01:51 pm September 28, 2015                    > Why do you want to use Scrum?   I think that's getting closer to the key issue. The problem described is more general than missing Sprint Goals. There does not appear to be a rationale for iterative-incremental delivery at all.          Log in or register to post comments",6526
Log in to reply,6526
Messages,6441
"09:12 pm July 16, 2015                             One of Forum Rules of Engagement is “No posting Scrum.org assessment questions and answers on the Scrum.org forums.”  Is it possible to implement a feedback system in professional assessments system?  Just like the “Bookmark” function, test taker can check a “Comment” check box if the question is ambiguous or unclear to her/him.  When the test is done, give 5 or 10 minutes to test taker for adding comments or feedback to each checked questions.  The professional assessments are not merely tests of knowledge, but assessments of understanding. But, sometimes, coming up with good questions can be harder than coming up with good answers. A feedback system always increase transparence and quality.",6441
"10:03 am September 28, 2015                    I totally agree. Feedback helps to improve - it's at the heart of scrum.  In another post, I recommended to add a ""sure wrong"" ansering option (not just radioi button). This can both be used as a reminder when a question is bookmarked and also demonstrates knowledge. A couple of years ago, I implemented a certification process at a customer. The team concluded that the ability to eliminate ""wrongs"" is also worth something. If only ""wrongs"" were eliminated, the answer was still good for half of the points. The rational behind is clear and it also keeps the examinees from taking a wild guess from the remaining options (whcih would result in 0 points if the quess is wrong, or in a lucky point if the guess is right).  In the cert process I mentioned, we also had some very strict rules how to formulate questions. One easy to apply rule is to prohibit negations e.g. ""Which is FALSE? or ""Which of the following is NOT a ..."". This only makes the examinee unnecessarily think in circles and bears the risk that the FALSE or NOT are not recognized in a testing situation - especially if not capitalized or boldfaced. This gets even worse if the answering options to a negated question are true and false.   Talking transparency - it would be also great to know what the ratio of essay/m-chocices is in level II exams and see some examples that give a clue about the level of detail that is required.          Log in or register to post comments",6441
Log in to reply,6441
Messages,6529
"04:37 pm September 24, 2015                             In another post, I made the assertion that SCRUM is a development methodology and not a project management methodology.  To me this seem very clear but I find many references to 'SCRUM project management', so perhaps it is worth questioning that assertion.   Here is how I think of SCRUM and Project Management.  Project Management addresses all aspects of a project:  - Defining the project and its goals  - Managing stakeholders  - Managing Risks  - Managing Organizational Change  - Managing the team  - Managing  vendors  - Managing Development  - Managing Implementation - not just the system - everything involved, marketing, training, etc.   - Managing Quality  - again, not just system quality - there are many other aspects to project quality  I think the confusion comes from the fact that there are many project management aspects to scrum - risk management, communication, etc.    I see SCRUM as a development methodology that can be used on a project or for ongoing development of a system without a project.   To me it is similar to other development methodologies - SDLC, iterative, etc.   Thoughts?",6529
"04:03 am September 25, 2015                    By coincidence I was yesterday re-reading the Scrum guided, and as always some new detail struck me. In the paragraph ‘The Sprint’, on page 8 the guide says ‘Each Sprint may be considered a project’.  ===  Both Scrum and traditional methodologies seek to deliver a product or value to the customer. And any methodology should handle the aspects you mention in your post.   However, the major difference between Scrum and classical project management is that Scrum recognizes the difference between complicated projects and complex projects. In complex projects one has to deal with ‘unknown unknowns’ which are by definition impossible to plan and control in advance.           Log in or register to post comments",6529
"08:56 am September 25, 2015                    How would scrum address the other areas I mentioned?  You can build a great system, but if the system represents a dramatic shift for the organization for which it is intended, the 'project' can still fail miserably.    I can agree that SCRUM could be considered a project management methodology for development projects that may be technically complex, but simple from a project perspective - involving only one type of development - system, product, course ware, etc. and without a  complex environment, multiple stakeholders, organizational resistance, etc.    I think you could try to use SCRUM to do all of these things, maybe have SCRUMS for each capability involved, but I think that's calling a screw a nail so you can user your hammer.  PM methodologies are much better suited to address the things I mentioned.  Full Disclosure, I have both developer and project management background and am currently fulfilling the non-development pm functions for two scrum teams.            Log in or register to post comments",6529
"09:28 am September 25, 2015                    Another thought about methodologies, though I consider it a PM function to ensure that organizational change is effectively managed, there are several change methodologies that are much more appropriate and effective. I currently follow the ADKAR process. Likewise, courseware can be developed using SCRUM but there are also development methodologies for that - ADDIE, for example which may be more effective or may be more standard for a particular capability.  i think it is important to find and adopt the best methodology for your purpose.  However, I also think it is important to try to use SCRUM in many different ways and for many types of projects as doing so will define both it's limits and its strengths.          Log in or register to post comments",6529
"07:35 pm September 25, 2015                    I think Scrum is neither a PM Methodology nor a development method. It's just a framework to get things ""done"".   Scrum certainly addresses some aspects of PM. In this sense there is a 'similarity'. Hovever, it is not focusing on having full plans upfront, knowing all costs upfront, knowing when which skills are needed, etc. Some parts are left to the self-organizing spirit, others must be handled outside the Scrum team.   Also other ideas of classic PM are not part of Scrum. For instance the project initiation, project approval, project closure. These things need to be done - no doubt about this. I believe Scrum takes over after the approval of the project scope and an approved budget to get started. At this point, all that managment has to do is to support the team, to ensure funding and to provide coffee and other important resource like hardware. offices, team members. Of course, someone also has to take care of contract issues, etc.   That said, Scrum and PM sort of complement each other. Management and administration have to understand that things no longer work the waterfall way. They are no longer ""big planners and controllers"" but rather ""servants"" that pave the road for the Scrum team to perform at its best.           Log in or register to post comments",6529
"09:22 am September 28, 2015                    Hallo Jim Taylor,  challange accepted!  As the Scrum Guid says Scrum is a management framework. It is no methodology, not development, not project management.  - Defining the project and its goals (by the Product Owner, Sprint Goals, Product Vision)   - Managing stakeholders (by Product Owner, in Sprint Review)   - Managing Risks (mitigation through inkremental Product development,decision shift and short development cycles, by Product Owner)   - Managing Organizational Change (by Scrum Master, by impediment Backlog)   - Managing the team (by the Development Team)   - Managing vendors (by Product Owner)   - Managing Development (by the Development Team, by the Prouct Owner through PBI)   - Managing Implementation - not just the system - everything involved, marketing, training, etc. (by the Development Team, in Sprint planning, Daily Scrum)   - Managing Quality - again, not just system quality - there are many other aspects to project quality (by the Scrum Team, by DoD)  Explanation: How it is done is not said in the Scrum Guid, but the responsibility should be clear and in some case also the neccessary Meetings. That's why it is called Frame work.  Example for Regarding ""Managing Quality""  We have had a very formal and managed test concept implemented in Scrum with: Unit tests, acceptance tests, System tests, Integration tests, Regression tests, user acceptance tests, with planning, documentation, etc. all done within a Sprint in a very lean way (Through modularization and automatization).  Often I hear from the developer, ""Why we have to work like this way, this is not the most efficient way"" my answer is ""It is not the aim of Scrum to make development more efficient. The goal is to make development manageable"".  So with scrum you want to have a predictabillity on the project and a sustainable pace in velocity and Quality. Scrum is your strategy to adress certain risks like:   - Fail on time   - Fail on budget  - Fail on customer satisfaction  - Lack of Quality  So in my opinion Scrum is more a strategy than a methodology.  Kind regards  Benjamin           Log in or register to post comments",6529
"10:01 am September 28, 2015                    Hey,  You can find a possible answer in the book - ""Essential Scrum: A Practical Guide to the Most Popular Agile Process""  Chapters 13: Managers.   ""Even though the Scrum framework doesn’t specifically mention the manager role, managers still play an important part in an agile organization"": Managers defines boundaries, Form teams, Empower Teams, Remove Organizational Impediments, Manage Economics  At the team level regarding Traditional Project Management Responsabilities there is an interesting     Mapping of Project Management Responsibilities to scrum roles.   Eg Risk - PO, SM, Developer, Other managers  Regards,  Daniel          Log in or register to post comments",6529
Log in to reply,6529
Messages,6032
"06:45 am August 24, 2014                             Hi all at scrum.org.  A general theme we get is that of certifications,Q&A's.  Could it be possible to have a search facility on name in the passed examinations?  (Currently you have to open the full database)  This way you could just reference the name rather than have to search the list.  search = first name + last name.  Even better if it gave the date and the certification number since certifications began.  This data can be obtained but you have to crunch it in excel.  It would be nice to see some metrics on how many people come through,1st time pass, 2nd time pass, etc.  Year, type of courses , PSM1,PSM1, PSPO1, PSPO2, PSF, PSD etc.  This would give people a real flavor for what it is that they will be embarking on as a journey.  Based on what we know, all that have made the journey before and how it was for them.  Customizable metrics would be great, even more so for trainers to show students.  Is it possible to have some metrics dashboard to show what we have achieved as a community?  Possibly split the courses into separate forum categories as all posts are in two categories.  With many Q&A on exams and certification would keep them in their respective directories.  PSM, PSPO, PSF, PSD, dodgy passports, mail order brides, type directories?  Michael",6032
"07:47 am September 28, 2015                    I totally agree with Michael. As scrummres are always dedicated to improvements, how about having a specific forum for user feedback regarding the 'product', i.e. website, forums, certifications?  (1) For the level II exams, it would be nice to have some examples regarding essay questions and the level of detail that is expected. Otherwise, there is a high amount of uncertainty during preparation. I'm not asking for an exhaustive list - just a few examples with comments would already be a great help. Also an idea about the ratio of multiple-choice and essays would be great information. I believe this level of uncertainty coupled with the price is a reason for many to not attempt the level II exams. Unless resolved, it would be only fair (considering price and uncertainty factor) to have a free second attempt. I think this increase the number of attempts and is overall also beneficial for the business case.   (2) Wrt. to multiple choice questions the 'tick' is probably the simples to implement. However, it would be great if you can flag options as ""definitely wrong"", so you don't need to consider them again when you get back to the question (via bookmark). It's particularly a great help if the answering options span 2-5 lines.  (3) Questions should be loaded in the background and multi-loads avoided. During my PSPO I exam, I encountered 10-15 second waits in between questions, which totaled to a reduction of 16mins (i.e. 25%) exam time. I loaded a few other pages in parallell, and they were delviered in milliseconds. It definitely was a problem of the exam host (or that of some server on the route). Easy to solve if countdown is stopped in between requests or questions are pre-loaded in the background. In particular, nowadays, there's hardly a reason that the same questions and answers need to be loaded multiple times (navigate back-/forward, bookmarks).  Thanks upfront for taking care!   Greg          Log in or register to post comments",6032
Log in to reply,6032
Messages,6527
"02:57 am September 24, 2015                             Hi All,  Can anyone help me in understanding the below points with an example or an scenario.   What do you mean by -   1. Scrum makes clear the relative efficacy of your product management and development practices so that you can improve.  2. Transparency requires those aspects be defined by a common standard so observers share a common understanding of what is been seen.  3. Inspections are most beneficial when diligently performed by skilled inspectors at the point of work.  4. If an inspector determines that one or more aspects of a process deviate outside acceptable limits, and that the resulting product will be unacceptable, the process or the material being processed must be adjusted.",6527
"07:01 am September 28, 2015                    (1) is about the effectiveness of scrum and the constant validation of success (e.g. value delivered). Detecting flaws is essentially the same as identifying needs for improvement wrt. product management and/or development practices.   Examples:  - PO verifying the increments,   - the feedback gathered during sprint reviews  - the feedback of the users/market (frequent release)  - burn-up charts that measure the increase of delivered value, ...  (2) is basically saying that all participants must share the same standards (quality and procedureal mindset) in order to ensure that all provided information is transparent at all times, everybody agrees to the way it is measured and presented and knows how to interpret it. Transparency is worth nothing if some want to see other information or don't know how to make sense of the provided information.  Example:   - Product Backlog and prioritization is transparent at all times  - definition of ""done""  - showing prgoress as burn-down and/or burn-up charts  (3) Inspect as you go - at the place of work and done by skilled people. Skill is a necessitiy. The best skills are usually found at the place of work. What this sentence is trying to say is: ""Build quality right from the start at the place of work, rather than employing inspectors that check final deliveries."": Detecting flaws early at the place of work is also more economic than detecitng (and fixing) them late.  Example:   - Pair programming.where two developers are constantly providing peer reviews  (4) Scrum has zero tolerance for ignoring bad quality in processes and or the product. When detected, this needs to be fixed.   Examples:   - add defects to product backlog. Better fix them immediately if it fits in the sprint.   - discuss procedural problems in Sprint Retrospective - then solve them.          Log in or register to post comments",6527
Log in to reply,6527
Messages,6525
"09:31 am September 22, 2015                             Hello Fellow Scrummers,  Is there a chicken-egg problem here? or perhaps I am missing something...   I would like to hear your thoughts.   The Scrum Guide states:   <quote>The Product Owner discusses the objective that the Sprint should achieve and the Product Backlog items that, if completed in the Sprint, would achieve the Sprint Goal.<unquote>   <quote>After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a Sprint Goal.<unquote>   So do we have the Sprint Goal available before discussing the PBIs (otherwise how would you identify PBIs that achieve the Sprint Goal?) or do we identify PBIs to be delivered in the Sprint and then craft the Sprint Goal?   Cheers!   Mandar K",6525
"11:42 pm September 22, 2015                    The Guide says ""The entire Scrum Team collaborates on understanding the work of the Sprint"". Articulating a Sprint Goal it isn't so much a chicken-and-egg problem as one of cultivating the appropriate collaborative practices.          Log in or register to post comments",6525
"03:21 am September 23, 2015                    At the end of the Sprint Planning and during the Sprint, the Scrum Team should have a shared understanding of the Sprint Goal.   However, IMO the PO has a bit more responsibilities as just to contribute to a mutual understanding: his prime responsibility is to optimize the creation of value. So before the Sprint Planning he should have prioritized the Product Backlog and has an idea what this next sprint should deliver from the business point of view. So he is forming the outline of the sprint content before the Sprint Planning.  Also note that the Sprint Goal has meaning after Sprint Planning:  -	It is used to focus the Development Team during the Daily Scrum  -	It is a reference when the sprint content has to be renegotiated  -	It the reference to abort a sprint  -	It is a token of communication to the business what the team is doing / has done during the sprint.  ============  This has been a re-occurring questing at this forum and while writing this, I think some discussions are generated by how one interprets ‘Sprint Goal’.   1)	The collection of PBI and tasks  2)	The slogan we choice to represent this collection of PBI and tasks           Log in or register to post comments",6525
"07:53 pm September 25, 2015                    The sprint goal is basically the ""mission"" of the sprint It tells which functionality and value is being delivered. To come up with the goal, the development team must have committed to the PBI it can handle in the timebox.  However, the goal is often a bit blurry in a sense that it does not elaborate on each and every detail. This way, if time gets tight, nice-to-haves and delighters can easily be dropped if not explicitly mentioned in the goal. The sprint will still accomplish the goal.  The order is: (1) select the PBI according to priority (2) come up with a goal that leaves room for interpretion  If you manage to complete all PBI in full detail, then everyone is delighted that you exceeded the goal!          Log in or register to post comments",6525
Log in to reply,6525
Messages,6497
"11:52 am September 2, 2015                             I have a very basic but difficult scenario , unable to figure it out.  Assume one of the team member is not performing as expected or creates conflicts with other team members.  In this situation who will be in best position to remove the team member from the Development Team ??  1. Scrum Master, as he has to remove Impediments.  2. Development Team .",6497
"01:08 pm September 2, 2015                    Development Team has to resolve the issue, because they are self-organized. But it is also an impediment, so they can ask SM for help.          Log in or register to post comments",6497
"02:00 am September 3, 2015                    thanks for the response.  so it has to be Devepoment Team with help from SM.          Log in or register to post comments",6497
"08:58 am September 4, 2015                    You have chose the solution before understanding the real problem.  Before remove a member from DT, my opinion is to involve the whole team to tackle the problem and have Scrum Master to coach the team member.  Maybe the Scrum Master can speak with him and ask for his opinion.  Maybe it is simple a ""personnel"" issue and he's unsuitable for your team or company.  As you asked this question, I guess you have not discussed with your Scrum Master.  To remove a member may be easy. There are some things the DT should consider, such as:  The productivity and capacity will decrease.  The effort to add a new member.  The social risk of the Scrum Team.  The cost to train a new member.  ...  The remove a member from the team is the last option to tackle this problem.          Log in or register to post comments",6497
"07:10 pm September 25, 2015                    Well, I think no one of the scrum team can do this. As long as the member is assigned to the team, it is part of it and the team has to find a way that this guy will get back on speed.   Scrum is not about hire and fire. It's about collaboration, team spirit and getting things done. Conflicts need to be resolved in the best interest of accomplishing the committed goal. The SM can certainly help to find a solution but he's not in the position to remove someone from the team. Nor is the team. If the member really needs to get removed, than it's his line manager's job to assign him to a different job (or the person who hired a contractor).          Log in or register to post comments",6497
Log in to reply,6497
Messages,5899
"02:30 am June 1, 2014                             I was informed by The Development Team the IT department has asked them for a status report during the Sprint. As my goal is to remove impediments, I don't think the Development Team should do this. Should I ask the Product Owner to send the report? Should I tell the IT dep. to come to the Sprint Review where they will learn the status of the project, or should I create this report and send it to them?  I couldn't find this in the Scrum Guide, so I need an answer in order to handle this request in the best and appropriate way.  Thanks for your advises!",5899
"11:33 am June 1, 2014                     Hi PG,  Anyone can do it, for it to be ""any point"" in time it should be reported daily, team should be self organizing.  Its a scrum ""team"" Dev-SM-PO so in theory as long as its logged by the team, then anyone could.   This is where burndown charts come in useful, PO tracks it but the team should log it and it should be transparent to stakeholders, so in this case your IT department.  To avoid sending it, you can just make any burndown shared with stakeholders, no need to send it.  They can look and see when ever they choose and crunch any data from it.  Its one less thing you have to do, so the team stay on track for the Sprint goal.  Monitoring Progress Toward a Goal  At any point in time, the total work remaining to reach a goal can be summed.   The Product Owner tracks this total work remaining at least every Sprint Review.   The Product Owner compares this amount with work remaining at previous Sprint Reviews to assess progress toward completing projected work by the desired time for the goal.   This information is made transparent to all stakeholders.          Log in or register to post comments",5899
"01:31 pm June 1, 2014                    Thank you Michael for your insight. I really appreciate it.  What it's blur for me is that if it's the responsibility of the entire team to report status, who decides how and who will do it? Also, my understanding was that tracking the burn down charts was responsibility of the development team, not the PO. Is there some source that clarifies this more? Unfortunately the scrum guide is not clear on this area.  Thanks for your feedback.  PG          Log in or register to post comments",5899
"01:49 pm June 1, 2014                    > I was informed by The Development Team the  >  IT department has asked them for a status   > report during the Sprint.  What information radiators does the team have in place, and how is the IT department currently making use of them?           Log in or register to post comments",5899
"03:13 pm June 1, 2014                    We do use burn down charts, burn up charts, story boards. Mostly physical charts, so the ideal would be to have these radiators in an online platform to grant access to any external department to or stakeholders to see them at any point, correct?  My main question is: A) should the PO create this report and send it to the IT? B) The SM (me) should create this report and send it? Or C) Tell the DEV team to figure it our themselves?            Log in or register to post comments",5899
"05:18 pm June 1, 2014                    It would be best to make these radiators available, either physically or electronically, so that stakeholders can see them without the need for reports. Reports are subject to filtering and delay and their production consumes time and effort.  It's also important to bear in mind that in agile practice, the proof of success lies in ongoing delivery and not in reporting. The interest of the IT department should be to facilitate incremental delivery and to assist in the removal of any organizational impediments. Blockages, risks, dependencies, and issues outside of a team's control should be flagged on information radiators so stakeholders can act accordingly.   Instead of expecting reports, the department should be pro-active in monitoring these radiators throughout each sprint, and in providing Scrum Masters with any support they may require.          Log in or register to post comments",5899
"12:56 pm June 2, 2014                    Thank you Ian for your feedback. Let's put it this way: The organization request us to present a report, regardless we have those radiators. I also remember that in a question from the test it was this was addressed giving several options that the SM will do. If I remember well it was something like: A) ask the PO to send the report; B) The SM create it and send it; C) Tell the DT to fit the report into the Sprint Backlog.  If you would pick from these options, which ones is the best one?          Log in or register to post comments",5899
"02:04 pm June 2, 2014                    The least worst of those options would be B. A can be eliminated on the grounds that the IT department is not a business stakeholder and so the PO would be unsuitable as a liaison. C can be eliminated because it is inappropriate to use the team's time for non-value adding purposes.   That leaves B, which is the ""least worst"" option because the SM would deal with the impediment. It still isn't a good option though, because what the SM *should* be doing is coaching the department to make better use of information radiators and to be more pro-active in supporting team delivery.          Log in or register to post comments",5899
"02:09 pm June 2, 2014                    Thanks Ian. We are working on improving our information radiators in order to make the process easier for everybody and also bring transparency into our development.  What software/online applications do you recommend for us to look at?          Log in or register to post comments",5899
"02:43 pm June 2, 2014                    > What software/online applications do you recommend for us to look at?  I don't. As a general rule I think it is best to defer the use of electronic boards and radiators until the correct organizational behaviors are in place.  I'd recommend using physical boards and charts to begin with, while coaching departmental stakeholders in ""gemba"" and related practices that support actual team delivery.          Log in or register to post comments",5899
"10:43 am June 4, 2014                    Thank you Ian for your insights and wisdom.  Yesterday I finally took the test for PSM I passed.  All the best!  Pablo          Log in or register to post comments",5899
"04:20 pm June 10, 2014                    I'm fairly new to Scrum, and i'm still preparing myself to take the PSM 1, but i think i can add something useful to this conversation.  Well, based on what i read the PO is responsible for being the ""Bridge"" that connects the clients and stakeholders to the Development Team and the SM. Thinking like that, your organization is the stakeholder, so it should be the PO's responsability  to convey information and produce/send reports.  Sorry for the late reply, and tell me Pablo; how was your PMI 1 certification? Was it too hard? I'm planning to d it myself next month.  Cheers          Log in or register to post comments",5899
"06:18 am June 11, 2014                    But the scrum master is responsible to teach scrum to the whole organization ;-)  Shouldn't it be useful if the SM provide some useful reports to convince the organization that ""scrum works"" ?          Log in or register to post comments",5899
"10:43 am June 11, 2014                    > Shouldn't it be useful if the SM provide some useful reports to convince  > the organization that ""scrum works"" ?  There can be certain tactical reasons for using reports, such as those which show the elimination of waste, or which capture important actionable metrics.  That aside, I'd be reluctant to demonstrate the utility of an agile method on the basis of reports. It's delivery that counts.          Log in or register to post comments",5899
"06:54 am September 5, 2015                    Hi Ian,  Below is the full question:  The Development Team informs the Scrum Master that the IT manager has asked for a status report during the Sprint. The Scrum Master will:  Bookmark this question  A) Ask the Product Owner to send the manager the report.   B) Create and deliver the report to the manager herself.   C) Tell the Development Team to fit the report into the Sprint Backlog.   D) Tell the Development Team to figure it out themselves.   E) Talk to the IT manager and explain that progress in Scrum comes from inspecting an Increment at the Sprint Review.  To me the correct answer is E, how do you think?          Log in or register to post comments",5899
"08:08 am September 5, 2015                    If an IT manager was to ask for a status report during a Sprint, then E would be the wisest approach.           Log in or register to post comments",5899
"08:52 am September 5, 2015                    Thx Ian.  Hope that you don't mind if I ask another question.  What is the accountability of Product Owner during Sprint 0?  a. Make sure enough Product Backlog items are refined to fill the first 3 sprints.  b. Gathering, eliciting, and analyzing the requirements that will be inserted into the Product Backlog.  c. There is no such thing as Sprint 0.  d. Determine the composition of the Development Team so they have capacity to deliver the completed forecast.  e. Make the complete project plan to commit day, budget, and scope to the stakeholders.  a is something a bit correct to me but I don't like the ""first 3 sprints"".  b to me is a correct answer.  c is incorrect to me since during searching about scrum, I did saw something related to Sprint 0.  d and e is incorrect.  How do you think?          Log in or register to post comments",5899
"01:20 am September 6, 2015                    > c is incorrect to me since during searching  > about scrum, I did saw something related to Sprint 0.   Have you ever seen a ""Sprint 0"" mentioned in the Scrum Guide?  What did the material you read have to say about ""Sprint 0""? Was it a real Sprint which delivered a product increment, and which was timeboxed the same way as other sprints? Did it support inspection and adaptation with Scrum events? Or was it a term applied to setup and initialization work before actual sprinting begins?           Log in or register to post comments",5899
"01:39 am September 6, 2015                    Below is one of the link I've searched:  http://amitsinghmalik.blogspot.com/2013/03/sprint-zero-activities.html  Yes, you're right that Scrum Guide mentioned nothing about Sprint 0.  Correct answer should be C.  So normally, what do we already have before the first sprint?  - A requirement that can be put into Product Backlog?  - Formed team with PO/Scrum Master/Development Team?  - Necessary resource?  With them we can start the first sprint as a normal sprint by a sprint planning, and maybe backlog refinement can be also included in this first meeting too?          Log in or register to post comments",5899
"02:58 am September 6, 2015                    The only essential pre-condition to the first Sprint is a modicum of ability to engage in Sprint Planning. Planning implies that the associated responsibilities of each Scrum role can be satisfied and that there is work to plan. However, these essential matters could potentially be resolved *during* planning, and they do not therefore represent preconditions for entry.          Log in or register to post comments",5899
"03:22 pm September 15, 2015                    In this context, I would try to make everything as transparent as possible (reporting tool) and ask the questions of why they need the report and how they would be using it.          Log in or register to post comments",5899
"09:05 am September 24, 2015                    I think the important distinction here is that SCRUM is a development methodology and not a project management methodology.  Projects include many aspects that are not development and that SCRUM does not and should not address.  As will SDLC, iterative development and other agile methodologies, they only address development, they don't address organizational change management, vendor management, communication management (for the project), risk management (for the project) , etc.  SCRUM can be used in the context of a project or for ongoing development of a system. Projects have defined start and end points.  A scrum team can be in place as long as the system they are developing exists.   I think the SCRUM team should do what it does and a Project or Program manager should handle all external reporting and communication.  The needs of high-level stakeholders will never be served by any radiator that is useful to a SCRUM team. Their needs are high-level and strategic.  They need to know if the project is on budget (budgets still matter), on time , meeting expectations, accomplishing the goals of the project, etc.  No SCRUM radiator contains that information. SCRUM radiators can tell you how development is going, that's it.  They say nothing about how prepared the organization is for the change, whether more time or investment is needed, etc.          Log in or register to post comments",5899
"11:34 am September 24, 2015                    I think this question addresses an important distinction, SCRUM is a development methodology and NOT a project management methodology.  SCRUM can be used on a development project, but it also can be used for ongoing project improvement outside the context of a project.    The SCRUM team should do what it does and should not be saddled with project management or functional management duties.  If central IT needs information, it likely is not anything that an information radiator can provide.  They are likely more interested in project or program level information that should be provided by a project manager, program manager or functional leader.  SCRUM should not try to 'tack-on' additional functions outside of development that would only bloat and complicate an effective, focused and efficient development methodology.            Log in or register to post comments",5899
Log in to reply,5899
Messages,6520
"04:31 am September 21, 2015                             Hi All,  I have made a mind map of the Scrum Guide.  You can access it from my blog: http://www.mansell.nl/2015/09/the-scrum-guide-for-dyslexics.html or directly at http://bit.ly/the_scrum_guide.  I made it to help with learning for PSM I candidates who are dyslexic and others who are more visual and spatial.  Please let me know if you find it helpful or have comments and changes.  The content is simply the Scrum Guide.    License:  CC-BY-SA - This is a derivative work by Dennis Mansell based on The Scrum Guide. No endorsement is made by either Jeff Sutherland, Ken Schwaber, or any of their related commercial entities. The original Scrum Guide is offered for license under the Attribution Share-Alike license of Creative Commons, accessible at http://creativecommons.org/licenses/by-sa/4.0/legalcode and also described in summary form at http://creativecommons.org/licenses/by-sa/4.0/. By utilizing this you acknowledge and agree that you have read and agree to be bound by the terms of the Attribution ShareAlike license of Creative Commons.",6520
"10:12 am September 24, 2015                    Very good thought and work done, Dennis. It is indeed very noble work. Best Wishes!          Log in or register to post comments",6520
Log in to reply,6520
Messages,6522
"03:25 am September 22, 2015                             Hello All,  I am Siddharth Parekh from India and I want to know like what is meaning of this sentence. Please explain in brief.  @ The Scrum Framework implements the cornerstones defined by the agile manifesto:",6522
"06:26 am September 23, 2015                    I see Agile like an iceberg.  The 4 values and 12 principles of the Agile Manifesto are under the sea level.  In order to make the Agile Manifesto tangible and visible, you need some tools, above the sea level.  The Scrum framework is one of these tools that implement the Agile Manifesto.          Log in or register to post comments",6522
Log in to reply,6522
Messages,6524
"05:58 am September 22, 2015                             Hello Fellow Scrummers,  I have a question for you :-)  The Scrum Guide states:   <quote>When a Sprint is cancelled, any completed and “Done” Product Backlog items are reviewed.<unquote>   Question:   Reviewed by whom? The Scrum Team or just the Product Owner?   Cheers,   Mandar K",6524
"11:34 pm September 22, 2015                    What might need to be adapted as a consequence, and who do you think should do the adapting?          Log in or register to post comments",6524
Log in to reply,6524
Messages,6523
"05:31 am September 22, 2015                             Hello Fellow Scrummers,  I would love to hear your thoughts on the followings questions:  1. Why 'Backlog Refinement' is not listed as a 'formal event for inspection and adaptation' in the Scrum Guide?   2. Why 'Sprint' is not listed as a 'formal event for inspection and adaptation' in the Scrum Guide?   As I understand:   1. The primary purpose of the Backlog Refinement is to inspect the items on the Product Backlog and adapt it by refining the PBIs into smaller, clearer items.   2. During a Sprint continuous inspection and adaptation happens as the team works on the Sprint Backlog Items.   Cheers!   Mandar K",6523
"11:24 pm September 22, 2015                    Backlog refinement isn't an event, it is an ongoing activity within each Sprint.  Scrum keeps formalities to a minimum, and most of the collaboration that occurs during a Sprint is expected to be informal. Planning, reviews, retrospectives, and the 15 minute Daily Scrum are the only prescribed formal events. Formality can therefore be seen to be a matter of exception.          Log in or register to post comments",6523
Log in to reply,6523
Messages,6519
"02:37 am September 19, 2015                             Hi All,   Hope you are all well. I am trying to put together a list of general tasks that exist within a software business.   My thinking is to create these tasks under company departments, and then also map these across to a broad SDLC.   I think that all players within the business would benefit from a checklist that they could refer to. We can also use it in workflows as the project progresses from lead to sign off and payment.   Any thoughts around this?   Thanks,   Justin",6519
"05:56 am September 22, 2015                    Sorry, but silly questions or what?          Log in or register to post comments",6519
Log in to reply,6519
Messages,6511
"03:11 pm September 13, 2015                             1.	""Formal opportunity to inspect and adapt"".  As per scrum guide “Scrum prescribes four formal events for inspection and adaptation, as described in the Scrum Events section of this document”  •	Sprint Planning   •	Daily Scrum   •	Sprint Review   •	Sprint Retrospective   Scrum Guide also states: “Although improvements may be implemented at any time, the Sprint Retrospective provides a formal opportunity to focus on inspection and adaptation.”  Why scrum guide again says “Sprint Retrospective provides a formal opportunity to focus on inspection and adaptation.”  ? The same should hold true for other 3 events.   2.	Can the development team composition can change during a Sprint?   As per Scrum Guide: During Sprint  •	No changes are made that would endanger the Sprint Goal;   •	Quality goals do not decrease; and,   •	Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned.   Hence it’s allowed although it will affect the productivity or it will come under ""endanger the Sprint Goal"" category? I am not sure here.  3.	“The Product Owner may be present during the second part of the Sprint Planning Meeting to clarify the selected Product Backlog items and to help make trade-offs”  I came across above line while taking some online assessments.    As per Scrum Guide:  Scrum Guide:  By the end of the Sprint Planning, the Development Team should be able to explain to the Product Owner and Scrum Master how it intends to work as a self-organizing team to accomplish the Sprint Goal and create the anticipated Increment.  So my understanding is the PO should be present throughout the Sprint planning.  Please correct me.  4.	“How the work is planned at the sprint Review?”   My understanding from the scrum guide is:  Enough work is planned for the entire Sprint by PO and DT. But DT decomposes the planned Sprint work only for first day or less.   Work is planned by both DT and PO or DT only?",6511
"06:08 am September 14, 2015                    1. Every Scrum events is an opportunity to inspect and adapt but they usually focus on different things:  The Daily Scrum focus on work since last Daily Scrum (inspect) and plan for the next one (adapt)  The Sprint Planning focus on backlog (inspect) and work to be done in the Sprint (adapt)  The Sprint Review focus on Increment done in the Sprint (inspect) and adapting backlog (adapt)  The Sprint Retrospective focus on how the Scrum process went in the last Sprint (inspect) and plan improvements of the Scrum process (adapt)  2. Scrum Teams are self-organizing. They can choose to change team composition, but they should avoid changing composition of the team during a Sprint, because there will be a loss of productivity AND this could endanger the Sprint Goal.  3. PO need to be present at the Sprint Planning Meeting since its start. During Sprint Planning, the PO should discuss the objective of the Sprint and the related backlog items to be done to reach the Goal. After this, the DT decide and explain how they will do the job. The PO and DT may negotiate the selected backlog items to be done. So PO should be at Sprint Planning Meeting from start to the end.  4. Planning work is the scope of the Sprint Planning and not the Sprint Review. In Sprint Planning, the backlog items to be 'done' and the Sprint Goal are 'fixed'. The work (decomposition of the backlog item) usually is not planned for all the Sprint but just for the first few days. The DT continue creating work from already selected backlog items, during the Sprint and usually is the sole responsible to plan its own work.          Log in or register to post comments",6511
"11:29 am September 14, 2015                    Thank you for your answers.          Log in or register to post comments",6511
"02:41 pm September 15, 2015                    Hi I am new to scrum. I have already posted below question on a different thread. But yet to get an answer. Please clarify below scenario.   I came across few question like (All the questions will be based on PO responsibility and the key to answer was PO can delegate the work to development team.)  1. Who is responsible for managing product back log to show what the scrum team will work next?   2. Who is responsible to clearly expressing Product backlog items?   My answers were: Product Owner   Correct Answer: 1. Product Owner, 2. Development team.   I understand PO can delegate his responsibility to Development team. But PO remains accountable.           Log in or register to post comments",6511
"02:08 am September 16, 2015                    This is pretty clear in the Scrum Guide: ""The Product Owner is the sole person responsible for managing the Product Backlog. Product Backlog management includes: Clearly expressing Product Backlog items.""  Where did you find the ""correct"" answer that says the Development Team is responsible for clearly expressing Product Backlog items?  The Product Owner can delegate, but he or she remains responsible and has the final say.  The Prime Minister can delegate creating a legislation to his staff, but once it comes back to him, he still needs to approve it. Or send it back to the drawing board with his corrections. And when he stands before the cameras to present it, he will be held responsible for it, not his staff that he delegated to.          Log in or register to post comments",6511
"09:28 am September 16, 2015                    I agree with Chris. PO is the sole responsible for Product Backlog.  Regarding the backlog, the DT is responsible for estimates but expressing backlog items clearly is a PO responsibility. And although as a PO you can delegate some task, responsibility cannot be delegated - for the same reason PO have to be a specific person and not - for example - a committee.          Log in or register to post comments",6511
"01:56 am September 21, 2015                    Cleared my PSM1 on 17th Sept. Thanks to scrum org. I was able to do it without much background on scrum. It’s a great place to learn scrum.   Special thanks to Prem Krishna Natarajan, Ching-Pei Li, Chris Kulbacki, Amodiovalerio Verde, Ludwig Harsch and Ian Mitchell for helping me and clarifying my doubts.           Log in or register to post comments",6511
"01:42 pm September 21, 2015                    Congrats Soumya.   Best Wishes & Good luck on your future endeavors.           Log in or register to post comments",6511
Log in to reply,6511
Messages,6518
"08:51 pm September 18, 2015                             A Consultation is a process of answering questions to make money.  A Certification is a process of paying money to answering questions.  :)",6518
"01:13 am September 20, 2015                    Nice! I like that! Similarly, when I was a kid, my dad you used to say ""An Employee works to get paid, a volunteer works for no pay, and a scouter [i.e. boy scout leader] pays to work.""          Log in or register to post comments",6518
Log in to reply,6518
Messages,6352
"01:42 pm May 5, 2015                             Having practiced Lean and Agile for some years, I needed a tool to help me manage meeting cadence when coaching and leading Scrum teams.  I am a big visuals guy, coming from my days with Toyota, and extolling the virtues of Kanban and other visual techniques.  I'm also a huge proponent of KISS.  aka Simple is best.  After playing with some ideas I came up with this.    Rather than try and explain it, I've dropped the PDF files that show how this works at the following link.  Don't seem to be able to upload anything here.  https://www.dropbox.com/sh/ut0oi9rk1c3e5u9/AACqu1oeUEowMAqt-PUsPILEa?dl…  I hope others find this helpful, and I welcome any comments.  Why do we even need this I hear some folks already saying, well because teams are not great at sticking to meetings, and I find this is a great visual prompt stuck in the same area as your task board, burn down chart, or other artifacts.  I print it 11x17 (A3) and then laminate it to make it long lasting, and to allow the use of dry erase markers.  This layout is of course for a 2 week/10 day Sprint.  Easy to modify for other durations, but I'd warrant it'd get messy on 30 day Sprints, which is probably why the favored duration is 1 to 2 weeks :)",6352
"01:09 am September 20, 2015                    I'm a big fan of information radiators. This is not a bad idea... I think some teams may find this useful. Most of my teams use their company email/calendar to keep the meetings on.  But, again, additional information out and visible is always a good thing.  I definitely like the posting of the Sprint Goal and the Definition of Done.          Log in or register to post comments",6352
Log in to reply,6352
Messages,6513
"04:39 am September 14, 2015                             Hi everybody,  In the Product Backlog we have seven user stories about webservices. Each story is for one webservice and each one has a different business value. They are also independant. We have estimate each one to five story points but we know that the first one will be more difficult to do.  What is the best answer :  1.We keep these estimations.   => We will probably do two stories in the next sprint (velocity = 10) and five in the other (velocity = 25). The velocity of 25 will be wrong.  2.The product owner chooses the first story so that we can decrease the others estimations.  => The Product Owner can't change the priorities and we have insert a dependance between stories but the velocity remains normal.  3.During the Sprint Planning we change the estimations like in the first solution but at this moment we know the content of the Sprint Backlog.  => Seem the best idea.  4.I'm open to more solutions !  Thanks for your help and your time.",6513
"10:39 pm September 15, 2015                    Hi Anthony,  I'm a little confused.  Posted By Anthony Sargento on 14 Sep 2015 04:39 AM  They are also independent. We have estimate each one to five story points but we know that the first one will be more difficult to do.   Posted By Anthony Sargento on 14 Sep 2015 04:39 AM  The Product Owner can't change the priorities and we have insert a dependence between stories but the velocity remains normal.   To discuss a solution, I prefer to discuss the problem first. the first one will be more difficult to do. Do you mean anyone story implemented first will take more effort than the others implemented later?  If you think your user stories are good stories, Ian have gave you a good answer ""It doesn't strictly matter, because you are delivering value and not story points."" in another topic you posted.  In many real cases, the stories selected for the first sprint must be independent when the DT counts velocity. Consider all work during the Sprint is on the user interface, or most of work during the Sprint is on knowledge acquiring, we would not want to extrapolate the velocity of that Sprint onto all remaining Sprint.  On the chance that you’d like to review your User Stories, let’s say the size of the first story is X and the size of the others is Y for each.  1st Sprint: X+Y  2nd Sprint: 5Y   X+Y = 5Y  X = 4Y  It does not make sense to set the size of each stories as the same.   I recommend to refine your Product Backlog items.  Not only User Stories, the Product Backlog lists all features, functions, requirements, enhancements, and fixes, etc.  You have not said the reason why the first one is more difficult, but the DT estimate each one to five story points.  So I guess the 7 Items have similar size but the DT need more time to implement the one selected first.  To the extent the first story will deliver some customer value or will involve the architecture implementation that may be used by the other Stories, I recommend conducting a cross-cutting design and add an independent Story for these work.  To the extent the DT are not familiar to Web services development, you may choose to add an independent PBI like this:  Investigate web services development.   Then, your will have 8 PBIs.  For example, the new item may be estimated as 6 points.  The 7 PBIs may be estimated as 2 points for each.  The velocity for each Sprint is 10.  Just for your reference.           Log in or register to post comments",6513
"07:34 am September 17, 2015                    Hi,  The first story is more difficult because it's the first and the team doesn't know the difficulties about adding a webservice in the project. I agree with you that adding a story to investigate is a good idea to estimate the others.  I don't like having seven stories in the backlog dependant of the investigation because you can't do both in the same sprint. Imagine after the investigation you learn that it's very difficult to add a web service you will have to remove some stories of the current sprint.  This question is just the easy one of the project. The real problem is that our client want to set a price on a story point and he is giving too much attention to the velocity. I know goal of the velocity is to help the team to estimate the work to do but he is using it to track the team productivity and pay in consequence.  Do you have some suggestions on how to manage the cost of a scrum project with commitments ?  Thanks for your answer.  PS: the other post is a duplicate of this one sorry !           Log in or register to post comments",6513
"11:31 am September 17, 2015                     I don't like having seven stories in the backlog dependant of the investigation because you can't do both in the same sprint.   Spikes are very normal part of software development in general as nobody can possibly keep up with or know about all technologies.  A time-boxed spike is a good practice to be integrated to the Sprint.  That means you can limit the time of knowledge acquiring and reserve enough time for functionalities development.  the team doesn't know the difficulties about adding a webservice in the project.  So, without conducting a Spike, what does the estimataion of 5 points means?  In the fact, there are chances the DT will increase the estimated size after the Spike.  It indeed makes sense.  Do you have some suggestions on how to manage the cost of a scrum project with commitments ?   Estimating is ""forecast"", not ""commit"".   For a contracted project, you can use ""VALUE"" delivered to trace the progressn and set the price.  In addition to story points, I always add set a VALUE to each User Stories.  value = knowledge value + customer value  For example, the knowledge value for the spike is 100, and the value of a web service is 50.  The output of the Sprint one is 100 + 50*2  The outcome of the Sprint  one is 50*2 (for customer)  The outcome of the Sprint two is 50*5   For the Scrum team, the cost to create 450(100+50*7) points of VALUE is  20 points (6 + 2*7).  The value delivered to the customer is 350(50*7)  I'm not a well-trained Scrum practitioner, but have ground experiences.  Just for your reference.            Log in or register to post comments",6513
"01:46 pm September 17, 2015                    > The real problem is that our client want to set  > a price on a story point and he is giving too  > much attention to the velocity. I know goal of  > the velocity is to help the team to estimate  > the work to do but he is using it to track the  > team productivity and pay in consequence.   Well, the team could just increase their story points and pocket a tidy sum. And if that still isn't enough to satisfy his demand, I can supply your client with as many points as he wants at a dollar each, with my compliments.  Seriously though, you are right to identify this as the problem. It's therefore important to get to the cause:  - Why is the client so concerned about points as opposed to the delivery of actual value?  - Is your client really the end customer? Or is this person a middle-man who is demonstrating poor product ownership on behalf of other stakeholders?  - If value is so hard to determine empirically that story points end up proxying for it, why is this product or service being delivered at all?          Log in or register to post comments",6513
"03:13 pm September 17, 2015                    The product is for a big company and it's the process for all scrum project with this company :  1. They search a scrum team from another company to build the product.  2. They ask the cost of one sprint.  3. We run three sprints.  4. With the velocity and the cost of the team they calculate the cost of one point.  After that they pay only for completed stories.  It's really strange and it's for that I want to talk about how to sell a scrum project but based on commitments.  With their process and with a first estimation of all stories they have an estimation of the cost of the project. After that if the velocity slow down they don't really care. The project will finish late but they don't loose money.  Complicated situation...          Log in or register to post comments",6513
"09:48 pm September 17, 2015                    Could I conclude your problems as follows?  1. The story point is misused as the business day or man-hour to calculate the cost.  2. Your team does not have deep understanding or knowledge about the technology and problem domain of the product.   3. There are competitors so that you'd not like your customer know your technical issues.   With their process and with a first estimation of all stories they have an estimation of the cost of the project.    After that if the velocity slow down they don't really care.  Fortunately, this is a project of fixed scope, fixed budget(from the customer point of view), and flexible date.           Log in or register to post comments",6513
"03:27 am September 18, 2015                    Exactly !          Log in or register to post comments",6513
"05:02 am September 18, 2015                    If you'd not like to use the term of ""Spike"" or ""knowledge acquiring"", you may regard it as a work of architecure design and implementatiion.  For example:  Sprint 1:  Shared architecure disign and implementation. -> 6 points  Web services 1 -> 3 points  Sprint 2:  Web services 2 -> 3 points  Web services 3 -> 3 points  Web services 4 -> 3 points  Sprint 3:  Web services 5 -> 3 points  Web services 6 -> 3 points  Web services 7 -> 3 points  Though most of the work during Sprint one is a knowledge acquiring, these is at least one web service to be delivered.  Just for your reference.          Log in or register to post comments",6513
"02:46 pm September 18, 2015                    > It's really strange and it's for that I want to  > talk about how to sell a scrum project but  > based on commitments.   A Scrum Team may reasonably commit to a Sprint Goal. Note that it wouldn't commit to a Sprint Backlog, as that is just a forecast of the work needed to meet the Goal. Nor would a team commit to delivering story points as those are merely tokens to help the team make the forecast.  A more sensible approach would be to continue funding the team per sprint. As long as Sprint Goals are met then funding may continue until sufficient value has been delivered. If they aren't being met then the client has the option to cancel any future iterations. If the Sprint Goals aren't valuable enough to allow such a system to be applied then there is a deeper problem to be remedied.          Log in or register to post comments",6513
"07:46 pm September 18, 2015                     Posted By Ian Mitchell on 18 Sep 2015 02:46 PM   A Scrum Team may reasonably commit to a Sprint Goal. Note that it wouldn't commit to a Sprint Backlog, as that is just a forecast of the work needed to meet the Goal. Nor would a team commit to delivering story points as those are merely tokens to help the team make the forecast.    A more sensible approach would be to continue funding the team per sprint. As long as Sprint Goals are met then funding may continue until sufficient value has been delivered.   For a Scrum Project, I 100% agree with Ian's expert point of view.  Sometimes, it does not workable for a contracted project.  A contracted project is usually fixed-scope, fixed-budget, fixed date.  Fortunately , the release date is flexible.  This is not a Scrum project, but a ScrumNot.  From the business point of view, you must commit the scope and budget for you client.  But for yourself, the Scrum Team,  I 100% agree with Ian's expert point of view.  That means the budget should be flexible.  While the gap between the fixed budget and the flexible one is your business risk.  The problem may be narrowed to how to add the risk factor to each Sprint cost.  This is your BUSINESS[/B]           Log in or register to post comments",6513
"01:48 am September 19, 2015                    When scope is fixed the rationale for adopting an agile approach is weakened. The product can no longer be inspected and adapted.  It may be better to see this as a waterfall project and to plan and budget for it accordingly. If risk is low (i.e. the scope is unlikely to come under change pressure) then this may be the most rational approach. Any scope/budget changes that *might* arise, and which cannot be absorbed by flexing schedule or quality, would thus be handled in the classic waterfall way...i.e. by the change request mechanism.  Incremental delivery can still be supported, but each time-box would be a stage-gate to completion and not a Sprint. Scrum terms, which imply empiricism, should really be avoided.          Log in or register to post comments",6513
Log in to reply,6513
Messages,6486
"12:18 am August 26, 2015                             What does a Qualified Scrum Master mean?  What does a Certified Scrum Master mean?  A Certified Scrum Master is certainly a Qualified Scrum Master?  A Non-certified Scrum Master is inevitable to be a Non-qualified Scrum Master?  What do you think about the different between a Qualified Scrum Master and a Certified Scrum Master?  When you deliver coaching service to your customers, to be a Certified Scrum Master or to be a Qualified Scrum Master, which one will you teach the attendants?  Yes, it’s a broad question and any input will be greatly appreciated.",6486
"03:36 am August 27, 2015                    I go for the qualified.   You don't have to be certified to be qualified.  You don't even have to be qualified to be certified - the assessment can check knowledge but not communication skills.  So for me what counts is not a badge, and not a number of years you have been a mediocre Scrum Master.  It is the success you had helping teams to improve and the lessons you learned from failure.          Log in or register to post comments",6486
"05:03 pm September 15, 2015                    Seems like there should be a successful project showcase for Scrum teams.  Developers can showcase their Git profiles  Product Owners and Scrum Masters are left with LinkedIn having team members provide feedback for their work on the project.          Log in or register to post comments",6486
"12:52 pm September 17, 2015                    A little late to the thread, but allow me to share some thoughts.....   I just wrapped up a Coaching engagement with a company introducing Scrum. When Coaching Executives, it was important for me to educate or mentor where needed as well as facilitate or simply listen as required.   A few people asked for guidance on continued education and certifications, whereas others simply wanted to understand the depths of Scrum.   I would work toward identifying and shaping a robust or qualified Scrum Master where possible. Having worked with a Scrum Master years ago who wasn't certified, I still respect and admire the skills she had. She didn't need to be certified,  but still chose to get formal training at a later stage.   Certifications will certainly supplement and reinforce certain concepts. The journey can be enjoyable as well.          Log in or register to post comments",6486
"09:28 am September 18, 2015                    A certified Scrum Master will ensure you have the theoretical knowledge.  A qualified Scrum Master will ensure you have experience.  There is no direct correlation between the two. A person could be un-certified and un-qualified but still super agile servant SM in his/her personality and make a terrific job.  And vice versa.   I think a great SM must have ""it"". This means the overall belief that every person has value and have a desire to accomplish and develop. A humility attitude and no need of shine and compete. A good SM  should be self confident to stand up and drive, etc.  This is something deep into a persons personality and despite of how certified or qualified some one will be, it will never make up for a great SM.          Log in or register to post comments",6486
"08:43 pm September 18, 2015                     Posted By Nitin Khanna on 17 Sep 2015 12:52 PM    Certifications will certainly supplement and reinforce certain concepts. The journey can be enjoyable as well.  Agree!  Certifications are also valuable learning paths.  I always use Certifications to justify my knowledge from my own experiences.  It could shorten the gap between the ground experiences and well trained knowledge.           Log in or register to post comments",6486
Log in to reply,6486
Messages,6516
"01:18 pm September 15, 2015                             Thanks to ALL,   Cleared PSM I assesment yesterday night with 90% marks. Indeed it was challanging exams and by extensive preparation made it. I would like to take this opportunity to thank all who had posted valuable suggestion on the steps for clearing the exams.   For the benefit of others who are going to take the exams, the following was my approach.   1. Read Scrum Guide 10 time plus ( marked important points )   2. Practiced PSM 1 assessment atleast 20 times. ( last 10 attempts got 100%)  3. Practiced Scrum Open Practisoner assessment  atleast 15 times. This is where the real challenge was . In the initial 7 attempts, was securing 50%. then practiced rigorously and made 98% in the last 5 attempts.   4. Referred al the older posts regarding the Open Practitioner Test and researched answers for tough questions.   5. Practiced mplaza question bank. Was indeed useful.   6. Reg books, Read Essential Scrum by Kenneth Rubin and Scrum by Jeff Sutherland.   7. Read online articles  on Scrum, PO, SM, Dev Team   Reg my exam experience , its was a very challenging one. I would not say EASY. Nearly 50 to 60% of questions was very new ands never came across in my preparation or in open assessment or in mock exams. Had use my conceptual understanding to crack. Remaining was based on question which was similar to the available to the resources we have.  To conclude, preparation is very vital ( 85% is the pass mark) and if you are strong in concepts you can clear. Once you clear, you get that satisfaction. I personally  got immense satisfaction on clearing this excellent exam.   Now, I am planning to take  up my PSPO in next 10 days.   Thanks   Prem Krishna N",6516
"01:27 pm September 15, 2015                    A small clarification , in the above ""Practiced PSM I assessment "" I was referring to the Scrum Open assessment "" tests available in this website.          Log in or register to post comments",6516
"03:12 pm September 15, 2015                    Congrats,   I did something similar and also attended a scrum.org professional conference to ask questions and learn from the more experienced Scrum Masters.          Log in or register to post comments",6516
"11:30 pm September 15, 2015                    Thanks Ryan for your wishes and the note on your preparation.   Regards  Prem Krishna N          Log in or register to post comments",6516
"10:43 am September 18, 2015                    Congrats Prem.          Log in or register to post comments",6516
"03:14 pm September 18, 2015                    Thanks Kapil for your wishes.          Log in or register to post comments",6516
Log in to reply,6516
Messages,6515
"12:39 pm September 15, 2015                             Hello, new to product owner role here.   I am coming into an existing team where the UXD person is taking the major responsibility for gathering user requirements and feedback. She also doesn't seem to have a great relationship with the users.   I would like to start taking over the majority of the user contact with her sitting in on meetings as needed. Am I right that this be part of my role as product owner?  I appreciate any thoughts. Thanks!",6515
"10:37 am September 17, 2015                    Dear Megan  It indeed is part of the POs responsibility to understand the users' (among other stakeholders') needs and wishes.  Further it is the POs responsibility to turn these needs and wishes into BIs (might get help from others here) and to prioritize them.  If other team members can attend specification meetings with the users, this can foster the understanding of what is requested and helps a lot in my opinion.  Best would be, to even have users attending the Sprint Review, so they can give their feedback directly to the entire team.  Hope this helps  Sebastian           Log in or register to post comments",6515
"10:18 am September 18, 2015                    I put great emphasis on close co-operation between the developers and the users. This is highly appreciated by both users and team. People may need to learn this way of working because they may not be used to this. The scrum master can help to create this attitude. As a product owner you must make sure the increments represent the minimal viable product (by saying no very often!) and you muts watch carefully the business value of the user stories. It's easy, at least in theory.          Log in or register to post comments",6515
Log in to reply,6515
Messages,6502
"12:29 am September 4, 2015                             Hello,  I have been working for several years as a Team Member of several Scrum Teams. Now I want to go on and become an Scrum Master.   But one point is not clear to me. In several companys they told me that a Scrum Master should have only one or at least 2 Teams, he is responsible for.  I think I know pretty good the tasks of an Scrum master and so I'm not sure what a Scrum Master would do on a normal day for 8 hours in his job.  Of course, he has the daily standup and maybe some work after it to resolve some problems. Hey maybe also thinks a bit how he can improve the Team. But this doesn't take 8 hours.  So you may can tell me, from your experience what a Scrum master would do for 8 hours.",6502
"02:38 pm September 4, 2015                    Hi  Stefan,   Allow me to ask a question prior to sharing some thoughts....   What are the 3 Entities that the Scrum Master serves?  Also note that some responses here will be based on one's experience with different corporate cultures, size and initiative, etc.          Log in or register to post comments",6502
"10:51 am September 6, 2015                    Hi Nitin,  3 Main tasks of a scrum master  1: invite and moderate the scrum meeting (takes from 15 min per day to a complete day)  2: solve any task related impediments the team has and I can solve (0 to x hour per day)  3: ""protect"" the team from the product owner and any other stuff that could disturb their focus to the actual tasks  Of course I know that the role of an scrum master will be very different from company to company. It still would be very interesting  for me to hear what other scrum masters do all day long.  thanks Stefan          Log in or register to post comments",6502
"11:12 am September 6, 2015                    To me, Scrum Master has three roles:  1. To service to the Product Owner.  2. To service to the Development Team.  3. To service to the organization.  I think what you said above is just focusing on Development Team.  Besides, when serving to the Development Team, except what's you specified, he/she also need to:  - Coaching the Team in self-organization and cross-functionality, which always has room to improve.  - Helping the team to create high-value products.  - Coaching the team in organizational environments in which Scrum is not yet fully adopted and understood.  So there should be a lot of thing need to be done.          Log in or register to post comments",6502
"04:11 am September 8, 2015                    Hi,  a great compilation:  http://agiletrail.com/2011/11/14/42-tasks-for-a-scrum-masters-job/  :)          Log in or register to post comments",6502
"04:18 pm September 13, 2015                    Depending on the maturity in Agile in your context, how much time could it take to serve each of the 3 entities ?  PS : if you read carefully the Scrum Guide, you will notice that the presence of the Scrum Master is not required for the Daily Scrum.          Log in or register to post comments",6502
"03:17 pm September 15, 2015                    I have read across many authoritative agile websites as well from Agile coaches that a SM should only be working on 1 scrum team.    If you think in context of servant leadership, a SM as the role is defined in the Scrum Guides has a lot of responsibility that fills the 8 hours workday.  Again, using the Scrum Guide is only part of what an organization could tack on as the SM's role and responsibility.          Log in or register to post comments",6502
"01:02 pm September 17, 2015                    I'm paraphrasing this from a kind Trainer who allowed me to take his class. He summarized it quite well --   + Ask powerful questions  + Facilitate  + Educate  + Interrupt  + Actively do nothing!          Log in or register to post comments",6502
Log in to reply,6502
Messages,6507
"11:58 am September 10, 2015                             Hi,  I've a questions regarding the application of definition Done to product / Sprint Backlog items. When and where is definition Done first applied? Is this during the end of the Sprint Planning in the Sprint Backlog and/or Daily Scrum?  Thanks and Regards,",6507
"07:25 pm September 11, 2015                    DoD is a shared understanding of what is a potentially releasable, useable, complete Increment.  It provides a transparency to the Scrum team.  Before the Sprint Planning, the Scrum Team has the shared understanding of the DoD.  During the Sprint Planning, the DT bases on the DoD to forecast how many PBIs it will complete in the upcoming Sprint.  During the Sprint Execution, the DoD guides the DT how to convert the PBIs to a potentially releasable, useable, done Increment.  During the Sprint Review, the DoD is the shared understanding to justify if the PBIs selected are done.  During the Sprint Retrospective, the Scrum Team may improve the DoD to approach a higher quality.           Log in or register to post comments",6507
"01:01 am September 12, 2015                    > When and where is definition Done first  > applied? Is this during the end of the Sprint  > Planning in the Sprint Backlog and/or Daily Scrum?   In any given Sprint, the DoD is first applied during Sprint Planning. It helps the Development Team understand the work that will be required to make the increment release-ready, and to plan that work accordingly.  However the DoD may be referenced before that Sprint, during Product Backlog refinement in earlier sprints. The DoD helps the team to understand the work involved in making Product Backlog Items of release quality, and to provide each item with an appropriate estimate.          Log in or register to post comments",6507
"06:51 am September 16, 2015                    Thank you for your feedback!           Log in or register to post comments",6507
Log in to reply,6507
Messages,6514
"06:25 am September 15, 2015                             Hi All, apologies if this has been discussed before, but I would appreciate any advice and thoughts on the following area: .......  We have developed a prototype application based on workshops with our users and their close collaboration. The workshop resulted an a sprint of stories that we completed and delivered to time meeting all of our acceptance criteria. However when we conducted some usability tests with the they identified some changes that were necessary to make the solution operate as needed.   In this circumstance, would these changes be new stories, or should the current stories fail and be revised for these additional and amended needs? If they fail, do they need to be carried over into the next sprint as a priority? We delivered a working shippable prototype so in one respect we can successfully leave the sprint and in another is was not quite right.  What is best practice for this area, what do your teams do in this circumstance please?  Thank you for any insights you can provide.",6514
"03:13 pm September 15, 2015                    > In this circumstance, would these changes be  > new stories, or should the current stories fail  > and be revised for these additional and amended needs?  A user story is a placeholder for a conversation. Those conversations will presumably have happened in order to develop the prototype. Now that the prototype has been delivered those conversations are in the past, and the relevant stories should be retired.  In light of the experience gained with the prototype, new conversations ought to happen through which improvements can be made. Those should be represented as new stories with new estimates for the associated work. The stories may reference previous retired ones if it helps to clarify context.          Log in or register to post comments",6514
"05:10 am September 16, 2015                    Many thanks Ian, your reply makes a lot of sound sense and I think it would definitely be the best way forward for my teams circumstances.  Thanks again, John          Log in or register to post comments",6514
Log in to reply,6514
Messages,6451
"12:32 am July 24, 2015                             Can a single Product Backlog item when converted to sprint backlog items span over multiple sprints ? In other words, can a single pbi be done in multiple sprints  Regards  Raja",6451
"06:36 pm July 24, 2015                    No.  Absolutely, the Item will not be ""Done"" in the end of the sprint.  A big story, epic,  must be decomposed to small story.          Log in or register to post comments",6451
"05:44 am July 29, 2015                    No. Use the INVEST model to break down stories to a more granular level.  PBIs should be of small enough size such that they can be Done according to the DoD within the sprint timebox.    For most teams PBIs fall in the range of 1-8 in size which tend to be more refined.  Stories bigger than that tend to carry a higher level of ambiguity, complexity and risk and more likely that they won’t be Done within the sprint timebox.    Collectively all user stories should sum up to match the team velocity and the relevant team capacity – this will be the sprint goal.  I also recommend adding a stretch goal as a challenge for the team if the team has the capacity.  Jitesh          Log in or register to post comments",6451
"07:54 am July 29, 2015                    > Can a single Product Backlog item when converted to sprint  > backlog items span over multiple sprints ? In other words, can  > a single pbi be done in multiple sprints   A team should plan to complete each selected item, in full, to the standard of the Definition of Done.  If by the end of the Sprint any item remains undone, the outstanding work should be re-estimated and made visible on the Product Backlog. It can then be prioritized, refined, and planned into a future Sprint for completion. Note that incomplete items do not automatically roll over into the next...this is a planning decision.  > I also recommend adding a stretch goal as a challenge for the team  > if the team has the capacity.   I don't generally approve of stretch goals. They can imply that if they are not achieved, then the team has not bothered to stretch itself. Nor are they a timely way to make use of capacity, should any become available.  It's best for a team just to make the most realistic forecast it can, and to reflect that in the Sprint Goal and the Sprint Backlog. If any free capacity becomes available once the Goal has been met, then the team can decide what to do at that point, using the most current information. They may decide the best thing to do is to plan new work into the current Sprint, or they may decide it is wiser to do something else entirely.          Log in or register to post comments",6451
"08:27 am July 29, 2015                    I agree with Ian.  Team members must work at a sustainable oace.  My experiences, within a given sprint, eventhough there seemed be any free capacity becomes available, we would see intensity increase a little bit near the end of the sprint.  It's best to for the team to make decision by themself.          Log in or register to post comments",6451
"08:52 am July 29, 2015                    Thanks for your insight Ian, I understand your point of view, and generally this approach  works well with many teams until they reach a plateau and need a little nudge.  > They can imply that if they are not achieved, then the team has not bothered to stretch itself.    Teams should be stretching themselves and this is a way to highlight just that - why hide it?  Some teams I have worked with became comfortable and laid back at ~52 points per sprint. I used stretch goals to instill a different mentality in the team - the stretch goal is visible on the board below the sprint backlog in a different section and used it to drive additional continuous improvement tasks during retrospectives to streamline processes, working agreements and techniques  even further - ""How could we have reached the stretch Goal?"" - this began to drive a different way of thinking.  I certainly have that mentality - ""how could I have done more and better? How can I improve?"" - certain teams need that slight nudge to get them going again.  Jitesh           Log in or register to post comments",6451
"09:01 am July 29, 2015                    Hi Ching-Pei  > intensity increase a little bit near the end of the sprint  This is undesirable team behavior and should be tackled as much as possible during a retro with supporting metrics.    > It's best to for the team to make decision by themself  The team decides if it has capacity to pick up the stretch goal, absolutely.  Jitesh           Log in or register to post comments",6451
"11:53 am July 29, 2015                    > Teams should be stretching themselves and this is a way to highlight just that - why hide it?  There's no such thing as a stretch goal in Scrum, and no expectation that teams should stretch themselves at all. The expectation is that teams should be able to forecast the best possible increment of value that is fit for purpose, and then that they deliver that increment. There's also an expectation that they should be able to replan in a timely manner should capacity be available once the agreed Sprint Goal is met, and then inspect and adapt their method of forecast accordingly.  Trying to identify in advance how unplanned work should be progressed is neither timely, nor is it a good means of providing an optimal forecast.           Log in or register to post comments",6451
"08:43 am July 30, 2015                    I agree Ian there is no such thing as a stretch goal in SCRUM however it doesn’t stipulate that teams can't have one either.    SCRUM is a framework within which teams can employ various processes and techniques to maximise value.  This is true as long these processes and techniques don’t drive certain dysfunctions - this goes for all processes and techniques developed within SCRUM.    Enforcing or predicting how certain techniques, processes or methods are going to work/should work within SCRUM holds teams back from experimenting which is a dysfunction in itself.  There is no right or wrong answer, the SCRUM framework enables teams to experiment with whatever process or technique they wish to inspect and adapt within it, and this includes any estimation and forecasting methods.           Log in or register to post comments",6451
"10:00 pm July 30, 2015                    > This is true as long these processes and  > techniques don’t drive certain dysfunctions  That's just the point...stretch goals are likely to drive certain dysfunctions. These include anticipating what unplanned work a team will do if future capacity is available. That encourages waste, because it isn't a timely decision. Also, it shifts the team's focus away from the Sprint Goal and from giving the best possible forecast for that work alone.  I therefore don't generally recommend their inclusion, as the integrity of a Scrum implementation can too easily become compromised.          Log in or register to post comments",6451
Log in to reply,6451
Messages,6412
"10:33 am June 30, 2015                             Hi,  I wonder if anyone here has any previous experience with SAFe?  There is an ongoing disussion about SAFe at our manging level and I am trying to comprehend all the different parts of SAFe, but I am not there yet where I can say I have a good overview over the SAFe landscape....  In SAFe the innovation and Planning Sprint is the end sprint and where the big realease planning event take place. But what should be included inside the innovation and planning sprint? When you look around online sometimes it is  described as a ""backup"" sprint where things get done you did not have time for in the regular sprints, while other sites say big NO, NO to this, it should instead be used for planning, inovation, education and so on....  And if it only should be used to planning, inovation, education, what about review and retrospective? is this something you should do at the end of a innovation and Planning Sprint (as you would in a normal sprint)?    Is there anyone here who had worked with SAFe for a longer period of times, what was positve/negative with this way of working?  Thanks in advance  M.G",6412
"12:13 pm June 30, 2015                    What do your company managers think about having an ""end sprint"" where ""the big realease planning event take place""?  Do they have an appetite for a more agile approach to release management, whereby fully integrated and tested increments can be released every Sprint on demand?           Log in or register to post comments",6412
"07:34 pm June 30, 2015                    SAFe is waterfall/RUP in Agile clothing.  Also extremely heavy weight.  See these links instead:  http://www.scrumcrazy.com/safe  http://www.scrumcrazy.com/scaling  Also, Scrum.org has a scaling class.  See more here:    https://www.scrum.org/Courses/Scaled-Professional-Scrum           Log in or register to post comments",6412
"06:19 am July 1, 2015                    Well the management seems to like the idea of SAFe, I am just trying to understand it and read as much as I can about it and try to get answers to my questions  I will soon take a look at the links posted  Anyone who knows what to do with retrospective and review in a innovation and planning sprint?          Log in or register to post comments",6412
"02:22 am July 2, 2015                    Regardless of the name used to label a Sprint, work must be planned and a potentially releasable increment crafted that meets an agreed Goal. The Review should assess work that was completed or not completed, and the Retrospective should consider how the team process can be improved.  If these things cannot be done, or if any of them are considered to be irrelevant, then a Sprint can't be said to have happened at all...and calling it one even with a qualifying label would be a misnomer.          Log in or register to post comments",6412
"07:26 am July 2, 2015                    Well I do not feel like I have enough knowledge about SAFe to say that it is a bad or good ""thing"". I am still processing information ;) Regarding the links...  The things I have read about the innovation and Planning sprint raise more questions and frankly I do not know where to turn to get answers. I have not yet found s SAFe forum where I can ask my questions, the people I know that are interested in SAFe (including management) are also at the beginning at their SAFe journey and does not have the answers either.  Well I would like to have retrospective and review after an Innovation and Planning Sprint, but is this the SAFe way of doing things and if not, why?  But is there anyone here that have used SAFe and how did you go about this type of sprint?   Thanks for your replies so far and I want more replies :)          Log in or register to post comments",6412
"08:32 am July 2, 2015                    In Scrum terms, a SAFe ""innovation & planning sprint"" isn't a Sprint at all. It doesn't meet the intent and purpose of a Scrum Sprint which I outlined earlier. It is a confection found in another framework (SAFe) which, confusingly, uses certain terms from Scrum but in ways that are not actually compatible with Scrum itself.  It's therefore pointless to ask what happens to a ""review"" or ""retrospective"" in a SAFe pseudo-Sprint such as ""innovation & planning"", because you are then taking Scrum practices (Sprint Review, Sprint Retrospective) and trying to apply them in a different and incompatible context. If you want to try and reconcile them, you must ask:  - what work is planned into an IP ""sprint"", and how is a Sprint Goal negotiated  - how does this ""sprint"" demonstrate value to a Product Owner  - how does it provide an increment that is cumulative and potentially releasable  - how is a Definition of Done applied to the work undertaken  and then...  - how is the work reviewed and the team process retrospectively analysed.  I suggest you direct your queries at SAFe consultants, or Dean Leffingwell who is the driving force behind the initiative.           Log in or register to post comments",6412
"09:44 am July 2, 2015                    ok thank you for your time, I now know this was not the best place to ask questions about SAFe, but I might be back to only ask about scrum (with no connections to SAFe)           Log in or register to post comments",6412
"11:42 am July 2, 2015                    I’m a little late to the thread, but allow me to share some of my thoughts..  A short while ago, our Team was having a group luncheon. The members were talking about a prior implementation, which I was not a part of. The conversation suddenly went into discussing fruits and some of the statements baffled me.   After interjecting, it was explained that when multiple teams were talking about a Server or a System, they were talking about different ones, using the same lingo and verbiage! This led to massive confusion, so they decided to temporarily address the Systems with the name of fruits. E.g. “We have a 2-hr. window with pineapple over the weekend.”   Over the years, it seems that how we address certain terms have seemingly evolved or have a different meaning. E.g. for someone like me, even a “standup” and the “Daily Scrum” has a different connotation – this leads to a momentary pause to ensure I’m understanding the situation.   As a SAFe SPC, as well as a Scrum practitioner. I have worked with single Dev Team(s) as well as multiple ones at the program level. We did not use SAFe or LeSS or SPS (introduced Dec. ’14).  Without going into SAFe, I’d like to bring out some of core Scrum (based on the 2013 Scrum Guide) which may help bridge a gap and continue the dialogue.   	A “Sprint” encompasses of Planning, Daily Scrum, Review and Retrospective. The Team refines along the way.   	A Sprint always ends with a Review and a Retrospective.  	Release Planning and Velocity are no longer formal entities in Scrum.  	A Product Owner is empowered and can release the increment ad hoc.  	The increment is a potentially releasable product.  	There are no “hardening” (not in SAFe) or “innovation” or “planning” sprints in Scrum; Interpretation – The goal of a select Sprint **could be** innovation!  @MG – you’re doing a great service to your peers, management and Organization, exploring the language and subtleties in the world of agility. I haven’t answered your questions directly, but hope some of the thoughts may help, or raise questions for others reading.           Log in or register to post comments",6412
"02:13 pm July 2, 2015                    MG,   > and frankly I do not know where to turn to get answers. I have not yet found s SAFe forum where I can ask my questions,   You've hit on something here.  The reason that there is no forum is likely because the SAFe people aren't interested in helping people, they are more interested in making money.  That is why they ""require"" you to come to their training classes in order to get certified and get the inside scoop on SAFe.  Leffingwell, the SAFe head guy, comes from an IBM/RUP background where sales and money is way more important than helping people.  Take a look around, how many books on SAFe are there?  Who besides Dean Leffingwell profits from them?  Have you noticed how the SAFe web site is completely trademarked and locked down and how you are unable to post info from their web site anywhere else?  It's about sales and money...  So, in Agile Manifesto terms... they value making sales and money....over helping people in IT deliver value.  I'm sure they would say the opposite, but I suggest that the proof is in the pudding.          Log in or register to post comments",6412
"07:24 am July 3, 2015                    I had my first contact with SAFe about 2 years ago. I had started(!) understanding Scrum for real and had no clue what SAFe was about. I just stumbled over it.  I started scanning through some of their articles. I found they contained a lot of thruth and were well written. I really liked the site for that reason.  While reading on and on, I started getting confused. For all the reasons given above, I discovered that SAFe uses Scrum terminology but at crucial points meaning something very different. I came to dislike the overall package.  I still find things in those articles today that ring true to me and that I appreciate for how they are written. And I keep in mind that the overall package is not for me. That I do not need to attend a SAFe course in order to get to all those little details they kind of skip over in those articles :)  Maybe your experience will be a similar one.          Log in or register to post comments",6412
"04:03 pm July 27, 2015                    From my experience with SAFe, you shouldn't approach it expecting pure Scrum. In fact, their version of Scrum is officially called ScrumXP, containing 'developers and testers', not just 'developers'. It's apples and oranges. Some of their ideas collated from lots of good practices are useful to bring to Scrum so it's still worth reading up on. I would personally prefer IP sprints to be integrated into regular sprints in smaller pieces - 'now, thou shalt innovate!' SAFe is inspired by Don Reinertsen's product development flow theories and lots of Lean ideas built in - in fact I would call it the Scaled Lean Framework because it is more aligned with Lean values than the Agile Manifesto. Kanban makes sense at portfolio and program levels and explicit Lean roles for management are all good ideas I think. I wish they'd call the ScrumXP something else though. Like I say, apples and oranges.          Log in or register to post comments",6412
"09:58 am July 28, 2015                    To help your thought process MG, and going back to the roots of SCRUM, SCRUM is an empirical process i.e. plan / do / review and information is gained by observation rather than prediction.  I’m keen to know how large your organisation is.  I have worked in extremely large organisations spanning continents and any scaling framework that brings predictability, transparency and explicit roles to a sometimes “chaotic” world is welcomed.  This in turn will begin to increase trust between business and IT which is value in itself building a much needed rhythm.   This is just the beginning and the fact that your organisation has identified the need for a framework is a great start.  You can then inspect and adapt the framwork to your organisation - SAFe does allow for this.     I also feel that certain processes work better than others at different levels of the organisation and if we have a view of how these will “mesh” together could be of added value depending on how your organisation is structured.    I’m not a certified SAFe consultant, in my opinion the IP sprint resembles to that of a “hardening” sprint as already mentioned in this post.  When using any scaling framework make sure it is used as intended as it can be abused and in this scenario you risk the IP sprint allowing for unwanted behaviours such as being the “dumping ground” for any incomplete features or “bug” fixes ignoring the core principles of Agile.  For it to be successful you need to have an Agile PMO function in your organisation that allows for effective use of the framework as intended, believes in and supports the core Agile principles, inspect and adapt as the organisation grows.  Jitesh           Log in or register to post comments",6412
"12:16 pm July 28, 2015                    From my 2 year experience with SAFe, thinking it as Scrum would certainly lead to confusion.  In some way, the framework is more lean towards DSDM where certain degree of planning, predictions and team structure is present unlike Scrum. It is the structure and transparency of this framework that inspires senior management as it resembles traditional company structure with different functions. From experience, it's the portfolio vision of SAFe which creates the temptation in this framework, at least the company I worked for did.  The Scrum part of this framework lies within the Agile Release Train (ART) where it is more a wrapper for multiple Agile/Scrum teams. It is not necessary to adopt ScrumXP as prescribed. The Team Backlog is essentially the Product Backlog in Scrum. So pure Scrum is achievable at Team level within ART.   The Program level is essentially an Agile/Scrum team with main focus on business only with product owners serving as developers.  Now to answer MG question, there are two parts to Innovation and Planning Sprint.  Innovation:  As strange as it might be, it is for the development team to explore whatever they like which might help in future development. It can be research in new technologies or methodologies. These are demonstrated at the end of Sprint to others. Personally I find this useful as it release stress build up during other Sprints and provide further growth in development teams. There can be surprises at times.So you can this of it as ""free time"" for development team.  Planning:  This is referring to release, inspect and adapt planning activities for Program increment. It can be viewed as ""release to production"". As I remember, these activities are not optional for SAFe framework. So whatever Agile development framework is used for software development, this still needs to be factored in. Last minute refinements are done at this stage.  It is easier to understand if you view IP Sprint as a Program focused Sprint for preparation of Program increment instead of Team focus Sprint.  Joseph           Log in or register to post comments",6412
"01:46 pm July 28, 2015                    A story.....  A few years ago, members of the Dev Team wanted to spend a little time each Sprint in innovative activities, trying to streamline existing or find new solutions. After discussion with the PO, this was acceptable and had value.   We took on some of this in the sprints ahead (agreed percentage). Also, the last sprint of the calendar year was light so the Dev Team did more at this stage. Note: There wasn't a scramble to fix known bugs, address technical debt, etc.  There weren't any labels as ""innovation and planning sprint"" Etc. Instead, we articulated it in the goal, as best as we could and everyone was happy in the weeks ahead.          Log in or register to post comments",6412
Log in to reply,6412
Messages,6455
"03:28 pm July 27, 2015                             During standup a team member let the team know the sprint goal may slip because he's running behind on his tasks - as he is a designer nobody else can step to help - he's not too concerned about the risk. As a scrum master, how would you recommend approaching this lack of concern - retrospective / other?",6455
"07:10 pm July 27, 2015                    Raise the issue in sprint retrospective is the baseline.  During the sprint:  Let PO know the issue as he is accountable for the value and risks of the product.  Co-work with DT to identify the risk and coach them that they are a cross-functional, self-organized.  The SM must know the real mind of ""nobody else can step to help"" is a attitude issue or skill issue.  For a attitude issue, coach them.  For a skill issue, maybe the other teammates could not step to do the designing task directly, they could help some tasks relatated to design, such as layout, UI component, etc. This is a learning process of DT.           Log in or register to post comments",6455
"06:12 am July 28, 2015                    Do some exploration into the root cause of why he’s running behind his tasks, there may be bigger underlying problems there.  1)	Organise a one-on-one meeting to talk through what he understands the “Sprint commit” to be, and self-organisation of teams.  This is a good coaching opportunity on core Agile and scrum principles.  2)	Try to dig deeper into his design estimation process.   Design can sometimes be a bottleneck.  What is the demand by the team on him?   3)	Would a “definition of ready” for UX and design help?  Think through any customer data required, design principles/concepts, feature maps, style guide, brand guide, component guides etc.  Work with the PO to help shape these as it needs wider business engagement.  Having these in place can speed up design processes and other team members could potentially pick up design tasks helping to tackle the cross-functional aspects of teams.    4)	UX and design processes require creativity and can be difficult to timebox.  Try to get the designers to look ahead working as part of the user story refinement process and release planning, working one sometimes two sprints ahead of the development team allowing for creativity, reducing risk and increasing predictability in project delivery.  Jitesh           Log in or register to post comments",6455
"10:03 am July 28, 2015                    Thank you guys. I have lots of food for thought with your answers. Definitely re-looking at our Definition of Ready and re-visiting Sprint Commit and estimation could help here.   We already design ahead of the developers, but I agree this is a good way of giving the designers space to be creative.          Log in or register to post comments",6455
Log in to reply,6455
Messages,6442
"12:59 pm July 19, 2015                             Hi everyone,  In my seminars, I introduce the Agile Manifesto with 8 small parts that people have to reassemble in 4 sentences, and then we discuss about their choice. It just help me to check they get the idea behind the 4 values of the Manifesto.  Last friday, a group presents this nice variation :  Instead of :  Individuals and interactions over processes and tools  Working software over comprehensive documentation  They end with  Individuals and interactions over comprehensive documentation  (because document is only one way to help people to communicate)  Working software over processes and tools  (because clients don't care how you build the product, they just want it to work !)  I liked very much their point of view and I just want to share their choice with you all :-)",6442
"10:02 pm July 19, 2015                    You are so lucky having a interesting semimars and feedback like this.  How about ""Working software over contract negotiation""?  For customers or users, a working software is most important than anything.          Log in or register to post comments",6442
"10:01 am July 28, 2015                    Hi guys,  My take would be since the A.M. is 14 years old, it probably should be revised a little, given Agile is used beyond the software development domain it was originally conceived:  We are uncovering better ways of <discovering user needs and developing products> by doing it and helping others do it.  Through this work we have come to value:  <Collaboration and communication> over processes and tools  <Usable products which users love> over comprehensive documentation  <Getting real user feedback> over contract negotiation  Responding to change <in a continuous cadence> over following a plan           Log in or register to post comments",6442
Log in to reply,6442
Messages,6423
"08:47 am July 2, 2015                             Is Scrum also based on the theory of constraints? I don't see any reference to this theory in the Scrum Guide.  Thanks",6423
"02:58 pm July 3, 2015                    I'm not too familiar with the theory of constraints and may not be answering your question.  There's a lot that's not explicitly mentioned in the Scrum Guide. It was intentionally intended to be left lightweight, from what I gather.  Sometimes, people start patterns or identify with theories when grasping it.   E.g . don't have it handy, but there are references to how the PDCA can also map into Scrum.  A trip down memory lane --   http://www.scrumguides.org/history.html  https://hbr.org/1986/01/the-new-new-product-development-game  http://agilix.nl/resources/scrum_OOPSLA_95.pdf          Log in or register to post comments",6423
"04:14 pm July 3, 2015                    Scrum is based upon empirical process control. Teams may decide to use ToC in their Scrum implementation but the framework does not demand it. The delivery of value is the primary measure while constraint optimization is secondary and subservient to this.  Other agile approaches may place a greater emphasis on ToC. Lean-Kanban implementations, for example, may avoid batching work into iterations in favor of continuous flow. However the concomitant lack of sprint goals arguably leads to a reduced focus on product value and business risk.          Log in or register to post comments",6423
"04:36 am July 5, 2015                    Thanks - Makes sense to focus my attention to Inspect and Adapt our processes and product as we iterate through our Release cycle rather than looking it at from exploiting the constraints.   Thanks Raj for sharing the OOPSLA document by Ken Schwaber - Great Read!            Log in or register to post comments",6423
"03:44 pm July 27, 2015                    In my experience you can enhance the flow of a Scrum team's work by exploiting constraints - eg by using WIP limits in a sprint. Scrum is a lightweight framework so external tools such as this can add a lot of value.          Log in or register to post comments",6423
Log in to reply,6423
Messages,6433
"10:08 am July 9, 2015                             I've recently started as the Product Owner at a startup which has recently started using Agile and Scrum. I have a history as a Product Owner but this is my first time owning mulitple products and teams and also dealing with a team who are new to Agile.   Its already obvious that their biggest problem is with Ad Hoc work requests on the development team.   The company has no support function and also limited functionality on the Admin part of their products to enable their staff to do the sort of tasks like minor data changes. Therefore these require a dev to spend time completing these 'tickets'.   Also, being a startup, there is a mentality of ""some customers are too important to not work on immediately"".   As an example there was a call between the management of our company and another large customer today. The result of the call was a conversation between the MD and me that they had made the following decisions which needed to be actioned immediately.   Is it possible for me to instll a better attitude towards these ad hoc tasks from the top or should i just accept that for a startup, there will always be chasing of the 'big fish'.",6433
"12:22 pm July 9, 2015                    If you are the Product Owner then you are accountable for the ROI of the associated product lines. In other words you are an entrusted party. You determine what constitutes value on behalf of stakeholders, and you have a duty to them to maximize it.  This means that stakeholders...including an MD...cannot tell a PO what to do. If they believe they can, then there is a fundamental misunderstanding regarding the role and function of a Product Owner and Scrum is being improperly applied.          Log in or register to post comments",6433
"01:17 pm July 10, 2015                    Scrum does allow for canceling a Sprint in case priorities shift drastically, amongst other scenarios.  .  .  .  Sometimes the forums don't capture the entire picture. 2 questions emerge --   A) Is all of the work visible?   B) How long is the duration of your Sprint?  C) Please confirm that there is only 1 Scrum Team? If so, what is the size?            Log in or register to post comments",6433
"07:05 pm July 10, 2015                    >or should i just accept that for a startup, there will always be chasing of the 'big fish'.   That will always be the case with a startup, but you also don't want to always be in chaos mode, either. Try to allow for big fish, but also not accept every ""urgent"" feature request that comes in.  Here are some things that might help:  http://ScrumCrazy.com/scope  http://ScrumCrazy.com/bugs  Might be good to track some of these metrics to ensure that your chaos is not killing your product's value:  http://AgileSoftwareTraining.com/for-executives  In particular, monitoring customer sat and usage metrics might help you know if your other customers are being negatively impacted by too much big fish chasing.           Log in or register to post comments",6433
"02:07 am July 13, 2015                    Hi David,  Who is the Scrum Master of your team?  At a startup, not only Scrum Team is cross-functional, but whole organization.   I've several experiences similiar to yours.   Excuse me for my poor English as I'm not a native speaker. I try my best to explain what I do.  We raised this issues in Sprint review and Retrospective events of the first Sprint.  IN SPRINT REVIEW, I showed the velocity to MD and hightligted the impact on release date.  IN SPRINT RETROSPECTIVE, we implemeted some improvements to work out these ad hoc issues and negotiated with MD.  1. The team will asign a person to support Ad Hoc work requests every day.  2. The ad hoc support task is time-boxed, Two man hours per day. 11:00 ~ 12:00 and 17:00~18:00  3. All the ad hoc tasks must be listed on a Backlog and ordered by MD.   4. The unlucky guy must be asigned by the Team at Daily Scrum.   5. The asigned team member does her/his best to deal with these extra tasks.  6. It is important to exclude these support hours when calcaulate the TEAM’s capacibility.  MD: 2 hours support may be not enough.  ME: OK. Why not to employ a dedicated employee to take care of these tasks?  MD: ...  Just for your reference.          Log in or register to post comments",6433
"02:00 am July 22, 2015                    First, stick to the rules. The productowner is the only person to decide about priorities. The developers are the only group te decide what they can do in a srpint.  Add some flexibility for the unexpected. You can create some time in each sprint for ad-hoc questions, but you should not allow to cancel a sprint for a big new project.  Your customers are your stajkeholders. The best thing you can do is tak to them directly. I'm sure customers will understand new features take time. You also need to negitate aminimum viable product with those customers. Maybe you can help them with a small most wanted part of the feature and do the rest later.  It all starts by keeping the scrum framework as boundary conditions and find a solution that complies wit the framework.          Log in or register to post comments",6433
"04:39 pm July 23, 2015                    Just make everything transparent - if something needs to get done right away, then make them aware something else will need to give/get dropped/worked on later.  Think of the team like a bucket of water pipe - only so much can flow through at one time. To make room for something new, you need to remove something that already exists.          Log in or register to post comments",6433
"09:07 am July 25, 2015                    Hi David,  Use the SCRUM board and your influencing skills . It feels like the MD is not aware of the SCRUM roles and core principles around self-organisation and team empowerment.  It's easier said than done when we talk to senior management to ""drop"" things off.    Suggested approach to tackle some of the problems you have highlighted:  1. Radiate information. The SCRUM board radiates information enabling conversations based on facts rather than emotions.  You will find it easier to influence the MD by talking in front of the board. Every time a team member works on an Ad-hoc issue put it up on the board on a sticky note with a brief description of the issue and the number of hours worked on it. At the end of the sprint calculate the proportion of the team capacity in hours worked on Ad-hoc issues as opposed to new features.  Try to bring him over to the board and have this discussion. Bring up topics such as value based delivery - were the ad-hoc issues as valuable as any new features that the team could have potentially built and shipped? You've just created yourself a coaching opportunity.   2. Coach the team on roles and responsibilities in SCRUM. Organise a ""Roles & Responsibilities"" meeting. All team members need to attend and invite the MD to it. Use a whiteboard or a wall and create columns titled Development Team, PO, SM, MD.  Get a bunch of different colour sticky notes for each role on the board.  Ask the team to write down what they believe their responsibilities to be against their role in SCRUM - for about 10min. Ask each team member to go forward onto the board and put up their stickies and talk through the reasoning behind their thoughts. Facilitate the discussions creating opportunities to coach team members on their responsibilities including the MD.  Allow the team to reach working agreements on their roles and responsibilities collectively.  3. Propose the new Admin features to the business to eliminate manual tasks.  Use the data you have gathered from the adhoc tasks to create a business case for it.  4. Continually lookout for coaching opportunities.    5. I see the positive from the adhoc tasks that the team is requested to work on. They have now acquired this knowledge and it will be particularly important when the team matures in control of their destiny.  Try to keep this knowledge in the team.   Jitesh          Log in or register to post comments",6433
"12:47 pm July 27, 2015                    Reactivity is a problem in start-ups; MDs and Sales tend to say Yes too easily to keep key accounts happy, even sell airware and then expect the development team to just deal with it and rescue commitments that should not have been made. Sometimes its because sales people are paid on commission, other times its scrambling to get the next invoice out bring more money in (unless the start up has been adequately financed). This results in Adhoc tasks and usurping plans.  To become a healthy organisation and transition from startup to BAU it needs to reduce significantly, so foresight and education is an important part of the solution.   When a company bows to these requests, it becomes expected by the customer thereafter and then its hard to shake off. I think the startup MD mentality can be a little tricky sometimes when it comes to changes, such as transitioning to Agile and Scrum.  In a similar case to yours David where we had basically a dev team and sales people, we formed a small team of engineers for technical pre-sales activity and support. It was lead by one person and we rotated engineers through it - some stayed eventually as it grew. Its not a proper support solution either but it allowed us to reach a compromise and say ""Ok, channel your adhoc requests to this new team leader"" and largely kept the heat off the core dev team.  ""...a call between the management of our company and another large customer today. The result of the call was a conversation between the MD and me that they had made the following decisions which needed to be actioned immediately.""  - this is counter productive in many ways. It can be demonstrated with KPIs - the effort required to cancel the current work, the impact in resource re-scheduling, incurred delays to other projects (and therefore unhappy customers), impact on reputation of the companys ability deliver to commitments etc... Again, its education - if the MD wants the company to grow strong then he needs to manage the customers according to his companys capacity, otherwise he'll simply burn off his employees. Its worth having a chat with him about it and seeing if he has any strategy to grow out of this; you can contribute to it by coaching ;)          Log in or register to post comments",6433
Log in to reply,6433
Messages,6453
"05:34 am July 24, 2015                              When we say a for example a  two week sprint, is the sprint planning, sprint review and sprint retrospective come inside those two weeks  Regards  Raja",6453
"06:19 pm July 24, 2015                    Yes.  A sprint begin at sprint planning, and end at sprint retrospective.          Log in or register to post comments",6453
"11:26 am July 27, 2015                    Yes.  A good way to look at it is that the Sprint is the timeboxed event that contains all the other timeboxed events.  Don          Log in or register to post comments",6453
"11:42 am July 27, 2015                    Don's answer is much better than mine.  A time-boxed container concept is more suitable than an 1-D timeline which forces on begin-end.           Log in or register to post comments",6453
Log in to reply,6453
Messages,6426
"09:14 am July 3, 2015                             Hi all,  a new project has recently started at my job, for which I am the scrum master.  I am pretty much satisfied with the team composition, well, it lacks a little bit of coding experience but nothing too serious. The only thing I am really concern about is one team-mate, who has repeatedly in the past proven her inability to do team work. She doesn't like the scrum process and lets everyone know; she won't take any critics of her work and is often offensive; communication is not so good as she barely speaks english; and so on...  So, the question is, what is in your experience or according to scrum the best way to handle such a person, considering that I have no other choice but to have her on the team?   Thank you",6426
"12:57 am July 7, 2015                    Is the Development Team content to have this person on board? Are they delivering increments satisfactorly, and are the discussions in Sprint Retrospectives honest and open?          Log in or register to post comments",6426
"02:39 pm July 8, 2015                     This one is a tough one as it has many variables some inside some outside of scrum, as Ian has hit on..what are the thoughts of the team?  You are SM so have services, two of the three affected services (Unless its the PO) are below.  Scrum Master Service to the Development Team, coaching, removing impediments,  Scrum Master Service to the Organization, causing change that increases productivity  (Remember the Org also has a part to play in adoption).  Some reflections here:  https://www.scrum.org/Forums/aft/738#3965  Good luck with it, and don't forget to post your outcome as this one really is a stinker when you get it.          Log in or register to post comments",6426
"12:35 pm July 21, 2015                     I'd be curious to understand what her reservations are regarding SCRUM, has she experienced a team where SCRUM was poorly implemented and understood or has she just not ""bought in"" to the culture. Maybe she's expecting something else.   I had a team member once who was explained that in their culture ""command and control"" was the only way and I should be  barking orders. Really took a while to get used to the self organisation that is part of the agile culture and to understand that they really did have a say.  Could it be that she's a little insecure, as you say the team lacks coding experience and some people don't like that laid bare for all to see, after all, who wants everybody to see their faults and failure? Maybe the principle of transparency makes her nervous and some people can become defensive or aggressive in this situation. Add this to her lack of English, as you mention, and the possibilities for misunderstandings are pretty high.   Maybe you can speak with her and ask her for her opinion, ensure that she's aware that her opinion is valued but so are those of others and whilst opinions can be voiced, the team are obliged to follow her advice. Involved her, let her see a supporting environment. It might just work. Better still, can you get her on a scrum master or scrum developer course in her own language where she might understand a bit more and build some enthusiasm?  As a last resort, it maybe simple a ""personnel"" issue and she's unsuitable, as a person, for your team or company.  Good luck!  Tony          Log in or register to post comments",6426
"08:16 am July 27, 2015                    Correction: I missed the word ""not"", in this sentence. ...the team are NOT obliged to follow her advice. But of course, are obliged to at least listen to it respectfully.  Posted By Anthony Kenny on 21 Jul 2015 12:35 PM   Maybe you can speak with her and ask her for her opinion, ensure that she's aware that her opinion is valued but so are those of others and whilst opinions can be voiced, the team are obliged to follow her advice.           Log in or register to post comments",6426
Log in to reply,6426
Messages,6422
"01:21 am July 2, 2015                             Could one Development Team working on a single product have two different Scrum Masters for this product?  If not, Would this be a good reason to document a ScrumBut using (ScrumBut)(Reason)(Workaround) to make the exception visible to senior management?",6422
"03:31 pm July 2, 2015                    What purpose would having 2 scrum masters serve?  Why would 2 people be needed to do 1 persons job?  There should only be 1 scrum master for each Scrum Team.  I would recommend reading the scrum guide to help understand what the role of the scrum master is.          Log in or register to post comments",6422
"09:16 am July 3, 2015                    Well, one obvious purpose would be to have the second scrum master as a trainee, so he can learn what the job implies. I was considering doing this actually.          Log in or register to post comments",6422
"03:08 pm July 3, 2015                    @AJ,   I see that you have had some formal training in Scrum (outside of Scrum.Org or the ScrumAlliance). If you don't mind me digging a little deeper, can you first confirm whether Scrum allows for multiple Scrum Masters' on 1 Scrum Team?  What you're asking may not be a ""ScrumBut"" -- it may be a ""ScrumNot""  I can think of an exception to your scenario ,as a ScrumNot (or perhaps ""Other"") but I'd like to get some more insights to your scenario first.          Log in or register to post comments",6422
"06:02 am July 4, 2015                    > Could one Development Team working on a  > single product have two different Scrum  > Masters for this product?   Many people in a Development team may demonstrate Servant Leadership, but a Scrum Team should have only one Scrum Master at any given time.  Certain risks can be expected to arise if there were to be multiple Scrum Masters on one team. Can you identify what the risks might be?          Log in or register to post comments",6422
"03:39 am July 5, 2015                    First of, Thanks for your feedback and responses.   A little background ...We got into this precarious situation as part of poor transition and succession planning.  The brief transition plan of shadowing a Scrum Master has turned into months leading to becoming an ""informal"" defacto on  this particular internal software product (1 PO only).   My bigger concern is I'm noticing increasing signs of approval within senior management with this structure formation.   I wish to bring this SCRUMNOT (Thanks, Nitin was not aware of this construct) practice to an end before it becomes an acceptable norm/culture.   Having two masters cannot be a good thing. Ian, some risk include lower team morale, conflicting direction, strain on time-boxing, emergence of power struggle and eventual reduction of business value.   I'm hoping to provide senior management with a stronger and compelling case to nip it in the bud.    Thanks,  AJ           Log in or register to post comments",6422
"03:08 pm July 6, 2015                    Yes, This is a ""ScrumNot"" bordering on ""Other.""   I would consider talking to both the Scrum Masters' (SM) in this case, and get a consensus to the scenario from them.   (i.e. are they of the opinion that both can serve as a SM?)  I do not know your role on the Scrum Team, but would ask them both to approach the people who formulated the Team to figure how temporary this ""shadowing"" was intended?            Log in or register to post comments",6422
"12:20 pm July 13, 2015                     ""I'm hoping to provide senior management with a stronger and compelling case to nip it in the bud""  Here's possibly one good compelling case  Scrum.org and Scrum alliance and scrum.inc were aligned the scrum guide from Sep 2014.  If it came from either organisation could be worth asking who decided on two SM if its scrum your really adopting  (or intending to adopt) Scrum as its a common guide its one set of rules, which one did for your organization?  This comes from a transition so a change to the business, what reasoning did the transition team come up with for two SM, as it the rules are binding if its a pure Scrum deployment.  This Guide contains the definition of Scrum.   This definition consists of Scrum’s roles, events, artifacts, and the rules that bind them together.  http://www.scruminc.com/scrum-alliance-scrum-inc-scrum-org-scrum-guide/  http://www.scrumguides.org/           Log in or register to post comments",6422
"06:55 am July 27, 2015                    Hi AJ,  SCRUM is a flexible framework with intentional gaps to allow it to be modelled to your organisation.  SCRUM is mechanical (think of it as an  engine) and a means to achieve agility (take you from A to B to C .. etc )– the definition of agility (the end state) varies from organisation to organisation.  Anything interfering with its mechanics (the engine) is holding back SCRUM from enabling agility in your organisation – this is when you get your ScrumBut/ScrumNot book out.  In this scenario ScrumBut/ScrumNot isn’t relevant.  Succession planning is a key process in organisations around motivating individuals and identifying the future leaders of the organisation and this is what your are doing.   Focus on coaching the senior management teams on the SM role, SCRUM and Agile and how it enables agility in organisations.  You are naturally doing a coaching role so why not position yourself as a coach and ensure that the “trainee SM” simply becomes the “SM” – the point here is to remove the “trainee” title so that he/she can play an effective SM role within the team with you playing a supportive coaching role.    Jitesh           Log in or register to post comments",6422
Log in to reply,6422
Messages,6450
"12:21 am July 24, 2015                             I need some help in understanding user stories. Would request my member friends to help me get answers to the below queries.  a. Who writes the User story , the customer or the Product Owner or the Dev Team members ?  b. Are User story and PBI one and the same. In other words, Can one user story split into multiple PBI's?  c. When is the User story and PBI written / identified. Is is during the sprint planning meeting or even before that. ?  d. Can the user story or the PBI should be written compulsorily in hand or is it just in principle and can be managed digitally.  e Is there any specific way of writing user story?  f. How is a user story broken down to PBI's and PBI's further broken down to Sprint Backlog item's. Can anyone provide me with a real time examples to understand it better.  Regards  Raja",6450
"08:56 am July 25, 2015                    Scrum does not specify the format of PBIs.   User stories are a convenient format for expressing the desired business value for PBIs. So that, PBIs are often written as User stories.  a.	PO oversees the grooming of the product backlog, which includes creating, refining, estimating, and prioritizing PBIs. PO does not personally perform all of the grooming work. For example, Development team may do the story writing tasks, however, PO is ultimately accountable for final decision of PBIs.   b.	As mentioned above, User stories are a convenient format for PBIs. A large store, or epic, is a PBI with rough concept. A small story means it is detailed. As we get closer to working on a larger PBI written as a larger story or epic, we will break the large story down into a collection of smaller, sprint ready stories.    c.	This should happen in a just-in-time, on-going fashion.  d.	Scrum does not specify the format of PBIs. Just keep in mind, they must visible for everyone involved.  e.	Scrum does not specify the format.  f.	Smae as answer c. Scrum does not specify when that grooming should happen; it only indicates it needs to happen.            Log in or register to post comments",6450
"09:19 am July 25, 2015                    Scrum does not specify when grooming needs to happen. There are various times when grooming might be performed:  -- Initial grooming  Initial grooming occurs as part of release planning. This could be after requirements gathering activities.  -- Ongoing grooming:  1. During product development, PO meets with the stakeholders at any time make sense to perform ongoing grooming.  2. PO might schedule either weekly on once-a-sprint grooming workshop during sprint execution.  3. DT might prefer to spread out the grooming across the sprint. For example, they take a bit of time after their daily scrum to do some incremental grooming. The grooming is part of the daily planning.  -- Sprint review:  During Sprint review, as everyone involved gains a better understanding, new PBIs are often created or existing PBIs are reprioritized, or deleted.           Log in or register to post comments",6450
Log in to reply,6450
Messages,6443
"07:05 am July 21, 2015                             Hello all..  1st of all, I'm new here, so I hope this question belong here.. 2nd of all, if this has been asked and discussed before in here, please point me accordingly and apologies in advance (although I did try searching beforehand)  I've been learning more n more about Agile (mainly 'cause of my job search and with so many roles now requiring or mentioning Agile). As a ProdMan/BA, I've been doing Waterfall for the past 10 years... I've watched tons on videos and presentations on YouTube re Agile (sprints, backlogs, user stories, daily stand-ups etc)... it all makes sense, my only issue/concern is User Stories which in Agile replace BRDs you have in Waterfall. Again, I read what they should contain, how the should be phrased etc (i.e. WHAT and not HOW etc), still.. I'm slightly confused in terms how SIMPLE they appear to be compared to DETAILED specs in BRD/Waterfall  I guess it's better to give some example of my recent specs/BRDs I did (in Waterfall)... it was about the online verification process (+ new UX/UI) that captured certain customer bio/address details, sent them to a 3rd for online verification, then log the details to be used for different MI purposes... so, first I had a nice Visio flowchart explaining the whole new workflow (front-end/UX + back-end) for the devs and stakeholders to better understand the whole picture, then all the new wireframes/mock-ups of the new forms, what details should be captured, validated, error handling + messaging, and sent to a 3rd party, then logged in Table X or Y, then mentioning that report X should be enhanced, then that changes to the .INI file handling this should be catered for etc..   - with Agile, does that mean that ""data should be logged in Table X"" is one User Story, ""changes to the INI file"" another User Story and so on? What about mock-ups...dont PM do them in Agile, and leave it to devs?  - how to you handle ""As a .... "" when writing a UserStory when there is no actor/user, but it's something that the system should do? E.g. log data in a specific table",6443
"09:35 am July 21, 2015                    Renaers,  quote: “- how to you handle ""As a .... "" when writing a UserStory when there is no actor/user, but it's something that the system should do? E.g. log data in a specific table “  You don’t. A user story is not supposed to be detailed in technical implementation. It is supposed to be precise in how a user receives value from using / interaction with the system.    A User Story is a reminder to communicate with the user. I you detail system implementation in a User Story, you are water falling.           Log in or register to post comments",6443
"10:21 am July 21, 2015                    Hi Renars,  For transaction data, the data flow could be included in a user story.  For example:  As a manager, I want the date Y been saved to Table X, so that I could read the data report.  For error message or trace log, they could be included in the definition of done or  implemented a cross-cutting design.  Just for your reference.           Log in or register to post comments",6443
"11:22 am July 21, 2015                    Hi Christiaan,  Thanks for your reply/input - but if you don't (specify), doesn't it mean it's left to assumptions for the devs and might be overlooked? With the back-end/db process requirements in my BRD, I do/did not so much mean to tell devs how to implement it (they know it better!), it's more to make sure that future business needs are covered, basically, I want all my bases covered (given some prior incidents) and avoid comments from devs like ""we didn't do X, Y or Z because you didn't explicitly request it, we're not mind readers"".  (well, I guess comments ""they are bad devs then"" are not applicable her as it can happen, I'm reading, both in Agile and Waterfall, no?)  If I had it my BRD, I could go back to them and say ""see, in section 2.3. we were asking about the reporting or audit trail requirements""...  To paraphrase it then, if my BRD contains, say, roughly 15 items that can be considered as requirements (both functional and non-functional) would that roughly equate to 15 User Stories number-wise, is there this co-relation? I think I just want to get into Agile mindset but still keeping some cross-reference to Waterfall.          Log in or register to post comments",6443
"01:34 pm July 22, 2015                    Here is a link to a YouTube presentation by Mike Cohn.  It contains definitions & examples of User Stories I have found very helpful.  https://www.youtube.com/watch?v=6q5-cVeNjCE           Log in or register to post comments",6443
"09:56 pm July 22, 2015                    Hi Renars,   I prefer to think of non-functional requirements as “constraints” of the system requirements.  There are 2 practices of my teams:  1. Add the contraints to the Definition of Done.  2. Add the contraints to the architecture design, sometimes it should be a cross-cutting design  For non-functional requirements as user stories, the article of Mike Cohn may help you  https://www.mountaingoatsoftware.com/blog/non-functional-requirements-a…           Log in or register to post comments",6443
"11:08 am July 23, 2015                    Hi Christiaan / Ching-Pei  Thank you both for your input..  have checked the links and will read as well, I guess  Thanks  Renars          Log in or register to post comments",6443
Log in to reply,6443
Messages,6311
"09:32 am April 7, 2015                             Here is an example of a failed attempt at a scaled Scrum, that could be a Line Manager at 1.31, and not sure if that's the SM or PO with the pink strides on?  https://www.youtube.com/watch?v=wS0bGISoHAE  People think we have no sense of humour when it comes to Scrum ;-)",6311
"10:00 am July 23, 2015                    That's some funny stuff Michael! Thanks for sharing          Log in or register to post comments",6311
"10:17 am July 23, 2015                    Who are skateholdes?          Log in or register to post comments",6311
Log in to reply,6311
Messages,6444
"03:26 pm July 21, 2015                             So I failed the PSM I last time by 1 question.  The area I struggled with the most is the Cross-functional, Self-organizing Teams area. I've been practicing the Scrum Practitioner Open each day and trying to refine my answers based off of what i can find in the Scrum Guide, this forum, etc. I've evaluated each question to say why I thought the answers were right and wrong but it doesn't seem to be working.  After a week of this, i'm still hitting only 9/15. Can anyone recommend any resources, suggestions, etc?  Our shop is currently a scrum but and small :(.  So some of the questions that are asked such as ""your company hires 1000 people"" isn't going to be something I can experience.  Thanks in advance for any advice you can give!",6444
"06:54 pm July 21, 2015                    Hi Jason,  You may not post Scrum.org assessment questions and answers on the Scrum.org forums.   You may write down your notes during an open assessment and ask questions to foster discussion that enhance your understanding of Scrum.  I did not go for a assessment until I passed open assessments 100% every time.  Do your best to read each question twice before you choose the answer.  Just for your reference.           Log in or register to post comments",6444
Log in to reply,6444
Messages,6431
"03:40 pm July 8, 2015                             At MetaGeek, every business function practices Scrum with one-week sprints. All of our teams use JIRA (except for the Operations team, which uses the classic ""sticky notes on the wall"" technique, partially due to the repetitive nature of their job functions).   It's illuminating to track Scrum metrics like velocity and Kaizen across teams, and have an all-company deliverable demo at the end of our sprints. It's been really useful for us to have standardized/normalized measurements for each of our teams.   Does your company practice Scrum in all areas, or only in software development? If not, how are you guys tracking performance (and by extension ROI) in different job functions?",6431
"04:16 pm July 8, 2015                     I'm a JIRA advocate, its a really great tool.  Very simple, easy to set up boards and really flexible dependant on what you want.  We utilized the burn down and velocity charts which helped understanding when committing to the sprint to show what happens when you over shoot and track via burn, rather than run a sustainable pace.  We also used ""components"" for  really good visuals which we would show at the Retrospective.  Both Sprint and Kanban really work well, and worth the cost in my opinion, although there are alternatives if cost is king, with less whistles and bells.  Its also handy in todays age of remote working where everyone knows where we are as Cross Functional Teams now can be spread globally. Although there is nothing wrong with visualization boards spreadsheets, etc etc, depends on the locations of the team, budget and what you want out of your visualization and the geographic presence of the teams involved in it.           Log in or register to post comments",6431
"03:17 pm July 17, 2015                    I work on a team that manages the maintenance of commercial websites.  We also use JIRA and have implemented Scrum into our daily workflow.  This has dramatically increased our efficiency and has provided an example for other dev groups to adopt.          Log in or register to post comments",6431
Log in to reply,6431
Messages,6417
"07:20 am July 1, 2015                             1.	The DoD of a Sprint is unique and depends on the content and purpose of the Sprint   2.	All Sprints of a project have the same DoD   3.	All Sprint Backlogs of all Sprints of a project have the same DoD   4.	The DoD and Goal of one Sprint is the same   Thanks  AJ",6417
"08:55 am July 13, 2015                    2.	All Sprints of a project have the same DoD          Log in or register to post comments",6417
"03:40 am July 14, 2015                    The Scrum Guide says:  ""During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of “Done” as appropriate.""  Can any of the four answers therefore be said to be true?          Log in or register to post comments",6417
"10:26 am July 15, 2015                    I choose 1.The DoD of a Sprint is unique and depends on the content and purpose of the Sprint   There should be only one DoD in a Sprint.   DoD should be confirmed during Scrum planning.           Log in or register to post comments",6417
"10:29 am July 15, 2015                      DoD should be confirmed during Scrum planning.    Sorry!   I want to say ""DoD should be confirmed during Spring planning.""             Log in or register to post comments",6417
"01:28 am July 16, 2015                    I am agree with Ian's comments but out of given four option, 1st one looks most apposite.          Log in or register to post comments",6417
"05:06 am July 16, 2015                    ""During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of “Done” as appropriate.""  What does adapting the definition of “Done” as appropriate mean?  As Scrum Teams mature, it is expected that their definitions of “Done” will expand to include more stringent criteria for higher quality.   For example:  In order to increase product quality, we must add the following criteria to the definition of “Done”:  1.	For UI Application, it must pass a 4-hours Exploratory test.  2.	For Windows service, it must take an stable running for 48 hours.  3.	The code coverage must be raised from 80% to 90% average.  4.	The code coverage of buniness logic componet developed via TDD must be 100% from now on.  5.	…  On the other hand:  The purpose of each Sprint is to deliver Increments of potentially releasable functionality that adhere to the Scrum Team’s current definition of “Done.”  During sprint planning, The Development Team works to forecast the functionality that will be developed during the Sprint. The Product Owner discusses the objective that the Sprint should achieve and the Product Backlog items that, if completed in the Sprint, would achieve the Sprint Goal.  I think the definition of “Done.” Includes both features and quality and must be confirmed during Sprint planning.  So, the answer is the First One.  1. The DoD of a Sprint is unique and depends on the content and purpose of the Sprint.           Log in or register to post comments",6417
"05:39 am July 16, 2015                    The DoD doesn't depend on the ""content and purpose of the Sprint"", even when it is improved each Sprint. Rather, it depends on the quality and purpose of the expected release.  It's the Sprint Goal that depends upon the ""content and purpose of the Sprint"", in so far as it should express a coherence of these things.  None of the answers are satisfactory in my view.           Log in or register to post comments",6417
"05:53 am July 16, 2015                     Posted By Ian Mitchell on 16 Jul 2015 05:39 AM   None of the answers are satisfactory in my view.   I'm on your side.   But as s test taker, I would choose the First One. :)          Log in or register to post comments",6417
"06:55 am July 16, 2015                    Does anyone know where this question actually comes from, and to which test it is meant to relate?          Log in or register to post comments",6417
"07:22 am July 16, 2015                    Hi! This question comes from europeanscrum.org - it's Scrum & Scrum Master Exam Simulator          Log in or register to post comments",6417
"08:44 am July 16, 2015                    This example shows that coming up with good questions can be harder than coming up with good answers.          Log in or register to post comments",6417
"01:51 pm July 16, 2015                    And this thread shows that essay questions are much more interesting than true/false questions ! ;-)          Log in or register to post comments",6417
"06:27 pm July 16, 2015                     Posted By Olivier LEDRU on 16 Jul 2015 01:51 PM  And this thread shows that essay questions are much more interesting than true/false questions ! ;-)  Yes, I couldn't agree with you more.  But there would be a trade-off for non-native English speaker like me.  Essay questions would be a big problem for me!          Log in or register to post comments",6417
Log in to reply,6417
Messages,6425
"06:24 am July 3, 2015                             Hi everyone,   I'm currently preparing for the PSM I assessment. Why type of help is allowed during the exam? This means (assuming I have enough time) would it be allowed for me to check the scrum guide during the exam?  Thank you for your help,  Hendrik",6425
"10:16 am July 15, 2015                    Hi,   I think this is an HONOR SYSTEM.  The assessments are not merely tests of knowledge, but assessments of understanding.  You can check anything but that will waste you time.          Log in or register to post comments",6425
"10:28 am July 16, 2015                    The exam questions are based on understanding of scrum, not so much the details found in the Guide. Rarely will you be able to just search the guide, or Google, for the questions. Nor would you have the time. I recently passed the PSM (96%)and PSPO (89%) and will prepare tips based on my studying.          Log in or register to post comments",6425
Log in to reply,6425
Messages,6439
"10:04 am July 15, 2015                             Dear all,  An open assessments' question:  Programmers and testers SHOULD NOT be included in refining Product Backlog items.  Ans: False.  If the question is altered to:  Programmers and testers SHOULD be included in refining Product Backlog items.  True or False?  True. The Scrum Team is cross-functional. It needs both programming and testing skills for PBI refinement,  False: There is no tester role in Scrum Team.  How to choose?",6439
"10:24 am July 15, 2015                    There is no role like programmers, testers in Scrum. all members of development team have same title ""developer""  regardless of nature of job performed by them. So while referring to Dev team, one must consider all developers.PBI refinement need both of development team and PO.          Log in or register to post comments",6439
"10:51 am July 15, 2015                    Hi Eshan,  Yes. You are right.  But there is a question of Open PSD Assessment:  ""Programmers and testers should not be included in refining Product Backlog items.""  The correct answer is ""TRUE"".  I think, In this question, Programmers and testers are just for members' functional skills.  It wants the test taker to understand FBI refinement need corss-functional skills.  But the question is, how could the test taker know the term ""tester"" is for ""Scrum Role"" or ""Functional Skill""?           Log in or register to post comments",6439
"05:12 pm July 15, 2015                    It is true that Development Team members should be included in Product Backlog refinement sessions.  This does not imply that programmers and testers should be excluded from those sessions. It makes no difference if ""programmer"" and ""tester"" refer to functional skills, roles, or something else entirely. The relevant people could also be members of the Development Team. That *is* a role, and it has duties to Product Backlog refinement that need to be observed.  Therefore the answer to the question ""Programmers and testers SHOULD NOT be included in refining Product Backlog items"" must be false.           Log in or register to post comments",6439
"08:07 pm July 15, 2015                    hi Ian,  My answer is FALSE, too.  How about ""Programmers and testers SHOULD be included in refining Product Backlog items. "" ?  Thanks.          Log in or register to post comments",6439
"01:22 am July 16, 2015                    Regardless of one's area of expertise, all dev team members should be present in PBI refinement.          Log in or register to post comments",6439
Log in to reply,6439
Messages,6437
"05:01 am July 15, 2015                             If you are preparing for PSD 1 assessment and do not know what Code Coverage and TDD are, here you are:  https://www.scrum.org/Resources/PSD-Glossary  Yesterday, an junior developer asked me for help due to required coverage not being met. His questions:  Why TDD is very important and suitable for SCRUM?   Is it feasible to expect 100% code coverage?  Why TDD is very important and suitable for SCRUM?   First of all, it’s make sense to convert each user story to a test case. A test case should be defined to simulate users’ action, behavior, requirement, etc. When executable code is created to make the test pass subsequently, that mean pieces of code is almost ready.  Secondly, TDD will increase transparency of your code.   Basically, the Code Coverage should be 100% if you use TDD. Test coverage is a useful tool for finding untested parts of a codebase. Test coverage is of little use as a numeric statement of how good your tests are, but it can help you finding duplicated or unused code which always untested.   Sometime, untested code is due to your mistake on choosing code statements, expressions, scheme, etc.  For example, WHILE loop and FOR loop, those are very common sense for developers.   Really?  If there were lines of code:       for (int I = 0; i<5; i++)      {          bool success = DoSomething();          If (success)              Break;		      }  If it was so lucky to get a success result at first try, what it would mean?  Yes, “i++” would be untested.  Let’s refactor it.      Int RetryTimes = 5;      int count = 0;      bool success=false;      while ((!success) &&(count<RetryTimes))      {          success = DoSomething();      }  Each line of code should be tested.  What’s the different? Just for high code coverage?  It help us to think about the different between FOR loop and WHILE loop.  FOR is for “Index Range” while you can break or continue according to predefined conditions.  WHILE is for “Condition” while you can set the maximum loops.  Just for your reference.",6437
Log in to reply,6437
Messages,6436
"09:38 am July 13, 2015                             Hello All,  I'm new to Scrum and have just started using it.  Before the sprint planning the Development team has come up with some rought estimates (hours). We included that in the Product backlog items to provide better planning.  The product owner who is also a stake holder has been asking number of questions around the estimates for at least in three consecutive stand-up meeting.  Share your thoughts on if it is advisable to change the estimate from hours to complexity or story points etc.  Thanks",6436
"11:55 am July 13, 2015                    Who is the real driver for hours and why?  http://blog.crisp.se/2014/04/23/perlundholm/time-vs-story-points-estima…  Don't fall into the trap of one story point = one hour, or nothing will change.  Chances are that's one of the first questions you will get asked...""So how many SP is in one hour"".           Log in or register to post comments",6436
"03:11 am July 14, 2015                    The purpose of estimation is to help a Development Team forecast how much work it can take on during a Sprint.  Has the team experimented with different estimation methods in order to improve forecasting? If not, why not?  Is the Product Owner's line of questioning causing problems? If so, why?          Log in or register to post comments",6436
"03:24 am July 14, 2015                    > The product owner who is also a stake holder  > has been asking number of questions around  > the estimates for at least in three consecutive stand-up meeting.   Also, what does the Scrum Guide say about who is allowed to participate in the Daily Scrum? What does it say the Scrum Master's duties are in this regard?          Log in or register to post comments",6436
"05:56 am July 14, 2015                    Michael & Ian,  Thanks for your response.  @Michael - The estimation is done by Development team. We are planning to estimate SP based on complexity at a high level for Sprint planning.  @ Ian - As mentioned in my case this is the first sprint and trying to mend ourselves ith what is good and what is not. The product owner is available in Daily scrum or even otherwise in Sprint planning and raising questions. We are not yet in an ideal world to deter Product owner (Business person) from the daily scrum.  The team has not done different estimation methods as this is the first sprint and will definetly look into improvidng the same as part of the sprint retrospective.          Log in or register to post comments",6436
Log in to reply,6436
Messages,6419
"07:26 am July 1, 2015                             1.	It depends on, either the Scrum Master or the Product Owner   2.	The Development Team   3.	Always, the Product Owner   4.	The Scrum Team   5.	The Development Team and Product Owner   Regards,  AJ",6419
"08:56 am July 13, 2015                    3.	Always, the Product Owner          Log in or register to post comments",6419
"11:23 am July 13, 2015                    Allow me to ask a different question --   Why does it matter?           Log in or register to post comments",6419
"06:24 pm July 13, 2015                    Important part of the question is First contact.  It is tricky question - client can  be not familiar with SCRUM and can try to reach development team. Scrum Master is responsible to teach about interactions with Scrum Team and should shield the team from such distractions.          Log in or register to post comments",6419
Log in to reply,6419
Messages,6430
"04:17 pm July 5, 2015                             Hi,  I am working for the eCommerce division of a large international company, and we develop an enterprise eCommerce solution for our internal clients. Our portfolio is made of multiple products that we work concurrently, at the moment 2 big products and one small. I am managing the dev team of 8.  We started to implement Scrum a couple of month ago on one of the product, and being successful, I now want to use it across all our products. IMO, it would be good to merge all product backlogs into the sprint backlog when we prepare our 2 weeks sprint and use our entire dev team to work on it. During the planning meeting, our product owners can decide how much of each product backlog we put in the new sprint. I like the idea that the knowledge across our products is shared among team members, and the flexibility of being able to increase our effort where needed. For example, in a sprint if there are a particular issue on one product, the entire team can help solving it.  Maybe the organisation of the work between team members might be slightly more complex due to the size of the team and backlog, but I think the benefits totally worth this additional complexity.  However my manager thinks sharing so much knowledge among all team members is a waste of time, and think that having isolated teams will be more efficient, and that we would get more done (he already thinks that having everyone in the team part of the planning meeting is waste of time).  Can I have your thoughts ?",6430
"03:02 pm July 6, 2015                    I have worked in this scenario as a Product Owner, as well as a Coach. I have seen it work in some instances, as well as some of the major pitfalls.  From what I’m reading, every product being built is internal to the Organization. Can you also confirm that this is a group of internal employees? Are the other Teams working outside of Scrum in delivering software?  Knowledge sharing is not a bad thing. I would question or address some of the other potential concerns. E.g. --   POs vying for their work first  Forecasting models and predictability will get skewed  Context Switching  .  .  .  I could go on, but I feel you’ll need bottom-up consensus and check whether people are willing to try an experiment? I have seen extremes and would advise to keep the Teams separate, yet find other ways of maintaining cross-functionality.   I can also consider where this may work when you’re scaling a multitude of products and Teams. Feel free to connect via LinkedIn or a conversation (US Eastern Time Zone).            Log in or register to post comments",6430
"12:15 am July 7, 2015                    > During the planning meeting, our product  > owners can decide how much of each  > product backlog we put in the new sprint  In Scrum, it is the Development Team who decide how much work they can accommodate in their Sprint Backlog. They would negotiate a Sprint Goal that is of value to a single, clear Product Owner. The Sprint Backlog would constitute the forecast of work needed to meet the Goal and to provide the Owner with a product Increment.  The Scrum Guide makes it clear that a Scrum Team must have one Product Owner and that product ownership is not a committee. If this rule is not observed then Scrum is not being followed and the associated controls are not being applied. How would the Development Team collaborate, during the Sprint, if they are drawing work from two separate Product Backlogs? To which Product Owner would the Increment be provided, and which Owner would be accountable for the release of value to stakeholders?          Log in or register to post comments",6430
"09:04 pm July 9, 2015                    First, thank you for your reply, really appreciate it.  If I understand well, you guys advise to have one team per product. But we are small company, 8 people in the dev team, which mean if I split my team to have one scrum team per product, and we might work on 2 or 3 product at any point in time, I will have team members part of multiple scrum teams. Those team members will have competing priorities, how can I help them manage those priorities ?          Log in or register to post comments",6430
"10:46 am July 10, 2015                    > But we are small company  In your first post you said it was a ""large international company"", not a small one.  Why not have the team work in shorter sprints which alternate between Product Backlogs? As the PO you can determine which backlog is addressed in the next Sprint. That should be a value-based decision regardless of company size.          Log in or register to post comments",6430
"07:37 pm July 12, 2015                    Ok well the mother company is huge, but the eCommerce division is small :)  The idea of alternating product sprints is appealing, my team would really be able to focus on one product every sprint ! and our stakeholders would still get value often.  I can already see my manager hiss at the idea of not working on a product for a full sprint, I will have hard time convincing him it's a good approach !            Log in or register to post comments",6430
Log in to reply,6430
Messages,6427
"03:50 pm July 3, 2015                             Yesterday I went to Scrum Day Europe where the topic was 'Scaling Scrum'.  Yet, I was hard-pressed to find topics covering 'natural growth'.  I work at a Startup and we are looking at which Scaling framework (if any) to use.  Scrum Day Europe seemed more focused on enterprise-size scaling - where scaling is introduced to cope with lots of people working on one product.   I wrote a blog post about it here: http://www.mansell.nl/2015/07/scrum-for-startups-scaling-scrum-or.html  Does anyone have experience with scaling scrum at a startup?  What method/framework did you use and what did you run in to?",6427
"04:26 pm July 3, 2015                    I've applied Scrum in a Lean Startup context, as have many others. Key challenges include establishing the organizational assurance of agile practice, and also maintaining & further improving entrepreneurialism in Product Ownership.          Log in or register to post comments",6427
"04:43 pm July 6, 2015                    Hi Ian,  The challenges are very diverse, every startup is unique and so its challenges seem to be too.  I have also done this for a number of years.  The thing that I am running in to at the moment is:  * how to choose between the (rather absurd) number of frameworks for scaling.    * deciding how much scaling we actually need, when.  We have grown to three software teams and a 'business team'.  Because we build apps, our product backlog has relatively few dependencies, which means the teams can operate without too much need for integration.    But we do on occasion have to work on the same piece of product at the same time and as we grow, that will be happening more often.  Ideally I would like to find some way of switching between Scaled Scrum and Big Scrum according to the thing being worked on.  That way we can avoid the extra overhead of scaling when we don't need it.  Is that a situation you have come accross?          Log in or register to post comments",6427
"12:31 am July 7, 2015                    At an intermediate stage of enterprise scaling it  can be advantageous to establish a Scrum Studio model. Refer to the book ""Software in 30 Days"" by Schwaber & Sutherland.  Also, consider setting up an innovation lab where ideas can be tested before they are accelerated into production. The lab should be staffed jointly by Business & IT and should exhibit a high level of autonomy.          Log in or register to post comments",6427
"04:53 am July 10, 2015                    I like that idea a lot.  Coincidentally the autonomy and alignment discussion is very actual at the moment - getting a group of people to solve scaling would both increase involvement and help to solve the problem.  We do similar studio's for designing apps and even did a design studio to rebrand the company.  Thanks for the suggestion.          Log in or register to post comments",6427
Log in to reply,6427
Messages,6245
"12:55 pm February 8, 2015                             I studied the Scrum guide, the Scrum handbook, Scrum glossary, the book ""Scrum and XP from the Trenches, the book ""Agile Development, did take an official scrummaster course, several times the open assessment (100%), a test assessment with 80 guestions (12 wrong answers). Last but not least did the PSM1 exame and.. did not pass (16 wrong answers). Several question were quite unexpected. I found out that a lot of questions also can be found in the open assessment for practitioners. But this knowledge is not to be found in the earlier mentioned and adviced study material for PSM1. What can i do now to pass next time? Please advise.",6245
"06:14 am February 10, 2015                    I doubt it's ""pass as many times as you like"", though am not sure (haven't found any reference to this or to the contrary)          Log in or register to post comments",6245
"08:00 pm July 7, 2015                    Hello Oscar.   I reviwed a Simulated Exams for PSM I and wrote an article about my opinion.  It really can help you to get more prepared for passing on PSM I.  Here is the link: http://getscrum.com/2015/05/28/psm-i-simulated-exam-review/   I hope you enjoy it.  Hugs and Peace.          Log in or register to post comments",6245
"11:47 am July 8, 2015                    Hey Oscar, sorry to hear that you couldn't pass the exam however i got a question for you. Do you just want to pass the exam or want to earn strong groundings in scrum framework and its methodologies??   If it's second one then read scrum guide thoroughly, take 1 page a day and try to understand every single term. Scrum guide is key along with all three open assessments. I'll also recommend to go through other posts, queries asked in this forum. you will learn more and so confidence will go up. no need to waste money on buying question banks. and in this way you will definitely pass with big numbers.  If its first one then lots of pages in forum are asking to buy this or that study material .. you can go for them.  Scrum Guide itself says Scrum is difficult to master but that doesn't mean impossible to master! :-)  All the Best.  Scrum on.          Log in or register to post comments",6245
Log in to reply,6245
Messages,6297
"06:21 am March 27, 2015                             Good ideas  1. Open assessment available with scrum guide and resources to read. Corrected answers available!  2. Responsive from scrum support team. Fast, good communication.  3. PSM Exam platform is fast, works fine on Chrome.  4. PSM Exam pointing number of corrected questions is great help.  Improvement  1. Open assessment .   -It should include some more complicated questions as in real exam to give you an idea about real difficulty  -There should be bigger database of questions.  -There should not be repeated questions like who is on scrum team – appears usually twice.  2.  Scrum guide should be in a few places more precise and clear - pointed in other my posts.   3. PSM exam. The questions are sometimes to ""test your English"" rather than scrum knowledge. Sometimes it uses words not common for non-native speakers. Questions might be long as the answers are.  4. PSM exam. The Submit Forward button should not be replaced by Save and Finish. It should also ask you to reconfirm the finish - you might easily finish the exam without intending to do so. In open examyou confirm finish.  Advice  1. Use open assessment -  note that It is EASY. Scoring there 100% is a must but means relatively nothing.  Scoring 100% means that you MEMORIZED set of about 40 questions, from which a few will be on exam (out of 80). Try to understand why the other answers are wrong, try to refer it to scrum guide and scrum main concepts.    2. Reading scrum guide is not enough, you must understand the framework in depth. Use online videos, links from previous posts and make sure that you understand what really main concepts in Scrum mean. E.g. self-organizing teams mean that authority is completely left to the team. They organize themselves, work etc. There is no standard management involved. This may be not aligned with your experience and ""common sense""!!! Even in companies using scrum!!!  3. Reading many Times scrum guide is useless - read it in a way you understand it not quantity but quality!!!  4. The experience is not that crucial on that exam as stated in previous posts, of course when you do something it requires usually more in depth understanding so it is a way but not a must. Be careful with experience with ""scrum"" - your organization might not use really scrum.  5. Prepare yourself from English perspective - make familiar yourself with wording in Scrum Guide, open assessment, links to make sure you understand the words in the context they are used.  6. Read questions carefully and answers too. Repeat reading question when you do not get it. Take care about how many answers are pointed as to be correct.  7. PSM course - depends who runs it I believe is not needed, their objective also might differ this is not a course to prepare you for the exam, but give general overview of scrum.  Good luck  Romek",6297
"07:23 am March 29, 2015                    Hi Romek.  Do you recommend videos to watch before making the PSM I exam?   Can you provide their URLs on YouTube?  Thanks.           Log in or register to post comments",6297
"02:59 am March 31, 2015                    Dear Ahmad,  I looked for anything related to scrum and Ken and Jeff on youtube - there were some links in previous posts.  It is difficult now for me is to point exact videos as I did not store the links.  Videos will rather give you general overview than exact knowledge.  Cheers,  Romuald          Log in or register to post comments",6297
"12:21 pm April 3, 2015                    Thanks Romuald! :)          Log in or register to post comments",6297
"08:03 pm July 7, 2015                    Hello Ahmad.   I reviwed a Simulated Exams for PSM I and wrote an article about my opinion.  It really can help you to get more prepared for passing on PSM I.  Here is the link: http://getscrum.com/2015/05/28/psm-i-simulated-exam-review/   I hope you enjoy it.  Hugs and Peace.          Log in or register to post comments",6297
Log in to reply,6297
Messages,6247
"08:42 am February 9, 2015                             Hi Team,    I have gone through the Scrum guide, and have also read this book -   http://www.amazon.com/Agile-Softwar...with+scrum    Apart from this, I am now scoring 95-100% consistently in open assessment.    Can I go for the PSM-1 certification now?    Quick question, once I buy PSM-1 assessment, I understand that I can take as many attempts as I can but is there a timeframe in which I need to complete it?    Thanks    Girish",6247
"04:35 am February 25, 2015                    Girish,  you buy only one attempt. If you fail, you can buy as many additional attempts as you want, but I suggest you look more deeply into how to prepare. This post might help you:  https://www.scrum.org/Forums/aft/264          Log in or register to post comments",6247
"05:02 pm March 26, 2015                    Here are some tips to make sure you are ready:  http://agileanswerman.com/question-how-do-you-pass-the-professional-scr…  Good luck!  --Ryan          Log in or register to post comments",6247
"07:57 pm July 7, 2015                    Hello Girish  I reviwed a Simulated Exams for PSM I. I think it can help you to get more prepared for passing on PSM I.  Here is the link: http://getscrum.com/2015/05/28/psm-i-simulated-exam-review/   I hope you enjoy it.  Hugs and Peace.          Log in or register to post comments",6247
Log in to reply,6247
Messages,6360
"10:24 am May 15, 2015                             Hi all  Am new to this world of PSM certification. Was wandering do I need to go through all the 15 suggested books in 5 different sections before sitting for the PSM exam or can I pick up one book from each group to gain some good understanding before sitting for the certification?  Professional Scrum Master Subject Areas  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…",6360
"05:17 am June 1, 2015                    Hi,  Best Wishes for your exam preparation. There are infact many feedbacks from colleagues on this forums you can find about this topic, however, I can refer you to my experience as well, perhaps this may be of some help:  https://www.scrum.org/Forums/aft/1057  Regarding your question, reading as much as possible is indeed very helpful but not required if you have experience in working in SCRUM teams and you are witnessed to SCRUM events, participated in SCRUM products.   Only mandatory reading: The SCRUM Guide. do download and read multiple times at low pace , underlining each word and understanding the same. Try to rephase your own understanding on each section if you like.   Best Regards,  Hemant          Log in or register to post comments",6360
Log in to reply,6360
Messages,6357
"05:26 am May 9, 2015                             Firstly, thanks everyone in the forum. I have got so much help and information of the test from your experience.  Before I took the PSM I test, I tried the Open test of Scrum Master and Scrum Master Developer for many times. And I always answered the questions 100% correctly. But I can only answer 30% - 40% questions correctly in the Open Scrum Master Practitioner test. As a result, I lost some scores for the Scrum Master Practitioner questions.  So my experience is that we need to take all the three open tests and make sure we can answer all the questions in PSM and PSMD because we can check the answers after the test. I do not know the correct answer of the Practitioner questions since I can only get a score after the test. So please just try your best to get a higher score in the Practitioner test before you take the PSM I test.  I plan to work on PSM II. How should I prepare for it? Are there any books or videos or tests which can help me to prepare for it? Thanks.",6357
"03:36 am June 1, 2015                    Congratulations!          Log in or register to post comments",6357
Log in to reply,6357
Messages,6148
"09:04 am November 17, 2014                             I want to improve my knowledge in scrum, and I need an online course or any consultant to resolve some of my major doubts.  Any tip, link, contact or help you can provide me with?",6148
"03:56 pm November 17, 2014                    Hi Fernando,  I recommend posting specific questions here in the forum and usually many people, myself included, will be happy to help answer your questions.  I also recommend the scrum guide if you have not read it already.          Log in or register to post comments",6148
"06:51 am November 18, 2014                    Thanks Tim, I'll follow your advice.  Is it ok if I bring here some specific examples and ask how do you manage with scrum?          Log in or register to post comments",6148
"08:07 am November 18, 2014                    Of course. That's what the purpose of this forum is.  I recommend taking a PSM course and working in a SCRUM Team to gather experience.          Log in or register to post comments",6148
"08:13 am November 18, 2014                    Thanks Ludwig. I would like to take a PSM course, but in the city I live there is no courses available, I should travel 1000 km to get one and it is not a real possibility at this moment. That is the reason I was looking for an online course.  In the company I work for, we're in the way to implement scrum, I'm in charge of that and we're trying, but after years thinking I know how scrum works, I'm finding several issues in my understanding of scrum.  If you  know a good online course, please send me a link. In the meanwhile, I'll keep using the forum, so far, I'm getting very good answers.          Log in or register to post comments",6148
"02:46 pm November 18, 2014                    What questions do you have Fernando?          Log in or register to post comments",6148
"06:57 am November 19, 2014                    Thanks Tim, I've already set the questions in other topics:  https://www.scrum.org/Forums/aft/1175  https://www.scrum.org/Forums/aft/1174          Log in or register to post comments",6148
"09:06 am November 21, 2014                    I would like to know if some user stories are well written. Is it ok if I share them here in order to have community opinion about it?           Log in or register to post comments",6148
"01:59 am June 1, 2015                    In these days, Online courses are playing a vital role in the present education system. They help to improve our skills.           Log in or register to post comments",6148
Log in to reply,6148
Messages,6347
"09:07 am April 30, 2015                             Hi All,  I found that the references mentioned for both PSM I and PSM II are the same.   I already read all these books and passed my PSM I with a good mark.   What should I do next to prepare for PSM II exam ?   Thanks.",6347
"07:50 am May 26, 2015                    Hi Ahmad,  Although I have not written the PSM 2 yet, however I intend to do it sooner. so I can say that I am a co-sailer with you on this boat :).  I like to share what I am following. I am regressively re-viewing and re-readin everything once again. There are some books that are recommended on this SCRUM.org site.   As I understand, PSM II questions expects one to write subjectively as well, I am rehearsing to write as well.. my own understanding on a topic from the Scrum Guide. This helps me to rephrase things in my own words.  I hope this gives you a new dimension .. wish you a very good luck ! I wish PSM II was not that expensive. :) not the technicality of the exam but the cost of it makes me bit nervous .. :) - on lighter note. :)  Best Regards,  Hemant          Log in or register to post comments",6347
"11:19 am May 29, 2015                    I have read this question a few times, but I have not seen an answer yet. It remains a mystery          Log in or register to post comments",6347
"12:00 pm May 29, 2015                    Ahmad, i wrote an article yesterday in order to help people in this situation.   Its a review of an material focused on the PSM I Exam Preparation:   PSM I Simulated Exam Review  http://getscrum.com/2015/05/28/psm-i-simulated-exam-review/   I hope it will help you.  Hugs  Eduardo Rodrigues Sucena          Log in or register to post comments",6347
Log in to reply,6347
Messages,6366
"07:00 pm May 25, 2015                             Hi,  I was really confused about the following topics and needed some guidance:  1)Definition of done- when can this be changed or updated? Is this during or prior to the sprint planning?  2)Sprint backlog- does the sprint backlog frozen after sprint planning? Or can development team add new PBI items to it during the spring backlog?  3)When can we consider the PBI complete?  4)Development team refuses or does want  to participate  in one of the scrum events, what can a scrum master do in these cases?  5) How can a scrum master facilitate the communication between the PO and development team?",6366
"04:38 am May 28, 2015                    Hi,  Here my thoughts:  1. DoD is a living document. It changes, usually during retrospectives, with introduction of new practices for higher quality (i.e. technical practices). It influences the team estimated velocity for the next sprint - how many Story Points the team think that could deliver.  2. The Development Team can change its Sprint  From the Scrum Guide: ""As new work is required, the Development Team adds it to the Sprint Backlog. As work is  performed or completed, the estimated remaining work is updated. When elements of the plan  are deemed unnecessary, they are removed. Only the Development Team can change its Sprint  Backlog during a Sprint.""   3. When respects the Definition of Done and is accepted by the Product Owner  4. One of the role of the Scrum Master is to coach the team. The team members should understand why it is important to participate on an event, what is the value of that event for the team.      Probably is for the team members is the old power of habit. To change old habits is difficult but not impossible. It starts with agile values and principles, with why we do what we do. It takes time to have the Agile Mindset.     You can do some trainings/presentations for your team regarding the agile values, principles or you can ask a professional agile coach to help you.   From Scrum Guide: ""Coaching the Development Team in organizational environments in which Scrum is not yet  fully adopted and understood.""  5. Inviting PO and dev team at the scrum events and do an introduction about the importance of the event. Why we do it? What's the value? How can we improve?      Let the dev team and PO discuss and keep the discussion on track.     Do the artifacts available for everybody and work on the clarity: the same understanding. Dev team and PO should have access the product backlog and sprint backlog and the work remaining in the sprint using different tools like burndown chants.     Create an open atmosphere at the retrospectives. Give everybody the time to express her/his feeling. As Scrum Master  you can say: Let's go around the table and hear everyone.     Keep the events timeboxed.     Coach the PO and dev team about the importance of the events.     Building trust between dev team and PO.      Work on transparency.     The most important thing I think is for everybody is in the same team: devs, PO. And having the one boat mentality. “Unus pro omnibus, omnes pro uno”           Log in or register to post comments",6366
"07:16 am May 28, 2015                    One small addition to 2): Keep in mind that there is flexibility in the Sprint Backlog, the Sprint Goal remains fixed.  From the Guide: During the Sprint:  - No changes are made that would endanger the Sprint Goal;  - Quality goals do not decrease; and,  - Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned. If the Sprint Goal becomes obsolete, the Product Owner may cancel the Sprint - which should be a rare exception, however.  Also note that the Sprint Backlog consists of WHAT to do in order to achieve the Sprint Goal (the Product Backlog Items) as well as HOW to do it, which may relate to a level of tasks.  Guide: The Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and realizing the Sprint Goal. The Sprint Backlog is a forecast by the Development Team about what functionality will be in the next Increment and the work needed to deliver that functionality into a “Done” Increment.          Log in or register to post comments",6366
"07:40 am May 29, 2015                    For 1) I agreed with Daniel, in addition to what he mentioned i want to state statement from Scrum Guide:  ""During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of “Done” as appropriate.""          Log in or register to post comments",6366
Log in to reply,6366
Messages,6363
"10:46 am May 17, 2015                             Dear Sirs,  Even I got PSM I, but I am still like beginner of Scrum Framework. So, please forgive me if I ask some very ""newbie"" questions.  Actually, I got this list question on the internet: http://www.certifytoinspire.com/wp-content/uploads/2013/01/Sample-Quest…  And I tried to answer it, I got 80% correct answers but there are 20 questions I got wrong answers. So could you please explain me?  I understand in this question list "" Agile leader"" = ""Scrum Master"", Customer + Product Owner. Am I wrong?  My wrong answers : 2, 5, 7, 15, 21, 26, 29, 49, 53, 54, 58, 60  Here are my questions, please teach me! Thank you in advance.  1. Who manages project budget?  2. Who create business processes diagrams?  3. Who  monitors the realisation of benefits in the business case?  3. When a new requirement emerges, who assess for importance?  4. Who  control of Scrum project progress? When project ends?  5. Why this statement is fales: "" A scrum team is self-organizing, with each member having the same technical skills""?  6. Why ""During an iteration (sprint) (timebox) the developers should be able to contact the customer to clarify aspects of the work""? I remembered Customer (in this term, product onwer) only appears on Scrum event day.  ""7. Why """"An independent facilitator will manage the structure of a facilitated workshop  but not   input to the content"""" in stead of Product owner?""  8. Why ""Tracking project issues in an Agile project is the primary responsibility of the Scrum Master?  9. Which of the following is a characteristic of a Scrum Master: process oriented or supportive (not both)?  Best regards,  M.Truong",6363
"01:32 pm May 18, 2015                    1. Scrum doesn't specifically talk about the budget  2. Is a business process diagram needed? I would say the team/Product Owner would decide if one was needed and if so, that work would be prioritized in the backlog respectively.  3. The Product Owner is accountable for realizing value   4. The team is in control of how much they deliver & when. The Product Owner is accountable for ordering the backlog, to try and maximize value. Scrum doesn't specifically state about when to end a 'project'. I imagine it 'ends' once enough value has been realized and another 'project' that has more value to be realized is deemed more important.  5. The scrum team should be cross functional, with different skill sets, being able to take an idea to 'done'.   6. To clarify things as they go, to decrease the feedback loop and to ensure the right thing is being built. Better to do that upfront/as you go, rather than after you have built something, because then the cost of change is exceedingly high.  7. Not sure what you're asking here. My assumption is that you are basically asking 'what is having a neutral facilitator important?' I assume that to be a scrum master. As they can stay objective, help the team navigate conflict and they always have 'the teams' best interests at heart. The product owner should be heavily focused on the product, the team on the quality and the scrum master should help each of them understand that and work harmoniously together.  8. I disagree with this, it sounds like a company policy, rather than something scrum prescribes. However, tracking improvements that need to be made or impediments that need to get removed highlights this to the whole team and keeps it on focus, so that it can be achieved.   9. I would say they are more focused on process (they are a Scrum Master after  all). But they are extremely supportive and encouraging to the team.  Hope some of that helps.          Log in or register to post comments",6363
"02:11 pm May 19, 2015                    The author of these questions is D J Tudor, who I'll gamble is Dorothy Tudor of the DSDM Consortium. It looks like these questions relate to an ""agile foundations certificate"" as opposed to a Scrum qualification.  Questions 7 and 8 would make sense in DSDM, but rather less so in Scrum.          Log in or register to post comments",6363
"04:06 am May 20, 2015                    Thank you Tim an Ian!  It's very kind of you. I understand a little bit more.          Log in or register to post comments",6363
Log in to reply,6363
Messages,6365
"05:29 pm May 18, 2015                             Hello,  I've got some questions, your help on the matter is much appreciated.   1. Is the DevTeam allowed to deploy each task to the production server (during the sprint) once it's done and accepted by PO?  2. Our DevTeam is from Spain and they don't speak english very well, however our SM can speak english. Is that acceptable when PO talks to DevTeam through SM (she knows the project well).  3. How do you manage a situation when DevTeam constantly have a lot of urgent tasks (almost 30% of the sprint time) during the sprint? They can't wait until the end of the sprint.  Thanks",6365
"04:22 am May 19, 2015                    Hi,  1. Yes  2. Not ideal but it should work   3. The context switching consumes a lot of energy. I think is better to have 1 or 2 team members forming another team that have the main focus solving those urgent tasks. The new team can work on a kanban board.   For example on the project that I work there are multiple scrum teams and one DevOps team. For the scrum teams we have a scrum board in jira and for DevOps we have a Kanban Board.   Regards,  Daniel          Log in or register to post comments",6365
"07:59 am May 19, 2015                    > 1. Is the DevTeam allowed to deploy each task to the production  > server (during the sprint) once it's done and accepted by PO?   In a Scrum, a Development Team should aim to deliver a potentially releasable increment by the end of each Sprint. The increment should be releasable at the discretion of the Product Owner. The Development Team may be needed to deploy the release onto a production server, but they should be able to do so immediately, and with no further work remaining in order to do so.  Can you explain how the ""tasks"" you refer to support this practice?           Log in or register to post comments",6365
Log in to reply,6365
Messages,6346
"05:09 pm April 29, 2015                             Hi All,  I need some expert advice.  I want to start my career as Scrum Master. I have done Scrum Master certification and come from HR background.  How can one gain practical experience in Scrum and start as Scrum Master?  Thanks",6346
"12:58 pm May 11, 2015                    Neha,  Good to know about your interest in Scrum. I have found it very effective for software and non-software projects.  I understand that you've done SM certification - that's a good starting point and as you are inquiring - working as a team member in a Scrum team is the most effective way to learn.  If there is an opportunity in your organization where Scrum projects are executed, jump in!   Yes, jump in, start pulling the problems in a Scrum team and solving them. While this is an informal way to get an entry in a Scrum team, your senior management will look at it as your leadership quality.   I am sharing this advice because I did so way back in 2008 when I did not even have a Scrum Master certification - and management of my organization recognized it as a good leadership quality and helped me in gaining practical experience using Scrum. Eventually, I took the certification but I must say that the earlier practical experience I had contributed a lot.  Also, to be successful as a Scrum team member, you must be ready to lose your individual title and start working as a servant leader who solves the problem. I wrote this piece of article in 2012 which might be helpful to you: https://www.scrumalliance.org/community/articles/2012/may/seven-things-…  (there are lot of comments and criticism on the article and you'll see different point of views there)  To me, Scrum is entrepreneurial by nature. If it is an employment and the senior management does not see value in it and does not buy into Scrum as a concept, it is difficult to succeed as a ScrumMaster. In those cases, you might look for organizations where Scrum practices are welcomed.          Log in or register to post comments",6346
"06:31 am May 12, 2015                    could anyone suggest the best book/course material for preparing PSM -I. I have just completed foundation level certification.          Log in or register to post comments",6346
"01:41 pm May 18, 2015                    Read the Scrum Guide, over and over again. At least 15-20 times.  Take the Open assessment tests - all that are available!  Read blogs - Ken Schwaber, Mike Cohn + any other ones of interest!  Read forums like this - see what are the real world problems and how scrum might go about solving them.  Contribute to the forums and ask questions - people are always willing to help out.           Log in or register to post comments",6346
Log in to reply,6346
Messages,6362
"02:41 pm May 16, 2015                             Hello,  I am hoping the more involved members may be able to help, I am looking at the SPS event in London and am extremely interested however I notice that scrum.org currently doesn't have any certifications regarding Scaled Professional Scrum.  I am PSM 2 and have studied other scaled methodologies e.g. SAFE and LESS and have worked on some large scale agile programmes however I am particularly interested in SPS, the issue I have is I work for a consultancy and without a specific certification exam available to demonstrate the knowledge gained/achieved over time is a hard sale to my company to send me on this? Is there any certification exam in the pipeline?   Thanks  Aaron",6362
"10:27 am May 18, 2015                    Hello Aaron,  It's great to hear of your interest in our Scaled Professional Scrum program! In an effort to deliver immediate value to those seeking to increase agility in their organizations and scale and manage Scrum projects successfully, we are happy to have released the first increment of our SPS program; the SPS course.  Though it is too early to project a release date, please know that Scrum.org is indeed planning to develop a Scaled Professional Scrum assessment for certification. As further details about the release of our SPS assessment/certification becomes available, we'll be sure to post this information on our site.  Thank you and enjoy your day, Aaron!          Log in or register to post comments",6362
Log in to reply,6362
Messages,6302
"02:42 pm April 1, 2015                             Can the PO delegate the ordering of the Product Backlog Items to DevTeam or Stakeholders? I know DevTeam can write user stories and that the PO is 100% responsible for the PB. But what can't the PO delegate?",6302
"03:20 pm April 1, 2015                    Accountability for the Product Backlog cannot be delegated. If an action (such as ordering) is entrusted to another party, the PO remains wholly accountable for that order. This includes handling any queries or concerns about the order chosen.  Product Ownership is not a committee, and the visible competencies of the role must be clearly vested in a single authority. In other words, any delegation of actions must be a private matter of trust between the PO and his or her delegates.          Log in or register to post comments",6302
"04:12 pm April 1, 2015                    1. So the PO can delegate the ordering of the PBI's?   And this means: When the PO goes to the Sprint Planning meeting the PO accepts the delegated ordered PBI's in the Product Backlog?           Log in or register to post comments",6302
"05:52 pm April 1, 2015                    > So the PO can delegate the ordering of the PBI's?   A PO can privately delegate actions to competent parties while remaining publically and clearly accountable. A PO can entrust the Development Team to advise on an appropriate ordering that reflects technical dependencies, for example. The action of identifying a suitable order would be delegated to them.  > And this means: When the PO goes to the  > Sprint Planning meeting the PO accepts the  > delegated ordered PBI's in the Product Backlog?   No. It means that the PO can take the advice of entrusted delegates into consideration. The PO remains accountable, and therefore any advice about Product Backlog ordering may or may not be followed.  The order of the backlog cannot be changed without the PO's consent. The PO must be in a position at all times to explain Product Backlog order in terms of how it maximizes the delivery of value.           Log in or register to post comments",6302
"09:24 am April 2, 2015                    Thank you very much, I found that feedback very clear and helpful.          Log in or register to post comments",6302
"03:01 pm May 16, 2015                    I think the Scrum Guide is pretty clear that the PO can delegate ""PBL mgmt""  work (as defined in the SG) to the Dev Team.  They *cannot* delegate accountability or responsibility for making sure that PBL mgmt work gets done competently -- as is expressly also stated in the SG.    Also, they are not explicitly allowed to delegate anything else.  For instance, the PO's responsibilities at the Sprint Review, or to attend the Sprint Retro -- these are not things the PO is allowed to delegate.    Just the ""legwork"" of PBL mgmt can be delegated.    I often say that the PO owns the decisions in the PBL, and owns the responsibility of making sure the legwork gets done.  The decision of who(PO or Dev Team) does what legwork?  Primarily up to the PO.   Does that help?           Log in or register to post comments",6302
Log in to reply,6302
Messages,6353
"05:46 am May 7, 2015                             Hi,  Is there any posts here related to Scrum of Scrums?  Appreciate any feedback as I am currently preparing for PSM 1 exam.  Thanks,  Emman",6353
"06:21 pm May 7, 2015                    https://www.scrum.org/Blog/ArtMID/1765/ArticleID/12/Resurrecting-the-Mu…          Log in or register to post comments",6353
"01:48 am May 8, 2015                    Thank you Charles!   I just passed my PSM 1 exam today.          Log in or register to post comments",6353
"01:05 am May 12, 2015                    Sweet! Congrats!          Log in or register to post comments",6353
Log in to reply,6353
Messages,6356
"08:13 am May 8, 2015                             I need help from someone who is better at the English language than I am :)  There is particular statement in the open practitioner assessment:  ""How the organization discusses and plans the work of creating software will be reflected in the implementation of that software.""  It is a bit embarrassing but right now I could not explain the meaning of this in my own words. That probably means that I did not fully understand it...  Could anyone try to describe the meaning of this sentence in his or her own words?  For context: It is one of the answers to this question:  ""Technical systems can be decomposed to composite elements, from the large to the small. Basic components may be represented as activities, workflows, functions, features, capabilities, and other similar nomenclature. How does this system decomposition affect Scrum Teams on scaled projects?""  Thanks in advance!",6356
"11:33 am May 8, 2015                    I have been in a discussion in this forum about this question.   I reject this answer. Not for it would be untrue. It is extremely true. But it has no more meaning as the statement: When you make pancakes a certain way, the pancakes will be created that way.  This answer in the context of a discussion of organizing the scaling of software creation is imo meaningless.           Log in or register to post comments",6356
"04:53 pm May 8, 2015                    > But it has no more meaning as the statement:  > When you make pancakes a certain way, the  > pancakes will be created that way.   You could pretty much build a machine for making pancakes and work it by turning the handle. That can't be done for software, because the creative process behind it is less deterministic.  Stage-gated lifecycles attempt to impose determinism upon the software process. Once ingredients are fed in a handle is then turned. All too often though, failure results due to requirements decay and other variables.  Scrum uses empiricism to improve predictability, whilst framing variability in terms of the people involved and the practices they follow. I think that's the issue the question is trying to draw out.          Log in or register to post comments",6356
"04:43 am May 11, 2015                    Thanks, that helped a lot. I like the pancake machine example! That sentence really had me confused.           Log in or register to post comments",6356
Log in to reply,6356
Messages,6214
"05:06 pm January 18, 2015                             Hi! In the scrum guide I didn't find an answer for a quite important question - who should decide about who should be in which team and how the teams should be large - when talking about 100+ developers... Are it developers themselves, who decide? Or should it be done by PO/SM? Thanks for advices.",6214
"09:55 am January 20, 2015                    Hi Martin,   you are right, the Scrum Guide covers the development, but not the team building. This is a complementary practice and described ""elsewhere"", e.g. in the book ""The enterprise and Scrum"" by Ken Schwaber.  The Scaling Scrum approach is actually to bring the 100+ developers in one room and give them the task to build teams of 3-9 people. This supports self organization and puts responsibility where it belongs. You can help them a lot by presenting the Product Backlog and other useful context information.  Best, Ludwig          Log in or register to post comments",6214
"04:25 am January 21, 2015                    Definitely not Scrum Master who chooses who should be in the team as he is not a Project Manager.  Product Owner can choose and structure the team composition.   Ideally though the development team self-organise and form the team composition. As an SM, I've pushed it back to the team to form themselves quite many times :-)          Log in or register to post comments",6214
"01:21 am May 6, 2015                    It usually is better to get the development team self-organize and form different teams. PO/SM ideally do the tasks but sometimes it is better to leave the decision on the development team itself.          Log in or register to post comments",6214
"02:55 am May 8, 2015                    Hi Martin,  Figuring out the difference between team management and scrum leadership can be delicate, and it sounds as if you've hit on one of the areas where the two sometimes overlap. Organizing a large collection of developers into productive teams isn't easy.   One of the advantages of Scrum is that the team organization isn't something that has to be permanent. Unless the organization insists that each developer commit to one team and never shift, the ability of teams to learn and adapt is a very helpful. At the retrospective for one sprint, the team may realize they need a developer with a different skill set, and reach out to the organization to bring someone in. Or a developer may find a strong interest in another team's project and move to that team.  Managers are responsible for keeping track of the workers and making sure everyone is engaged and productive. Scrum masters can help by encouraging participation and transparency, so teams can learn and adjust as their needs become clearer. Product owners may be able to provide some guidance, but the decisions should rest with the managers, and be informed most strongly by the team's own self-reflected needs.  I hope that was helpful. If your situation is very different from what I described, I'll be interested to hear how you approach it.           Log in or register to post comments",6214
Log in to reply,6214
Messages,6342
"05:50 am April 27, 2015                             Hi All,  I failed today by 1 question (this seems to be an oddly popular failing score), I am irritated though as I faced many questions about topics that simply don't exist in the scrum guide, for example burn-down charts and extremely rare situations. I feel this to unfair and to have been lulled into a false sense of security by the repetitive nature of the questions in the open assessment. Add into this the fact that no information is provided on incorrect answers or even accurate areas of deficiency leave a student irate.  I love learning about scrum genuinely but can help feel mislead by the inclusion of so many questions about items that in my understanding are not actually part of scrum. Please could someone explain their inclusion, as its hard to understand how an exam on a subject can include things that are not actually part of a subject.  Thanks  Kieran",6342
"02:14 pm April 27, 2015                    Hello Kieran,  Thank you for your continued interest in Scrum.org and for your message. We are sorry to hear that you did not achieve an 85% or higher on your recent attempt at the assessment. We appreciate your request for more information on your assessment, and your continued drive to learn Scrum.   Bear in mind that passing our professional-level assessments for certification is an indication of a certain level of mastery of Scrum. As these are difficult assessments, simply reading the Scrum guide with little or no practical experience, or without supplemental study, is often not enough to achieve a passing score. Please also note that all Scrum.org assessments use the most recent version of the English Scrum Guide as the source for questions regarding the rules, artifacts, events, and roles of Scrum. As such, if you have been using other resources to study (like SBOK), those materials may not be in line with what has been agreed upon as the definitive source of Scrum.  We highly recommend following as many of the steps as you can on https://www.scrum.org/Assessments/Ways-to-learn-about-Scrum to improve your Scrum knowledge and increase your chances of passing the assessment.    Please be aware that the Scrum Open Assessment is a study tool, and will not have the same level of difficulty as the professional-level assessments. We provide detailed feedback with specific questions and answers on the Scrum Open Assessment to help people grow their knowledge of Scrum. We are unable to provide the same level of transparency for our professional-level assessments, because we feel that doing so would inhibit learning.  Another important thing to keep in mind is that the PSM I is not merely a test of knowledge, but an assessment of understanding. You can easily be told *what* the correct answers are, but we want to ensure that our certificate holders understand *how* to correctly and successfully implement Scrum, and *why* some answers are correct while others aren't.  Simply telling you the questions and answers would not improve your understanding of the framework and principles. This is why we provide feedback in the form of a bar graph depicting how well you scored in each category, so you can better direct your studies in the areas you are weakest in.  We also highly suggest that you refer to the subject areas score breakdown (bar graph) that was provided once you concluded the assessment and also in the email you were sent after the completion of your assessment. This bar graph displays how well you scored in each of the subject areas assessed on the assessment.   We encourage you to then navigate to and review the PSM I Subject Areas page available on our website at the following link:  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…  You may then wish to reference the suggested reading materials in order to further improve in those areas that need strengthening, as depicted by your bar graph results. These steps should greatly help in guiding your future studies and in building up Scrum knowledge and understanding in the areas where you scored lower on the assessment.  We hope you will find this information helpful.           Log in or register to post comments",6342
"04:12 am April 28, 2015                    Thanks for the response but you have not actually answered my main question, I will reiterate;  Why are items like burn-down charts that are not actually part of scrum included in the assessment?  (in addition I am aware of SBOK but have not used it in my learning for the reason you stated)          Log in or register to post comments",6342
"07:33 am April 28, 2015                    Thanks Scrum support, as i also resonate with Kieren ( having failed myself). but your explanation does help a lot and after going through lot many discussion questions in this forum. i understood, the difference of passing Vs understanding.          Log in or register to post comments",6342
"11:13 am April 28, 2015                    Hi Kieren,  I actually appreciate that the PSM I assessment goes beyond the rules of Scrum (The Scrum Guide) and asks some questions about strategy as well.  Although not mandatory in Scrum, Sprint Burndown charts are a very popular and useful tool for teams. Do you not think that a Professional Scrum Master should know what they are?  When you go back and look into things like burndowns more and then retake the assessment and pass, my feeling is that you will look back at the assessment and appreciate that it wasn't just a regurgitation of the basic Scrum Rules. It has some teeth and passing it means something more than your ability to read and remember the guide.  If I had to guess, I would say that the foundational rules from the guide are good for about a 75% score on the PSM I assessment. To get to 85%, you will need to rely on some strategy, best practices, and experience.  Don          Log in or register to post comments",6342
"02:07 pm April 29, 2015                     Hi Kieren and Richin  The subject areas you will be tested on are in this content, as you will see is that to be a PSM is more than just a tick in the box affair, attendance course or WBT certification. The guide is what it is but the exam syllabus covers much more.  This is why the PSM and PSPO courses are the toughest out there, and they are if you do the research between organizations. My advice is look at the broader picture for PSM just knowing the guide will not get you 85% as they want you to take it beyond the guide to add value to teams.  Areas of subject testing  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…  PS don't be frustrated, you will crack it and when you do will be worth it.          Log in or register to post comments",6342
"03:47 pm May 7, 2015                    Hi,  Why don't you provide questions / assessments similar to the ones in an exam? For example you can find loads of similar questions for PMP exam, and you still can't pass it if you don't understand it...           Log in or register to post comments",6342
Log in to reply,6342
Messages,6350
"07:29 am May 4, 2015                             Hi everyone, I have some questions relating the product backlog. The questions reads:  - How do you gather requirements for the product backlog?  - How do you transfer the knowledge you gathered for the product backlog to the rest of the Scrum-team and make sure they understand it correctly?",6350
"03:15 am May 5, 2015                    The short & quick answer is: you don’t.  ===  The Product Backlog is a list of features, functions, requirement fixes etc.   Keep in mind that:  1)	The PBI should be understandable and negotiable by both the users and the developer, so you don’t want documents that are only understandable by software engineers. (As in traditional requirement management)  2)	Also requirement gathering is part of the development work in the sprint and not (as in waterfall) an upfront activity of an analyst  3)	These are two reasons that a light weight specification like User Stories are used quite often in Scrum: it is even more high level as use cases & scenario’s and thus understandable by non-tech guys.  If requirements are identified before a sprint starts, sure document them anyway you see fit.   But try to make requirements elicitation a team effort, so that people that will do programming/testing are also involved.           Log in or register to post comments",6350
"01:49 pm May 7, 2015                    - How do you gather requirements for the product backlog?    The Product Owner maintains the product backlog. They should capture what the team requires in order to include this in an increment of software.   - How do you transfer the knowledge you gathered for the product backlog to the rest of the Scrum-team and make sure they understand it correctly?   During refinement? The team need to understand the item before committing to providing this item. How the development team refine, document, develop & test the item into working software is down to the team. If you understand something, explain it to the team. You never know, there may be dragons!          Log in or register to post comments",6350
Log in to reply,6350
Messages,6351
"10:58 am May 4, 2015                             Hey folks!  I learned that a BPI should be independend from other things. Actually I'm planning a game development project.  Therefore I already gathered some BPI in the Backlog Meeting.  http://puu.sh/hB99p/2c6e05680d.png (Picture Link)  In the link above you can see several of them.  I pick out one: ""User presses up arrow to make character jump""  This actually nice but it depends of some architectical things like the control system being implemented first.  Now how can I get these independend? It's a user story and a user won't have anything to do with the architecture of a game.  Should I define another ""User Group"" ?  Like ""The Developer can implement controls to the game to create interaction""  or ""The Developer is able to implement controls into the game engine"".  I hope you get my point?  Thanks for your help in advance.  Charlie",6351
"11:34 am May 4, 2015                    Hi Charlie, it looks to me like your PBI's are not only the what and why but also the how.  Instead of saying ""press up to make the character jump"". What about saying ""the character must be able to jump"" and let the team come up with the best way to solve that problem.            Log in or register to post comments",6351
"11:48 am May 4, 2015                    well scrummethodology.com taught me WHO, WHAT, WHY so I kept that pattern.  So you say PBI should be simple WHAT/WHY and the Scrum Meeting where Tasks are being declared should be the place where the team approaches the best way to solve a problem?  That leads to one concern in my head.  ""The Character must be able to walk"" - Team discusses and says ""We need to implement a control system""  next PBI:  ""The Character must be able to jump"" - Team discusses and says again ""We need to implement a control system""  You know what I mean? I would like to keep out cloned Tasks anyhow :/ is this possible anyhow?          Log in or register to post comments",6351
"09:46 am May 5, 2015                    Hello Charlie,  It's a good question.  Really you can not always get all the PBIs to be independent. The starting point is that both the development team and the product owner know that dependency. One way to remove that dependency is to unify the PBIs which have a common dependence on a single PBI. If the resulting PBI entails an acceptable effort that can be done in a Sprint, it could be your solution. If, however, it is not acceptable in a single Sprint, is there a completely logical order to be followed? If for example, the character must jump before any other action (move or jump), you have no problem in assuming that the work will be done in that PBI and the rest of PBIs will be made later. If that is not the case you can create a more generic user story and series of specific User Stories, for example:  Move the character. As a gamer, I can use a key, so that I'm able to move.  Jump. As a gamer, I can use arrow up, so you can jump.  Change direction. As a gamer, I can use a key, so I can move in another direction.  Thus, all tasks and the weight will fall on the first User Story without really indicate what action (moving or jumping) is being estimated.  Regards.          Log in or register to post comments",6351
"10:14 am May 5, 2015                    > Now how can I get these independend? It's a user story and a  > user won't have anything to do with the architecture of a game.   What matters is that at least some business value is delivered each and every Sprint. In other words, it's fine to concentrate on getting an architecture in place as long as something of use to stakeholders is made available in a potentially releasable increment. This could just be one or two user stories which early adopters can then evaluate.  A sensible approach would be to choose stories which exercise as much as possible of the architectural foundations being developed. Sometimes these stories are referred to as ""tracer bullets"" as they are fired through an emergent architecture and thereby validate as much of it as possible in a timely manner.          Log in or register to post comments",6351
"10:43 am May 6, 2015                    We tend to assume that we have to come up with the perfect architecture right away. Your example: ""We need to implement a control system."" Sounds to me like its about THE control system.  In our case, we try to start with only as much architecture as is necessary to implement the first features while avoiding obvious dead-ends. We take it from there and remind ourselves to accept rework. As Ian says above, the first features will prove if we are on the right track. If not, it is okay to take a different approach.  So in your example, I would formulate it like ""we need a control system that allows the first feature(s) and seems like a reasonable approach, knowing that more features will come.""          Log in or register to post comments",6351
"04:34 pm May 6, 2015                    Alright guys thanks for the advices!  I think I can get along with the fact that the task which would define the ""implement control system"" could also be called ""implement control systematics to jump"" & ""implement control systematics to walk"".          Log in or register to post comments",6351
Log in to reply,6351
Messages,6337
"11:20 am April 21, 2015                             I am working as a Product Owner for 4 months - so excuse me for asking the obvious...- and I notice that my team sometimes forgets to bring the finished sprint items to production. My question is: if the purpose of a sprint is to deliver potentially shippable increments and directly after a sprint, the next one starts, when are these the potentially shippable increments brought to production? Or am I to strict here in interpreting the SCRUM guide?",6337
"11:08 am April 23, 2015                    Hi Martijn,  Scrum does not prescribe how and when to release the increment of product. Once the increment is usable and meets the Scrum Team’s definition of ""Done"", the Product Owner decides whether or not actually release it. What, when, how or to whom release are technical and business issues.  If in your case, all PBI finished should be released, you can agree to modify the DoD.  Regards.          Log in or register to post comments",6337
"11:50 am April 23, 2015                    Each increment is cumulative and so includes all previous increments. This means that work done in a previous increment will, by definition, be made available in any subsequent release.  The decision to release lies with the Product Owner. Each increment should be potentially releasable, with no work left undone. This means that the PO should be in a position to release a delivered increment immediately and without any further dependency on the Development Team.  If the PO decides not to release an increment immediately, and to defer release to a future date, then that is his or her prerogative. However, waste will then be incurred as the value of the increment will be subject to depreciation and any return on investment will be put in delay.          Log in or register to post comments",6337
"03:27 am April 24, 2015                    Ian, thanks for your response! You mention that the PO should be in a position to release a delivered increment immediately, without any further dependency on the Development Team. At this moment I am not able to release an increment: I do not have the technical knowledge. Is it advisable for me to learn how to do this; to be able to release using our through Ansible playbooks (which we use in our team)? Or should I delegate this to our developers, or both.. Hope you can tell me your views on this.          Log in or register to post comments",6337
"10:01 pm April 25, 2015                    You could use any of those approaches. What matters is that you are able to effect a release immediately, so that no business or market opportunity is lost. Some teams use a high level of automation, including feature-flipping, to allow Product Owners to release on demand.          Log in or register to post comments",6337
"11:46 am April 29, 2015                    In our case, most teams do not release after every Sprint and the release process is (sadly) not automated. So our Product Owners decide, based on their Product Backlogs, at which points they would like to release. Together with their dev teams they put those ""release tasks"" into their backlogs, rank & estimate them accordingly and make them part of a Sprint. That way the release ""overhead"" is part of Sprint Goals and Scopes, making the whole thing transparent and plannable.          Log in or register to post comments",6337
"07:59 am April 30, 2015                    > Together with their dev teams they put those ""release tasks"" into their backlogs,  > rank & estimate them accordingly and make them part of a Sprint.  When are these release tasks planned into a Sprint Backlog? Is it being decided, during Sprint Planning, whether or not to include these tasks? If they aren't included, is it therefore being planned *not* to have a potentially releasable increment by the end of the Sprint?          Log in or register to post comments",6337
"11:31 am May 6, 2015                    Ah, good question. What I called ""release tasks"" is not what is needed to get a potentially releasable increment - they are needed to actually release the increment(s) of one or more Sprints. We still strive to be potentially releasable after each Sprint.  We are in an IT organization and share the systems with many other teams. Those systems have pre-defined release slots and releasing something into those slots still comes with quite some internal overhead. While we are slowly making progress towards improving this, we are still far from great. That is why our POs sometimes decide to skip one such slot because they feel that they do not yet have enough value to warrant the effort of a release.  This was not meant as a good example for handling releases in Scrum; it was meant to share that we do not release after each Sprint and how we handle our (still) non-automated releases.          Log in or register to post comments",6337
Log in to reply,6337
Messages,6344
"08:55 am April 28, 2015                             Many Development teams working in the same code creates coordination problems which can be sufficiently addressed with a comprehensive branching and merging model in shared version control  True or false  as per me its true. as version control and code merge needs to be call of the hour..",6344
"05:44 am April 30, 2015                    Many Development teams working in the same code creates coordination problems which can be sufficiently addressed with a comprehensive branching and merging model in shared version control  True or false  as per me its true. as version control and code merge needs to be call of the hour.. Can a tool really completely solve all challenges of coordinating human beings? Is there a tool that is so good that people do not have to talk to each other anymore?          Log in or register to post comments",6344
"05:58 am April 30, 2015                    There are tools like Mercurial, GitHub which makes the merge process better than SVN.  But there can be a completely non conflicting code, which also is of high quality, but totally useless and functionally conflicting to end user. This kind of problem cannot be avoided if people do not talk to each other.           Log in or register to post comments",6344
"07:14 am May 6, 2015                    Thanks All          Log in or register to post comments",6344
Log in to reply,6344
Messages,5558
"03:17 am September 7, 2013                             Hello  I have recently been transitioned to PO role from the scrum master and is looking for a PSPO course in India. Do you guys have any plan of doing so in near future? Also for appearing in the PSPO I exam, is it mandatory to attend a PO class?  Cheers  Sanjay",5558
"05:05 am September 8, 2013                    Yes, the course seems to be the only route for PSPO I. Scrum.org courses in India are rare. We need more PST's to come over and cover more cities more frequently. What we currently have cannot even be termed as a start.  http://courses.scrum.org/classes/asia/in  --Bhuvan.          Log in or register to post comments",5558
"09:13 am September 8, 2013                    Yep, I agree on the PST's  I am still looking for any alternative way to apply for PSPO 1 exam, anyone has any idea?  Cheers  Sanjay          Log in or register to post comments",5558
"04:31 am February 2, 2014                    This is what I have recently heard -   At this time, only students who have taken a Scrum.org PSPO course with a Professional Scrum Trainer (as certified by Scrum.org) is allowed access to take our PSPO I and PSPO II assessments. Please note however, that although this is our current policy, that within the next 6 months or less we will be changing this policy and detaching these assessments from our course. This means, in 6 months or less, you will be able to purchase an attempt at the PSPO I assessment from our website whether or not you have attended a Scrum.org PSPO course. For the time being however, an individual still needs to take a Scrum.org PSPO course in order to gain access to our assessment.   Cheers  Sanjay          Log in or register to post comments",5558
"04:25 am February 21, 2014                    https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…          Log in or register to post comments",5558
"06:04 am February 21, 2014                     Thanks Bhuvan for the update  Cheers  Sanjay          Log in or register to post comments",5558
"02:52 am December 2, 2014                    Hi,      I am also planning to take up PSPO 1 assessment, I have completed PSM 1 assessment & passed.  Please let me know any of the following if you know.  1. Scrum.org training in India for PSPO  2. Any material covering all subjects of PSPO  3. Any other tips for PSPO 1  Thanks  Senthil          Log in or register to post comments",5558
"04:37 am March 4, 2015                    There is a 2 day training on the 12 &13 of March in Bangalore.  Follow details to register: http://www.prowareness.com/Scrum-Product-Owner-Training          Log in or register to post comments",5558
"10:49 am May 4, 2015                    Thanks Robin, I will try that.          Log in or register to post comments",5558
"03:23 pm May 5, 2015                    Hi,  you can do the assessment without the course.  Preparation has been discussed in this thread: https://www.scrum.org/Forums/aft/1400/afc/6093  Thanks  Simon          Log in or register to post comments",5558
Log in to reply,5558
Messages,6349
"11:53 pm May 1, 2015                             Hi,  I have a question.  1. If stakeholders ask to deliver no of features very soon (say in very short time) how do we do this and give a reply to stakeholder?  Thanks",6349
"07:47 am May 5, 2015                    Hello Resign Designs,  The Scrum Master has to lead the adoption of Scrum in the organization and, among the forms to serve the organization, the SM must help to understand Scrum and how to interact with the different members of a Scrum Team. Specifically here it must be clear that the decisions of PO must be respected.  The PO is accountable for explaining to stakeholders the PB and forecasting when the team could complete certain features or which features could be completed for a fixed date.  It seems to me that a change of mentality and create a framework of trust is necessary. A great opportunity is the Sprint Review, in which the PO can invite stakeholders and tell them what has been done and what has not, answer questions about the product increment, check the prodcut backlog, the forecast, the budget, etc.  Regads.          Log in or register to post comments",6349
Log in to reply,6349
Messages,6175
"01:47 am December 12, 2014                             I used scrum at my last company, and for about the past year with my current employer.  I also have a lot of experience (20+ years) with various Waterfall methodologies in both commercial and government projects.  One issue I still seem to have with Scrum is regarding dependencies in doing systems development.  Systems development involves not just writing a piece of software, but designing and deploying the hardware and networking infrastructure to deploy a full system.  This may involve dealing with multiple colocated sites serving as primary and backup (disaster recovery) sites as well as deploying other environments such as testing and staging environments.  There are a lot of ""stories"" that are associated with designing, procuring, and deploying such a system.  My understanding of scrum says that there should be no project plan, or planning of tasks and dependencies.  To be honest, I can't see how to plan out such a project without identifying the major tasks and their dependencies (ala a Gantt chart.)  This seems to be a problem especially when those responsible for performing some of the  tasks in such a system development project are not working for my company, but work for one or more other companies which are not on our Scrum team and likely do not even use Scrum.  The logical answer is that we can use Scrum for the stories/tasks for which my company is responsible...true.  However, some of the stories that we have to complete are dependent on some of these other tasks that these other companies have to complete.  It seems to me that as a team, we have to be able to track and visualize those external tasks upon which we are dependent and understand how and when they will be completed in order to accurately plan our product/sprint backlog.  How do we account for such complexities in a project when scrum seems so inwardly focused on individual features and simply lining them up in a sprint backlog, and does not seem to account for cross team dependencies on larger projects...or perhaps I'm just missing something.",6175
"04:06 am December 13, 2014                    It's perfectly reasonable to plan out multi-team dependencies so that they can be minimized, and so that the release of business value can be achieved at the lowest risk. Planning can be at task, user story, or any other level and it may involve teams from different organizations. Indeed this collaboration is to be encouraged.  The important thing in agile practice is for the release of value to be frequent and incremental, and subject to inspection and adaptation by those doing the work. This means having business sponsors who can articulate that value in incremental terms through their own representatives on the teams. They must also be able to make use of deliverables that are completed iteratively every few weeks, and provide relevant and timely feedback. Do you have that kind of sponsorship for incremental delivery in place?          Log in or register to post comments",6175
"01:13 pm December 14, 2014                    Yes, we do.  While the various participating organizations (and customer) do not use Scrum per say, they are supportive and like the fact that incremental enhancements can be shown.          Log in or register to post comments",6175
"02:36 pm December 16, 2014                    Incremental delivery is the best single thing you can do to manage project complexity. Delivery risks around inter-team dependencies are then effectively timeboxed.   Each participating team must engage in joint Sprint Planning so a fully integrated potentially releasable increment can be delivered. Replanning may be necessary during each Sprint...holding a regular Scrum of Scrums may help.          Log in or register to post comments",6175
"08:39 am January 23, 2015                    Did you already have a look at the Agile Project management manual by DSDM? This will fill in some of the gaps you describe as the method does make use of delivery and deployment plans and describes more roles and responsibilities. It also makes it possible to combine scrum teams with non scrum teams.          Log in or register to post comments",6175
"02:32 pm May 3, 2015                    Thanks, I will look into this.  This sounds like it addresses a lot of the problems I am experiencing.  I am also looking into Disciplined Agile Delivery (DAD).          Log in or register to post comments",6175
Log in to reply,6175
Messages,6348
"09:56 am April 30, 2015                             I have some concerns sharing backlogs with our clients because of the level of transparency. Instead i prefer to only share a critical path release plan. I would be interested to hear your feedback and thoughts on the matter.  Here are some of my concerns.  •	We bill many of our Clients based on time spent, but not everything that goes through the Sprints is billable, the Critical Path allows us to only include work which is billable  •	We often end up fixing bugs and issues that the Client is not aware of. I’d rather not highlight the number of issues we get which we fix “on the quiet”  •	Clients want to attribute a time cost against each task done which can be related back to a £ value. This doesn’t really work with Backlogs as points correspond to effort not time (we’ll often update the Critical Paths retrospectively with the correct amount of time)  •	Some task estimates are likely to raise questions from Clients. E.g. Yellow Team velocity is 1.5, and they have estimated a text change on the site at 1 point, which rounds up to 1 day (don’t charge out work at less than a day). I wouldn’t want to show a client that we are billing them a day for a text change.  •	There is a huge amount of detail in the backlogs and everything is written as a story... Ideal world, every Client would understand story writing, agile, and points estimates, but bottom line is they aren’t interested, they want Client Services to manage that bit for them. Clients prefer less detail, top level of task done, time taken, cost.",6348
"11:32 am April 30, 2015                    > I have some concerns sharing backlogs with our clients  > because of the level of transparency.   It's up to the Product Owner to decide how and when to share information with stakeholders. Are you the PO?  > Instead i prefer to only share a critical path release plan.  > I would be interested to hear your feedback and thoughts on  > the matter.  What purpose does a Critical Path serve with regard to your releases? In Scrum, each increment must be potentially releasable.  > • We bill many of our Clients based on time spent, but not  > everything that goes through the Sprints is billable, the  > Critical Path allows us to only include work which is billable   Why isn't everything that goes through the Sprints billable? If work provides value, and incurs a team cost, then why isn't the PO accountable for a corresponding stakeholder investment? If the work doesn't provide value, why is it being done at all?  > • We often end up fixing bugs and issues that the Client is not  > aware of. I’d rather not highlight the number of issues we get  > which we fix “on the quiet”  If you are the Product Owner, then it is up to you to manage stakeholder expectations regarding product quality. However, a PO would also be responsible for maximizing the value provided by the Development Team. Defects and rework are a type of waste, and a good PO will work with the team to reduce this.  > • Clients want to attribute a time cost against each task done  > which can be related back to a £ value. This doesn’t really work  > with Backlogs as points correspond to effort not time (we’ll  > often update the Critical Paths retrospectively with the correct  > amount of time)   In Scrum, value lies in the incremental delivery of working product. It does not lie in tasks done or in the satisfaction of a critical path longer than one Sprint.  > • Some task estimates are likely to raise questions from Clients.  > E.g. Yellow Team velocity is 1.5, and they have estimated a text  > change on the site at 1 point, which rounds up to 1 day (don’t  > charge out work at less than a day). I wouldn’t want to show a  > client that we are billing them a day for a text change.  Task estimates are provided by the Development Team for their own purposes, and no client has the right or the responsibility to question them. The purpose of estimates is to allow a Development Team to decide how much work it can take on in a Sprint. In an agile environment, this decision does not have to be explained or justified to anyone outside the team. Clients should determine whether product increments deliver sufficient value to them, and this position should be understood and represented by the PO.  > • There is a huge amount of detail in the backlogs and everything  > is written as a story... Ideal world, every Client would  > understand story writing, agile, and points estimates, but bottom  > line is they aren’t interested, they want Client Services to  > manage that bit for them. Clients prefer less detail, top level  > of task done, time taken, cost.   It is the Product Owner's responsibility to explain the Product Backlog to the relevant stakeholders. The items on it should be produced in a collaborative spirit of refinement, involving the PO (who is accountable for the associated value) and the Development Team (who are expected to understand them and subsequently do the work).          Log in or register to post comments",6348
Log in to reply,6348
Messages,6341
"01:22 am April 27, 2015                             Hi,       I've registered for PSPO 1 and have been giving open assessments repeatedly. But after a couple of attempts I I'm only getting repeated questions and scoring a 100% in that doesn't say much about my ability to crack the actual PSPO 1 assessment. Kindly let me know if there are other sources that would help me validate my readiness for the actual assessment.   I've been reading scrum guide and books on Agile Estimation and planning,User Stories Applied For Agile Software Development  by Mike Cohn. Do recommend some more good sources for prep on other areas that need attention ( ROI for example).  Finally, let me know if there's a time limit within which I should take the assessment after receiving the password.  Thanks much for your time and patience.",6341
"04:14 pm April 27, 2015                    Hi,  firstly, the open is a LOT easier than the actual assessment.  You will need to take the mind-set of a Product Owner: Value, Return on Investment, Total Cost of Ownership.  This video from Henrik Kniberg is a great summary: https://youtu.be/502ILHjX9EE   You need to cover the range of topics in the subject domain: https://www.scrum.org/Courses/Professional-Scrum-Product-Owner/PSPO-Sub…  I hope that this helps.  Regards  Simon          Log in or register to post comments",6341
"10:17 pm April 27, 2015                    +1 to Simon's response, and this link also might help:  http://ScrumCrazy.com/pspo1          Log in or register to post comments",6341
"09:11 am April 30, 2015                    Thanks Simon and Charles. Your sources were very much helpful .  As I had said earlier,  I'm looking for a way to test myself before taking the actual assessment. Something that would be at least close to the difficulty level of PSPO1. Currently taking demo tests from testtakeronline.com. I'm sure there's more to it. Would be helpful if someone can mention other sources to validate myself.  Thanks a ton!          Log in or register to post comments",6341
Log in to reply,6341
Messages,6327
"02:10 pm April 15, 2015                             You are the Scrum Master on a newly formed Scrum Team. Which three of the following activities would probably help the team in starting up?	  	A. Introduce a bonus system for the top performers in the team.  - no: b/c incentives are not part of Scrum, Dev Team needs no such incentives to create potentially shippable increment   	B. Ask the Product Owner to discuss the product or project, its history, goals, and context, as well as answer questions.  -Yes: empirical process understanding what is known, but what does the Dev Team need to know the whole products history.   	C. Ensure the Scrum Team members have compatible personalities.  -No: fit is important and communication but technical cross-functional skill-set trumps personality  	D.Have the development managers for each Development Team member introduce their direct reports and go over their responsibilities on the Scrum Team.  -No: No reports.  	E. Have the Development Team identify and discuss the process for turning Product Backlog items into an increment of potentially releasable software.  -Yes, However The Scrum Master would need to be involved in teaching the new team.  	F. Have the Scrum Team members introduce themselves to each other and give a brief background of their skills and work history.  -Yes: b/c this would give an understanding of technical knowledge of members on the Dev Team.",6327
"04:14 am April 22, 2015                    any right answers for the above query          Log in or register to post comments",6327
"10:16 am April 28, 2015                    it should be A & E          Log in or register to post comments",6327
"11:38 am April 29, 2015                    I agree with your answers (A and E). Just one comment about your reasoning for E:  E. Have the Development Team identify and discuss the process for turning Product Backlog items into an increment of potentially releasable software.  -Yes, However The Scrum Master would need to be involved in teaching the new team.   Why would you say that the Scrum Master has to teach this to the developers? Would this not imply that the Scrum Master must be an expert in this field and knows better than all the developers together? Or do you mean it in a way that the Scrum Master helps the developement team have this discussion and find their own process?          Log in or register to post comments",6327
"07:43 am April 30, 2015                    > You are the Scrum Master on a newly formed Scrum Team. Which three of the  > following activities would probably help the team in starting up?   >  Let's work through these one by one...  > A. Introduce a bonus system for the top performers in the team.  A Scrum Team should work in a collaborative manner so that valuable increments are delivered every Sprint. Team members are jointly responsible for creating these increments. A bonus system for top performers could easily compromise this position. This answer can therefore be rejected.   > B. Ask the Product Owner to discuss the product or project, its history, goals, and context, as well as answer questions.  Since the team is newly formed, it would make sense for the Product Owner to establish the background of the product, and the context in which the team is expected to work and deliver value. This is therefore a reasonable answer.   > C. Ensure the Scrum Team members have compatible personalities.   A Scrum Master is not in a position to ensure that team members have compatible personalities, or to assert that an element of conflict would hamper the team's creativity. This answer can therefore be rejected.  > D.Have the development managers for each Development Team member introduce  > their direct reports and go over their responsibilities on the Scrum Team.   Scrum does not prescribe a ""development manager"" role or an associated system of reports. This answer can be rejected.  > E. Have the Development Team identify and discuss the process for turning  > Product Backlog items into an increment of potentially releasable software.   A Scrum Team should work in a collaborative manner so that valuable increments are delivered every Sprint. Team members are jointly responsible for creating these increments. This is therefore a good answer.  > F. Have the Scrum Team members introduce themselves to each other and give  > a brief background of their skills and work history.   Since the team is newly formed, and its members are expected to work in collaboration, it would make sense for them to get to know each other. This is therefore another reasonable answer.           Log in or register to post comments",6327
Log in to reply,6327
Messages,6318
"04:07 pm April 10, 2015                             Hello!  I am the CSM for a non-profit with a small team of developers and testers.  As with a lot of non-profits, we are understaffed and have team members pulled in multiple directions to cover everything needed.  In our 1st year of implementing scrum, we had a fair amount of success and saw definite improvements in comparison to the team's old waterfall methods!  Now, that we are in the 2nd year, we seem to have hit a massive plateau and have not reached our sprint goals in the last 4 sprints.  The bottleneck seems to be UAT.  The users that are doing UAT are very understaffed and do not have dedicated testers on our scrum project.  So, things aren't getting done which prevents the team from getting things ""done"" and limits the amount of work the developers can get done per sprint.  So, does anybody have any suggestions on helping the team move forward?  Is it a matter of changing our DoD and not including UAT?  If that happens, all of our testing will back up.  When would we get that done and approved?  We're just stuck and I don't know what to do until we can hire more people!  Any ideas are welcome.   Thanks in advance!",6318
"04:57 pm April 10, 2015                    Can you explain why UAT is being conducted by an end user group rather than the team itself? Why isn't it a team responsibility to meet this part, as well as all other parts, of the Definition of Done?          Log in or register to post comments",6318
"05:12 pm April 10, 2015                    Fair enough . . . we took it literally and wanted to have at least one actual user that could be a part of the team for UAT in case anything got lost in translation between them and the developers.  As it turns out, we have 2 users involved doing that.  We still wouldn't mind having 1 dedicated user doing some testing but we don't have that luxury.    That being said, we are still learning . . . is it normal to not have any users involved in the team/UAT?  What do you recommend?  Thanks!          Log in or register to post comments",6318
"12:45 pm April 13, 2015                    > ...is it normal to not have any users involved in the team/UAT?  The expectation is that ""user involvement"" should be rather more pre-emptive than that. There's no proscription against including users as team members, or against having UAT activities. What matters is that team members aren't constrained by skills-silos. A silo (such as doing UAT) leads to bottlenecks, the delayed detection of errors, and rework. Your team is currently experiencing those issues.  In Scrum the Development Team should work with a clear Product Owner in order to deliver each increment. The PO may liaise with users so that requirements can be understood and conveyed to the team in a timely manner, and so that waste including defects can be avoided. This includes Product Backlog refinement, Sprint Planning, and ongoing collaboration with the team and stakeholders during the Sprint. I suggest you review the PO's responsibilties in this regard.           Log in or register to post comments",6318
"02:07 pm April 13, 2015                    Thank you, Ian!  This is great info and confirms what I've been thinking.  It is great to get these thoughts from a scrum veteran outside of our organization.  I'm actually getting with the PO and the director over the department tomorrow to discuss a re-boot and re-evaluate how necessary it is to have the users involved at the current levels.  It clearly isn't working and I hope they will see that so we can move forward!  We've gotten away from ""true scrum"" and we need to get back!  Thanks, again!          Log in or register to post comments",6318
"05:24 am April 30, 2015                    I don't know if this adds any more value so I keep it short: In our case, we lay the options Ian mentioned on the table with each new team. And they indeed chose different approaches. Some have a PO who is very close to end users and validates for them. In some cases, the PO IS an end user. Other teams include end users from other departments into their daily work. Others work with ""business enablement"" teams who join the Scrum teams and validate. Some teams tried one way, it did not work out, then they changed it and it worked better. Enabling the teams to make that call and choose different approaches turned out to be the right thing.          Log in or register to post comments",6318
Log in to reply,6318
Messages,6288
"06:13 am March 19, 2015                             The Guide says:  The sprint Goal is an objective set for the Sprint that can be met through the implementation of Product Backlog.  Should be:  The sprint Goal is an objective set for the Sprint that can be met through the implementation of selected for the Sprint Product Backlog Items.  Cheers,  Romek",6288
"11:03 am March 19, 2015                    Romek,  I had to do a text search on the Scrum Guide to find your quote. (Found it on page 9, Topic One, paragraph 3: What can be done this Sprint?)  I agree the text suggests that a sprint goal is to be met by implementing the ENTIRE Product Backlog.  I would like to suggest the following text:  The Sprint Goal is an objective that will be met within the Sprint through the implementation of **selected** Product Backlog **items**.           Log in or register to post comments",6288
"11:05 am March 19, 2015                    There is no such thing as implementing the entire product backlog. Product backlog is evolving as long as the product exists.          Log in or register to post comments",6288
"03:29 am March 20, 2015                    Hello Christiaan,  Thanks for your answer. Yes that is the quote. I was writing about.  Your suggestion is fine I believe, I wanted to put more emphasis on the fact of misleading wording in Scrum Guide.  Seems that most people do not read it in detail or presume that it is not really intended.  Cheers,  Romek           Log in or register to post comments",6288
Log in to reply,6288
Messages,6195
"06:16 pm January 2, 2015                             I've worked on a few Scrum projects now but have always been move involved with or lead the development (implementation) side of things based on stories that would magically appear on the backlog. The development of the stories would be discussed in stand-ups but not tracked as tasks on the board.  On my current project, I am leading the requirements gathering as well as the implementation and am looking for some advice around best practices for tracking the analysis/story building tasks vs. the development tasks.  This is a data migration project so there is arguably more work in developing the stories/requirements than actually implementing them.  My first inclination is to develop user stories specific to the requirements gathering similar to this: ""As a business analyst, I want to map customer fields from source system 1 to the target system schema so that a developer can implement the mapping.""  This would then allow another PBI to be created with a user story for implementing the customer field mapping.  My questions are:  1 - Does this approach make sense?  2 - Any other approaches?  3 - Is it normal not to track ""story building"" tasks as part of a sprint (this has been my experience)?  thank you,  Kevin",6195
"06:35 am January 7, 2015                    > Is it normal not to track ""story building"" tasks as part of a sprint  Product Backlog items should deliver value to the Product Owner. If they are written as user stories, this implies that each story will deliver something of value to  business stakeholders. The value of the stories inducted into each and every sprint must be potentially releasable as an end-of-sprint increment.  Authoring PBI's that don't contribute to the potentially releasable value of increments is something to be avoided. It would be better to conduct product backlog refinement sessions, in which requirements are brought into a fit state for Sprint Planning and forecasts can be made. This is the mechanism that the Scrum Guide provides for.          Log in or register to post comments",6195
"03:03 am March 13, 2015                    A common challenge while writing user stories is to handle a products non functional requirements. Its about an attribute and characteristic.  http://grannyflatsolutions.com.au/projects/           Log in or register to post comments",6195
"04:12 am March 19, 2015                    Hey Kevin,  Sounds like there is a firm separation between traditional development and design in your team? As Ian points out, the user story should result in (part of) an increment that consolidates to your Definition of Done and adds value to the business. Try to incorporate all the effort to deliver this value in a user story.   The plan for delivering that piece of functionality could be worked out as tasks that the development team sets up. These tasks represent all the work that needs to be done to complete the user story. It also helps to track progress during the sprint.          Log in or register to post comments",6195
"08:21 am March 19, 2015                    Thank you all for the feedback - the key gap here is one that I've seen often, especially in government and large enterprises coming from a waterfall model.  Business Analysts are building user stories which is good but their time to develop these stories is not tracked or planned for in a trackable way.  We are using a TFS scrum board and have created user stories for development which are the result of a BA user story about developing the requirements which feels wrong but is required so that stories don't span sprints and we can track the BAs effort.  Is there a better way to track the total effort, recognizing that non-agile organizations often can't build valid requirements quickly?  thanks,  Kevin          Log in or register to post comments",6195
Log in to reply,6195
Messages,6274
"02:58 pm March 3, 2015                             One of the biggest challenges of developing a digital product is accepting that your core development team may not be enough to get a complex product out the door quickly. Agile and scrum provide a framework for lean development, but what happens when it’s time to ramp up production from proof of concept to large-scale digital product?  It’s dangerous to assume that the same team patterns will be appropriate at every size of product development. For instance, you may think that if a core team includes two designers and two back-end developers, then a team three times that size must have six designers and six developers to deliver three times more.  Unfortunately, that is rarely the case for teams that need to rapidly scale production. It’s one of the dangers inherent to scrum: what works for an established agile team may not work when you need to expand.  Building Your Superteam  The biggest driver for team growth is – you guessed it – product growth. Once project scope grows beyond a certain point, your team will need to grow with it, as we encountered with a client who needed an automotive sales prototype. A single agile team delivered a proof of concept with basic functionality, which led to a new engagement for a rapidly growing complex digital product.  We knew early on that the single development team would not be enough to build the product quickly enough to get to market, so we began to scale our typical team up to a size large enough to design and build the heavyweight auto ecommerce platform.  We doubled our team size, and that doubled our output. Then we tripled our core team. Before we knew it, we had a superteam nearly five times as large as our standard development teams working together in one codebase, out of a single backlog, and it began to create significant challenges for the team and the product.  Hard Truth No. 1: At some point production will peak, and then it will plateau. It will be frustrating to see delivery slow, especially while using the framework you knew well.  When you begin to scale a product team, you’re going to hit a number of predictable – yet manageable – roadblocks. Here are a couple we encountered:  - How can you effectively measure velocity with a team of 20+? How do you account for differences in specializations, effort pointing scales and varying standards for metric tracking?  -Daily standups with so many hands in the pot started to burn significant development time. How can you save time and still keep the team updated on sprint progress?  -Product Owner attention was spread across the multiple features in progress. Can you feasibly secure design approvals for new features with development scheduled in the same sprint?  -Larger stories generally take longer to develop. How can you keep QA resources from getting swamped at the end of sprints?  Sprinting Through Your Product Roadmap  Every digital product we build is guided by a product roadmap. Product strategists work directly with clients to develop a firm vision that guides development by helping to narrow down a minimum viable product for initial release, prioritize features for future sprints and position clients to thrive in their market. While this can be useful when a Product Owner cannot devote his or her full attention to a project, it’s also an invaluable guide to scaling your agile team and allocating resources properly.  A product roadmap offers the opportunity to set goals at every level of development: daily standup procedures, mid-sprint check-ins, high-level feature release plans and sprint goals that must be finished for launch. Working in larger three-week sprints gave our superteam the opportunity to track goals and predict the necessary composition of the team as we moved through development.  You may need additional UX/UI designers early on to assist with digital prototypes, or extra back-end developers for engineering and database architecture as the product grows. The needs of the product should help dictate the makeup of your team.  As long as you have a clear understanding of your product roadmap and your team members’ strengths, you can add or subtract team resources as necessary without too many surprises.  However, relying too much on the specializations of your individual team members can become a pitfall.  The Problem with Subject Matter Experts  During a long development process with a large team, members of the team will naturally build product knowledge bases – they’ll become subject matter experts. You’ll have someone who deeply understands the brand design, another who ruthlessly hunts down bugs, maybe another who’s a mobile wizard. Experts are inevitable on any project, and they’re typically tremendous assets for an agile team.  However, as you scale an agile team (and the work it must produce), teams can become complacent and assume that your SME will handle any task associated with his or her knowledge base. It can be too easy for developers to fall into a mindset of “that’s not my specialty, but I’m sure he or she will get to it.”  That assumption is distinctly non-agile, and taking a step back to remember basic agile and scrum principles as your team grows can help remind everyone that they’re still, well, a team.  Hard Truth No. 2: The team dynamics that work for a team of 5 will probably not work for a team of 25.  The Solution is Right Under Your Nose  No matter how well you’ve planned for changes, however, the fact remains: a scrum team of 5 can operate much more efficiently than a team of 10, 15 or 20. That’s just simple team dynamics: mo people, mo problems.  But there’s good news.  Scrum already offers everything you need to get to a healthy development state. Here’s the obvious (yes, obvious) solution: Hold retrospectives every sprint, without exception. Try new solutions and make adjustments to your process.  Hard Truth No. 3: Your retrospectives may become painful. You might feel discouraged. You might doubt whether your superteam will find scrum justice.  And then you’ll start experimenting with potential solutions based on the needs of your team and your product. When you identify potential solutions in retros, focus on a few to implement and dive into during your next sprint. Some things won’t stick, and some problems will stay problems for several sprints. Keep your head up: over time, you’ll find strategies and workflows that meet your needs.  Here are a few that worked magic for us:  Just a note: if you’re not a hardcore scrum nerd, skip ahead to get a sense of what appropriate scrum scaling can do. If you are, welcome! Put your scrum hat on and dive in.  Team Member Specialties: It may not make sense to expand your initial team roles in a linear fashion. Growth should be circumstantial: multiple new features coming down the pipeline may call for an extra UX designer to balance the load, but if the new features are tech-heavy, it may be wise to allocate open team spots to skilled back-end developers. While a beautiful user experience is ideal, a broken experience is a broken product. Use your product roadmap to make smart decisions about your next team addition.  Effort Pointing Scales: We had to define a level point baseline to unite the multiple pointing scales from new teams added to the project. We chose a relative ~5 points for each developer per development day and set story examples, not hours, for that measure.  Particular Strength Velocity: We couldn’t reasonably use past sprints to calculate team velocity since the team structure had changed considerably each sprint, so we used the following equation:  Breaking user stories down into front-end and back-end elements will help match effort points to velocity and determine a more accurate sprint forecast.  Daily Standup Length: Rather than timeboxing the full group’s updates, we created a Google spreadsheet with a list of user stories, one tab per sprint day, that each distributed team could access to comment on progress from the previous day. If the forecasted story had an update, it was discussed in standup, and if not, it was skipped. We reserved all major roadblocks for the end of standup and released any roadblock-free developers before holding those longer problem-solving “Parking Lot” discussions.  Design Approvals: Development was moving so fast that there just wasn’t enough time for our Product Owners to review and approve feature designs on top of their other sprint responsibilities. We decided to break out our design team into a separate adjacent project team for new features to be designed, reviewed and approved an entire sprint before development. The designers soon became valuable story owners, helping to write acceptance criteria and answer developer questions throughout development.  Quality Assurance Overload: We beefed up our QA team to get more hands available for both in-sprint and regression testing. We planned a Pencils Down stopping point for new development followed by 2 full days of testing to give the QA team more time to tackle the inevitable flood of completed stories near the sprint’s end. Developers were available to fix any remaining in-sprint story issues, and some even began working on existing bug fixes for testing and launching with the next sprint.  Hard Truth No. 4: You will not get your first attempt at scaling agile perfectly correct. You’ll hit roadblocks and new challenges, but you absolutely won’t improve without transparent dialogue and process experimentation.  The results speak for themselves. We used to start slow and struggle to achieve our sprint forecast. Now our superteam is firing on all cylinders.  Your Next Superteam: Keep These Things in Mind  Consider breaking the large team up into smaller teams, potentially with multiple Scrum Masters. Depending on your project, you might split developers up by specialty, site feature/epic or even by release date. Remember: the smaller the team, the more manageable, with 7+/-2 being ideal.  Retrospectives are priceless. Never miss an opportunity to talk openly and honestly with your team about what’s working and what isn’t. Determine the most important issues and set goals for improvement in the next sprint.  Stay open-minded and remember to breathe. Scrum for 5 developers just isn’t the same as scrum for 25. You’ll need to adjust your mindset and process along the way.  Brush up on the basic agile principles you already know. You’re on a team. Communicate, support each other, ask for help and you’ll be amazed at how readily solutions will appear.  The above are ideas that have worked for us at 352, but it’s certainly not a comprehensive list. What are some tips you’ve learned from scaling agile? I’d love to hear from you!",6274
"06:27 am March 19, 2015                    TL;DR          Log in or register to post comments",6274
Log in to reply,6274
Messages,6278
"01:08 pm March 4, 2015                             As a Scrum Master, I have my first assignment coaching a new Scrum team (they're about 4 sprints old). I have training materials prepared on the basics, but in terms of attending their ceremonies, would you have any advice on the approach to take? Obviously they have a scrum master already (new) so I want to strike the right balance between teaching and not taking over.",6278
"04:16 am March 10, 2015                    Do not take over at all. Not now, not in the future. Coach the team into self organisation.   Observe, listen to what they have to say and give them advice in times of need.   If the team is completely new to Agile, teach them the basics. Observe what they do well and start building on that foundation. If they stray to far from the basics of Scrum, let them experience the consequences and guide them back.  Read ""Coaching Agile Teams"" by Alyssa Adkins. Great material.          Log in or register to post comments",6278
"01:50 pm March 10, 2015                    +1 on what Jasper said.  Understanding the difference between teaching, coaching, facilitating and mentoring will help you understand which hat to wear and when to wear it.  Treat the Coaching Agile Teams book like a bible.          Log in or register to post comments",6278
"10:38 am March 18, 2015                    Thank you guys. This advice is great and I have a much better idea on how to approach this          Log in or register to post comments",6278
"05:00 am March 19, 2015                    +1 that too!   Why can't we +1?  Who's the product owner of this forum?? :)          Log in or register to post comments",6278
Log in to reply,6278
Messages,6286
"09:30 am March 16, 2015                             Hello everyone!  I am at the beginning of my journey as a Scrum Master.  I would like to know if you have any suggestions in terms of:                    - practical tips/advices coming from real work situations                     - common mistakes to be aware of                   - aspects to have in mind for the future  Thank you in advance!  P.S. Sorry if this topic has already been addressed in the forum.  Best of luck!",6286
"11:47 am March 16, 2015                    Read the Scrum Guide many times over.  Read the 12 principles driving the agile manifesto many times over - each time there is an issue/problem on the team it can usually be addressed by 1 of the 12 principles.  Read blogs/forums for real life scenarios of issues encountered on projects and how they were overcome.  Have a friend/colleague play devils advocate and tell you how each piece of scrum won't work and is a waste of time  and practice how to respond with why it does work and what obstacles are in the way of it working.  Read up on product backlogs + backlog management - as you will need to be able to coach the product owner in their duties to keep the team progressing.  Attend some local scrum or agile user groups in your town - hear real life stories & issues from folks in your community.  Most of all - understand you are there to serve the team and remove impediments. These come in many shapes & sizes.          Log in or register to post comments",6286
"01:17 pm March 16, 2015                    Forget about command and control type of organization.  Start thinking in terms of value creation for:  1) The customer  2) The stakeholders  3) The Scrum Team.          Log in or register to post comments",6286
"02:59 am March 17, 2015                    Thank you, guys, for the answers and for taking some of your time to write them!  All the best!          Log in or register to post comments",6286
Log in to reply,6286
Messages,6259
"06:50 am February 20, 2015                             Hi,  I've read a few posts about having a single Master backlog with multiple teams but don't quite go into details about how the meetings are managed, especially with only one PO.  My current situation is this:  My current team in London, has just been added to another team in Scotland. Both teams are currently now one team working from the same Master and Sprint Backlog, with one Product Owner. This is causing all kind of issues  as the team is 17 people not including PO and Scrum Master. People aren't communicating well, not bonding etc.  My proposed solution is to break into squads. Have a co-located London team and co-located Scotland team. The issue I am having is that the PO is rejecting this idea. He doesn't like the idea that he would have to now have 2 sets of planning, 2 sets of refinement etc. He believes that he can't split the prioritized work among  2 separate teams and therefor we must be one team - personally I don't think this is an issue. He should now be getting more work done as he has got an entire team given to him.  I can't see any solution other than the PO having to do the work for both teams, or getting a PO for each team.  Does anybody have any other solutions to this or am i right in thinking the PO needs to do his bit for both teams.",6259
"10:32 am February 20, 2015                    > ...the PO is rejecting this idea. He doesn't like  > the idea that he would have to now have 2  > sets of planning, 2 sets of refinement etc.   If a Development Team becomes too large and chooses to self-organize into smaller teams that are more appropriately sized, then this is their prerogative. They may continue to plan work from a common Product Backlog that has one Product Owner, but would do so into their separate respective Sprint Backlogs.  Since there is only one Product Backlog, the teams may jointly share their Sprint Planning and Product Backlog refinement sessions. They may also need to hold a regular Scrum of Scrums to facilitate replanning and to remove any impediments to the delivery of the jointly produced increment.  > He believes that he can't split the prioritized  > work among 2 separate teams...  That isn't his job anyhow. It is up to the Development Teams to self-organize the work that is needed in order to meet the agreed Sprint Goal.          Log in or register to post comments",6259
"08:18 am February 27, 2015                    From Scrum Guide: ""Having more than nine members requires too much coordination."" and I felt it working as a SM. So 17 people sounds good for 2 scrum teams.   For better communication is important that people in a team to be  collocated.  Tobias Mayer says:  “Distributed teams are not teams;.."" http://www.energizedwork.com/weblog/2008/07/distributing-teams-is-a-sil…  Each context is different - but I will try to describe my experience - and hope something can apply to your project.      Context:  We are 9 teams in 3 different geographical areas.  We have the same Product Backlog managed in jira and the same PO (in the last time we have 3 ProxyPO)  2 weeks sprints  Our way:  We have only one Sprint backlog in jira and quick filters for each team.  Sprint Planning:      There is only what planning meeting with PO and all the team's representatives.     Topic One: What can be done this Sprint? The stories are moved from Product Backlog to the Sprint Backlog. We have the discussion what team will work on which stories. (1.5 h)     Each team will have: Planning Topic Two: how will the chosen work get done? - Split choosen User Stories into tasks. Come back to the PO is there are questions or there is to less/much work for the sprint (2.5 h)   3 times/week we have SoS (Scrum of Scrums). This purpose of this meeting is a Dev Team co-ordination so the representative should be a technical contributor. Being 9 teams it is important to solve the dependencies between team's User Stories ( Is anything slowing your team down or getting in their way? Are you about to put something in another team’s way?) 1h   Refinement (as needed) - preparing the stories for next sprints  We have stories grouped on epics - and each epic has assigned one team member to be responsible for coordinating his team the refinement for that epic. Usually the team that do the refinement will work on that story on next sprints (but is not all the time possible). Having agreed the same Definition of ready allow us to take stories refined by other teams.  Experiment, retrospect and adapt!           Log in or register to post comments",6259
"09:11 am March 6, 2015                    Hi Pete, I highly recommend reading about LeSS (http://less.works/), which is framework for scale SCRUM and is very similar to what Daniel said. We have 5 teams with 1 Backlog and especially the two phase planning works great for us.  Michal          Log in or register to post comments",6259
"03:17 am March 12, 2015                    Less is great :)          Log in or register to post comments",6259
"08:41 am March 13, 2015                    You can find an interesting article here:  http://blog.scrum.org/know-scale-scrum/  It says that there is a new 2 days training from scrum.org  Scaled Professional Scrum for Practitioners  http://courses.scrum.org/classes/show/2984  The Nexus: for scaling and managing large agile projects:  https://www.scrum.org/Resources/Nexus          Log in or register to post comments",6259
Log in to reply,6259
Messages,6250
"10:01 pm February 9, 2015                             While the Scrum Master plays a servant-leadership role to the P.O, Dev Team and organization, could it be interpreted/considered that the Scrum Master plays a ""management"" role  in some form or shape (e.g. due to impediment removal outside dev team's control, Scrum process compliance, championing/leading Scrum adoption in the broader org.) -- even though there are no management ""titles"" or ""positions"" in a scrum team and the Scrum Master plays this role from a collaborative, facilitative standpoint?  Thoughts?",6250
"04:15 am February 10, 2015                    > could it be interpreted/considered that the Scrum Master plays a ""management"" role in some form   Not a role. It's better to say that the SM has management *responsibilties* including the ones you have broadly outlined.  Management responsibilities are taken seriously in Scrum, to the point that all three roles have their parts to play.          Log in or register to post comments",6250
"12:05 pm February 12, 2015                    John  My interpretation is that the Scrum Master manages the Scrum framework, but doesn't manage the other Scrum team members.  This was the hardest concept for me to grasp in my initial studies of the Scrum framework. I think we are all  used to the traditional management approach. I was thinking of the Scrum Master as more of a Project Manager and not as a servant-leader to the other Scrum team members.          Log in or register to post comments",6250
"07:34 am March 12, 2015                    Can we way then that the SM is a facilitator for the Scrum Team and the organization.about what's included in the Scrum framework of a particular Scrum team???          Log in or register to post comments",6250
Log in to reply,6250
Messages,6284
"10:39 am March 10, 2015                             Hello,   i'm attending to the extra scrum classes and i've got some homework.    And my next task is:  "" The client agreed that the user stories you prepared (in pre vious  task) meet his requirements for MVP and your estimation. (1 month) is acceptable for him (in terms of his limited budget). Unfortunately. in the process your client constantly adds new, unplanned features which ca use the risk that you won’t meet the deadline. What would you do in such a situation? ""  So budget is limited, i can't spend more on resources. What would you do in that case? Is it possible to meet with new customer needs while meeting the deadling and due to his limited budget. So it is possible to somehow finish this project?  Or my answer to this question should be just: I'm really sorry but we only can do, what we agreed at begining, unless u just give us a bigger budget?  I'm a little confused and i'm wondering  what should i do in that case if i were ever a project manager.   And another question from me: I'm using Kenneth S. Rubin book for study, is it a good book for starting with Scrum?",6284
"01:48 pm March 10, 2015                     I would tell him that those additional features can be added to the backlog and prioritized against what else is in the backlog and it will get worked in priority order.  I would also tell the client that the 1 month sprint is like a bucket - only a certain amount of work can fit into the bucket. If he would like to change priorities, then something currently in the bucket would need to be removed to make way for the new item.          Log in or register to post comments",6284
"03:02 am March 12, 2015                    What Tim says.  And if the bucket is nicely prioritized, it's most likely the items lowest on the Sprint Backlog will not get done, because of the added work.          Log in or register to post comments",6284
Log in to reply,6284
Messages,6279
"08:08 pm March 4, 2015                             Hello,  I know that each sprint starts after the conclusion of the previous one but is there any other work is done before the sprint planning?  In other words; When does PO organize the Product Backlog for the Sprint Planning meeting? We may assume that during the Sprint he/she does it but isnt it required to review/organize again before the meeting?  I have one more question at that point.  If the team does not decide the Sprint Goal at the end of planning, can they start sprint without a goal? If Scrum Master sees that situation, what can he/she do at that point? Let them to start the sprint and advice setting a goal then talk during the retrospective? I mean, if Scrum Master oversee that that will be resulted as a failure, will she/he allow them to do that mistake?   Thank you.",6279
"04:39 am March 10, 2015                    Ok, so you have two questions.   1: When does the PO organize the Product Backlog?   This is one of the most important jobs of the Product Owner. So he/she does this throughout sprints, continuously. The PO involves the dev team for Backlog Refinement, talks to stakeholders etc.   Whenever the Sprint Planning starts, it would be a good thing that the Product Backlog is prioritizes and the user stories are clear to the team. If not, the planning session can be used to further clarify. Result is a plan for the next Sprint, and a Sprint Backlog that is determined by the development team.  2: Is a Sprint Goal required when the Sprint is started?  The Sprint Goal helps clarify what the team stands for in the upcoming sprint. In this particular case as a Scrum Master I would let the Sprint start without a Sprint goal and use the Retrospective to let the team create insight on why to use (or not to use) a Sprint goal.          Log in or register to post comments",6279
"05:06 am March 10, 2015                    Generally speaking, when the Sprint Planning Meeting time-box expired, the team starts the developpement of the new increment.  When the Sprint Planning Meeting is poor (not enough details, US not well refined, lack of acceptance criteria, no goal...), you have some good material to inspect and adapt at the Sprint Retrospective.  I observed that poor Sprint Planning Meeting leads to painful Sprint.          Log in or register to post comments",6279
"01:17 pm March 10, 2015                    Wonderful :)  Thank you a lot.  Jasper, I have one additional small questions about each item.  1) Your answer means that it is better and more benefical for the team, if PO organizes and updates the Product Backlog before the sprint planning meeting as well as updating during the Sprint . ?  2) At that specific case, what do you prefer to do, if you see that starting the spring will cause loss of money, time or etc. that may cause a damage to the project or company? Do you still let them to start the sprint or what is the solution?  Thank you.          Log in or register to post comments",6279
"09:00 am March 11, 2015                    In Scrum, a Sprint cannot commence without a Sprint Goal. There is no need to start with a fully planned Sprint Backlog as replanning can and should be done on a daily basis, but a Goal is essential.  Remember that a Product Owner has the authority to cancel a Sprint if it seems that the Sprint Goal is unattainable. Without a Goal in place the PO is not in a position to determine whether or not value is likely to be achieved.          Log in or register to post comments",6279
"12:55 pm March 11, 2015                    I have worked as a Product Owner as well as a Scrum Master on different teams.  Regarding the Sprint Goal.....   I have worked with a Dev Team (DT) that struggled with this at times. We could still continue the Sprint but I considered this a ""Scrum but.""   The idea, as a Scrum Master was to reflect this back to the DT quickly. Sometimes, the DT crafted the goal the very next day. Let us also not forget the recent update to the 3 questions, that places a further emphasis on the sprint goal -- this does have value.   If a Dev Team is struggling to craft a goal or ignoring this every Sprint, then there's a deeper issue.          Log in or register to post comments",6279
"02:59 am March 12, 2015                    I do agree with Nitin that if the team cannot or will not set a Sprint Goal, there's a deeper issue. This could be they don't have a well defined product. Or they are not willing to commit themselves to the Sprint goal. Or...   Use the retrospective to gain insights on what's going on with the Sprint goal. Or...  You say they're new to Scrum (4 sprints). You could just tell them they need a Sprint goal and teach them why. This will give them better understanding. Tell them to just do it and see what it brings them.  @Tugce: regarding your additional questions:  1: The PO updating the Product Backlog during the Sprint makes for a well ordered product backlog when starting Sprint Planning. :)  2: If there is a Sprint Backlog that the team is willing to commit to for the upcoming sprint and if there is a product you're developing, there is no need for the Sprint goal to be absent.          Log in or register to post comments",6279
Log in to reply,6279
Messages,6282
"06:25 am March 7, 2015                             I have 2-3 years of experience working in a scrum team 5 years ago as project manager and scrum master in a large organization. Later I had to relocate for personal reason and joined another large organization following waterfall methodology.   I missed working in agile environment. I am good at resolving team or organizational impediments, creating/managing processes and building winning teams.   I completed PSM1 recently and looking for an opportunity to start my career as Scrum Master.   I need to update my knowledge with the current Agile/Scrum techniques to win the opportunity in this competitive world so I can continue my career in Agile organization and advance my knowledge by working experience.   I am not sure what are the courses I need to complete and how to move forward. Could you please advise?  Thank you!",6282
"01:52 pm March 10, 2015                    Hi Meena,  I recommend talking to a few recruiting companies in your area - let them know your experience and what you're looking for. They will be able to help guide you in what your local market is looking for - which should help you determine what professional training you might need.  You can also browse job listings and see what requirements they are looking for.  I would personally recommended purchasing 'Coaching Agile Teams' by Lyssa Adkins. Great material in there.          Log in or register to post comments",6282
"05:59 am March 11, 2015                    I agree with Tim on the book. Almost done reading it. Great work.   There is a lot of great reading material out there. You could start here: https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…  Also, seek colleagues and people who are seeking the same goal for your organisation. Create a community within your company and let it grow. You will help yourself and the organisation further.          Log in or register to post comments",6282
Log in to reply,6282
Messages,6277
"10:48 am March 4, 2015                             HI People   Just reading around release planning and have a question around scaling it up for multiple dev teams.  We currently have 4 back end dev teams and 4 front end client team all running there own sprints. I was wondering what the benefits are of release planning and how, where, whose involved and when in the cycle does it happen.  Also how do you synchronise back log items that go on a release plan and items that go on sprint back log. Do you ahve 2 lots of back log items.  Any help appreciated.",6277
"01:53 pm March 4, 2015                    I've done different techniques in various companies. With my current employer, we are using epics to organise a set of user stories into a coherent customer-facing deliverable.   The epics have a target release defined, and there is either a technical lead or a project manager responsible for talking to the various Product Owners in the front-/back-end teams and making sure their priority and sprint planning takes the overall goal and release planning into account.  With JIRA (our tool of choice), you can use various epic reports to track the same.  We discarded the idea of single backlog across teams (or parallel backlogs) since management of said backlogs became too challenging.  I can go into more details of course - depends on how far you'd like to go.          Log in or register to post comments",6277
"04:31 am March 5, 2015                    Separate front-end and back-end teams will usually need to co-ordinate their release plans in order to deliver features of business value. You could therefore reduce the amount of release planning needed by re-organizing into feature teams instead. This will make it easier to orient a release plan around business needs rather than technical ones.          Log in or register to post comments",6277
"05:50 pm March 5, 2015                    Feature teams often bring more challenges than they solve. They don't work well when you have many small projects going at once, and they don't promote in-depth knowledge of specific components or engineering-driven improvements.  In some organisations they do work, but it's not the ultimate answer to the release planning question.          Log in or register to post comments",6277
"07:53 pm March 5, 2015                    The first consideration in release planning is to eliminate Development Team constraints. The focus must be placed squarely on the value that is yielded by each release to the Product Owner. Feature Teams are not essential to Core Scrum but they are a good practice, and hence their merits are given particular consideration when implementing Scrum at scale.  Development Teams that are not organized in terms of feature release are more likely to increase release planning overhead, including the communication that is needed to effect a release and having to resolve multiple integration points before the value of any one feature can be evidenced. It is therefore important to consider this matter first when optimizing release planning arrangements.          Log in or register to post comments",6277
"09:54 am March 6, 2015                    Theoretically this is all correct. Practically, feature teams come at a cost for the reasons named in my previous reply.  To add to that, developers do not work solely on one product or feature. They also support junior team members, deal with customer escalations, do maintenance on a component, have older projects that are being deployed etc. All of these require daily interaction between component owners, and feature teams go against that.   They are definitely worth considering though. From personal experience, tried feature teams on several occasions - each time performance was worse than with modular teams.          Log in or register to post comments",6277
"01:59 am March 7, 2015                    Feature teams may go against organizational assumptions about value and how it is best delivered. These assumptions are often reflected in an organization's configuration, such as by layer or by geography or by component.  Enterprise agility requires deep and pervasive change, and the sponsorship to achieve it while  an organization is in flight. A dip in productivity is to be expected when implementing feature teams, although it is a short-term one. This is recognized in the Scaling Professional Scrum framework. However, I'd personally agree that it would not be wise to set about implementing feature teams unless the appropriate sponsorship to do so is in place.          Log in or register to post comments",6277
Log in to reply,6277
Messages,6280
"05:19 am March 5, 2015                             I have heard that it is advisable to not bring in new backlog items into a sprint before all sprint backlog items are completed first.   Do you think it can be ok to not complete manual regression test tasks before bringing in new items into the sprint? (Since it makes more sense to do manual regression tests on a version that contain all the changes, so you don’t have to redo them later.)",6280
"06:15 am March 5, 2015                    It's up to the Development Team to self-organize and come up with the most effective Sprint plan.  What do you think the risks are likely to be though, if no item can be observed as being complete until the end of the Sprint?          Log in or register to post comments",6280
"09:17 am March 5, 2015                    How do you get a potentially shippable Increment without completion of the regression tests (manual or automated)? How do you know that the product actually ""works"" after the bug fixes, performance improvements, usability changes, etc, etc?   Deferring testing to a later sprint  increases technical debt. So, the discussion needs to be about trying to quantify the value that additional scope brings in versus the technical debt incurred by not completing regression testing?   Also, since the regression testing is manual, the cost of automating it should be weighed against the cost of manual regression every sprint. SO, the team and PO should also discuss the value of automation versus the cost of manual regression testing every sprint -- as the product grows, the manual regression efforts and time will increase exponentially.           Log in or register to post comments",6280
"10:30 am March 5, 2015                    Stop starting, start finishing   http://www.allaboutagile.com/stop-starting-start-finishing-unfinished-w…          Log in or register to post comments",6280
"11:27 am March 5, 2015                    ""Since it makes more sense to do manual regression tests on a version that contain all the changes, so you don’t have to redo them later.""  Regression Testing means to regress the application -- as coding is completed for each PBI -- to ensure that new changes (code or db changes) to the application did not introduce defects, cause integration problems or performance degradations to the application or parts of the application that were functioning and performing correctly before these changes were introduced. This is practical and feasible in an automated testing world and might be problematic in a manual testing environment -- which should be an impetus to do an ROI analysis on automated testing and accomplish that in future sprints.  High-performance scrum teams have automated tests in place which rapidly regress the application as new changes are introduced to the builds.  They may have execute partial smoke tests or full-blown regression tests, depending on how long the automated tests to execute. (Automated) Continuous testing and continuous deployment is how companies like Itsy do multiple deploys a day.          Log in or register to post comments",6280
"05:44 pm March 5, 2015                    Not all products and tests can be automated. Of course, some components may hit a 100% automation rate, but it's not an assumption that can be made anywhere.  It does make sense sometimes to do a single pass of manual regression that covers several changes in the same area, For example, we release every two sprints, run various levels of automation as sprint progresses, and then do an in-depth manual validation before releasing. We do get some technical debt, but: (a) it is mostly covered by automation, and (b) with a small team, we need to consider trade-offs between minor quality impact during sprints and extra effort on re-testing the same functionality prior to external release.          Log in or register to post comments",6280
"01:04 am March 6, 2015                     1. I agree with everybody that to consider automated tests is a good idea. In the scenario I am describing it is agreed that manual regression tests are needed.  2. I agree that generally the development team should come up with the most effective Sprint plan. That means that they should have the option to bring in more product backlog items into the sprint even if for example the task “Run manual regression tests on a version that contains all planned changes” is not yet completed. Do you agree?  3. Even if it is required to execute the sprint backlog item: “Run manual regression tests on a version that contains all planned changes”, can we still consider the other sprint backlog items to be done even before that task is completed?           Log in or register to post comments",6280
"08:33 am March 6, 2015                    Q1) Do you agree that the development team should produce a Potentially, Shippable Product Increment in accordance to the Definition of Done at the end of the sprint?  Q2) Will the manual regression tests be executed in the current sprint, OR, not?  Q3) How mature is the product/application?           Log in or register to post comments",6280
"09:12 am March 6, 2015                    Robert: Yes, development can consider pulling in new work and prioritizing this work over manual regression testing -- however, as has been hinted by some of us, there's a risk to delivery and quality. So, my answer as a member of the development team would be -- it depends on the following:  Timewise, where in the current sprint cycle -- middle of sprint or end of sprint? Is there time to run the manual regression tests in this sprint in addition to the new work that the Dev Team would pull? How much buffer is built in the sprint plan for bug-fixing and re-testing if regression testing uncovers critical bugs? Is the test data and test environment ready for the manual regression tests?          Log in or register to post comments",6280
"09:36 am March 6, 2015                    ""Q1) Do you agree that the development team should produce a Potentially, Shippable Product Increment in accordance to the Definition of Done at the end of the sprint? ""  A1: Yes, I agree.  ""Q2) Will the manual regression tests be executed in the current sprint, OR, not? ""  A2: Yes, the tests will be and are required to be executed in the current sprint.   ""Q3) How mature is the product/application?""  A3: For the scenario I had in mind, not very mature..          Log in or register to post comments",6280
"10:02 am March 6, 2015                    since the app is not very mature, there may be latent defects which have not been discovered -- depending on the value of the new work that the development team is evaluating -- the team has some risk mitigation plans to consider (these mitigation scenarios depend on an assessment of the current state of quality of the application (as reflected by code and design reviews, defect metrics and non-functional testing results, code quality metrics) + resource capacity of the development team:  (a) (if app. quality is assessed as high) pull in and design/code a subset (but not all) of the highest value PBI; then do manual regression testing  (b) (if app is stable but quality is not high nor low) regress a subset of highest risk test cases first and if no critical or showstopper defects are uncovered -- in parallel the design work could be completed. if no high severity defects are discovered in the initial regression testing, complete the coding and unit testing and remainder of regression testing   (c) (if app is not stable and quality is low) complete regression testing without adding any new work. depending on the results and if adequate time remains, add in new work and regress a subset of highest risk test cases.          Log in or register to post comments",6280
"10:27 am March 6, 2015                    Thanks John, that was helpful, I have not thought about it from that aspect before. To confirm that I got it right:  If the risk of finding critical defects while running regression tests is high (c) then running the tests before considering adding more changes to the sprint can be the best option.  I also like the compromise (b) to run some regression tests, but not all before adding more changes is considered.  I think it is a wise option for the scenario I had in mind. (For the scenario I had in mind the product is not so mature from the aspect that unit tests and test automation are lacking and also that more user feedback is needed. The product is more mature from the aspect that risk that critical defects will be found when running regression test is low.)          Log in or register to post comments",6280
"10:52 am March 6, 2015                    If app does not have to be productionalized and ,since obtaining customer feedback is needed, then Option (b) might be your best bet. Another flavor of Option (b) could be for the team to divvy up its capacity and do both new development and subset of regression testing concurrently (in parallel).          Log in or register to post comments",6280
"10:58 am March 6, 2015                    I meant if app does not have to be productionalized at the end of the current sprint, but the goal is still to achieve a potentially shippable product increment...If the app has to be productionalized then I personally would vote for original Option (b) given the current state of the application that you described          Log in or register to post comments",6280
"11:29 am March 6, 2015                    During the retro, the Scrum Master and team should discuss (for future sprints) the topic of unit testing as the app is being developed + conduct a ROI analysis of test-automation  (at the minm. the high-risk application areas & most time-consuming manual tests). As a best-practice, the Scrum Master should also assist the team in implementing a proactive, light-weight risk-management process.          Log in or register to post comments",6280
Log in to reply,6280
Messages,6267
"07:24 am February 26, 2015                             Hi there,  What should be done when the Dev Team does not have all the skills to accomplish the Sprint Goal?  The answer that i've read somewhere mentioned something like this:  ""The Scrum Master should have the Dev Team determine the definition of DONE. The Dev Team needs to self-organize to determine what can be accomplished with the team members it has. They develop the additional skills over time to improve the definition of DONE.""  This is where I am confused about. The Dev Team needs to self-organize so can't they just bring in the necessary skills (add new members to the team) to accomplish the goal (taking into account a short term reduction in productivity)?",6267
"10:20 am February 26, 2015                    Hi Zeki,  the last part (They develop the additional skills over time) usually does not happen incidentally. As missing skills are an impediment, it is the Scrum Master's duty to help them develop the skills. This might include bringing in external expertise, so you are right: They can do that.  This doesn't mean the answer provided is wrong. It just makes clear that the Scrum Master should provide guidance.          Log in or register to post comments",6267
"08:46 am March 6, 2015                    Hi Zeki, as Ludwig said, when there is compliance, than team should learn the new skill, the second part is usually easier. New member can be added to team, team members can learn new skill (be it by training or pairing with skilled colleague or whatever leads to goal). Such thing are called Undone Work(as opposed to Definition of Done) and for example Craig Larman suggest to deal with it every 3rd Sprint with decreasing help of department capable of such thing.  The key is to improve so that there is less Undone Work in the future, in small steps.  Hope it helps.  Michal          Log in or register to post comments",6267
Log in to reply,6267
Messages,6276
"10:31 am March 4, 2015                             Hi All  Im in the middle of helping to implement agile for an organisation who have just started to use scrum.  So far so bad,  There doesn't seem to be any real though gone into it,  literally a few scrum boards have gone up with"" to do, In Progress and Done swim lanes"". There are 5 dev teams in total who work on the core backend code and platforms.  The attitude among the development team is that they will work it out as they go along and that it's failrly easy to to do scrum.  My view is that you need to standardise the scrum process, standardise your configuration tools, (TFS), internal wikis and that each team should be flexible within certain boundaries. At the moment all the back logs look different on TFS, some dev teams are following ""some"" elements of scrum and my personal view it has multiple points of failure and people will start to point the finger at scrum.  I champion the fact they have taken the initiative shows there is potential for self management but at the same time question the approach.  Thoughts.",6276
"04:53 am March 5, 2015                    I recommend the use of physical boards in the first instance because they are a flexible, highly visual, and tactile learning tool. All of the various electronic boards on the market have their problems, and there is a real danger that new teams will constrain their thinking in terms of a tool's limitations.  In short, I'd expect a high degree of flux and variation to begin with (which you appear to be seeing), but I'd also expect the teams to be identifying and sharing lessons learned.           Log in or register to post comments",6276
"08:54 am March 5, 2015                    The dev teams appear to be practising ScrumButs, not Scrum. Without using the standardized Scrum framework's requirements (rules, roles, events, artifacts), how would the rollout team know whether Scrum is working or not -- since every team is using a different ScrumButs implementation. The value behind Scrum is that the ineffieciencies and problems of (the organization, its product management, engineering, testing and deployment processes, management sponsorship, organizational change management) are exposed very early in the rollout life-cycle.          Log in or register to post comments",6276
"09:01 am March 5, 2015                    Are the Scrum Masters in each Scrum Team experienced in Scrum?   Is there a rollout team driving the Scrum implementation across the organization -- if yes, are there experienced Scrum Masters in the rollout team?          Log in or register to post comments",6276
"10:37 am March 5, 2015                    We do Scrum, but.......  https://www.scrum.org/scrumbut  http://agileatlas.org/articles/item/fractional-scrum-or-scrum-but  https://www.scrumalliance.org/community/articles/2013/february/you-may-…  https://www.scrumalliance.org/resource_download/1122          Log in or register to post comments",6276
Log in to reply,6276
Messages,6268
"05:28 pm February 26, 2015                             Hello,  I was reading more about NFR and I could not find any post in the forum. I checked some articles but it still has some unclear points.  For NFR, if we add them to the user stories, we may need to add the same one to multiple stories. Is that correct? NFR is based on system, safety and etc so isnt it easier to have them as an additional story or anything, and keep them through the project?  What about the development team? How should they deal them in each sprint? They have to assure every increment meets them but how can PO analyze it, if it is done or not? (especially his/her expertise is not IT)  Thank you.",6268
"10:55 am February 27, 2015                    NFR are aspects of the system that are, well, non-functional.   An example  of a functional requirement is something like: A user changes her preferences for  her account. When she presses the OK button, these changes are persisted. When she presses the cancel button, her current settings remain.  NFR are system requirements that involve system qualities like:   1)	a user confirms her change and receives confirmation within 1 second. (Even if 10.000 other people changed their record at the same time)  2)	a user enters her credit card number and knows it is save to do so.  3)	It it fun to interact with this application  So how do you know your increment is done at the end of the sprint? And how do you know your increment is done for the end user?  ===  For my interest, please tell me more about your application.           Log in or register to post comments",6268
"02:50 pm February 27, 2015                    If the NFR's are necessary for each increment to be in a potentially releasable state, then they may be specified in the Definition of Done for each increment. The Development Team should take the terms of the DoD into account during Product Backlog refinement and Sprint Planning.          Log in or register to post comments",6268
"07:22 pm March 4, 2015                    Hello,  Ian and Christiaan, thank you for the answers.   - Christiaan, I do not have any specific application right now but I asked it based on my previous projects which were like 2 years projects.          Log in or register to post comments",6268
Log in to reply,6268
Messages,6273
"02:26 pm March 3, 2015                             i have a doubt about this question:  Correct answer: B)  You chose: D)  Note: This question displayed answer options in random order when taking this test.   A) The Product Owner can help clarify or optimize the Sprint when asked by the Development Team.  Missed correct answer  B) The Sprint Backlog and its contents are fully formulated in the Sprint Planning meeting and do not change during the Sprint.  C) As a decomposition of the selected Product Backlog Items, the Sprint Backlog changes and may grow as the work emerges.  Incorrect answer  D) The Development Team may work with the Product Owner to remove or add work if it finds it has more or less capacity than it expected.  the right question says: The Sprint Backlog and its contents are fully formulated in the Sprint Planning meeting and do not change during the Sprint.  At the scrum guide says: If the work turns out to be different than  the Development Team expected, they collaborate with the Product Owner to negotiate the  scope of Sprint Backlog within the Sprint  I'm really scared about this, it's making non sense to me, any one can help me to understand ?",6273
"03:02 pm March 3, 2015                    Why are you confused? The question asks you to identify which answer is false, and B is indeed the only one that is false. D is perfectly valid.          Log in or register to post comments",6273
"05:26 pm March 3, 2015                    My doubt is:  At the sprint planning we define the sprint goal, it is related to the sprint backlog. If i negociate the sprint backlog with the product owner, it can change my sprint goal ? i was reading contents today, saying that the sprint backlog can't be changed.  I need to clarify more about this.  Thank's Ian Mitchell          Log in or register to post comments",6273
"11:02 pm March 3, 2015                    Development team can add more product backlog items which are related the current sprint's, sprint goal.   Actually sprint goal is created in order to give theam more flexibility regarding the functionality that can be implemented during the sprint. This flexibility can be achieved in case development team finds that more PBI's can be inculded in the current sprint.          Log in or register to post comments",6273
"01:34 pm March 4, 2015                    Thank's Nipun,  my doubt appeared when i did this simulate:  The Development Team realizes that the volume of work of one of the items in the  Sprint Backlog is estimated incorrectly, and the current volume of work of the whole  Sprint Backlog is 130 instead of 100. What should we do?  A. They should return some items back to the Product Backlog to keep the Sprint  Backlog volume to about 100 points  B. They should ask Scrum Master for more time for this current Sprint  C. They should ask Product Owner to decide on this  D. They shouldn’t do anything now  I answered the C option, following the scrum guide the dev team negociate with the product owner to add os remove itens, but the simulare says that the right answer is the D option, them i can understand that the simulate is wrong ?  Thank's all, i'm studying to take my psm certification as soon as possible          Log in or register to post comments",6273
Log in to reply,6273
Messages,6272
"07:45 am March 3, 2015                             for example : they use development manager terminology for scrum master   second example : They use product directory as product owner. etc.   My personal views:  1) It creates confusion with the scrum concepts.  2) Company might end up missing some useful feature or power of scrum.   ....and many more.  There is similar question on open assessment. But, somehow I do not understand one situation where It says management may feel less anxious as one of the possible situation.   This is what i don't understood. Less anxious meaning less worries. My feeling is when company misunderstands scrum (specially when it is new to the organization), It leads to more worries.   Please help me understand if ""less anxiety for management"" is one of the possible situation or not.   p.s. I started preparing for scrum certification. Please correct me if i am wrong.",6272
"12:01 pm March 3, 2015                    > Less anxious meaning less worries. My feeling is when company misunderstands  > scrum (specially when it is new to the organization), It leads to more worries.  That's right...it will *lead* to more worries. Management will eventually realize that the benefits they expected are not accruing, and they'll wonder why.  Using an existing terminology could make them feel less anxious to begin with, because it would imply continuity rather than change. Genuine change is needed, however, if an organization is to implement Scrum and obtain its associated benefits. Using Scrum's own terminology emphasises the fact that it involves a different way of working, and that change may neither be comfortable nor something that can be taken for granted.          Log in or register to post comments",6272
Log in to reply,6272
Messages,6270
"01:39 am March 2, 2015                             1) ""Finding techniques for effective Product Backlog management""  To me, effective backlog management is about clarity & completeness of PBIs, ordering of PBIs, transparency and visibility of the backlog, keeping the backlog current, etc. Am I missing something?  What are examples of techniques that Scrum Masters use for the above?  2) ""Ensuring the Product Owner knows how to arrange the Product Backlog to maximize value;""  Wouldn't the PO (in most situations) want to extract value as early as possible in the product release cycle? If so, wouldn't the higher PBIs be ordered higher than the lower-value ones?   What are some examples of how the Scrum Master educates the PO on arranging the backlog for value maximization?  Thank you!",6270
"06:48 pm March 2, 2015                    > What are examples of techniques that Scrum  > Masters use for the above?   Teaching the Scrum Team to author PBI's in terms of User Stories and acceptance criteria is one possible technique. Teaching them how to organize a Product Backlog in terms of epics and themes might be another.  > What are some examples of how the Scrum  > Master educates the PO on arranging the  > backlog for value maximization?   The PO should take the advice of the Development Team into account when ordering the Product Backlog, including any technical dependencies or advice about possible efficiencies. Also it could be advantageous to prioritize the delivery of some lower-value items as well as higher value ones, if this were to reduce delivery risk.           Log in or register to post comments",6270
Log in to reply,6270
Messages,6271
"10:43 am March 2, 2015                             Scrum Master is a ""management"" position?  I saw this question somwhere and the answer was true while I thought it should have been false. Could someone tell me if this would be correct? Here's their explanation:   Scrum Master does not manage the Scrum Team or even the Development Team, but manages the Scrum process.",6271
"11:09 am March 2, 2015                    Scrum master is a management position ? True  This is because scrum master has responsibility to resolve the impediments of the team. Some of this needs management intervention. Although scrum master is not a ""manager"" , scrum master do have to influence the management to get issues resolved.   Very straight forward issue can be adding new team member.          Log in or register to post comments",6271
Log in to reply,6271
Messages,6262
"10:25 am February 21, 2015                             Hi,  I'm doing the PSM open assessments and, in the last 3 exams, have one or two fails only. So, I think I can do the PSM-I assessment and pass it but I can't stop thinking in the difference of the questions between the open assessment and the real assessment. Can anybody help me to decide if I'm prepared to pass the assessment?  Thanks in advance.",6262
"03:29 pm February 23, 2015                    Hi,   I always do the open assessment and take about 100%. I did the PSM I and didn't pass, i got 77,5%.  I thought that the diference are the questions that you need to set more than one answer, in the test it occur so many times than the open assessment. Questions like 'at your first sprint, what the scrum master need to do' makes me confuse because i didn't know how to choise 2 options, i just cound see one right question.  I'm studying at the forum to take the test again, and make the enough points to pass.  Sorry for my english, i'm from brasil ....            Log in or register to post comments",6262
"11:01 am February 25, 2015                    I’d recommend to do the test as many times as you can. You should have a consistent score of 100%. Also make sure you can pass the open assessment in under 10 minutes. Some of the open assessment questions will return in the PSM-I, so if you can pass the open with 100% under 10 minutes that will save you time and you don’t want to fail the PSM-I with 83% by a wrong answer that was also in the open.  For the open assessment, don’t just memorize the good answers. Also make sure you understand why the wrong answers are wrong. Read this forum. Make sure you could have answered the posted question or at least understand the answers.   The PSM-I is harder than the open assessment and you have less time per question. It will test your knowledge how to apply Scrum. The open assessment is a learning tool, the PSM-I is the real thing.   Also try the other open assessments if you feel confident.  See also the study tips at:  https://www.scrum.org/Forums/aft/264  Good luck!           Log in or register to post comments",6262
"04:42 am March 2, 2015                    There are apparently questions on the PSM1 exam which are not even covered by the Study Guide or Open Assessments. This is frustrating when preparing for the exam.          Log in or register to post comments",6262
Log in to reply,6262
Messages,6174
"09:54 am December 11, 2014                             I manage an information development team that is responsible for technical documentation across multiple products. One challenge we are having is creating good acceptance criteria for our documentation specific stories. They invariably take the form of:  GIVEN I don't know how to use feature X  WHEN I read the documentation  THEN I know how to use the feature  This strikes everyone on the team as a pretty poor acceptance criteria, but we are struggling with a better way to indicate that a piece of documentation delivers business value to a customer. Has anyone ever applied Acceptance Criteria to documentation? Did you have this struggle, and if so, how did you overcome it?",6174
"10:27 am December 11, 2014                    Does the release of relevant technical documentation coincide with associated releases of the product?   In other words, does each product release include adequate and relevant technical documentation...or are the product and documentation releases essentially unsynchronized with each other?          Log in or register to post comments",6174
"06:42 pm December 11, 2014                    As an ex qa test engineer who reviewed number of documentation, I would suggest to add things like:  - the documentation is reviewed/approved by the development team  I saw lots of documentation where it was a copy paste of previously (similar) released documentation with no changes. I saw a documentation with examples which were not valid or outdated.  We used to have a practice to have somebody who never used a product to go step by step using the documentation and see how consistent it is, how useful it is.   Another point for any documentation is a doc has to have only what it should have with no info duplication. A doc which is too long, too detailed is not always a good doc.          Log in or register to post comments",6174
"02:49 pm December 17, 2014                    Ships at the same time as the product.          Log in or register to post comments",6174
"01:55 am December 18, 2014                    Since it ships at the same time as the product, add feature documented to your Definition of Done.   Personally, I can't see documentation as a separate story. Either in DoD or as part of a deployment checklist.          Log in or register to post comments",6174
"03:11 am December 18, 2014                    > Ships at the same time as the product.  Then include documentation in the Definition of Done as Robert says. The DoD should assert the qualities for ""potentially shippable"".  The Development Team may plan tasks into the Sprint Backlog for producing appropriate documentation. Note that the team must include all of the skills, including technical authorship, for producing increments that satisfy the DoD and are release-ready.          Log in or register to post comments",6174
"06:00 am February 27, 2015                    I have a question regarding the inclusion of documentation in the DoD of the Dev Team.   It is supposed that the Sprint Retrospective event is used to make improvements for next Sprints but these improvements has to be an agreement of all the Scrum Team. So, can Dev Team reject the inclusión of the documentation in the DoD? If the answer is Yes, does documentation has to be included as a requirement and the PO has to create the PBI's?          Log in or register to post comments",6174
"02:41 pm February 27, 2015                    > can Dev Team reject the inclusión of the documentation in the DoD?  Yes. If they are unable to create documentation then they will be unable to create increments that feature it. Therefore it could not be included in a usable DoD.  > If the answer is Yes, does documentation has  > to be included as a requirement and the PO  > has to create the PBI's?  No, because even if this requirement is included as PBIs, the Development Team will still not be in a position to induct the work into their Sprint Backlog and deliver it.  The PO would be better off finding a team which actually does have the ability to deliver increments of an appropriate quality, including any necessary documentation, as per a suitable DoD.           Log in or register to post comments",6174
"07:39 pm February 27, 2015                    NB in a situation like this, I'd suggest that the Scrum Master investigates why the production of documentation is seemingly contentious.          Log in or register to post comments",6174
"09:46 am February 28, 2015                    But, my scrum understanding, if the PO consider that documentation is the expected increment of the sprint, why have Dev Team be changed for a better one?          Log in or register to post comments",6174
Log in to reply,6174
Messages,6248
"05:54 pm February 9, 2015                             One of the duties of the Scrum Master is screening the team and providing a balance between the management and the team. Do you have any advice how to deal with it? Deal with managers pushing to accomplish N items/features while the team is giving the the best, working late and delivering less than expected?  How would you answer to statement like that (it's about unpredictability in the software development):   The comment you mention make me feel scared - if you say the team of professionals that already worked on the same issue before can use very general statement ""software development is unpredictable"" I tend to doubt we are able to work on any of the new developments and deliver it on time (as team has planned and committed to deliver).  The situation it refers to looked like that: a year (or more) ago the team worked on some piece of software (don't remember how long did it take), this year the team started to work on moving it to new platform - everything looked good: before the sprint started, guys shortly discussed what is to be done there, at the planning meeting they continue the discussion and gave their estimates - week should be sufficient. While the work progressed it started to turn out the coding part is taking much longer than expected. The team started to cut out some less important functionalities (with PO involved), but even they worked late, they couldn't finish it by the sprint end.",6248
"08:41 am February 27, 2015                    Hi Bartolomiej,  I don't have too much practical experience as Scrum Master, but here's my opinion:  - the Sprints should be set up in a sustainable pace. So the team shouldn't be wirking late.  - as we live in a complex world, no one can ever predict the future precisely (see also Jurgen Appelo's book ""Management 3.0). To say otherwise is a lie.  - sometimes we have try to predict the future for making good decisions. In this case there are several estimation methods to help (e.g. planning poker). If bad estimates are a general problem for your company, take it to the team. Ask them, what they think of that could help them in estimating better. Maybe they could invest mor time in estimating, take it mor seriously? Maybe the refinement is insufficient so that there are unknown issues to the  Product Backlog Items?  What do you think about it? What would you propose to do?  Best wishes,  Anke.          Log in or register to post comments",6248
"02:56 pm February 27, 2015                    Hi Bartolomiej,  I think such situation arises due to trust deficit. We blame management for being pushy and super ambitious. They deserve to be blamed most of the time but not always. Transparency is one of the important pillar in upholding empiricism. Scrum Master plays this delicate role by making sure, management gains trust of the team. This is not done overnight but is achieved over period of time.   How to achieve this?  1) Invite Management for Sprint Review. Make sure they understand their role  2) Management should talk to PO for scope of work or change in Scope and not to you or Team  3) Ask management to Trust the team as they are self organizing  4) Conduct a brown bag session with Management folks, they need training too. You are in best situation to train them and address their claim  5) Don't ask your team to work late, SM != PM, team is self organizing they organize their work.  Few people in management have a mentality where they want to drive super fast sports car called 'Agile/Scrum/Kanban', but don't understand that you need to 92 Octane premium Gasoline to make it run :p  Thanks,  Anup           Log in or register to post comments",6248
Log in to reply,6248
Messages,6269
"05:56 pm February 26, 2015                             Hello,  Since I am working on an article, I am reading a lot of documents and confused about the terminology.  I know that scrum is a framework but people also use 'methodology'. Which one is correct? Or are both of them  acceptable?   If we start any sentence like ""scrum is a methodology that ..."" is that correct or do I need to use framework for official papers?  Thank you.",6269
"09:58 am February 27, 2015                    Hello Tugce,  Here's a good blog post on this topic, which you might find helpful:   http://guntherverheyen.com/2013/03/21/scrum-framework-not-methodology/   (It was written by Gunther Verheyen, who sheperds the Scrum.org Professional Series).          Log in or register to post comments",6269
Log in to reply,6269
Messages,6263
"09:19 pm February 21, 2015                             I am returning to the sw/it sector after a 11-yr absence. Before that, I had over 12 yrs exp. in commercial sw and IT - roles in qa, prod management and program management. While agile was not officially a word then, our teams were using agile and lean principles as far back as the mid-90s (due to our geography in cambridge/boston area - the birthplace of both scrum and lean). For the past few months, I am diligently upgrading my knowledge with the focus being Scrum - and preparing for the PSM exam. In the meantime I have some questions which I am looking for some guidance/direction  (i) Scrummaster jobs in the boston area and other geographies are all looking for 3-5 yrs scrummaster experience. How do beginner scrummasters even get their foot in the door? Suggestions?  (ii) Many of the scrummaster jobs require indepth knowledge of the ""latest, greatest hot"" languages. While I understand the need for scrummasters to understand technologies from a high-level (enough to interface with developers and serve development teams), I do not get it why they need someone to be a programmer in the languages their development team is using.    I am coming upto speed in the latest technological changes, but learning several languages takes many many months (and years to master them). Has the focus in the industry changed to hiring scrummasters only if they have a development background? Maybe the world has dramatically changed in 10 yrs, but I'm quite sceptical -- would like to know others' thoughts.  (iii) Many companies also require both Scrum and Lean/Kanban experience. How does this hybrid work? Is it prevalent? Can someone point me to case-studies of these implementations?",6263
"04:03 am February 25, 2015                    (i) Typically you start in a Scrum Team as Developer, or in a ScrumBut Team as whatever. For instance, I started as Business Analyst in a ScrumBut Team and grew into the role of the Scrum Master by living it. After that, I got the official role in the team and removed all roles which are not part of Scrum. That's how you can get the foot in the door.  (ii) I assume they are not looking for a Scrum Master, but for a developer who can do ""a little bit of Scrum Master incidentally"". They need support in understanding the Scrum Master role. A good Scrum Master could provide that support, but won't get hired with that job description.  (iii) Scrum is optimized for product development where you want to deliver value in short iterations. If you organize the work of an operations team, you might prefer Kanban because you don't see a real benefit in having iterations but you want to optimize the cycle time of single issues. If you have a DevOps team, you might choose a hybrid like Scrumban which is a very common approach.          Log in or register to post comments",6263
"05:10 am February 26, 2015                    Thx Ludwig. I'm also finding that development teams (including microsoft - extent unknown) use Scrum as the overarching framework, but use Kanban within it to improve execution.          Log in or register to post comments",6263
Log in to reply,6263
Messages,6257
"02:52 pm February 14, 2015                             To what extent is Scaling Professional Scrum intended to address the development, integration, and release of non-software products?  Scenarios may broadly include:  - the engineering of composite products or services, for which software may or may not be an element, but which will nonetheless align with the release of increments every few weeks  - project initiatives such as those involving heavy plant and construction and not just IT systems, and which are thus more likely to be stage-gated over several months or years  - industry verticals which have developed their own agile responses to demand, such as pharmaceuticals",6257
"07:09 am February 17, 2015                    Hi Ian,  It is my understanding that one of the reasons that Ken moved away from Scrum Alliance and initiated Scrum.org was to limit the scope of Scrum to software development. But I guess you and other people here are better equipped to comment on that.  A reason to limit Scrum to software engineering is that other fields are less suitable for emerging architecture / infrastructure. Then again I heard this story about building a sub-marine. After the design phase has finished and construction of the hull has all but completed, it was concluded that the hull was not large enough. So they just cut the hull in 2 parts and inserted an additional section.  Another example of scaling up large projects with a strong physical component would be ASML. They manufacture the equipment that Intel and TSMC use to produce computer chips. I worked there as a software architect some 10 years ago. The code base was 6-8 mio lines. The hardware has the size of a truck and contains a stage that accelerates faster than any sports car and still position at nanometer range precision. The production facilities had the size of a small town. We had a total of 1500+ engineers. 500 were doing s/w engineering.  At that time Agile / Scrum was not fashionable. The way scaling was organized was: small teams (3-20 people, daily s/w integration. Almost no hierarchy or closed management rooms. The efforts for orchestrate the engineering efforts among s/w, system engineering, optics, mechatronics etc was a shared understanding of the goal. To create a machine capable of producing chips that are faster and have better energy efficiency as the current generation we must use shorter wavelength. These wavelengths are imposed by stops defined by laws of psychics.    So we were organized to a common goal by a force: in this case laws of physics. I think some readers can comment to this from other fields like aerospace or military manufacturing.  My gut feeling is that scaling up large projects that are not s/w only, you need some kind of up front design and thus with some command and control type of organization.   In other words, my guess is that for projects with a large physical component, empirical design is not always possible from the perspective of risk management.           Log in or register to post comments",6257
"07:58 am February 17, 2015                    > My gut feeling is that scaling up large projects that are not s/w only,  > you need some kind of up front design and thus with some command and  > control type of organization.   >  > In other words, my guess is that for projects with a large physical  > component, empirical design is not always possible from the perspective  > of risk management.   You are not alone, many would share that ""gut feeling"". This is at least part of the reason why the Scaled Agile Framework has gained traction. The John Deere case study has been used to illustrate how SAFe can be applied to non-software contexts at scale. The empiricism you refer to may indeed become questionable with such implementations.  Agile Meets Big Iron: Agile Transformation at John Deere ISG http://scalingsoftwareagilityblog.com/agile-meets-big-iron-agile-transf…  I'm therefore wondering to what extent ""Scaling Professional Scrum"" (SPS) has addressed this gap. When scaling Scrum, I generally coach that any departure from providing an integrated release at least every 2 months (as per the Agile Manifesto) must be handled by exception. That's the principle. The need to make such exceptions can be mitigated by testing business assumptions, as opposed to trying to provide an enterprise PO with a minimum releasable feature set that includes these tricky non-software components. In other words the focus shifts onto validating a ""Lean Startup"" type of MVP. Unfortunately I don't know for sure if this aligns with SPS thinking...although I suspect it *probably* does.           Log in or register to post comments",6257
"04:15 pm February 17, 2015                    I have personally participated in (hw/sw) telephone switch projects for Siemens and Nokia, and embedded sw projects for many organizations, including Bose and iRobot. I'd love to be able to get my mind around how to organize work, teams, and particularly testing for Tesla cars.   The whole area of scaled agile/Scrum for the Internet of Things and embedded sw has been upon us for a long time. However, I don't feel comfortable extending a framework beyond SW because of the demands and nuances of the various applications. Tesla, smart grid, and iRobot are wholly different domains.  So, I've stuck to sw. It is very clear to me that sw has a long, long way to go to meet the demands of our complex society, and there is plenty of work ahead of me and those I work with.s  I've been working on agile implementations and scaling Scrum for the last four years. To me, scaling carries with it the expectation that a substantial number of the benefits of scrum in the small can be realized by scrum in the large, say 40 teams. The expectation is that as the number of teams grows, the productivity and benefits also grown uniformly. Unfortunately, but not unexpectedly, the benefits usually scale in a non-uniform manner. So, I've been working on a framework and set of practices that allow at least some degree of predictability in the productivity and benefits.   We have a lot of work ahead of us, as usual, but what a great way to wake up in the morning.  Ken           Log in or register to post comments",6257
Log in to reply,6257
Messages,6199
"11:08 am January 7, 2015                             There is much agile and Scrum literature that discusses product vision/goal setting as part of an envisioning process before sprints begin. The Scrum Guide on p. 14 ""Monitoring Progress Toward a Goal"", I think, describes what could be a product vision or goal (different from the Sprint Goal described elsewhere in this guide) as it is a goal across multiple sprints. Is there any more detail from scrum.org on who develops this goal, who is accountable for this goal, examples, guidelines, etc?",6199
"07:38 am January 8, 2015                    About the accountability of the product goals and vision, I think this must be the Product Owner, because he is responsible for what to do. If there are several products in a program it’s often best to have one overall responsible Product Owner. The Scrum Guide says “the Scrum Team crafts a Sprint Goal”, so crafting product goals and vision includes users and other stakeholders engagement.  Today I actually found an interesting blog on how to write a good vision statement on https://www.executestrategy.net/blog/write-good-vision-statement/   Actually there is one vote for making the product vision part of Scrum in the Scrum Guides Suggestion Forum.            Log in or register to post comments",6199
"08:04 am January 8, 2015                    There is probably more detail in the Scrum at Scale framework, but this is comparatively new and short on resources at the moment. The Scrum framework itself is largely agnostic about how a product vision ought to be formulated.  General advice would be to phrase a product vision in terms of empirically testable business propositions. These could be aligned towards the verification of a Minimum Viable Product. Product Owners should always be accountable for goals of this nature, as only they can make decisions regarding product value.          Log in or register to post comments",6199
"05:35 pm January 8, 2015                    Alexander, thanks. The link is interesting and I am pretty familiar with corporate strategic planning. This would have to be adopted for a product vision statement, but there are lots of good points in the article that are similar to what I seen documented elsewhere for product vision.          Log in or register to post comments",6199
"05:39 pm January 8, 2015                    Thanks, Ian. I will check out Scrum at Scale for further research. Making the Product Owner accountable agrees with what I have been reading elsewhere and your advice on making the vision ""empirically testable"" I think would tie with with the Product Owner defining acceptance criteria for each sprint (not described in Scrum Guide, but described in many other sources).          Log in or register to post comments",6199
"11:03 am January 16, 2015                    in my opinion, a vision is different with a goal/objective. The vision should be provided by the project sponsor and other key stakeholders. The goals should come with metrics, which can be contributed by product owners and other stakeholders.           Log in or register to post comments",6199
Log in to reply,6199
Messages,6193
"05:38 pm December 29, 2014                             Hi  I took PSM exam last week and i failed with 77.5 %, I was very confident of clearing it. The email said that the time limit expired, i had nearly 8 questions bookmarked but it was marked with an answer, would these answers be considered or be discarded, also I took the Assessment test and there were no questions regarding burn down also didnt see it in the scrum guide but there were nearly 4 -6 questions, can you help me to find a place where i could get more questions to assess myself.  Thanks",6193
"10:30 am December 30, 2014                    Thank you for your interest in Scrum and Scrum.org. We are sorry you were unable to achieve a passing grade on the assessment, and we appreciate your feedback.  We have examined your assessment session, and see that all 80 questions were factored into the calculation of your score, including any bookmarked questions. Bookmarking questions has no effect whatsoever on the way assessments are scored, but are rather a feature designed to aid those who wish to review their answers before the time limit expires.    We highly recommend following as many of the steps as you can on the following page to improve your Scrum knowledge and increase your chances of passing the assessment:    https://www.scrum.org/Assessments/Ways-to-learn-about-Scrum    Please be aware that the Scrum Open Assessment is a study tool, and will not have the same level of difficulty as the professional-level assessments. We provide detailed feedback with specific questions and answers on the Scrum Open Assessment to help people grow their knowledge of Scrum. We are unable to provide the same level of transparency for our professional-level assessments, because we feel that doing so would inhibit learning. This is why we provide feedback in the form of a bar graph depicting how well you scored in each category, so you can better direct your studies in the areas you are weakest in.   We also highly suggest that you refer to the subject areas score breakdown (bar graph) that was provided once you concluded the assessment and also in the email you were sent after the completion of your assessment. This bar graph displays how well you scored in each of the subject areas assessed on the assessment.    We encourage you to then navigate to and review the PSM I Subject Areas page available on our website at the following link:   https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…   Regarding burndown charts, the fact that they do not appear in the Scrum Guide is an important indication regarding their function in Scrum. As per getting more questions to assess yourself, please take the free Scrum Open and Developer Open Assessments here:  https://www.scrum.org/Assessments/Open-Assessments  We hope you find this information helpful, Vijayasaharan. Thank you, and Scrum On!          Log in or register to post comments",6193
"11:24 am December 30, 2014                    Hello, once you learn which subject areas you need to gain more knowledge in, I would recommend reading all posts available in the Forum as well as may be taking a training class or reading suggested literature to widen your knowledge. One thing for sure, reading the Scrum Guide, or even learning it by heart is absolutely not enough to pass the exam. There is much more behind each statement in the Scrum Guide.   Example, one of a Scrum Master roles is coaching. f.i. ""Coaching the Development Team in self-organization and cross-functionality"". The Guide does not go into details on what a good agile/scrum master coach means. You will see quite few questions in this area while taking the exam, and it might become tricky to correctly reply the test questions without understanding on what coaching means in Agile world.  Hope it helps, Galina          Log in or register to post comments",6193
"11:55 am January 14, 2015                    Hello  Burn down charts are not covered in the current Scrum guide (2013), but are mentioned in the previous Scrum guide (2009). I would search the web see if you can locate an old guide in order to cover the burn up/down charts. Be careful to not read other sections of the old guide as there are some differences between it and the newer guide.  I was also unaware that burn up/down charts were on the test until I started going through the forums and happened upon someone talking about the. My suggestion is to look at the posts of people who successfully passed the PSM and use that information for your own studying.   Good Luck!          Log in or register to post comments",6193
Log in to reply,6193
Messages,6167
"01:54 am December 8, 2014                             Hi all,  is it healthy for the Scrum process that the Scrum Master attends and chairs all Scrum Events?  Context:  In my company, there are several business units using Scrum independently from each other. As my team is introducing Scrum as the first team in my business unit, I try to understand the implementation of Scrum in the other teams. Doing this, I discovered that in most other teams the Scrum Master is organizer, participant, secretary and moderator in all Scrum Events. My first impression was that the Scrum Masters were exploited and that Development Team and Product Owner shifted all of their annoying tasks to them.  When I asked the Scrum Masters, they said it was their wish to fullfill all these tasks in order to close up to the Development Team (participation) and to make sure that the meetings were conducted in a Scrum-conform way (organizer, secretary, moderator), quote ""who writes, controls"".  When I asked if they didn't try to empower e.g. the Development Team to organize and conduct the Daily Scrums on their own they said, they wouldn't be accepted as part of the team if they stayed out and that the developers weren't mature enough to preserve the Scrum Process without the Scrum Masters attending and steering the meetings (""we are the process police"").  Though I don't want to object the arguments, my intuition tells me that they are precariously close to command-and-control/micromanagement if they don't take actions to improve the team's ability to stay within the Scrum Process.  Any thoughts?",6167
"07:59 am December 8, 2014                    Hi Anke,  How many Sprints (or projects) have those Scrum Masters been ensuring their roles? Sure it's ok for them to attend and chair the first events, but then, for a healthier and performing team, more room must be progressively let to its members so they take the initiatives and the Scrum Master will support as a facilitator, serving those.   It sounds like the teams are still in the first phase of the Form/Storm/Norm/Perform stages. Maybe the SM are stuck to improve the team's confidence to Scrum, thus to empower itself and to self-organize. Is the context favorable so the SM intentions are made transparent and can be nurtured? Do they have support and sponsors, instead of directives and redevabilities? Do the SM even raise impediments and to whom/what are they addressed? And so, why?  Hope it helps :)          Log in or register to post comments",6167
"10:37 am December 8, 2014                    Hi Romain,  thank you for the reply - of course it helped! :-)  The Scrum Master roles were re-staffed this year, but the teams use Scrum within this structure since 2-3 years, having Sprints of two weeks.  The Scrum Masters told me there were still some developers who didn't like Scrum (as they were used to develop on their own for decades) and that it wasn't possible to really convince them (""they say yes to anything but you never know if they comply""). I think both are doing their best, they try to detect impediments in the Daily Scrums and they raise them to whoever is responsible for it.  I don't know more details about their situation, I just wondered if my intuition was right and how the other forum participants would see the situation - especially because the Scrum Masters were really sure of themselves.          Log in or register to post comments",6167
"05:31 am December 9, 2014                    If the Development Team aren't ""mature enough to preserve the Scrum Process without the Scrum Masters attending and steering"" then that is an impediment, as the teams do not own their process.  What do the Scrum Masters think they should do to remove this impediment? How do they currently interpret their duty of coaching?          Log in or register to post comments",6167
"08:14 am December 9, 2014                    If trust and transparency are not at their best within the teams, leading to more command and control or that feeling, I would so recommend facilitating a Delegation Poker workshop at their next retrospective.          Log in or register to post comments",6167
"11:13 am December 9, 2014                    Hi Ian and Romain,  thank you so much for your replies.  @Ian:  I don't think, the Scrum Masters see this as an impediment, not even when I asked them if their concept wasn't against the spirit of Scrum. They interpret their duty of coaching in motivating the development teams to actively participate in the Scrum Events and in telling them which of their actions are and which are not helpful for the Scrum process. Some months ago they made the experience that the developers didn't respect the process when the Scrum Masters didn't attend the meetings. That's why they don't want to change the practice.  @Romain: I like the idea, but how does Delegation Poker help building trust? As I understand, the Development Team doesn't really want more process ownership, they rather want to focus on the pure development tasks...          Log in or register to post comments",6167
"11:32 am December 9, 2014                    OK, in answer to your initial question I would therefore state:  No, it is not healthy for Scrum Masters to attend and chair all Scrum Events.  It's unhealthy because it is being done to the detriment of the teams' ownership of process, and there is insufficient appreciation by the respective Scrum Masters of their coaching responsibilities.          Log in or register to post comments",6167
"02:02 pm December 9, 2014                    What about a ""give & take matrix"" instead of a Delegation Poker ?  http://www.gamestorming.com/games-for-design/give-and-take-matrix/  The Scrum Master has nothing to ""delegate"" because he is not the manager of the team.          Log in or register to post comments",6167
"03:14 am December 10, 2014                    The Scrum Master has nothing to ""delegate"" because he is not the manager of the team. Indeed and as the Give & Take matrix, it's not as black and white as the titles say. What matter, help to build trust and lead to intiatives, are discussions on the expressed motivations and clarifications that follow.          Log in or register to post comments",6167
"07:33 am January 2, 2015                    Hi,  sorry for my late reply. Thank you, Ian, Olivier and Romain for your advice. All was very helpful for finding my own point of view. I'm really curious, how we'll be able to implement Scrum in my business unit.  A good new year to you!  Anke.          Log in or register to post comments",6167
"03:07 am January 14, 2015                    Anke,  I have nothing to add to the answers above, just some books that I would highly recommend in your situation:  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…  ""Coaching agile teams"" helped me a lot in understanding the different teaching / coaching styles and which to use in which context.  ""The five dysfunctions of a team"" gave me important hints how to build trust in a team.  Best,   Ludwig          Log in or register to post comments",6167
Log in to reply,6167
Messages,6181
"09:15 am December 18, 2014                             Is it possible to replace a team member during a sprint - or do we need to do it after a Sprint is done.",6181
"01:06 am December 19, 2014                    it's depends on the team, if the team feel that it's good to replace a team member during the sprint, just do it then. :)          Log in or register to post comments",6181
"04:58 am December 19, 2014                    Of course you can.  Of course it will disturb the team.          Log in or register to post comments",6181
"05:57 am December 26, 2014                    It is not recommended . Scrum says that team should be consistent that mean that, team should not be changed. But after all its a scrum so team will decide what are the consequences by removing a team member in the middle of sprint and team has to decide to remove the team member or not to remove.          Log in or register to post comments",6181
"06:33 am January 2, 2015                    HI,  your response is just unclear as your name abc xyz, you say it is not recommended but at the same time it is up to a team., So what is it?          Log in or register to post comments",6181
"02:53 am January 14, 2015                    Trine, could you please give us some context:  - Who wants the team member to be replaced? The team? The member? Anybody outside the team? (and if so: What does the team think about it?)  - Why?  While it is generally recommended to have stable teams, there can be cases where a team member becomes an impediment and has to be removed, after all other possibilities have been tried without success.          Log in or register to post comments",6181
Log in to reply,6181
Messages,6163
"07:15 pm December 2, 2014                             Hi all,  Sometimes I think about the future of Scrum masters. Especially when you are an external consultants or freelancer.   In my opinion, when time progresses, most companies will have internal Scrum masters. Therefore I’m wondering of the sustainability of let’s say a Freelance Scrum master.  Any thoughts??",6163
"01:45 am December 3, 2014                    Hi Pablo,  I think it's similar to developers: Many companies who need software have internal developers. Yet, there are lots of freelance developers or external developers in charge for specific one-time tasks or to bridge some transition period or ...  I don't see a reason why it shouldn't be the same with Scrum Masters. Although, maybe, the tasks of a Scrum Master focus more on agile coaching than on teaching and installing the mere Scrum principles.          Log in or register to post comments",6163
"02:42 am December 3, 2014                    Lets be clear that I believe that being a Scrum master is hard work and I believe not everyone can be good Scrum masters.   But in my opinion I do think that the threshold of becoming a  Scrum master (either (good or bad) is much easier than lets say a Developer. In some teams they even rotate this role. (bad idea)  I just got the feeling that if someone (me) decide the go freelacing, perhaps being a Scrum master isn't the most sustainable service to provide, but I could be wrong of course.            Log in or register to post comments",6163
"02:26 pm December 3, 2014                    I think this is an issue you have everywhere and it is not only related to the scrum master task, like it was already mentioned above, it happens also with developers, designers, DBA and so on. The only thing is that as far as you are good enough in what you are doing, you will always find a job i think. As long as you act as a scrum master, you should do your job as good as you can, so that people will feel comfortable with recommending your services.  Since we are today living in a fast changing world, we also need to be always ready to learn and adapt to changes. Might be the scrum master of today can be a good product owner tomorrow...          Log in or register to post comments",6163
"07:24 am December 4, 2014                    Every 4th offer or so, I stumble over one requiring SCRUM knowledge or at least agile methods to get into the IT project I want to win.   So market demand is really there, I can say.          Log in or register to post comments",6163
"08:50 am January 13, 2015                    To add another aspect: The Scrum Master leads change processes in enterprises.  In my experience it is extremely hard for an internal (employee) to drive this change process, especially if this person will lose responsibilities due to the changes.  The only successful transitions I have experienced so far were driven by external coaches / Scrum Masters.          Log in or register to post comments",6163
Log in to reply,6163
Messages,6204
"06:43 pm January 8, 2015                             There is a Development Team member who does not work full-time. He makes himself available for almost all Events excepts for 2 Daily Scrums per week (works roughly 3 days per week).  This mostly works fine, however I have noticed lapses in communication due to the incomplete transparency of the  situation and of course there are 2 days a week where there is a missed opportunity to inspect and adapt with the entire team present.  Personally I would prefer to have all full-timers and have voiced my opinion, however this is not a practical reality for us at this stage and I greatly appreciate the value this person adds to the team. He is a great developer.  Does anyone have any guidance for this situation or part-time situations in general?   I would also be interested to hear about other peoples experiences working with part-time members in Scrum.",6204
"04:20 am January 9, 2015                    If a Development Team can't take something for granted...such as the availability of a team member...then they must plan accordingly. In other words, the team should formulate each Sprint Plan to take projected availability into account.  If a Sprint Plan consists largely of tasks, this could mean planning in certain tasks in which the part-time team member is brought up to speed, or otherwise engaged in peer activities that facilitate knowledge sharing.          Log in or register to post comments",6204
"10:43 am January 9, 2015                    It is similar to the situation that I experience with some people working from home one or twice a week.  It is not ideal but some ways we dealt with is:  1. Email the update to SM and SM updates the team  2. Phone in during the scrum  It is not a show stopper  On the team of 8 there is always someone who will be off sick or working from home or whatever, so you need to be flexible to accommodate.          Log in or register to post comments",6204
"07:52 pm January 11, 2015                    Thanks Roman, some good ideas there. I'll suggest them to the team.          Log in or register to post comments",6204
Log in to reply,6204
Messages,6194
"05:41 pm December 29, 2014                             Well I guess that isn't exactly true being I've been studying for PSD for 7 weeks  I passed PSM on the 1st attempt unlike the 3 needed for PSD  Passed the PSD on the 27th and the PSM on the 28th - there was no additional preparation for the PSM  I strongly recommend the Star Scrum Academy practice test for PSD and especially for PSM  it is a well invested 10 bucks  detail of my study strat  https://www.scrum.org/Forums/aft/1227  Passed PSD today - 3rd time is a charm  GL all  hope this helps",6194
"06:29 am January 11, 2015                    Congratulations on your certifications and your persistence! Thanks for sharing your study tips and details.          Log in or register to post comments",6194
Log in to reply,6194
Messages,6201
"07:23 am January 8, 2015                             Hi,  I am currently trying to document a migration to scrum for a digital agency. There are of course the usual agency problems of many small projects for different clients. I think I have things set out pretty well but would welcome any feedback on my proposed structure.  1. Two scrum teams working to a two week sprint time-box.  2. The sprint starts will be staggered by a week to allow for rush jobs to never be more than 5 days from entering a sprint.  3. The teams will be fed by a single backlog which will be prioritized by the agency's client services team and refined by two backlog grooming sessions (one per team) a week.   4. A member of the client services team will act as product owner on each team.  Thanks,  Tony",6201
"07:52 am January 8, 2015                    > 3. The teams will be fed by a single backlog which will be prioritized  > by the agency's client services team and refined by two backlog grooming  > sessions (one per team) a week.   Will these refinement/grooming sessions include estimating the size of the PBI's? Remember that in Scrum, each team must be responsible for its own estimates regarding the work that it actually does.          Log in or register to post comments",6201
"10:47 am January 8, 2015                    Good point Ian, that would be a difficult one to manage so I will have to change it to two separate backlogs.          Log in or register to post comments",6201
"11:48 am January 8, 2015                    The number of product backlogs should reflect the number of products you actually have. Each of those products (and the corresponding backlogs) should have a clear Product Owner. In other words, organizing a Product Backlog shouldn't be a decision that is driven by team delivery capabilities. The driver should be one of business need.  There can be situations where multiple products need to be serviced by a Scrum Team. This is fairly common in agency work and also in big companies where multiple assets require maintenance by operational support. In these situations, it may be viable to combine the requirements for multiple products into a single Product Backlog as long as a single Product Owner can be found...and entrusted...to represent them.  If you have multiple teams drawing from a single Product Backlog, it may be reasonable for them to conduct joint backlog refinement sessions, where they estimate jointly using the same terms of reference.          Log in or register to post comments",6201
"12:00 pm January 8, 2015                    > organizing a Product Backlog shouldn't be a decision that is driven by team delivery capabilities  I ought to have said *creating* a Product Backlog shouldn't be a decision that is driven by team delivery capabilities. The way those backlogs are organized after creation can be informed to some extent by a team's abilities, projections, and constraints, even though the Product Owner remains ultimately accountable.          Log in or register to post comments",6201
Log in to reply,6201
Messages,6197
"10:42 am January 5, 2015                             The question: When a Continuous Integration build fails, who ideally ensures the build is repaired?  The sugested answer: The person who broke the build  The confusion: Currently it suggests that each individual has some particular 'ideal' responsibility in the team. It may not have beenas confusing even if it satted who 'usually' fixes the build instead of 'ideally ensures' - because itis most likely the developer who made the last change would be the first to notice it.  PS: I would have personally preferred highlighting collective ownership - saying whoever in the development team  first noticed it as broken fixes it - if required with help from the person who last made a change that led the build to break.  Any thoughts on how I should understand this  or any light you can throw on something that I may have misunderstood.",6197
"06:15 am January 6, 2015                    In CI where the code is built after each commit, when the build is failed, it is but obvious that the last change broke it. The quickest way to restore it is to revert that one change (commit). And this can be done by the person who committed it last. Hence the answer, the person who broke it.  You're right in saying it is collective ownership. And that will come in picture where the person is unable to implement the required code on his own. That is where other team members will come for help.  As a team member (specifically developer), every one is disciplined enough not to break the build.          Log in or register to post comments",6197
"07:02 am January 7, 2015                    > The sugested answer: The person who broke the build  Strictly speaking that would be the wrong answer (i.e. an incomplete one), because it is the Development Team that broke the build. In Scrum this is not a role which is sub-divided and so the associated responsibilities are always collective ones.  Admittedly that isn't very helpful. It doesn't provide guidance as to how a team should frame its response and self-organize to resolve the problem. To do that you need to think about how to apply specific practices within the Scrum Framework. For example:  - Impediments should be resolved as close as possible to the *time* at which they occur. This implies that the team member who first spots the breakage must take action, even if it is just to notify the person who broke it.  - Impediments should be resolved as close as possible to the *place* at which they occur. This implies that the team member who checked in broken code will also be involved in providing a fix.  - Action should always be taken to ensure that the problem does not re-occur. This implies that the whole team must be involved in inspecting and adapting the team process.  - In Scrum, the Scrum Master is responsible for the removal of impediments. This implies that the Scrum Master will coach the team to self-organize in the above manner, and will facilitate their efforts as needed.           Log in or register to post comments",6197
"09:55 am January 7, 2015                    Thanks Ian for the response. And that was precisely my understanding and the reason for the question as well.  Why is open assessment suggesting an answer that individually treats a team member who broke the build as a separate entity. Just to clarify: The 'suggested answer' here is as shown in the correct answer on the quiz - not what I was suggesting. And my recommendation is the PS note on my query - very similar to what you have mentioned.   Would wait on this forum to hear other points of view on what cold be the rationale for the pointof view - other than the basic understanding that we all have - that Manish has also mentioned - .usually the first one to find out is also the person who checked in last / broke the build - but using that in a quiz and call it out as 'ideally' makes we feel we are somehow diluting some of the agile values of one team approach and forward looking thinking.           Log in or register to post comments",6197
"06:12 pm January 7, 2015                    You have to choose the best answer of those available. If collective ownership isn't an option then you need t          Log in or register to post comments",6197
"06:18 pm January 7, 2015                    o work through those that *are* in fact offered. Can you recall the other possible answers that were presented?          Log in or register to post comments",6197
"08:51 am January 8, 2015                    I've found the original question and the answers provided:  When a Continuous Integration build fails, who ideally ensures the build is repaired?  A) The person who broke the build  B) The person assigned to the configuration management role within the team  C) The tester responsible for validating builds  D) The next person who needs the build to complete successfully  Of these available answers, I'd agree that the suggested answer (the person who broke the build) is in fact the best choice. B can be rejected on the grounds that there is no CM role within the team; C can be rejected on the grounds that there is no tester role; and D can be rejected because it fails to resolve the problem at the earliest opportunity.  I'd definitely agree however that positioning answer A as an ""ideal"" one is contentious. It doesn't value whole-team collaborative ownership of development problems and their resolution. It's just the least-worst of the options actually provided for this question.          Log in or register to post comments",6197
"09:44 am January 8, 2015                    Thanks Ian for taking your time to give detailed responses.          Log in or register to post comments",6197
Log in to reply,6197
Messages,6158
"10:12 am November 27, 2014                             which technique is the best way the scrum master can ensure that the development team   communicates effectively with the product owner  is it mandatory to have a SM & PO on the scrum team",6158
"06:08 am November 28, 2014                    what is your own point of view ?          Log in or register to post comments",6158
"10:31 am November 28, 2014                    1.  educate the PO about the technologies employed during the sprint and educate the development team to talk in terms of  business needs and objectives.  2. we should have a SM & PO in team and the outcomes are affected by their participation            Log in or register to post comments",6158
"06:42 pm December 18, 2014                    for the question in PSM I assessment:  ""which technique is the best way the scrum master can ensure that the development team    communicates effectively with the product owner ""  these are 2 of 4 possible answers:  1) teach the PO about the technologies employed during the sprint  2) teach the development team to talk in terms of business needs and objectives  And only one selection is possible. So which answer is the right one?  Or maybe there is another answer?          Log in or register to post comments",6158
"12:12 pm January 6, 2015                    One thing that will help improve communication ten fold is to have them sit side-by-side. Just being in the proximity of each other will open up lines of communication that didn't exist before.  It also substantially increases the speed at which feedback takes place.  Example (not sat side by side)  Dev X emails PO at 1.30pm - should the button be green until clicked and then turn gray? or the other way around?  PO is in another meeting with stakeholders until 3pm. Then he grabs a coffee and bathroom break. Then he heads back to his desk about 3.20pm. Finally he checks his email about 3.30pm. Then he goes into the environment, pulls up the user story and figures out an answer. Sends his email response by 3.40pm.  Dev X is working on another piece of functionality and doesn't even have his email open. He opens his email up before he heads out for the day at 5.10pm. Then he makes a note to himself on how the button should behave, so that he will implement it tomorrow.  Example (sat side by side)  Dev X leans over to PO and says ""Should the button be green and then once clicked gray? or the other way around?""  PO ""The other way around""  Dev X ""Thanks"" and immediately implements it that way.  Catch my drift?           Log in or register to post comments",6158
Log in to reply,6158
Messages,6185
"08:54 am December 22, 2014                             At least when I took the actual PSM I test, it allowed me to bookmark questions and return to them later. I used this whenever I wasn't 100% sure about the answer. Allowing me to first go through all of the questions, then jump between the bookmarked ones to give them another read and consideration. Unfortunately, the Open Assessment doesn't provide this bookmark / review feature (yet).  I think it would be good for candidates to get familiar with and learn how to use the bookmark feature in the Open Scrum assessment already.",6185
"12:36 pm January 5, 2015                    I was also surprised that I could bookmark questions on the PSM and review them for later. I think the addition of bookmarks on the exam would give someone a better representation of the exam format.   One thing I found was on questions where you’re asked to give more than one answer (e.g. select 2 responses) if an answer is selected but not all answers that were asked for were selected the indicator on the review screen shows answered. It shouldn't because you didn't select all the answers that were asked for.            Log in or register to post comments",6185
Log in to reply,6185
Messages,6186
"12:19 pm December 22, 2014                              Dear all,  Let me apologise up front if anyone feels this post isn't welcome. I know that forums like this contain communities, and I hope this post isn't intrusive. Please ignore if you feel that way.  I'm thinking long and hard about changing careers, and am looking for some advice.  A friend sent me a link to a page describing the role of Product Owner in Scrum. I read it, and I can find no better words than to say it warmed my heart.  It seemed to capture the aptitudes I have, and in a role where they are helpful and facilitate the success of a team - something I really enjoy. I also really enjoyed reading up on Scrum, and its sense of purpose. It seemed so different, in a good way, from some recent jobs I've done.  But here's where it gets tricky, and where I'm looking for advice. I would need to create a viable plan to get me from where I am now to that kind of role, and I'm not sure how I'd do it - or if it would even be possible. Below are a few thoughts, and I'd welcome any candid opinions.  - I don't have a technical background, and am 38 years old. I did philosophy, politics and economics at Oxford, which I know has some kudos in some areas and takes hard work, but this will surely cut little mustard in the software industry. I worked as a journalist successfully, ending up as a senior business journalist on a serious UK national newspaper, and then worked in public relations, where I particularly enjoyed crisis work and strategy. My Myers Briggs is ENTJ (though I'm mature enough to understand weaknesses, both in such classifications, and the ENTJ character type). But I'd basically be starting from scratch, and be relatively old. Is it possible?  - If it is possible, how would I do it? Presumably, I'd need to start in another role first, perhaps as a tester or similar? And perhaps take a course? I'm guessing that the traits that make for a great Product Owner, aren't necessarily the same as those that make a great programmer, so I'm curious about the best pathway.  - If I did aim for it, how many years might it take to get to a decent Product Owner role?  - Could I plan to do some part-time PR consulting to keep money coming in, or do the PR for a software company, but take the training and experience as part of the package somehow, or is that unrealistic. Might it be better to simply stop everything for a year and focus entirely on retraining?  - Suppose it would take me five years to get there. Do you have any sense of what wages might be like in the meantime and at destination?  - Is there a danger of the role being obsolete or low-paid by the time I get to it? When I went into journalism, I rose fast, working all hours in a highly competitive area, but was doing so in an industry about to be  completely disrupted - and I don't want to make that mistake again (the disrupted bit; I always work very hard).  As I say, I'd welcome any thoughts. I can imagine that bad Product Owners create absolute nightmares. I also wonder if this post might sound a bit like saying ""Hi, I'd like to be a CEO"", in that the Product Owner role might have a degree of seniority attached. Don't be deceived: I ask humbly, and quite expect to be told that I'd have to grind it out from the bottom up, or would be foolish to try.",6186
"04:43 pm December 22, 2014                    Welcome to the community!    Being a great product owner isnt so much about knowing scrum or software.  It's about knowing the product and being able to communicate a vision for a product.  It's about gathering data from users, the market, the business, and various other sources to guide decisions on product design that maximizes value to the company.             Log in or register to post comments",6186
"06:01 pm December 22, 2014                     Thanks for this. I think these are among the things that appeal about the role - being able to interrogate a business case, understand it, see its potential, and then communicate that in a way that allows other, technical people to better do their jobs. And also to be able to explain things that puts them in context - sets out the vision and the big picture, and relates the detail to that.  So I guess you're saying, perhaps, that the route to that role isn't to come up through being a member of a Scrum team, but rather to come in from a discipline that provides market and product knowledge?           Log in or register to post comments",6186
"03:31 am December 23, 2014                    > I particularly enjoyed crisis work and strategy  If that's what you like then that's where you should begin. Look for roles that demand these skills and seek out agile teams from there. If you demonstrate a willingness to help teams respond to change, and don't just pass the buck to them, then I imagine you will soon become a popular choice for PO.          Log in or register to post comments",6186
"05:16 am December 23, 2014                     Thanks both, I really appreciate your thoughts. This is helping me think about strengths, use that as a starting point - as you say, Ian.  What struck me about the role I mention is that it's all about facilitating the success of other people, and not just doing so but being seen to do so. And it's a role where communication and being able to understand at speed are critical.  I need to find a way to spot some stepping stones. They're underwater at the moment.           Log in or register to post comments",6186
"05:48 am December 23, 2014                    As regards your experiences with crisis management and strategy, here are some things to reflect upon which may help you to reframe your CV:  - Stakeholder management  - Root cause analysis  - Risk based prioritization and triage  - Collaboration, and an agreed understanding of what it means and takes for work to be completed  - Importance of timely inspection and adaptation at the point where work is done  - Actioning of lessons learned  - Having too much work languishing in progress, the importance of evidencing success through delivery  - Waste, and the associated risk to delivery  - Establishment of trust and tolerances within which teams may operate          Log in or register to post comments",6186
"10:06 am December 27, 2014                     I've done some thinking, and have a specific question. My experience is in communications, and I have a strong background in that. For example, I twice edited Shell's 198-page financial Annual Report, have ghostwritten for CEOs, and worked as a business journalist on The Sunday Telegraph.  Are there likely to be any gifted companies or individuals that, for all their technical brilliance, would value help in communications, especially to non-technical business audiences? Or in helping the client business to better articulate what it actually wants?  It strikes me that ability in this respect could be helpful to a team or a client, and so provide an entry point. Or if nothing else, a means of gaining some useful work experience.  One of the things I loved when reading about Scrum was its recognition that clients often don't know what they do want, until they see the first iteration and it isn't exactly what they want. This, in a way, is a form of practical communication. It's smart.          Log in or register to post comments",6186
"06:24 am January 2, 2015                    Guy, feel free to write me a personal message I will be more than happy to give you some tips.  Find me on LinkedIn Roman Shtekelman          Log in or register to post comments",6186
"08:57 am January 2, 2015                    Hi Guy,  here's my opinion, based on my experiences with my first job (PO-like in some areas) after my diploma in math (no, I haven't needed any explicit study contents yet).  - yes, it is definitely possible. Every Product owner has to learn about his product before really fulfilling his role. A master's degree in computer science doesn't prepare you for creating a Product Backlog much less prioritizing it. And most Product Owners who change the company will have to work their way into the new product.  - how to do it depends on the concrete situation. If I were you, I'd just apply for Product Owner jobs - and see what it gets you. While you might be a good tester for one company, another company could want you for customer relations - and some other could just take you as Product Owner trainee.You can openly address your ""weak spots"" and the company can develop strategies to compensate them - either in a beforehand call or maybe in the job interview itself. Courage!  Oh, and there never is a ""best pathway"". There are many paths you can go. Take one step on the path that smells best for you. And after this first step, inspect what happened. Then adapt... Sounds familiar? :-)  Oh, and one other thing: of course, a course or some self study in Scrum or in the subject of the product can be helpful, too...  - how long it will take you depends strongly on the concrete product, I think. It's easier to become a ""Tetris"" Product Owner from scratch than a ""finance and accounting software"" Product Owner...  - wages surely depend on country and industry branch. But you'll surely be able to find a salary comparison in the internet? Straight off, I don't know British homepages for that, but it shouldn't be that hard to find some.  - The tasks of a Product Owner are there, no matter if the process is called Scrum or Waterfall (or else). So, even if Scrum becomes outdated, your gained skills would still be necessary for the (software) industry. So I don't see a big danger in getting obsolete as a Product Owner.  - In my experience, nearly all companies have come to value skilled communicators. Just try and submit your application to some company!!  I hope this helps a little.          Log in or register to post comments",6186
"03:52 am January 3, 2015                     Thanks for all the advice above, and Roman I will drop you a line.  Since starting this thread, I've also been in contact with a friend who worked in senior IT roles, who's also been very helpful. I should have some work experience fairly soon, I'm doing some comms work for a small IT recruitment firm to provide a bit of industry understanding, and next to me are a stack of ITIL 3 and Prince 2 manuals for some introductory reading.  I get the sense that energy, determination, self-starting and learning on the job are valued, which is good for me. Hopefully a little work experience, where I can demonstrate determination and an enjoyment of teamwork will get the ball rolling a little, and provide some perspective. I will report back!          Log in or register to post comments",6186
Log in to reply,6186
Messages,6189
"10:37 am December 23, 2014                             I recently passed the PSM I assessment and want to share a Scrum Overview picture I prepared for visualizing the main process. You can see it on my blog at http://blog.mdxs.net/2014/12/professional-scrum-master-i-psm-i.html  It is based on work by other people (see links and attribution in blog text), most notably Mark Hoogveld's overview from which the ""demand"", ""supply"" and ""service"" labels have been retained (see the # of persons for Product Owner, Development Team, and Scrum Master). These labels don't appear in the official Scrum Guide, July 2013 edition as far as I know; but they fit with my mental model.",6189
"08:01 am January 2, 2015                    Beautiful!!          Log in or register to post comments",6189
Log in to reply,6189
Messages,6182
"09:29 am December 18, 2014                             I am a software development manager.  I have, and continue to, manage multiple scrum teams.  We have been using scrum for about 8 years, so pretty mature compared to the majority of the organizations I talk to.  I think we do close to all the right things - unit tests required for continuous feedback, UI automated test suite that runs nightly, good planning, team involvement, monitor sprint burndown, monitor product burndown, dedicated scrum master, retrospectives, etc.  In general things to smoothly.  But, I've challenged my team this year to increase our velocity.  On every team I've managed we tend to define a velocity based on past projects, use that the determine schedule and budget, then get into groove where we stick with that velocity for years.  No matter what process or tool improvements we make our velocity remains roughly the same.  Most times we complete all tasks, or very close.  Sometimes we miss but that's primarily if we have a major unexpected interruption.  It feels like the Gas Law to me (or the garage law).  You fill the space you have...and then stop.  So, we use our existing velocity, plan to that...and the team works towards that goal, even though we may have made a major improvement where one would have expected us to be more efficient.  We are on a large, highly strategic project right now that has lots of eyes watching.  The organization wants us to go faster.  I've been successful at explaining that's not possible, but I do realize that going faster would be a major benefit to my company in terms of project ROI, competitiveness, etc.  So, I'm looking for major areas of change (process, tools or technology) that you've used to improve your velocity.  I've set two goals - 5% and 10% over the next 12 months.  It may seem small, but with the size of my team a 10% increase in velocity is the equivalent of another developer, so that's HUGE.  Thanks for your feedback.",6182
"02:28 am December 19, 2014                    Is there team retrospective? What's the impediments that stop the team'? I think you should focus on outcome rather than output          Log in or register to post comments",6182
"05:03 am December 19, 2014                    I have seen reports of velocity being relatively constant, while the team actually did improve in the rate of delivering value. The explanation was that the team unconsciously adapted the estimation metric to their better performance.  If this is the case in your situation it would be a good idea to be transparent about it as well.           Log in or register to post comments",6182
"12:22 pm December 19, 2014                    > I've challenged my team this year to increase our velocity  [...]  > The organization wants us to go faster  Velocity can be increased tenfold by multiplying story points by ten. Agile teams and their organizations don't go faster by increasing velocity. They go faster by deploying increments into production more frequently so as to minimize depreciation and the cost of delay.  The Product Owner is accountable to stakeholders for the release of value, ROI, and the rate at which business value is delivered. So, is it actually the PO who is demanding more frequent releases into production? Is continuous integration and deployment already in place? What does the PO have to say about release frequency?          Log in or register to post comments",6182
"01:53 pm December 19, 2014                    it's not a matter of more frequent releases.  This is a greenfield project.  It's broken down into 4 major releases.  The organization (starting with our CEO) would like those releases to be completed in a shorter time frame.  So, yes, the Product Owner also wants that.  The faster I get something into the hands of our customers the faster we can start selling the product (and realizing the value of the investment).  Continuous integration is in place.  Fully automated unit and UI test suites in place for continual feedback.  Arguably, velocity isn't increased by multiplying all PBIs by 10 because your burn-up rate remains exactly the same...the numbers just become bigger.  No differently than a reverse stock-split.  In the end, its all the same.    So, what I'm really looking for is a way to increase our burn-up rate (which in my experience is typically called velocity).  We actively manage our backlog so that we are taking on the highest valued or highest risk items first.  Nonetheless, this is not a website where I'm ""releasing"" to customers every sprint.  This is a highly complex engineering application that has multiple sprints planned before we'll have functionality that can be released to a customer.  Getting the amount of work, or value, completed in those sprints faster will bring in our release schedule, which will provide for a faster ROI.          Log in or register to post comments",6182
"10:39 am December 21, 2014                    Why not remove the notion of velocity and estimate to improve the team productivity.          Log in or register to post comments",6182
"08:07 am December 22, 2014                    Let me make sure I understand.  Don't worry about velocity and estimates going forward.  Disregard those statistics.  Velocity is not something that the individual developers spend any time on, so ignoring it won't really improve their productivity.  Arguably it's possible we gain some productivity just removing the thought of.  They certainly spend time estimating, which is a primary outcome of sprint planning.  I'm confused how one plans for the correct amount of sprint content if they don't have estimates.  But, let's go with that.  No velocity and no estimates (if I read the response correctly).  Now, my organization asks me next month ""How are things going?  Are you still on schedule and budget?""  But, without estimates I can't tell them how much is left to release and without velocity I can't tell them how fast we're going, so I have no release date.  My response could be ""Thanks for the investment, but I can't tell you when we'll be done or how much it will cost.  Keep the money coming.""  Now, put yourself in the shoes of your investor (your CEO).  You're no longer working on a project for your company.  You're pitching a great idea to a group of investors (think Shark Tank) and battling for a limited set of investment dollars (which is what you're doing inside of an organization, whether you realize it or not).  How well will your project be received if your request for a $10M investment is ""I don't know when it will be done, so I don't know when it will start generating revenue and I really don't know if the $10M I'm asking for will be enough, because I haven't spent any time estimating the size of the project.""  Wanna guess at your chances of receiving those investment dollars?  Extremely close to 0%.  I hear this all the time, primarily from consultants that really have very little skin in the game when it comes the success or failure of a project (like it or not...success  is primarily defined as on schedule and on budget).  Don't worry about velocity.  Stop estimating.  Just do your work, provide value and all will go well.  Yet, as one who's managed multiple multi-million $ software projects I've yet to see a single organization that isn't interested in when their investment will start to show a return.  And, to report that, you need to know how fast you're burning $s as compared to how fast you're getting work done towards a release.  Knowing what's left and how fast we're burning down the pile of what's left creates some incredible discussions on our team. It helps us prioritize, it helps us determine how far to take specific features, it helps us determine what we can live without, it helps us determine what can be added, etc.          Log in or register to post comments",6182
"02:49 am December 23, 2014                    > Now, my organization asks me next month  > ""How are things going? Are you still on schedule and budget?""  In Scrum the question is redundant, because by next month an increment of working product *must* have been delivered. The Product Owner will be in a position to release it and to account to stakeholders for value and ROI.  In Scrum the sole measure of productivity is the delivery of working software...not promissary notes about being on schedule or on budget.  Ultimately it really is about having more frequent releases. Estimates and velocity are simply tools that Scrum Teams use to forecast how much work can be taken on in a Sprint. The more frequently a team releases value, the less important forecasting becomes.          Log in or register to post comments",6182
"07:43 am December 23, 2014                    Too idealistic.  As I stated, this is a greenfield project.  Let's say, for example, I'm developing a product to compete with MS Excel.  I'm guessing there are quite a few lines of code in Excel.  I have 1 month sprints.  You're saying that, after the 1st month, my Product Manager should be confident in saying ""I think we're done.  Let's release.""???  Not going to happen.  Granted, I'll be able to show progress (value) and working functionality, as I can and do in my project, but you simply cannot ""release"" after every sprint.  It is far too dependent on the type of project you're working on.  If the only projects you've worked on have been mature products, then yes, adding a feature and releasing often makes sense.  But that's simply not the case when you're starting over at line 1 of code (in an app that's going to require over 1M lines of code before your customer base will even considering adopting it).  Our customers have set the bar for what's required to ""release.""  It is very high.  It needs to work.  As we say, it's about ""data and digits.""  Wrong data or a safety concern and it's an absolute no-go.  I agree entirely about your statement that velocity is simply a tool to forecast, which is what my organization (who provides the funding) requires.  They require me to forecast when my product will be able to start driving revenue.  So, back to the original question.  Using velocity as a tool to forecast, what have teams done to improve their velocity over time.  Surely you've implemented tools, process changes or technology that has allowed your team to get more work done (provide more value) in a shorter amount of time.  If not, you are in grave danger of being left behind.          Log in or register to post comments",6182
"08:41 am December 23, 2014                    I'm saying that, at the *beginning* of the first month, the PO should be able to say to the team:  ""Here is the scope as I currently understand it. What can be delivered in the upcoming Sprint which will empirically test these assumptions about product value?""  Ironically this tends to be easier on greenfield projects more than any other, because there are fewer knock-on effects and the Scrum Team has a clean slate to work from.  This isn't idealized theory, nor for that matter is it a practice that is limited to Scrum. Proof through ongoing delivery is a general agile principle to be observed. For example the Lean Startup movement has demonstrated the practicality of rapid release cycles, especially in ""greenfield"" development, while so-called ""DevOps"" teams demonstrate that releases into production can occur at sub-minute levels of frequency, even once scale is attained.           Log in or register to post comments",6182
"11:52 am December 23, 2014                    Honestly speaking those estimates and velocity never speaks about the truth anyway, it's a mean to forecast. Any developer can game the number easily. So how can you improve it? And how would your management know it is under control when developers are gaming the number?  So why not remove the notion of velocity and estimate to improve the team productivity?          Log in or register to post comments",6182
"08:59 am December 24, 2014                    Joshua's right. Velocity isn't productivity, nor should it be used as a proxy measure for it. The idea of improving velocity will only send you down a rabbit hole. Estimation serves the purpose of sprint planning and delivery.          Log in or register to post comments",6182
"07:47 am December 28, 2014                    Hi Scott,  I will go out and say, you are looking at the wrong place to fix your problem with the lack of time. You are having this issue because you do not have scrum. Your organization is not agile. I am sorry, don't take it personally, but that is the fact, what you have is water-scrum-fail. I did not invent it, it was found by Forrester and if you want to read more about it, you will have to fork out $500 (ouch) https://www.forrester.com/WaterScrumFall+Is+The+Reality+Of+Agile+For+Mo…  You, or your PO should turn on the Lean brain, read the Lean Startup, get out of scope thinking and get into value delivery and all of the sudden, you will have more time than you can spend. Until you change that aspect of your or, you will not have time. Your development team is working, by the look of it, as well as they can in a water-scrum-fail organisation, so looking at them to ""work faster"" is wrong. You should look at the rest of the chain and ask them to work smarter.          Log in or register to post comments",6182
"05:55 am January 2, 2015                    I agree with others that you are trying to resolve wrong problem.   I also had a chance to work on greenfield project. This type of project even better illustrates the power of Scrum (if it is understood and implemented at the organization level). In our case, we have tried to achieve the greatest possible value by taking the decision (at given moment). To make these decisions and maximize the value of such a project, we had to validate our assumptions (already mentioned by Ian).   Joshua mentioned about getting rid of the estimation and velocity. I will take that as a ""mental shortcut"". Estimates are not bad. Very often, the way how we use them is wrong.   And finally the velocity... One thing is to work at the level of organization and show them the value of using Scrum. The second thing is how we work with the team. Increasing velocity can not be a goal. The Scrum Team should work on improving their work at every level (technical, teamwork, cooperation with the environment, etc.). But even the continuous improvement does not guarantee higher velocity. In my teams we treat it only as historical data. Only. Our goal is to improve the work not velocity.  I wish you luck in your work with your organization. It is not easy. In our case, the idea of the velocity does not go beyond the Scrum Team. PO during communication with business is not using this word. And it works well.          Log in or register to post comments",6182
"05:59 am January 2, 2015                    I agree with others that you are trying to resolve wrong problem.   I also had a chance to work on greenfield project. This type of project even better illustrates the power of Scrum (if it is understood and implemented at the organization level). In our case, we have tried to achieve the greatest possible value by taking the decision (at given moment). To make these decisions and maximize the value of such a project, we had to validate our assumptions (already mentioned by Ian).   Joshua mentioned about getting rid of the estimation and velocity. I will take that as a ""mental shortcut"". Estimates are not bad. Very often, the way how we use them is wrong.   And finally the velocity... One thing is to work at the level of organization and show them the value of using Scrum. The second thing is how we work with the team. Increasing velocity can not be a goal. The Scrum Team should work on improving their work at every level (technical, teamwork, cooperation with the environment, etc.). But even the continuous improvement does not guarantee higher velocity. In my teams we treat it only as historical data. Only. Our goal is to improve the work not velocity.  I wish you luck in your work with your organization. It is not easy. In our case, the idea of the velocity does not go beyond the Scrum Team. PO during communication with business is not using this word. And it works well.          Log in or register to post comments",6182
Log in to reply,6182
Messages,5326
"06:34 am September 16, 2012                             Hi,      On the following page on Scrum.org:      http://www.scrum.org/Assessments/Professional-Scrum-Developer-Assessmen…      It states:      ""At present, Professional Scrum Developer I assessment and certification is open only to those who have taken a Professional Scrum Developer course. Assessment is currently based on the body of knowledge contained in the courseware. Once the body of knowledge has been formalized as a Scrum Developer Guide, the assessment will be open to the public and anyone – including those who have not taken a Professional Scrum Developer course – will be able to assess themselves. ""      Can anyone tell me how long it's likely to be before the public can take the assessment without requiring attendance at a course?      Thanks in advance.",5326
"06:36 am September 16, 2012                    That subject line should of course read, ""Availability of assessment WITHOUT course"".  Sorry!          Log in or register to post comments",5326
"11:40 am September 17, 2012                    Hi Craig,   Thanks for your question. As soon as this is done there will be an announcement.  Best,  Daniel          Log in or register to post comments",5326
"12:11 pm September 17, 2012                    Thanks for your reply, Daniel.  Do you have any ideas of vague time scales for this?  I appreciate you probably cannot give an accurate date, however I'd be good to know if this is something that is likely to be weeks, months or years away.  Thanks again.           Log in or register to post comments",5326
"04:22 am September 19, 2012                    Having taken the course, it still would be handy to have a PSD 1 practice assessment.          Log in or register to post comments",5326
"05:10 pm September 19, 2012                    Very likely not weeks, or years. ;-)  Daniel          Log in or register to post comments",5326
"05:14 pm September 19, 2012                    Hi Flavia,   This is on our backlog.  Best,  Daniel          Log in or register to post comments",5326
"06:35 pm May 20, 2013                    Most likely over halv a year now :-)   Would also be interested.            Log in or register to post comments",5326
"03:39 am June 5, 2013                    Hi Daniel,  It's been around 8 months now since your last post indicating that the assessments would be available without requiring course attendance and that this was ""on your backlog"".  Can you possibly provide an update as to where this is at and when it may be available?  Thanks.           Log in or register to post comments",5326
"09:46 am June 25, 2013                    Hi Craig,   Thanks for your question. Separating the PSD I assessment from the PSD course is on the backlog. We’ve been focused on other initiatives, however, we expect it to be released sometime near the end of this year.  Best,  Daniel          Log in or register to post comments",5326
"11:05 am June 25, 2013                     Posted By Daniel Racowsky on 19 Sep 2012 05:10 PM  Very likely not weeks, or years. ;-)    Daniel  Any update?          Log in or register to post comments",5326
"11:48 pm December 31, 2014                    Now as I can see it's open and not required any course. Let's try to get  PSD now ;)          Log in or register to post comments",5326
Log in to reply,5326
Messages,6184
"10:36 pm December 21, 2014                             I have the following 4 queries on scrum guide related to Transparency:  1) On the statement ""Significant aspects of the process must be visible to those responsible for the outcome"" who does the scrum guide refer to as responsible for the outcode? Is it just the Scrum team (incliding Product Owner, Development team and Scrum Master) or Scrum team and Stakeholders?  2) Similarly on the statement ""Transparency requires those aspects be defined by a common standard so observers share a common understanding of what is being seen"" who all are observers?  3) Also on the statement ""A common language referring to the process must be shared by all participants"" who all are to be considered as participants?  4) And finally ""Those performing the work and those accepting the work product must share a common definition of “Done”"" it it correct to consider:  - the Development team as ""Those performing the work"" and the Product Owner as ""those accepting the work""  OR  - the Scrum team as ""Those performing the work"" and the Stakeholders and Customers as ""those accepting the work""",6184
"04:06 am December 23, 2014                    Let's start with the first question.  Given your current understanding of agile practice, who do you think *should* be held responsible for delivery outcomes? How are outcomes determined?  Do you think it is reasonable for stakeholders outside of the Scrum Team or Delivery Team to be held accountable?          Log in or register to post comments",6184
"09:05 am December 24, 2014                    Thank you Ian.  Based on my understanding:  1) Who do you think *should* be held responsible for delivery outcomes?  - Is it correct to say ""The scrum team are empowered so they should be accoutable for the delivery"".  2) How are outcomes determined?  - I believe based on how the scrum team is continuously improving in the 3 aspects of Transparency, Inspect and Adapt.          Log in or register to post comments",6184
"11:47 am December 30, 2014                    That's correct. Therefore, as a minimum, the process must be transparent to all members of the Scrum Team as they are the participants responsible for its inspection and adaptation. That responsibility includes defining Done, for which the Product Owner must be empowered to represent customer interests.          Log in or register to post comments",6184
"10:50 am December 31, 2014                    I would add that other stakeholders are held accountable in corporate organisations. And the larger the organisation the more the hierarchy of accountability grows. So on the bottom level the transparency shall exist for team members and on the next level the burn down charts and product burn down shall be transparent to the sponsors and programme managers.          Log in or register to post comments",6184
Log in to reply,6184
Messages,6179
"06:28 am December 17, 2014                             Hi all  I have been looking at SCRUM Master Certification and what SCRUM does. Let me start by giving a brief detail about my experience and then ask you what am I looking to find here.  I am a SharePoint Administrator at a Senior level and have an experience of about 6 years in IT so far, I havent been involved much in any of the software development projects yet, I am in to the support projects. I am a Microsoft Certified Solutions Expert in SharePoint and Office 365 MCSA as well. I am ITIL V3 Foundation certified in ITSM.   Now What I wanted to know from you guys is, Can I be a SCRUM MASTER? Would it be a totally different approach when compared to my current job, Would it make sense for me to be a SCRUM MASTER, What roles can I see some time down the line in terms of my role and growth? Did anyone here do SCRUM MASTER being in the similar roles, what is the best approach from here on and please provide me your inputs if its worth being a SCRUM Master keeping my current role in mind.  Thanks in advance, looking forward to see your valuable inputs :-)  Regards  Sekhar",6179
"03:08 pm December 17, 2014                    I would strongly suggest working on the development team for a bit of time learn the role of scrum master by observation.  read the scrum guide from this site and take the open accessment to gauge your comfort level.          Log in or register to post comments",6179
"03:23 pm December 17, 2014                    Do you have a team in place?  Is there a project on which you;d like to implement Scrum?  A scrum master is just a single role in a larger framework.  Have you read the scrum guide at http://www.scrumguides.org/scrum-guide.html?   Have you taken the open assessment?  Some more background will be more helpful.          Log in or register to post comments",6179
"09:39 pm December 17, 2014                    Woodie has said it well. Scrum only makes sense for software development not so much for Operation support. Having hands on experience working with a Scrum team would be beneficial.          Log in or register to post comments",6179
"09:19 pm December 19, 2014                    Hi ,  I have a similar background to yourself (I'm a DBA) with similar qualifications to yourself (MCT, MCSE, MOSM, MCITP etc).    I started looking at scrum around March this year and have found it to be incredibly useful, from the perspective of I now understand what our dev team were trying to do and the changes which the company were experiencing.  This understanding has made it far easier to relate to the dev team as well as our product owners and business in general.  It has taken me away from the silo which I was in and made me have a greater input into the rest of I.T. and business, as well as making me a more rounded member of the I.T. team.  I took the PSM I & II assessments as well as the PSD and PSPO I and found them very worthwhile. I then went onto MCSD application lifecycle Management and PMI Agile exam as well as BCS testing foundation and agile testing.    From my perspective, I gained a lot from Scrum, but would recommend doing some more general agile exams straight after. PSM I is a good place to start and will come in useful for any of the general agility assessments.  I'm not sure  I would want to become a scrum master , but not to hammer the point home it is a development team NOT a team of developers and the team must be cross functional. I would bring other aspects \ skills to the team.  Whilst I appreciate that my journey with scrum and agile is only in its infancy, this is my opinion as it stands now.  Other members with more experience, may have a very different ideas to this.  Hope this has been of some use.           Log in or register to post comments",6179
"10:10 am December 31, 2014                    I am a scrum master and before I became SM I was a developer for good number of years on multiple scrum projects and I learnt by observation and then I got a formal certification as well. The certification and experience in my opinion are not so important as a personality which will enable you to become a servant leader for the team and enable you to remove impediments. In my experience technical people are not best suited for this role. Better scrum masters come from background that more leans to people and you shall have a good people and communication skills. If you don't already have those but want to become a scrum master you shall also work on developing those skills in addition to getting certification.          Log in or register to post comments",6179
Log in to reply,6179
Messages,6190
"10:48 am December 25, 2014                             How we can handle tasks which are related to each other but belong to different Sprint.  Example :- For an example of a game. Suppose we planned to design a Weapon System in Sprint 2. Like Weapon index, bullet and other weapons settings.  After few Sprints we add a Weapon Upgrade system which may comes in Sprint 6. Now when we implement this update system , we need to make changes to weapon system as well. And so we need to code and test the Weapon system again in Sprint 6.  How we can handle this kind of situation.",6190
"07:27 pm December 29, 2014                    Sounds like you kind of already know.    > we need to make changes to weapon system as well. And so we need to code and test the Weapon system again in Sprint 6.   When the team plans the sprint in Sprint Planning, they will come up with a plan to deploy the new functionality they are looking to deliver in accordance to the definition of done.  If testing existing functionality to ensure that it is not broken by the new features added is important and part of the DoD, then it should be included in the sprint backlog.  You can also find some helpful answers in this thread asking about how to handle situations where future stories affect existing functionality:  https://www.scrum.org/Forums/aft/383#1977           Log in or register to post comments",6190
"11:59 am December 30, 2014                    > How we can handle this kind of situation.  You appear to be describing a situation in which value is discovered iteratively and delivered incrementally. Where exactly do you see a problem?          Log in or register to post comments",6190
Log in to reply,6190
Messages,6188
"04:45 pm December 22, 2014                             Hi,  I would hardly call myself a veteran of Agile or Scrum, but I have been involved in a few projects that used variants of the methodology.  I would classify myself as the product owner, if I had to pick a role.  Here is my situation:  We ran two major projects concurrently.  Both were very similar.  Technically, we should have built one underlying platform to provide a basis for both products, but we didn't and my regret for not having forced this is running very high.    We used elements of Scrum in both cases.  Because each project was massive, we needed two vendors.   Because I had a good perspective on the overall vision and had lived the hell of not having these systems, I had a reasonably well abstracted sense of the pillars of the platform we needed to develop.  When I say ""pillars"", I mean the basic abstractions that, if acknowledged, could create a shared understanding and a shared vocabulary and (ultimately) a whole lot less code.  Unfortunately, when I began to work with Vendor 1 they had no interest in hearing about my pillars.  They wanted to work from a simple vision and hundreds of user stories that made no attempt to abstract any concepts that could add to comprehension, achieve efficiencies through reuse, etc..  They claimed that emergent design and refactoring would do the trick.  Well.... it is two years later and we still don't have time to refactor and the complexity of the poorly abstracted code means we probably never will.  In the second project with another vendor, I created a 10 sentence document that provided a vision and, more importantly a set of abstractions and a vocabulary for the product.  The document defined some abstractions/entities that I insisted we reference in our stories.  So, when I talked about a ""Clinical Model Score"" for a user, or a ""User Message"", or a ""Tailoring Pipeline"" everyone knew what it meant.  Even more important, we didn't labor with emergent design and, instead, just coded these pillars or constructs early on (in about 30 days) and then built on top of them.  I improperly called this ""iteration zero"" at the time.  Basically, we agreed to a framework.  The second project was far more successful than the first and I attribute it to having the pillars of the platform identified early.  These were easy abstractions to make for a business person like myself, but they would have been nearly impossible for our teams to have come up with through their normal Scrum process.  Refactoring is a great theory - and has worked for superficial aspects of our products, but not for critical abstractions that I am calling pillars or building blocks.  I certainly see the benefits of Scrum, and I'm not attempting to debate them.  I also see issues with Big Design Up Front, but my design phase is about 2 weeks of thinking and 30 days of coding for a project of about 5 person years.  My problem is that I am heading into another project with Scrum purists and I'm hoping to encourage the approach that has worked for me in the past. Here is what I am looking for:  -I know that there are a number of variants of Agile and Scrum.    -Is there a variant that accommodates the approach I took in the second project?   -If not, is there a good book or site that debates this in a balanced way?  I have a basic understanding of Emergent Design, but I don't agree with it on its own and am looking for something that mixes this with Small Planning Up Front.    Sorry for the long post, but this is on the verge of becoming a multi-million dollar problem for my company.",6188
"03:22 am December 23, 2014                    > Is there a variant that accommodates the approach I took in the second project?   I believe that Scrum at Scale supports this approach. A skilled team may implement a foundation architecture which Scrum Teams can leverage in future sprints and develop further on an emergent basis.  If an architectural foundation is not in place, then the Product Owner should ensure that the Product's architecture is refactored appropriately by the team. Scalability and sustainability are product qualities for which the PO is accountable. Failure to observe this may incur technical debt and can limit return on investment.          Log in or register to post comments",6188
"05:10 am December 23, 2014                    NB a foundation architecture should implement at least one or two choice features of business value. This is partly to demonstrate that such value can in fact be delivered, and partly to validate key architectural assumptions.  This technique is sometimes referred to in the wider literature as stovepipe prototyping, or as firing a ""tracer bullet"" through the architecture.          Log in or register to post comments",6188
"08:39 am December 28, 2014                    Hi Stephen,  There is nothing in Scrum that would stop you using your second approach. In fact, I think your first approach is not Scrum compliant. If you are PO, you work on stories, you order the backlog, you accept or reject the work,you are accountable for the value... Story should be written in the way the PO understands them and then devs can ask PO for more explanation. If you say ""As a Robosupadupa I want Sipadipaklipa to perform in less than 10 seconds so that repadepatepa can glupazupadupa more for less"" and your acceptance criteria is ""Given mikatikasika then glupazupadupa should be blank"" the development team cannot change it. What they can do is ask you to explain what those mean. If you have stories that explain your architecture, sort of, Scrum is not against those being on top.   There are some great books on stories, I like Gojko Adzic's approach to stories and I have a feeling you will too.          Log in or register to post comments",6188
"11:34 am December 30, 2014                    > I think your first approach is not Scrum compliant.   The first approach *could* be Scrum compliant, in so far as the framework does not rule out a completely emergent architecture. The problem in this case seems to have been the vendor's claim that ""emergent design and refactoring would do the trick"". In truth it must be the other way around...the ""trick"" being to make sure that emergent design and refactoring are actually done. They don't take care of themselves and must be budgeted and planned into every Sprint.           Log in or register to post comments",6188
Log in to reply,6188
Messages,6191
"12:57 pm December 25, 2014                             In the scrum guide, Topic Two: how will the chosen work get done?  What does it mean by  ""Sprint. Work planned for the first days of the Sprint by the Development Team is decomposed by the end of this meeting, often to units of one day or less.""  Thank you!",6191
"06:17 am December 26, 2014                    At Sprint Planning the Development Team selects the Product Backlog items that will be worked on and completed during the Sprint.  But just selecting an item is not enough to start working on it. There are some more questions that need to be answered: What shall we start with? Who will work on it? How? When?  It's best if by the end of Sprint Planning all the Development Team members know exactly what they will work on when they come to the office the next morning.  So they need to analyze the selected backlog items, figure out what smaller parts they are composed of, DECOMPOSE them (divide them) into manageable pieces that can be completed in one day or less and assign them to specific developers.  Not everything needs to be decomposed and assigned at Sprint Planning, just enough to get them started. They'll keep decomposing the items further as they work on them during the Sprint.  I'd also like to mention that sometimes breaking down product requirements into backlog items is also referred to as ""decomposing."" Here's a quote from the PMBOK Guide that deals with agile methods:  ""The overall scope of the project will be decomposed into a set of requirements and work to be performed, sometimes referred to as a product backlog.""  This is not what the Scrum Guide talks about in the quote you posted. The quote talks about decomposing backlog items into smaller pieces so the Development Team members know what to work on.           Log in or register to post comments",6191
"03:28 am December 27, 2014                    Great explanation, Chris. Thanks for clarifying!          Log in or register to post comments",6191
Log in to reply,6191
Messages,6149
"03:47 pm November 17, 2014                             I am the scrummaster for a small, non-profit org that began implementing scrum in January.  We have done pretty well in the transition, but still have much work to do.  Recently, it has come to light that we will be getting 1 or 2 more projects in the near future.    I know one of those projects is a hot priority and will be worked alongside our current project.    We only have 1 scrum team.  As for the nature of the projects, it may be possible to have the same PO, but I do not know that, yet.  Do you have any advice on how to deal with this?  If at all possible, I want to have everything prioritized on one, single backlog.  However, what about meetings?  Will it work if we deal with both projects in the same meeting, or have separate meetings for separate projects?  How do you breakdown the developers' time per project?  I'm just looking for general advice/suggestions on this matter so I can make a plan for when we are hit with the extra projects.  Thanks in advance!  David",6149
"02:55 pm November 18, 2014                    Hi David,  I highly recommend reading up on the subject of context switching and understanding the impact it has on productivity & motivation.  Something else to realize - there is only 1 team, so the output will stay the same. Working on 2 projects at the same time may not have the effect you're looking for. Instead of taking 6 months to finish project A and then 6 months to finish project B, it will take you 12 -18 months to finish both. That is 12 month of not delivering any value.  I recommend viewing the team as a doorway and that the project work flows through the doorway. You must then understand that only a certain amount can flow through the doorway (the team) at one time.  I highly recommend working on the highest priority product first and then going back to the other project.  If the team works on 2 things at the same time it will generally slow them down and you will also have the overhead of 2 sets of meetings, further reducing the amount of time the team can actually spend doing work.  Remind the stakeholders there can only be one top priority and that all time & money should be spent on delivering that which is most valuable.  Just my 2 cents.  Good luck!          Log in or register to post comments",6149
"03:56 am December 2, 2014                    Hi,  Just a small addition to the subject of context switching. Here are a few links you can follow to read more about it:  http://www.infoq.com/articles/multitasking-problems  http://blog.codinghorror.com/the-multi-tasking-myth/  http://brodzinski.com/2012/03/myth-of-100-utilization.html  As you can see, the estimates of how much time gets wasted varies, but the bottom line is, teams works best if they can concentrate on one project at a time.  But if you MUST take on two projects and there's no way around it: is your dev team large enough to turn it into two independent teams? If not, can you add a developer or two?  Cheers.          Log in or register to post comments",6149
"10:04 am December 23, 2014                    Thanks for the responses so far. I have the same question as David, but I have resource constraints that make it impossible to add developers, and external pressures (customer, compliance, regulatory, etc.) that make it dangerous to focus on a single project for each sprint. I have myself filling both the SM and PO roles, 3 developers, and dozens of simultaneous projects. It seems to me that the defnition of ""project"" might be the issue. Rather than define a project as a single product or feature, can Scrum still work if ""project"" is more broadly defined? Can a Scrum project be just a recurring category of work, like ""Support Tickets"" or ""System Upgrades"" rather than a specific thing like ""New Lab Requisition Document"" or ""Medication File Update""?  Thanks!  Greg          Log in or register to post comments",6149
"01:11 pm December 23, 2014                    > Rather than define a project as a single product or  > feature, can Scrum still work if ""project"" is more  > broadly defined? Can a Scrum project be just a recurring  > category of work, like ""Support Tickets"" or ""System Upgrades""  Scrum can be applied to BAU (Business As Usual) work as long as meaningful Sprint Goals can be agreed.  The crafting of good Sprint Goals can be particularly challenging when most of the work consists of support tickets. Part of the problem is that the barrier for change for support and maintenance is generally considered to be lower than it is for development work. A Product Owner or customer representative is more likely to value a rapid turnaround than for tickets to be ordered and batched around the attainment of Sprint Goals. This may or may not be reasonable...much depends upon organizational circumstances.  I generally coach Scrum Teams to adopt the following philosophy. Support tickets that arise in-Sprint can be viewed as unplanned work and therefore as indicators of waste. Their occurrence should be minimized and this is a valid topic for retrospective consideration. Their impact on the current Sprint Goal should also be minimized. They should be triaged and handled in a way that increases the chances of meeting the Goal. Critical fixes may need to be handled in the current Sprint if the Product and its goals are to survive at all. From a Development Team perspective, this work can be seen in the context of the replanning that must occur during a Sprint if the Sprint Goal is to be met. If support tickets do not articulate into the current Goal then they may reasonably be added to the Product Backlog and organized and planned into a future Sprint.          Log in or register to post comments",6149
Log in to reply,6149
Messages,6172
"04:48 pm December 9, 2014                             Hello, my understanding that the PO is getting the initial pre-ordered  PBL ready to be introduced to the development team during the first Sprint Planning. By that time I assume that the development team has to be already identified.  In a situation where a new project is being lined up:  Q: Who is responsible to identify which skills the development team needs to have in order to deliver the product in the project?  Q: Who is responsible for the Scrum team to have the right set of skills?  Another question. The Scrum Guide mentions only Sprint Planning. However, there is a Release Planning event outlined in some documentation I found.   Q: Who would be responsible for a Release Planning?  Q: What is the role of a Scrum team in a Release Planning?",6172
"04:53 am December 10, 2014                    The PO owns the PBL. It would be strange if he would receive it from somebody else. He will create it himself, by communication with the stakeholders, the clients and the customers. It is his job to create a product vision and to order the PBL to maximize value (per sprint).   Q1: The Development Team and the Scrum Master are capable to recognize if skills are missing or inadequate. If so, this should be escalated to management by the SM.  Q2: Team allocation is not defined by Scrum, and the PO, SM and Dev Team do not have authority to do so. See 1  Q3: The product owner  Q4: The product owner can and should be assisted by the SM and the Development Team on subjects as: velocity, risk, functional dependencies, non-functional requirements, PBI sizes, technical debt, definition of done etc.           Log in or register to post comments",6172
"12:23 pm December 10, 2014                    Thank you!  ""The Development Team and the Scrum Master are capable to recognize if skills are missing or inadequate. If so, this should be escalated to management by the SM. ""  At which point this is done? If the team identifies that some skills are missing during the first Spring Planning, which should immediately follow by the Spring execution, and the desired skill is needed from the very first Spring, it gives no time to take actions (training, finding a resource with the right skill set) and might become an impediment from very beginning.            Log in or register to post comments",6172
"07:03 pm December 11, 2014                    just reviewed materials I used for my training (by Berkeley training, ""Agile Practitioner"". )  One of the SM responsibilities during pre-planning is ""Identifies key skill sets needed on the Team""  Q: Is it correct statement?  Also, another responsibility is ""Prepares the Team by co-locating members and ensuring Team has received Scrum Team Training""  Q: Can this statement be read as ""A Team is getting allocated"" ?           Log in or register to post comments",6172
"08:52 am December 14, 2014                    Hi Galina,  Let's see if I can clarify this a bit.  The Development Team can't work on the items they can't complete according to the definition of 'done.' If the Product Backlog includes such items, it creates an impediment that needs to be removed.  It's the Scrum Master's responsibility to remove impediments to the Development Team's progress. However, he or she might not have the necessary authority to actually fix the problem. The Scrum Master will need to work with the senior manager and make sure it's done (see the Scrum Master service to the organization.)  But there are several things the Scrum Master can recommend, and the entire Scrum Team should counsel together and come up with a plan that will work best. Each of the roles will have a unique perspective to add to the discussion. (Remember that the plan for the Sprint is created by the collaborative work of the entire Scrum Team.)  Here are the options:  1. The Development Team can obtain the necessary skills. (This is ideal, if possible, since it doesn't disrupt the team's make-up and it's a good investment for the future. The training can be added by the Product Owner to the Product Backlog and selected for the Sprint by the Development Team. After all, it's a necessary step to getting the product done.)  2. The Scrum Master can recommend to the senior manager to make the necessary adjustments to the personnel make-up of the Development Team. (The team can be permanently changed or an additional member can be added for the duration of the Sprint. It takes a long time for any team to merge and start working efficiently, so upsetting the team's make-up is not recommended if it can be avoided.)  3. The Scrum Master can recommend that another Scrum Team be added to the project. (If the project is large enough, the organization has some resources to spare and someone knows how to manage multiple teams properly, it might be a good solution.)  To answer your question about when these things happen: the training can happen during the Sprint. If any changes to the team need to be made and they can't be made immediately, the team can select the items it can complete during the Sprint and continue with the work, leaving the ones it can't do for the next Sprint. This will give the management the time needed to find the solution. Or if everything hinges on the functionality that the team can't possibly deliver, well, the project will need to be postponed.  Concerning your other question: Co-location is not the same as allocation. From Merriam-Webster: ""Colocate: to place (two or more units) close together so as to share common facilities."" So it seems like the quote talks about setting up the physical work environment rather than allocating the team's skill sets.           Log in or register to post comments",6172
"03:44 pm December 19, 2014                    Hi Chris, thanks a lot for clearing it up for me. Much appreciated. Let me re phrase one of my questions. I understand the difference between  ""allocate"" and ""co-locate"". What I meant in the question is: if I am as a scrum master identifying a need for a team members to get co-located, that means it was agreed upon that the developers that have to be co-located will be working on the project as a scrum team. Which assumes an ""allocation"" of those developers for the upcoming project. Does it make sense?          Log in or register to post comments",6172
"05:45 am December 21, 2014                    Hi Galina,  In the case you're describing, it's probably true that if the team needs to be ""co-located,"" they have already been ""allocated"" to work together. But we're talking about the responsibilities of the Scrum Master within the Scrum framework, and it's not the Scrum Master's responsibility to allocate the team.  In fact, one can argue that neither is ""co-locating"" them.  The quote from your training says that the Scrum Master ""prepares the Team by co-locating members and ensuring the Team has received Scrum Team Training.""  I agree with the second part of your quote, the SM ensures that the team has received Scrum training, but I'm not sure about the first part.  The Development Team is self-organizing, which means they make the decisions on how they organize their work. The SM can coach the team, suggest better co-location solutions to them and if it's an impediment that the team doesn't have the authority to solve, liaison with the senior management and get them to solve the problem.  But the Scrum Master is not a project manager and doesn't actually have the authority to co-locate anyone. (Unless he or she is also a team leader, which is a common arrangement in some companies, or a senior manager.)  The bottom line is, Scrum Masters need to have great people-handling skills because they have a lot of responsibility but virtually no authority. They need to know how to convince the people with authority (the Development Team, the Product Owner and the organization) to make the right decisions concerning their use of the Scrum framework, which will in turn result in delivering products of the highest possible value.  Look at the key words describing Scrum Master responsibilities in the Scrum Guide: coaching, helping, facilitating, leading, planning, causing change, ensuring, finding...  A Scrum Masters is like a wise and clever queen that runs the kingdom from behind the throne by convincing the king to issue the right decrees.  Chris           Log in or register to post comments",6172
"11:20 am December 23, 2014                    Chris, thank you for the reply. Looking into jobs descriptions for Scrum Master positions I see a lot of deviations from what the Scrum Guide prescribes for the SM role. In any case, I have a clearer picture now on the theory, at least.  Galina.           Log in or register to post comments",6172
Log in to reply,6172
Messages,6178
"08:00 am December 16, 2014                             In the scrum guide, it states:  ""Specific tactics for using the Scrum framework vary and are described elsewhere""  I'm wondering where are these tactics described?",6178
"02:25 pm December 16, 2014                    Take a look at the PSM reading list for examples of good publications:  https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…          Log in or register to post comments",6178
"01:04 pm December 22, 2014                    Thanks Ian          Log in or register to post comments",6178
Log in to reply,6178
Messages,6180
"07:30 pm December 17, 2014                             In Page 6 of the Scrum Guide,  Scrum Master Service to the Product Owner:  Helping the Scrum Team understand the need for clear and concise Product Backlog items;  I was wondering why this point is under the heading of  ""Scrum Master Service to the Product Owner"".  Shouldn't it be a generic point outside this title?",6180
"01:51 am December 18, 2014                    The PO owns the Product Backlog, but if it lacks clarity or concision it would fall to the Scrum Master to resolve that impediment.          Log in or register to post comments",6180
"01:54 am December 18, 2014                    NB resolution would have to involve the whole Scrum Team since PBI's are formulated collaboratively.          Log in or register to post comments",6180
"07:05 am December 18, 2014                    yes, males sense now. Thank you!          Log in or register to post comments",6180
Log in to reply,6180
Messages,6177
"01:03 pm December 15, 2014                             Hi, I'm about to start working on a non software project, it is for a NGO (non-governmental organization), and it is something I'm going to do in my free time.   It is for the JCI organization.   And as I usually provide them mentoring, I wanted to introduce scrum with this team. I'm about to start searching about how to implement scrum in non software projects, and I would really appreciate any tips, links or documents you might provide in order to start my search. Any help would be really appreciated.",6177
"08:50 am December 16, 2014                    Hi Fernando,  I think you can describe the big change, in opposition with conventional projects, by the fact a member of the dev team is the better person whom know how to fulfil a certain goal with its own skills. In collaboration with others members of a team. Not a manager.   After this introduction you could tell them the reason of doing Scrum (adaptation, transparency, inspection) in a project. And after the rest of the concepts described in the Scrum guide.  And don't forget a systemic formula : the  whole is greater than the sum of the parts. And Scrum is a very good way for obtaining best results from a team. Not a sum of persons.  Regards,  Maxime           Log in or register to post comments",6177
"09:08 am December 16, 2014                    Thanks Maxime          Log in or register to post comments",6177
Log in to reply,6177
Messages,6068
"11:58 am September 18, 2014                             For my MSc thesis I would like to evaluate which agile estimation methods are most frequently used and what their advantages and disadvantages are. For this evaluation I'll kindly ask you to answer the following questions.  The evaluation should require only a few minutes of your time.  Yours faithfully,  Marc Schulze  https://docs.google.com/forms/d/1VemH59uqK1RZO6iNR0O9gf5SqzCQoDByBRM-Yc…",6068
"11:54 am October 30, 2014                    Hi Marc,  I took your survey and it seems English is not your first language. You've done a valiant effort to word the questions correctly, but there are several that do not make sense.  I am happy to help you write the forms in easy to understand english?  Please contact me - tmuttitt@gmail.com if you would like some translation help!          Log in or register to post comments",6068
Log in to reply,6068
Messages,6110
"04:57 am October 16, 2014                             Hi All,  Yesterday (Wednesday) I passed PSM 1 after doing the scrum.org PSM training on Monday & Tuesday.  I feel obliged to post my thoughts here for your consideration. I’m a developer.  The revision  Most of this was done on Wednesday, i essentially studied:  •	scrum guide - I went over this a few times, I like to take a marker/highlighter and identify key words and sentences concerning relationships betweens roles and events/artefacts.  Paying careful attention to words like ‘must’ & ‘should’.  •	Scrum open - This is fairly well covered by other on this forum, do it many times, and get 100%, also look at the incorrect answers and make sure you can identify why they are wrong  •	Developer open - I didn’t notice many people mention this as being used to study for PSM - I think it’s worth it, a few of these showed up in the PSM 1 assessment (like sprint zero)  •	This forum - A mixed bag, some people talk sense, but there is quite a bit of misinformation and when you are ‘cramming’ reading this can cause you to forget the correct answers  •	Other websites - Didn’t really bother, seems a lot of incorrect, or adapted versions of scrum about, it’s essential to focus on the scrum.org understanding of scrum  •	scrum.org PSM training - See below   The Assessment  Firstly the assessment software is a damn disgrace, and they should be ashamed of it.  It threw me quite a lot when I realised that the software is totally different to the Open assessment software.  The layout is terrible, the navigation is terrible, the post backs are terrible and time consuming, the countdown is obvious and distracting (the cynic in me wonders if this is on purpose)  •	About 20% of the questions come from scrum and developer open  •	It took me about 40 minutes to get through 80, and the rest of the time to check the question i had noted down as “not sure”, navigation takes a long time and is very frustrating  •	You can generally use logic to identify the answers to the others so long as you understand from the scrum guide which roles should be at what events and when they interact with the artefacts  	⁃	For example if the “development team” are the only ones who MUST be at the “daily scrum” then it stands to reason they should be the ones updating the sprint burn down chart.  •	There were about 3 questions which were real bolts from the blue, and I hadn’t really seen any information about them  The PSM training  I have mixed feelings about this, i’m not sure I personally got too much from the course, but i’m not sure if the reason for this is because other people on the course had limited experience with scrum.  •	I found many people had very specific questions around how things would apply to their situation, ‘my CTO would never do that’, or basically wanted to showboat about their company  •	Hours of wasted time explaining scrum essentials, when it’s clearly explained in the prerequisites what you should know, and who the course is aimed at   The Results  I got a score of 95%, which I think I was probably lucky to get.  On my notepad i jotted down about 20 I was uncertain on, and 3 which were an educated stab in the dark.  Other advice  •	Don’t do all this with the flu, it really wipes you out  •	Bravo to anyone who does this when english is not their mother tongue  I hope this is of some help to others…  Regards  Rob",6110
"11:50 am October 30, 2014                    Congratulations on passing! Some good advice there Robert. Especially forums and other websites - these are mostly peoples opinions on different topics. Some of which are valid and some are not.  Maybe they have the timer there to remind you of the timebox - can you imagine not having the timer there and then all of a sudden it says 'Time is up'? That would be way less fun!  I agree on the navigation - they could have a question index or something on the side with something to show if you answered the question or not, so you can then click on it and jump back to it.  Are you going to talk the PSD, considering you're a scrum developer?  What were your main reasons for getting the PSM I certification?          Log in or register to post comments",6110
Log in to reply,6110
Messages,6127
"04:18 am October 26, 2014                              Introduction:-  ------------------  We are basically developers and mostly follow Agile methodology during our development cycle. Recently, we got responsibility for handling a Software Support group. Here the scope is bit different; we need to provide a quick fix (L2 fix) on the system so that the user can proceed.  We have seen few new problems and constrains during the Support, which was quite different than normal development cycle. As usual a first question comes to my mind “Can Software Support problem be addressed with Agile Methodology?” we started thinking solution using Agile.  Initially we were not sure about the success of Agile method in Software Production support. Later we found Agile Methodology was quite helpful also in Software support.  We started using Kanban to address one of the problems of support, and we have seen it is quite a good success using these methodologies.  Problem statement:-  --------------------------  Every day, L1 support team (direct interface to the users) used to get calls by the end user. Among these call few calls can be handled by the support team itself. Rest of the calls need to be handled by L2-support-team by creating a production-ticket for L2- support-team. L2-support-team-LEAD used to assign this ticket to the L2 team. L2-support-teams are mostly expert in their technical field. In this case we will assume Desktop client, server/service, and Database are different works where the production needs support.  Production environment are always dynamic, based on the user usage on the production support calls and intern number of production ticket may differ.  Here the responsibility of the Support-team-LEAD is to equally distribute the support calls among L2-support-team to balance the L2 tickets, which intern leads to better customer satisfaction and stability in the system.  Mapping of the Kanban methodology:-  ----------------------------------------------------  L2-support-team will be divided based on their technical field, let’s say Desktop-client, server/service, and Database.  Each team needs to announce the maximum number L2 issue/ticket fix per day. In our case Desktop-client can solve 3, server/service can solve 5, and Database with 3. At any point of time it should not cross the announced limit. Moreover new ticket backlog also should not cross 6 tickets at any point of time.  Support-team-LEAD responsibility is to assign the backlog issue to the responsible team.  At any point of time the threshold should not cross the defined limit. If it crosses the maximum limit, Support-team-LEAD needs to be alert for the immediate plan. Let’s say in for the database team pending task was 5 at a point which was above then the maximum value. Now the Support-team-LEAD needs to be alerted, and need to pitch into the database area and help the database team to fix the tickets. Once the database backlog is on the track, the LEAD can go back his/her earlier task of issue/ticket assignment.  Conclusion:-  -----------------  We have observed this way of production issue tracking can have better control in the production system.  However this implementation is completely as author specific and the scenario faced by him. This concept may not applicable one to one to other products.",6127
"01:15 am October 30, 2014                    If you have to create such a fancy process to handle support, than I would suggest that Kanban his hiding your root cause problems rather than exposing them.  As such, using Kanban here is a sure fire way to continue to have dysfunctions in perpetuity.  Good software doesn't need fancy support.  Also see:  http://Scrumcrazy.com/bugs          Log in or register to post comments",6127
"01:53 am October 30, 2014                    > Here the responsibility of the Support-team-  > LEAD is to equally distribute the support calls   > among L2-support-team to balance the L2 tickets  That's a push-based system. An agile process would use a pull-based approach whereby teams draw work from a backlog as soon as their Work In Progress limits can accommodate it. Kanban is one way of managing and visualising this, but that doesn't seem to be happening here.  It's reasonable, in a Kanban support model, to have an L1 team triage work into the backlogs of appropriate L2 teams. This determination might be based on team skillsets for example, or perhaps the quality of service that is to be provided. However it would not be reasonable to have a team lead triage work by monitoring availability and directing work towards teams on that basis.  All agile and lean methods, including Kanban and Scrum, use a self-balancing pull-based approach for drawing work through in order to add and release value.          Log in or register to post comments",6127
Log in to reply,6127
Messages,5736
"07:40 am February 4, 2014                             Hi *,  I have just passed my PSM-I exam with 96%.   Below are some points which could be useful for those planing to takethe exam.  1) The timebox (60 min.): As a non-native speaker of English I was a little worried about the shortage of time (45 seconds for each question). I gotthrough all 80 questions in under 30 minutes. Therefore I had the chance to go through all questions again and improve/change some of my answers.  2) As  mentioned in several other feedbacks in this forum, understanding the Scrum Guide and practicing with help of the ""Open Assessment"" is the main key to passing the exam.   3) There were many questions (~ 20 ) from the pool set of the open assessment, that means it is very important to do the open assessment so often that you don't need to waste time on these questions in real exam.  4)  Pay attention to the keywords like ""false"", ""NOT"" , and possible answers in digit or in text form (2 , THREE) within the questions.  5) Pay attention to the options like ""None"" or ""all"".  6) Some of the questions are in ""Radio Buttons"" that means you can only select one option. But there are also questions in ""Checkboxes"", where more than one answer can be selected. In some of these checkbox questions, there is no hint/indication that multiple answers/options could be correct.  I recommend that if you have time to go through the checkbox questions at the end to re-check again your answers.  Last but not least,  I learned a lot from the disscusions in the forum,  among others my special thanks to Ian Mitchell who quickly and precisely explained every question.  Mehdi",5736
"11:01 am February 4, 2014                    Thanks Mehdi for the tips.          Log in or register to post comments",5736
"11:11 am February 4, 2014                    Can you share more online assessment you might have tried before taking this test?   I have found a few like http://scrumsource.com/scrumexams.htm and http://www.scrumstudy.com/introduction-to-scrum-course.asp. I find both of them fine but there are questions and answers which look little different to me.          Log in or register to post comments",5736
"06:15 pm February 4, 2014                    @Anja:   I didn't have any questions besides Open Assessment. I did additionally  several times Open Assessment for Development, to get familiar with the exam format.  Now after exam, I can say that you do not need the effort to search for extra questions sources . They might be even as false friends for this exam.   Try to read and understand Scrum Guide deeply.  I myself stopped after each sentence of S. Guide  and tried to re-constract what I had read, It is difficult to remember the facts if they are abstract. Our Brain (memory) needs picture to keep the facts permanent. making examples and imaginary scenarios with people that you know well in your project helps to remember the rule.   I give an example: on page 5 of guide you read ""...The Product Owner may do the above work, or have the Development Team do it. However, the Product Owner remains accountable."" This could be easily topic for a tricky multiple choice question.   In the exam was many question about who (SM,PO,Dev.,...)  is responsible for ( X, Y,.Z,..). And in many of them the correct answer was  Dev. Team  because they are self-organize, cross-functional team. Several question were about DoD  most of them were either exactly the same question from open assessment pool or were easy to find out which option is correct.  The exame was much easier than what I expected.  Mehdi          Log in or register to post comments",5736
"09:47 am February 5, 2014                    Thanks Mehdi for your reply!!!          Log in or register to post comments",5736
"02:13 am March 3, 2014                    Congratulations on passing your assessment!   I needed some information since I am preparing for the PSM 1 examination as well. I was trying to look up for the same in the forums, but I couldn't find what I was looking for.   What is the process after purchasing the password? I understand I will receive an email and I need to take the assessment within 14 days of receiving the password. But is the examination online on the internet? If yes, how does it remain fair to ensure that people are not copying or seeking help while giving the exams?  I hope I am not missing something very basic which is already listed on the website somewhere. I have done my PMP wherein the rules are quite stringent since the examination is taken at some registered external agency.  Regards  Satish           Log in or register to post comments",5736
"04:03 am March 3, 2014                    Hi Satish,  you may find the answer to your question here:  https://www.scrum.org/Forums/aft/696  ;)          Log in or register to post comments",5736
"06:12 pm March 17, 2014                    Congratulations Mehdi and thanks for your tips!          Log in or register to post comments",5736
"10:45 pm June 2, 2014                    congratulations! i am so happy for you mehdi.. you studied so hard.. i can tell by your posts on this forum :)          Log in or register to post comments",5736
"05:58 pm October 29, 2014                    Hi Guys, is there anyone to give correct answers to my questions happened in exam, I got %82 and not passed?  meanwhile, I dont agree with Mehdi's comments , it seems only he is doing his  advertisement.,sorry this is fact.          Log in or register to post comments",5736
"06:05 pm October 29, 2014                    Hello Murat,    We are sorry you were unable to achieve a passing score on the PSM I.  While we encourage people to consult our forums to engage in conversations to help foster and enrich their comprehension of the Scrum framework and mindset, we cannot allow users to submit posts that contain our assessment content. This can be seen in our forum terms of use:    https://www.scrum.org/Community/Forums/Terms-Of-Use    ""Unsuitable post content includes, but is not limited to, Scrum.org assessment questions and answers, profanity, insults, racism or sexually explicit content.""    The purpose of the forums is to cultivate understanding of the implementation of Scrum through the sharing of insight, knowledge and experience. They are not a source for answers to assessment questions. We hope you continue to use our forums as they were intended, and wish you the best in your continued learning of Scrum.   If you would like feedback about the questions you missed, please feel free to reach out to support@scrum.org. While we cannot provide the exact questions and answers, we can give you more detailed information on the topics and concepts where there is room for improvement.          Log in or register to post comments",5736
Log in to reply,5736
Messages,6105
"03:20 pm October 13, 2014                             Hi All,          The developer in the scrum team needs system admin help and the Developer can not continue work without the help from system admin. In that situation the task of system admin will be counted as the sprint task of the developer who needs the help or not? Or is it counted as separate sprint backlog activity? How the infrastructure like assigning the computer, getting new software and database for the development team work in agile frame work. The development activities will not happen without the infrastructure. So will it be accounted within sprint cycle or not? In waterfall SDLC, all these are accounted as tasks within the SDLC. How it will be accounted in agile project ? I need help , Someone kindly explain?",6105
"03:30 pm October 15, 2014                    In Scrum the people who develop a potentially releasable increment are all Development Team members. There is no separate system administrator role. If any system admin work needs doing in order to create the increment, then the relevant sysadmin competencies must exist in the team. The system administration tasks to be performed can then be planned by the team into their Sprint Backlog.          Log in or register to post comments",6105
"09:36 am October 20, 2014                    Scrum is focused on software development, not project management.    Obtaining facilities and infrastructure of the type you mentioned is not software development, so technically those kinds of activities can exist anywhere and need not be related to Scrum.  Here's my question -- why is it important that we account for these tasks in a Scrum team?  What would happen if we did NOT account for these on a sprint backlog or product backlog?          Log in or register to post comments",6105
"03:48 pm October 29, 2014                    Thanks Ian.  <Here's my question -- why is it important that we account for these tasks in a Scrum team? What would happen if we did NOT account for these on a sprint backlog or product backlog?     It is mandatory/important to  get these services/ tasks done to complete software development  in any  kind of SDLC to produce any software product.          Log in or register to post comments",6105
Log in to reply,6105
Messages,6119
"07:13 am October 22, 2014                             Hi,  Some colleagues and I are interested in the Professional Scrum Developer certification. However, it is not feasible for us to attend the course.  So, is there any learning material related to the PSD 1 course, e.g. books, articles, available that we could use to study for the PSD 1 assessment ourselves?  Regards,  Shane",6119
"06:13 am October 29, 2014                    Hi,  Begin with the Guide http://scrumguides.org/  And travel the resources https://www.scrum.org/Resources  When it's done, try some exams https://www.scrum.org/Assessments/Open-Assessments/Scrum-Open-Assessment  You can also learn more about Scrum here http://scrumtrainingseries.com/Intro_to_Scrum/Intro_to_Scrum.htm          Log in or register to post comments",6119
Log in to reply,6119
Messages,6115
"08:17 am October 20, 2014                             To what level should stories be broken down? We have a story that simply says ""ABC v2.0.0,"" where ABC is the name of the application. If written in the normal format, it would say something like ""As an ABC user, I can have all the bugs fixed and all the enhancements made, so that life will be good.""  I think that's way too big. I think having huge stories like this is the main reason we only completed 1 out of 110 points last sprint. But how far should they be broken down?  Is a story like ""As an ABC user, I can have the typo on the profile page fixed, so that I can have a better user experience"" too small?",6115
"09:25 am October 20, 2014                    Ragesh,  A sentence like the ones you mentioned are not a user story.  See trap #'s 1 and 8 here:  http://scrumcrazy.wordpress.com/2011/01/05/user-story-traps/  See here for a better understanding of what a user story really is:  http://www.scrumcrazy.com/User+Story+Basics+-+What+is+a+User+Story%3F  It is generally best if user stories are broken down into a size that can be completed in 2-3 days.  More here:  http://www.scrumcrazy.com/The+ScrumCrazy.com+User+Story+Maturity+Model           Log in or register to post comments",6115
"09:59 pm October 20, 2014                    User stories have a specific format, designed to help the author be descriptive and the reader (a developer) to take action:   “As a [persona], I want to [do something] so that I can [derive a benefit]”  If you’re the product person, your job is the fill in the (orange) blanks. The persona is a vivid, humanized, yet operational description of your user. The ‘[do something]‘ is a some action you assume the user wants to do, and the ‘[derive a benefit]‘ clause is a statement of why you've assumed the user persona wants to do what you describe. The [derive a benefit] clause is the most neglected by most creators of agile user stories and yet the most important. The reason why it’s so important is that this is where you’re saying why the feature you’re proposing to build makes sense.   Once you have stories that tie back to strong, validated customer discovery, your job is to organize this material into compelling narratives your development team can understand. There are a few ways to do this, but you want to make sure your compiled personas and problem scenarios are highly visible. Personally, I use this Venture Design Template which ties those items together. Presentations are also good, particularly if the focus is you describing what it was like observing the customer. The key thing is to spur interest and discussion with your developers about your stories, a discussion that drives toward more customer-relevant implementations. If no one ever says ‘I just built what you said’ then you know you did a great job.           Log in or register to post comments",6115
"07:56 am October 21, 2014                    Charles, interesting. Is this your opinion, or is this definition generally accepted?  We do have conversations, but they usually don't happen until the developer is working on a story. And we do have acceptance tests for some stories, but not all.          Log in or register to post comments",6115
"10:49 am October 21, 2014                    > To what level should stories be broken down?  Investing in a user story is a bit like investing in the stock market...it is important to stake no more than you are prepared to lose.  In other words, if you have a large user story you must bear in mind the increased risk of non-completion. Smaller stories exhibit greater liquidity and throughput. It is no longer a matter of all or nothing, so the risk exposure is concomitantly lower. The limiting factor on smallness is the value provided to the Product Owner, as each story must be substantial enough to release genuine value..          Log in or register to post comments",6115
"06:46 pm October 21, 2014                    > User stories have a specific format, designed to help the author be descriptive and the reader (a developer) to take action:   This is not true.  The only ""specific format"" of User Stories is that they have a card, a conversation, and confirmations.  The sentence template was something added later by some guy, and it has serious drawbacks (and a couple of small, infrequent advantages).    Card, Conversations, Confirmations:  http://xprogramming.com/articles/expcardconversationconfirmation/          Log in or register to post comments",6115
"06:51 pm October 21, 2014                    > Charles, interesting. Is this your opinion, or is this definition generally accepted?  Generally, people don't understand the user stories practice.  I learned directly from the guy who co-created the user story concept.  The same guy edited and approved the article that I wrote on the Agile Atlas.  The article is arguably the most credible article about user stories on the internet.  http://agileatlas.org/articles/item/user-stories  I'm not sure ""generally accepted"" is a good standard.  It was ""generally accepted"" for many centuries that the world was flat.  ""Truth"" and ""facts"" might be better standards.          Log in or register to post comments",6115
"10:04 am October 22, 2014                    I agree with Charles. The most important point is the conversation, not really in the format. The format is suppose to trigger conversation.          Log in or register to post comments",6115
"04:23 pm October 22, 2014                    Charles, unfortunately truth and facts don't really work when we have to convince management of something. We need something official we can point to that says we're doing it wrong.  A few months ago you linked to Jeff Sutherland's article about why story points are better than hours (http://scrum.jeffsutherland.com/2010/04/story-points-why-are-they-bette…). Great article. Unfortunately, the whole world thinks you're supposed to use hours, and this one post isn't going to overturn that.  Same with user stories - everyone thinks a story is just a sentence in a particular format, and it's going to be really hard to shake that perception.          Log in or register to post comments",6115
"09:52 pm October 22, 2014                    Ragesh,  The Agile Atlas is about as official as you can get -- it is pretty much the official body of knowledge for the Scrum Alliance.  Ron Jeffries, **the guy who created the User Story practice**, is about as official as you can get.    How ""more official"" do you want it to get?  Are you waiting on a sign or proclamation from a deity?  :-)  Charles          Log in or register to post comments",6115
"02:48 pm October 28, 2014                    Charles, it still comes down to one post on a blog I hadn't heard of. Not a big deal, I was just curious about how much support this idea has. Sounds like maybe it's a case of VHS vs Beta (your definition sounds better but less popular).  The points vs hours thing is a much bigger deal to me. Instead of just writing a post complaining about what a horrible practice it is to estimate stories in hours, I wish that Jeff Sutherland had put this in the Scrum Guide to make it official instead of a matter of preference.          Log in or register to post comments",6115
Log in to reply,6115
Messages,6095
"04:56 pm October 3, 2014                             How are leadership functions distributed in SCRUM when there is a shift from Waterfall Model to SCRUM?",6095
"05:20 am October 9, 2014                    typically downwards. Leadership on each level, not only C-level.          Log in or register to post comments",6095
"10:20 am October 16, 2014                    Hi Gopi,  I read the Scrum Guide like this:  Controlling --> Development Team / no longer required because the short Sprints enable frequent inspection and adaptation without Controlling ""from above"" and without micromanagement  Process --> Scrum Master  Product Contents --> Product Owner  Other management functions might remain within management and outside the Scrum Team.          Log in or register to post comments",6095
"02:00 pm October 28, 2014                    Generally 'development managers' then become chief impediment removers or points of escalation to remove impediments or make decisions. With each step up, the responsibility is there all the way to the CEO to remove impediments that are slowing the team down - as it effects productivity, speed to market and quality. I believe most CEOs care about all 3 of those! Quite often only the senior folks are able to change processes, or remove unneeded approval steps.          Log in or register to post comments",6095
Log in to reply,6095
Messages,6123
"04:39 pm October 23, 2014                             Hello,  I'm preparing to PSM I exam. I found contradiction what Scrum Guide says about SM role. It's stated that SM does not have to be on daily meetings (he/she only has to ensure team do them). One of the point for daily meetings are impediments . From other side major SM responsibility is to remove impediments. How can he/she know about them if not present on daily meetings ?  Regards  Pawel",6123
"05:50 pm October 23, 2014                    If, for some reason, the team were unable to raise impediments before the Daily Scrum, then it would be a good idea for the Scrum Master to attend.   Wouldn't it be better to bring them to the Scrum Master's attention before then, though?          Log in or register to post comments",6123
"07:37 pm October 23, 2014                    Pawel, you have to remember that many of the components of Scrum are ""minimums"", as in, at minimum, you have to have a potentially releasable increment(PRI) at the end of each sprint.  This does not stop you from deploying to production every single day or hour.  The minimum requirement is that you have at least one PRI at the end of the Sprint.  You're allowed to do more than that.  Yes, at the Daily Scrum, it is encouraged that the Dev Team talk about any impediments that are in their way, but that is a minimum.  They can talk about or resolve impediments ANY time.  In fact, I think that ""saving up your impediments"" for the Daily Scrum is a bad practice, because it implies unnecessary delays.  See the ""obstacle resolution"" section here:  http://www.scrumcrazy.com/Overview+-+Daily+Scrum+Patterns           Log in or register to post comments",6123
"07:40 pm October 23, 2014                    And of course, +100 to Ian's point as well.          Log in or register to post comments",6123
"01:46 pm October 28, 2014                    The team should be aware that the SM may or may not be at the daily planning meeting. They should also be aware if there are any impediments they can not solve themselves, to raise that impediment to the SM.          Log in or register to post comments",6123
Log in to reply,6123
Messages,6120
"07:14 am October 22, 2014                             Hi,  Some colleagues and I are interested in the Professional Scrum Developer certification. However, it is not feasible for us to attend the course.  So, is there any learning material related to the PSD 1 course, e.g. books, articles, available that we could use to study for the PSD 1 assessment ourselves?  Regards,  Shane",6120
"07:45 pm October 27, 2014                    Please check https://www.scrum.org/Courses/Professional-Scrum-Developer/PSD-Subject-…  Regards,  Ivan Darmawan           Log in or register to post comments",6120
Log in to reply,6120
Messages,6108
"01:54 am October 15, 2014                             Hi all, I suppose all team have a way to learn from defects, and all have some precautious actions taken.   What is your teams' way?   I suggest a separate grooming session to go over the past sprints production defects to identify the root cause and to write a S.M.A.R.T. action to prevent them to intrude to production. I named is as Drooming Session :Grooming the defects of the team.",6108
"02:48 pm October 15, 2014                    Generally I have found defects to be small in what   is going wrong, however the cause is unkown and will not be known unttil a developer dives into the code. We don't really groom the defect, apart from a conversation with the product owner and QA if it isn't fully understand how the functionality should work.  If it is a new application for many and they don't understand the intent of the functionality or system, then a grooming session could be very beneficial, so that everyone has a shared understanding of how things should work.  Hope this helps.          Log in or register to post comments",6108
"04:06 pm October 15, 2014                    In Scrum a Sprint Retrospective would be expected to uncover these issues. The output of the Retrospective should be a suitably adapted team process.  A case can be made for performing defect analysis as and when defects arise, and for adapting the process at the earliest opportunity thereafter. This will theoretically limit waste as far as possible. In Scrum the Retrospective should be seen as a formal opportunity to take remedial action, though it does not prohibit earlier and more timely interventions.          Log in or register to post comments",6108
"05:06 am October 17, 2014                    What I hear more ofthen is a zero defect policy. This means defects are fixed instant or will be accepted. This way there won't be al growing list of defects that need to be discussed or something like that.  Is their anyone with more experience working this way?          Log in or register to post comments",6108
"12:19 pm October 27, 2014                     Posted By Pieter Versteijnen on 17 Oct 2014 05:06 AM  What I hear more ofthen is a zero defect policy. This means defects are fixed instant or will be accepted. This way there won't be al growing list of defects that need to be discussed or something like that.    Is their anyone with more experience working this way?  I have worked this way at my previous company - we had a zero defect policy when promoting code into the integrated testing environment. It worked really well, was totally achievable and eliminated the need for 'stabilization' (which is just time to go back and make things ACTUALLY DONE, when they should have been DONE in the first place. (check out the definition of done in the scrum guide if you want to learn more).  It leads me to think that there is a deeper, root cause for the defects that you have, that has not been uncovered yet. Maybe try the '5 Whys' game, where you continuously ask why, until you find the actual cause of having so many defects in your product/project.  Does your team have a definition of done? sounds like it might need to be revisited, to have product increments actually DONE, rather than ALMOST DONE - leaving lots of defects behind on the way.  The teams velocity may initially slow as they learn their true capacity when delivering stories to DONE, rather than 'almost done'.  Also, do you have QA sitting with the developers on the project? Fully testing user stories before marking them as done?           Log in or register to post comments",6108
Log in to reply,6108
Messages,6125
"07:46 am October 24, 2014                             Hi,  I'm preparing for the PSM I assessment and I'd like to ask a question about the cross-functionality of the development teams. The Scrum Guide says:  ""Development Teams are cross-functional, with ALL of the skills as a team necessary to create a product Increment;""  I participated in many projects where it was simply not possible for the team to posses all the necessary qualifications to complete an increment. We needed to outsource certain portions of the projects, like translations, or we needed to get expert opinion on some issues, like SEO, or server-related issues.  Do I understand it right that outsourcing certain portions of the project is OK as long as the team remains ultimately responsible for those portions?  Thank you for clarifying this.  Alan",6125
"12:51 pm October 24, 2014                    > Do I understand it right that outsourcing  > certain portions of the project is OK as long  > as the team remains ultimately responsible for those portions?   Not if that would mean delegating part of the team's process to others where it cannot be subjected to inspection and adaptation by team members.          Log in or register to post comments",6125
"03:12 pm October 24, 2014                    > Not if that would mean delegating part of the team's process   > to others where it cannot be subjected to inspection and   > adaptation by team members.  Could you just clarify what exactly should be subject to inspection and adaptation? Let's take a look at a practical example:  The team's working on a multilingual project. For the sprint backlog item to be completed, some of its data needs to be translated to 5 languages. The team don't have the needed skills, so the process needs to be outsourced to outside translators. The process is outsourced, so it can't be inspected or adapted. The translations that come in can be inspected, alright, but not adapted...  Could you help me understand how this scenario fits in with the scrum framework? Thanks!           Log in or register to post comments",6125
"04:34 pm October 24, 2014                    Suppose that there was an error in one of the translations. Because the team do not have the necessary translation skills they are not in a position to assess the increment for quality, spot the error, and fix it. Inspection and adaptation of the process is thus compromised and the faulty increment will be passed further down the value chain. Once the error is eventually spotted it will be harder and more expensive to fix than if it was identified and remedied  by those responsible for doing the work.          Log in or register to post comments",6125
"05:16 pm October 24, 2014                    Ok, that makes sense, but... according to the guide, Scrum is a framework for developing complex products. Translation is just the tip of the iceberg; complex products will have many problems that a small team will not know how to inspect and adapt personally.  If we can't outsource translations to a translation agency, a SEO audit to a SEO expert or a complicated server setup to a qualified server admin, what are we supposed to do with those tasks?  If you wouldn't mind, I'd appreciate a simple, practical answer that I could understand:  You're a part of a development team and you need to translate something to, say, Thai. You don't speak Thai, and there are no Thai speakers that you can bring in to join the team. What do you do?           Log in or register to post comments",6125
"01:52 am October 25, 2014                    The Development Team must explain to the Product Owner that they are not in a position to action those items on the Product Backlog which require an ability to speak Thai.  In Scrum, the Development Team wholly own their Sprint Backlog and work must therefore be negotiated into it. The Development Team are not obliged to accept Product Backlog Items, and must be careful not to do so if they are unconfident in their ability to action them.  This might be realized, for example, in a Planning Poker session. Team members would play a question mark card for any PBI's requiring a knowledge of Thai. This indicates that those items cannot be estimated by the team and inducted into any of their Sprints. It is then up to the Product Owner to modify the Product Backlog in such a way that work can in fact be actioned by that team and a potentially releasable increment created.  The PO may choose to find another team with a knowledge of Thai who can action the Product Backlog in whole or in part. In practice it is normal for multiple teams to collaborate in creating Potentially Releasable Increments as the skills are often varied and products can be complex. A PO must therefore be able to work with multiple teams when creating a product using Scrum at scale.          Log in or register to post comments",6125
"04:00 am October 25, 2014                    Thank you for the explanation, Ian. Things are getting clearer, but we're not there yet :).  In one of the projects I managed (non-scrum) we had to create the software, translate it to 20 languages, set it up on several servers, create some pieces of hardware that had to be outsourced to third-party companies and set up some offices and transport.  If that project was done in Scrum, the development team would create the software, but who would take care of all the rest? Let's face it, the PO wouldn't be looking for 20 Scrum teams to do the translations. That's what translation agencies are for. There also wouldn't be a Scrum team with the set of specialized skills and tools to create the hardware, A hardware company would need to be contracted for that. The same with the server contract, the logistics contracts, the real-estate contracts, the equipment supply contracts, etc.  Now, it's a complex project and Scrum should be able to handle it. I'm just not sure how...  Is the Product Owner supposed to handle all that procurement, risk and communication? Doesn't that go beyond the PO area of expertise and responsibility?  Do we hire an additional person, an ol'-style PMI project manager who is trained to handle it? Or should we get a PMP-certified Product Owner?  The PMI-style project manager's responsibilities include managing scope, stakeholders, time and quality, which is exactly what Scrum's Product Owner does. But the project manager also handles integration, cost, human resources, communications, risk and procurement, which makes him or her qualified to handle the external contracts.  So it looks to me like theoretically the project manager could also be the product owner and thus handle the entire project - part of which would be leaving the Scrum development team to do their stuff and create the software the Scrum way. But does that even fit in with the Scrum theory?  So here's a new assessment question for you:  What do we do with the procurements and the risk for the project described in the second paragraph of this post?  1. Have the Product Owner handle it.  2. Get a project manager, make him a product owner and have him or her run the applicable parts of the project in Scrum.  3. Add an additional project manager, who's not a member of the Scrum team.  4. None of the above. (Please, feel free to elaborate...)  Thank you for taking your time to explain this.           Log in or register to post comments",6125
"05:10 am October 25, 2014                    > Is the Product Owner supposed to handle all that  > procurement, risk and communication? Doesn't  > that go beyond the PO area of expertise and responsibility?   - The procurement of resources or capabilities that a team cannot supply, but which are needed for creating Product increments...yes, the PO would be responsible for that.  - The risk around negotiating & releasing team deliverables that satisfy stakeholders is also the PO's responsibility (but not in-sprint development risk).  - Communication is partly but not entirely the PO's responsibility (it is reasonable for Development Teams to collaborate on making a release even though one does not delegate to another).  The PO is responsible for the Product, and must be able to release the work done by one or more Development Teams as valuable product increments. This may require an understanding of how PBI's from a product backlog should be brought together by multiple teams in order to effect a release. This is in fact the usual situation with complex products.  > What do we do with the procurements and the risk  > for the project described in the second paragraph of this post?   >  > 1. Have the Product Owner handle it.   Yes, if no one team is in a position to do all the work then the PO is responsible for finding a remedy, such as co-ordinating the work of multiple teams in order to facilitate the release of valuable product increments.  > 2. Get a project manager, make him a product owner  > and have him or her run the applicable parts of the project in Scrum.  Absolutely not. The focus is on releasing a product incrementally under the guidance of an informed owner...not on trying to arrange ""project"" responsibilities. Moreover, product ownership is a skill that is vested in appropriate individuals...it is not a quality that can simply be assigned.  > 3. Add an additional project manager, who's not a member of the Scrum team.   There is no notion of a project in Scrum, only of a product. Hence there is no Project Manager role, but there is a Product Owner role. Product Ownership involves a special skill set, including the ability to handle complex products and the deliverables of multiple teams at enterprise scale.           Log in or register to post comments",6125
"05:26 am October 25, 2014                    That's clear, thanks for explaining it, Ian. Next stop: study more about the Product Owner role :).          Log in or register to post comments",6125
Log in to reply,6125
Messages,6117
"05:00 pm October 20, 2014                             Folks  I have been trying to get an handle on Whether Agile is a Methodology or Framework or Philosophy  I have seen lots of posts where they say Agile is Project Management Methodology and Agile project management methodologies include scrum, extreme programming (XP), and lean, among others  By Defination - Methodology is “a system of methods used in a particular area of study or activity”   When i read the Agile Manifesto its all about the 4 values and 12 principles. It does not mention anything about it being a methodology . To me it looks like  -  Agile is a philosophy, A set of principles to guide you in the choices you make.  So why do people call it as an -  Project Management Methodology   Secondly - Scrum is a Process Framework ( Scrum Guide)  - Framework by defination  - is a picture or a model that guides you to understand which artifacts  you should produce when. It doesn't tell you what to do though.   - its a skeleton   So then why is Scrum is considered as one of the  Project Management Methodologies  Any thoughts to solve my doubts  Regards",6117
"08:18 am October 24, 2014                    Hi Gautam,  in my experience proper naming standards and consistent definitions are very rare and perhaps only fully achieved in math. The best thing you can find in ""real life"" are small consistent islands. So if you're going really into the definitions you have to take care of ""staying within your island"".  The Scrum Guide is such an island.  - Methology:    About methodologies it says, Scrum ""functions well as a container for other techniques, methodologies, and practices"". And it doesn't go any further.  - Agility:    About agility it says, ""The Scrum Master serves the Product Owner in several ways, including [...] understanding and practicing agility"". And it doesn't go any further.  - Framework:    About framework it says, of course, multiple things as the Scrum Guide defines Scrum itself as a framework.  In my opinion, you can very well say, ""Agile is a philosophy"". But I'd say a framework can also be a methodology. Scrum tells you what to do. It just doesn't tell you how to do it. And that's the purpose of the underlying methods (which Scrum does neither name nor prescribe).  Though probably that deviates from the consistent island, i guess... :-)          Log in or register to post comments",6117
"03:17 pm October 24, 2014                    > So why do people call it as an - Project Management Methodology   Because they are naive, or because their primary target audience is naive.  (naive about Methodology vs. Framework or Agile/Scrum)          Log in or register to post comments",6117
Log in to reply,6117
Messages,6122
"04:01 pm October 22, 2014                             How does one become an ""expert"" in Evidence-based Management (EBM)? Is there a certification or application process?  Thanks,  Mark",6122
"02:55 pm October 23, 2014                    The ""official"" response, in case anyone else is curious:  Thank you for your interest in Scrum.org and for your message. We appreciate and commend your interest in learning more about the process of becoming a Scrum.org 'EBMgt Expert.' With regards to your inquiry, however, our 'EBMgt Expert' application and certification process is currently closed. We are not accepting any new applications for our 'EBMgt Expert' program at this time. If and when this status should change and we are accepting new applications for this distinction, an application form along with prerequisites, requirements and other relevant information will be added to our website on http://www.ebmgt.org/  If you should happen to be interested in the process of becoming a Scrum.org Professional Scrum Trainer (PST), there's a fairly rigorous certification process that begins with submitting an application. More information and links can be found on the PST Selection Process page. In addition to applications and information regarding the PST requirements, you may also find a ""Contact us"" button through the application links, where you may directly contact the Program Director of the PST Community with any further questions that you might have regarding the process.           Log in or register to post comments",6122
"11:52 am October 24, 2014                    Hello Mark,   Thank you for your interest in this topic and for your post. In retrospect, ""paused"" (as opposed to ""closed"") would actually be the more appropriate word choice for the present state of the 'EBMgt Expert' application and certification process.   Currently, we have a committed focus set upon preparation for our upcoming Scrum@Scale Workshops:   https://www.scrum.org/Courses/ScrumScale  The Scrum@Scale workshop is targeted at development managers, coaches, facilitators, change agents and leaders of organizations that need to formulate, implement, and manage Scrum at scale; whether they are considering, embarking on or going through an agile transformation.   Individuals having interest in EBMgt might very well hold interest in these workshops as well :-)   Enjoy your weekend!   Joe          Log in or register to post comments",6122
Log in to reply,6122
Messages,6081
"08:27 am September 25, 2014                             Hi folks,   there is a question in the open assessment:  Who is responsible to register work estimates during the sprint?  Correct answer is Development Team.  Product Owner is false.  I see a contradiction here.  Yes, the Dev Team is responsible for all estimates.  BUT the question is not about giving estimates, but about registering them (writing them on the story card).  Scrum Guide:  ""Product Backlog refinement is the act of adding detail, estimates(!), and order to items in the Product Backlog. This is an ongoing process in which the Product Owner and the Development Team collaborate on the details of Product Backlog items. [...] However, Product Backlog items can be updated at any time by the Product Owner or at the Product Owner’s discretion.""  This means, either both answers are correct (collaborate) or Product Owner is correct (can be updated at any time means he can change the estimates at any time). As of the Scrum Guide, there is no way only Dev Team should be correct.  I suggest to change the Scrum Guide (exclude estimates from the things PO can update) and keep the question as it is.  Best, Ludwig",6081
"10:38 am September 25, 2014                    Hi Ludwig,  I agree with you about the contradiction.  But I wouldn't change the Scrum Guide because the Product Owner owns the Product Backlog. I think, it is really important that he remains the one and only person responsible for it because he has to report it to managers and stakeholders. If he isn't responsible for registering the estimates, he loses control of the estimates and difficulties in reporting can arise and the managers or stakeholders have to contact the Development Team directly in questions of estimates.  The Scrum Guide allows the Product Owner to pass Product Backlog management tasks, but he remains responsible. To me that seems sensible.  I'd prefer to change the question: ""Who is responsible to develop work estimates during the sprint?"" or something like that.  Best regards,  AnotherDotCom.          Log in or register to post comments",6081
"10:42 am September 25, 2014                    Though, thinking about it further: Perhaps it is not a contradiction. The question is not necessarily about registering estimates to the Product Backlog. If you add a ""to the Sprint Backlog"", the contradiction disappears. Of course, the estimates of the Product Backlog Items transfer to the Sprint Backlog Items. But as the Sprint Backlog Items can be more detailed or split, there could arise some need to estimate them, too. Then, clearly the Development Team is responsible for registering them.  What do you think?          Log in or register to post comments",6081
"11:14 am September 29, 2014                    Hi Anke,  I think it does not make a big difference if you say Product Backlog or Sprint Backlog, because the items in the Sprint Backlog are still Product Backlog Items, which has led to an interpretation that they do not really leave the Product Backlog until they are done.  I do not share this interpretation, because it leads to many other contradictions, but I'm also having a hard time rejecting it... So many years of Scrum and still it is not fully understood :)          Log in or register to post comments",6081
"03:00 pm September 29, 2014                    Hello,  I just read the scrum guide and it is clearly mentioned that the development team is responsible for all estimates. It is also mentioned that the product owner may influence the Development team by helping it understand and select trade offs, but the people who will perform the work make the final estimate. .  So for me there is no ambiguity.  Regards  Manju          Log in or register to post comments",6081
"04:16 pm September 29, 2014                    I agree with Manju -   In page 13 of Scrum guide it mentioned as below :  The Development Team is responsible for all estimates. The Product Owner may influence the   Development Team by helping it understand and select trade-offs, but the people who will   perform the work make the final estimate.           Log in or register to post comments",6081
"12:12 pm September 30, 2014                    If you read my initial post carefully, you will notice this part:  Yes, the Dev Team is responsible for all estimates.  BUT the question is not about giving estimates, but about registering them (writing them on the story card).  Scrum Guide:  ""Product Backlog refinement is the act of adding detail, estimates(!), and order to items in the Product Backlog. This is an ongoing process in which the Product Owner and the Development Team collaborate on the details of Product Backlog items.          Log in or register to post comments",6081
"03:16 am October 1, 2014                    Hi Ludwig,  Sorry, I missed some part of your question. I practise the PO shall focus on feature releases and prioritising the requirements, whereas Dev Eng shall focus on break down and adding stories/tasks in the release backlog. I think PO will not have in-depth information about the tasks/stories whereas Dev team will be the better position to contribute in coming up with stories/tasks in order to get the task done.  regards  Manju          Log in or register to post comments",6081
"04:08 am October 3, 2014                    As the context of the question is from the Open Assessment, don't you push the question too far ?  In the real life, the Dev Teamd around me update their sprint burndown chart every day, without the PO.  In the question ""Who is responsible to register work estimates during the sprint? "", I think the question is related to the tasks used by the Dev Team to decompose the PBI.  Of course in Scrum everything is made ""during the sprint"" but I think the question is focused on the work done by the Dev Team on the current sprint backlog item, not the refinement of the Product Backlog.  I my point of view, the learning point of this question is to focus on the idea that the Dev Team is self-organized, and that the Dev Team must not (typically) wait for the Scrum-Master to update their estimates and their sprint burndownchart.          Log in or register to post comments",6081
"05:09 am October 3, 2014                    > Yes, the Dev Team is responsible for all estimates.   > BUT the question is not about giving estimates, but   > about registering them (writing them on the story card).   The PO must ensure that each item on the Product Backlog is well formed with a description, order, value, and estimate. Therefore the transcription of an estimated value could be seen as the PO's responsibility, even if he or she delegates it elsewhere.  As a Scrum Master I generally do the transcription in order to help facilitate Product Backlog refinement.           Log in or register to post comments",6081
"11:40 pm October 3, 2014                    the Dev Team is responsible for all estimates as they are are the one who actually work on creating the increment          Log in or register to post comments",6081
"11:17 am October 8, 2014                    Hi Ludwig,  sorry for the late reply...  You've made me curious: which contradictions do you see in ""my"" interpretation?  And, though I think that Olivier has a point about ""pushing the question too far"": in Sprint Backlog or in order to put Product Backlog Items to the Sprint Backlog, you certainly agree that you have to decompose Product Backlog Items. And for this decomposition a need for estimating could arise - although the PBIs also remain on the PB. Or is this just too theoretical and doesn't occur in practice?          Log in or register to post comments",6081
"12:49 pm October 21, 2014                    Hi Anke,  this occurs in practice. However the result of decomposing PBIs is again PBIs.  The contradiction emerges when you have PBIs which are part of the Product Backlog and of the Sprint Backlog, because there are clear rules who can update the Product Backlog (Product Owner) and the Sprint Backlog (Dev Team).          Log in or register to post comments",6081
"07:30 am October 24, 2014                    Hi Ludwig.  I hope I'm not annoying you. I'm not really sure of my interpretation and so - scientific method, falsificationism :) - I try to prove my own hypothesis wrong in order to gain further knowledge and new hypotheses. So:  Why is it so important to you to emphasize that the Sprint Backlog Items are still Product Backlog Items? I'd rather see it like that:  There is (for the sake of convenience) 1 Product Backlog Item on the Product Backlog. This Item has an estimate of 10 and the Development Team agrees (at the end of Sprint Planning Meeting Part I) to begin and finish the Product Backlog Item in the upcoming Sprint. For Part II of the Sprint Planning, the Development Team sends every one else out of the room and further decomposes the chosen Product Backlog Item.   Now, in my interpretation, everything the Development Team does to the PBI in this 2nd part of the Sprint Planning Meeting, happens only in the Sprint Backlog. There is no need for further grooming the Product Backlog and no need to bother the Product Owner at all (if there are no open questions etc.).  What's the problem with that? I can't see any.  Best regards and a nice weekend,  Anke.          Log in or register to post comments",6081
Log in to reply,6081
Messages,6111
"06:17 am October 17, 2014                             Hey everybody,   Our team is launching a company that will specialize in developing custom Scrumboard packages for those teams that want to optimize their process workflow. The boards will be of different designs and sizes, so you can choose what suits your office/garage/dorm best.  A package will include:   - a Scrumboard based on your choice;  - Post-it notes of up to ten different colors (you can also choose magnet cards);  - Markers of up to ten colors;  - Eraser;  - Tools you need to hang it on any vertical surface.   We would like to know if you will be interested.   Please email me at tbaghirli@gmail.com  Thank you,  Tim",6111
"10:07 am October 22, 2014                    Hi,  Please read the ground rules of this forum before posting: https://www.scrum.org/Forums/aft/83  Thank you.          Log in or register to post comments",6111
Log in to reply,6111
Messages,6080
"04:25 am September 25, 2014                             Technically, what should a sprint goal actually consist of? What should it ideally include and cover, or mention?",6080
"05:17 am September 25, 2014                    Hello,   Your question isn't good because there is no notion of Technical in Sprint goal. This is just a goal to be achieved by a DT before the end of the Sprint. And Scrum is not only for ""technical"" projects.  In other terms, your question makes more sense with the definition of Done in the case of ""technical"" projects. For example, following concepts of Continuous Integration.  Regards,  Maxime Hochet          Log in or register to post comments",6080
"07:04 am September 25, 2014                    The sprint goal can be anything that causes the Dev Team to collaborate on the increment during the sprint instead of working separately on different PBIs.  Often it is a new feature which makes it necessary to get several PBIs done.  If you take one PBI and declare it as sprint goal, it can easily happen that only one developer works on it, so the focus is lost for all other developers. They will not be able to answer the three questions in the daily Scrum, and even worse, the risk increases that the Sprint goal is not met.          Log in or register to post comments",6080
"08:04 am September 25, 2014                    Hi Quick Scrum,  be also careful to distinguish between the Definition of Done and the Sprint Goal:  The Definition of Done should contain all that is needed to decide if a Product / Sprint Backlog Item is done, e.g. detailed quality or performance criteria. You can test against the Definition of Done. The Definition of Done is tangible and concrete.  The Sprint Goal's purpose is to provide ""guidance to the Development Team on why it is building the Increment"" (Scrum Guide). I think, the Scrum Guide doesn't specify it further because it's value is very abstract - and concrete mechanisms that are absolutely right for one individual to achieve an abstract goal can be completely wrong for another. Perhaps you can also see the Sprint Goal like a vision for the sprint.  I'd recommend trying to find a concrete Sprint Goal for your concrete situation yourself. The odds are in your favor that your Sprint Goal will suit your team better than a Sprint Goal anyone else defines (from far away). And if it turns out to be bad: just try to do it better in the next Sprint.          Log in or register to post comments",6080
"08:17 am September 25, 2014                    > I'd recommend trying to find a concrete Sprint Goal for your concrete situation yourself.  And ""you"" should already include the whole team, of course, as the shared Sprint Goal emerges from the shared Sprint Planning Meeting...          Log in or register to post comments",6080
"12:06 pm October 2, 2014                     Posted By Anke Maerz on 25 Sep 2014 08:04 AM  Hi Quick Scrum,    be also careful to distinguish between the Definition of Done and the Sprint Goal:    The Definition of Done should contain all that is needed to decide if a Product / Sprint Backlog Item is done, e.g. detailed quality or performance criteria. You can test against the Definition of Done. The Definition of Done is tangible and concrete.    The Sprint Goal's purpose is to provide ""guidance to the Development Team on why it is building the Increment"" (Scrum Guide). I think, the Scrum Guide doesn't specify it further because it's value is very abstract - and concrete mechanisms that are absolutely right for one individual to achieve an abstract goal can be completely wrong for another. Perhaps you can also see the Sprint Goal like a vision for the sprint.    I'd recommend trying to find a concrete Sprint Goal for your concrete situation yourself. The odds are in your favor that your Sprint Goal will suit your team better than a Sprint Goal anyone else defines (from far away). And if it turns out to be bad: just try to do it better in the next Sprint.  I completely agree with this. You've got to find the goal that helps your team collaborate - not necessarily working toward getting a technically ""correct"" sprint goal. It doesn't exist.          Log in or register to post comments",6080
"04:03 am October 3, 2014                    > Technically, what should a sprint goal actually consist of?   At a purely ""technical"" level a Sprint Goal must consist of a value justification for the Sprint. If the Sprint Goal is compromised then the Product Owner can choose to abort the Sprint.  A Sprint Goal must therefore be achievable by a collaborative team, and coherent in terms of its agreed scope. Without those qualities value will not be delivered.          Log in or register to post comments",6080
"08:47 pm October 21, 2014                    I agree with most of the responses here. If you had to provide a catch phrase or a slogan or a prominent benefit or a feature name that the team can easily snap to and remember throughout the sprint while they are working on the increment and which gives direction to the team and helps them focus, that would be a sprint goal. These are only some examples, but it can be anything that serves the underlying purpose. That is the reason the Scrum guide does not provide specific guidance on it.          Log in or register to post comments",6080
Log in to reply,6080
Messages,6106
"11:14 am October 14, 2014                             This is my first post on this forum.  I wanted to say thank you to those of you who contribute often as I have read many discussions before I attempted my first assessment.  And with your help I have successfully passed the Professional Scrum Master assessment a couple of weeks ago.  I have been using scrum for a couple of years now and wanted to enhance my knowledge of the subject so I earned my certification.  Through the process of reading books and reading the discussions through forums like this one, my knowledge has increased tenfold.  I highly recommend anyone who is sitting on the fence about taking the assessment to do so as it was an eye opener for myself.  I am now determined to pass the product owner assessment.  I have been working with the product owner at my current company for some time and have been reading books as I did for the scrum master assessment.  I was wondering if anybody had some suggestions for books that they read that they found useful.  I have listed the 2 books below I have read that I found to be engaging.  Agile Product Management with Scrum by Roman Pichler   Agile Product Management with Scrum by Ken Schwaber  Thank you in advance for you help.",6106
"03:53 am October 15, 2014                    Hi !  I did the same path as you. As a Scrum Master, I feel the need to understand well the role of the PO.  I will add ""Scrum Product Ownership"" from Robert Galen to your book list.  Good luck          Log in or register to post comments",6106
"10:46 am October 15, 2014                    Hi,  a useful and fast summary is to watch this short (15 min) you tube:   Product Owner summary	http://youtu.be/502ILHjX9EE  I hope that this is useful  Regards  Simon          Log in or register to post comments",6106
"02:55 pm October 17, 2014                    Thank you for the recommendations.  I'll be looking into both.           Log in or register to post comments",6106
"02:53 am October 20, 2014                    I'd recommend taking a look at this article that I wrote:  http://ScrumCrazy.com/newpo          Log in or register to post comments",6106
"02:54 am October 20, 2014                    And if you do go down the road of taking the PSPO assessment, I'd be interested in any feedback you might have on how my article helped or where it was lacking.  Looking for customer feedback... where have I heard that before?  ;-)          Log in or register to post comments",6106
"01:01 pm October 21, 2014                    I'd be happy to pass along any feedback I can.  Thank you          Log in or register to post comments",6106
Log in to reply,6106
Messages,6055
"07:06 am September 9, 2014                             Hi just passed the PSM I exam (thank to all for the discussion/tips on here). Am thinking of the PSPO but had a few questions.  1. Is the Scrum Guide and associated reading enough to attempt this?  2. Is there alot of overlap between both?  3. There was a mention in  previous post about provisioning an open assessment for the PSPO? Is there any update on this?  Thanks!",6055
"11:44 am September 9, 2014                    1.  By ""associated reading"", do you mean the 13 books here?  https://www.scrum.org/Courses/Professional-Scrum-Product-Owner/PSPO-Sub…  2.  There is def some overlap as both exams expect you to know Scrum in general well.  3.  There is no open assessment for PSPO.  I'd recommend the Verheyen book (Scrum Pocket Guide) and this article:  http://www.scrumcrazy.com/The+New+New+Product+Owner  ____  Charles Bradley  Professional Scrum Trainer  Scrum Coach-in-Chief  http://ScrumCrazy.com           Log in or register to post comments",6055
"07:07 pm October 20, 2014                    Hi All,  Even i am planning to take PSPO exam. Can you please advise should i read Scrum Guide to appear PSPO or any other books or links for preparation.  Regards,  SailajaPrakash          Log in or register to post comments",6055
"09:54 am October 21, 2014                    I would suggest that you  1.	Read the scrum guide many times  2.	Look at the objective domain, there is a lot data in that: : https://www.scrum.org/Courses/Professional-Scrum-Product-Owner/PSPO-Sub…    3.	Repeatedly complete the Scrum Open assessment until you consistently achieve 100%  4.	Do the Developer Open assessment to gain an appreciation of that perspective  5.	Watch this video on you tube: Product Owner summary    http://youtu.be/502ILHjX9EE  6.	Review all the posts in this forum  7.	Remember that the PO is responsible for:  a.	Value in the product  b.	Return on Investment  c.	Total cost of ownership  Reflect on how you would influence these within the Scrum Framework  8.	Remember that there will be subtle questions where you need to consider the best case (or the least worst) option – it is not all black and white – and you need to be in the stance of the Product Owner (see point 6)  9.	Reflect on how the three roles interact, and the key artefacts that they use  10.	Understand how two common complementary practices help visualise the work  a.	The burndown chart (start with http://en.wikipedia.org/wiki/Burn_down_chart)  b.	The Task board (or Scrum board)  I hope that helps, prepare well!           Log in or register to post comments",6055
Log in to reply,6055
Messages,6113
"04:58 am October 19, 2014                             Hi !  I am working in a small company, a subsidiary of a bigger one, were we we have a lot of young, new or rather unexperienced developers and neither the Product Owner nor the team had  any experience with Scrum before. The Product Owner is also the CEO and usually does not have a lot of time because of this. We also had a lot of changes in the team, mostly because our mother company needed them or they have left the (mother) company. Even if this setup is far from ideal, it worked quite well. But then we got some new developers and a graphics designer and things began to change. The new devs tend to create a lot of stuff, additional features or ""improvements"", which are not required. They also have little knowledge about the existing code base, and tend to create their own stuff, even if things already exists. On the other hand we have a graphics designer, who thinks he should the the complete design because everything else would lead to fragmentation and ""he is the professional"". He also shows some behaviour, which seem to be narcissistic to me:  * He is very charming for the first time, but starts taunting when someone is under pressure or makes mistakes.  * He widespreads a lot of misinformation exspecially what regarding what the Product Owner wants or seems to intentionally get things wrong.  * He makes statements that imply, that someone (team members, product owner, me) has no clue but immediately qualifies them afterwards.  * If some part of the team has made a decision, he starts to ask a lot of questions if it would not be better to do it otherwise, but without providing a concrete solution.  * Feels immediatley attacked and nearly starts crying when some of his ideas are overruled by the team.  To my surprise this seems to be very appealing to the young developers. I do not agree with this, because user interface design is not graphics design in my opinion and I think usuability comes first and this job should be done by the devs in a evolutionary process. Also his passion for pixel precise perfection has led to delays in the past. However I am the ScrumMaster not a team member. What is the best way to deal with such a situation ? Should I provide such bahaviour a platform in the Daily ?  Regards  Stefan",6113
"10:51 am October 20, 2014                    Hi,  It sounds like you have identified a challenge (impediment) to the team being more effective, so I would suggest it is in your gift to help the team understand and deal with it.  1) Is there a code of behaviour agreed with the team  2) Has the team agreed on how disagreement/conflict will be resolved  3) Has everyone agreed to use Scrum  4) Has everyone passed the open assessment (purely as a tool to demonstrate rudimentary understanding)?  The dysfunction that you are highlighting is that of ""Hero Developer"" and a lack of team behaviour. http://www.diegocaprioli.com/we-dont-need-another-hero/   The opportunity that you have is to get the team to understand that the non-PBI features are waste, and that there is a duty to the PO to build only what they have asked for (as agreed in Sprint Planning) to the quality agreed (as per the Definition of Done). If that says pixel perfect - then that is what the standard is.  You need to get agreement from the team on behaviour, so that might be an exercise where they brainstorm how they will demonstrate the Scrum Values (Focus, Respect, Openness, Courage, Commitment). Brainstorm how they are demonstrating the first line of the Agile Manifesto (Individuals and Interactions over Process and Tools).  Once you have got the team to shape an understanding of how to work together, then you can remind them around their behaviours.  Until you have got agreement about behaviours it will be tricky to get the team to commit to the team way of working.  Regards  Simon           Log in or register to post comments",6113
"11:44 am October 20, 2014                    Hi !  Thank you for the fast response. These are actually good questions. We have identified a bad communication style in the last retrospective. But there is no concrete agreement yet. I am also not sure if the CEO, who wants Scrum fully understands his role. The new developers seem to be overwhelmed which such questions. They also have not agreed to use Scrum. Basically when I heard about Scrum the first time as a young developer, I thought it would be nonsense. After some practice I noticed that I was wrong. It is basically a chicken & egg problem here. The best option seems to me to let them make their own expierience. But for this one needs a very long wind and the project can eventually fail. However I think these are good pointers, so I will check them out.  Thank you & regards  Stefan          Log in or register to post comments",6113
"01:15 pm October 20, 2014                    Hi,  there is a fantastic book that addresses a lot of what your are raising https://leanpub.com/teamleader.  The team issues are there, Scrum is highlighting them.  An article that I read a long time ago, and reread regularly is Djikstra's Very Humble Developer.  https://www.cs.utexas.edu/~EWD/transcriptions/EWD03xx/EWD340.html  Give the team time to read it in a retro and then ask for 2 words in response. This will mean they need to read it - and that they can't withdraw in to silence. Leave until the next retro, and then ask if anyone behaved in a humble developer way.  It is worth a try!  Regards  Simon  I hope that          Log in or register to post comments",6113
"09:45 am October 21, 2014                    >...his passion for pixel precise perfection has led to delays in the past.  Do you have evidence of this delay, and are there any stakeholders who can articulate its consequences?  > However I am the ScrumMaster not a team member. What is the best way to  > deal with such a situation ?  What you need to do is to encourage empirical control of the team's ability to incrementally deliver value. A key part of that is gathering metrics and feedback for retrospective analysis. This includes metrics regarding the delays incurred in seeking pixel-perfection, and the consequences of that delay to the business.  > Should I provide such bahaviour a platform in the Daily ?   You need to ensure that the Daily Scrum is conducted in a disciplined manner. That means ensuring that the team is inspecting and adapting its progress towards the Sprint Goal, and that the timebox is respected. There is no room in a daily scrum for narcissistic behavior...or indeed anything which does not help in the alignment of the team's effort to the Sprint Goal.          Log in or register to post comments",6113
Log in to reply,6113
Messages,6023
"08:37 am August 18, 2014                             HI TEAM,   I recently appeared for the PSM 1 certification and was not able to clear... Planning another attempt in the near future.. Can any one pls help me with the weightage each of the below mentioned subject areas in the PSM 1 certification hold ??  Scrum Framework - ??  Scrum Theory and Principles - ??  Cross-functional, self-organizing Teams  - ??  Coaching & Facilitation - ??  Will help me in improving my the required areas accordingly ...   THanks,   Natraj",6023
"11:52 am August 18, 2014                    Hello Natraj,  We are sorry to learn you were unable to achieve a passing score on your first attempt at the PSM I assessment. We feel focusing your efforts on fostering a more complete understanding of the Scrum practices and mindset is more important than knowing the weight of each category and finding the quickest route to a passing grade.   The best way to approach this would be to study all of the categories in which your percentage was less than 85%. Resources to help you study can be found here: https://www.scrum.org/Courses/Professional-Scrum-Master/PSM-Subject-Are…          Log in or register to post comments",6023
"03:15 am August 19, 2014                    Thanks for the reply... Yes the idea is to get the focus on all the subject areas .. but still there are many other individuals from our organization who will be appearing for the PSM 1 certification... This could be an added benefit towards the preparation if this can communicated...  LOoking forward to the breakdown on the subject areas ....          Log in or register to post comments",6023
"04:55 pm August 19, 2014                    Hello Natraj,  While each subject area has a different number of questions, all questions have an equal point value. The best way for your colleagues to approach the PSM I assessment would be to follow as many steps as possible on: https://www.scrum.org/Assessments/Ways-to-learn-about-Scrum  For your colleagues whose native language is not English, we suggest that they first study the Scrum Guide in their native language to maximize their understanding of the Scrum framework. Once they feel confident in their knowledge, they should then review the English version of the guide to become more familiar with the vocabulary and other terms which may be seen on the assessment. The practice Open Assessments (available here:  https://www.scrum.org/Assessments/Open-Assessments) are a great way to evaluate one's comprehension. Those who are able to consistently score 95% or higher on the Open Assessments are usually ready to attempt the professional-level assessment.  I hope this helps. If you have any further inquiries on this matter, please feel free to email us at support@scrum.org.          Log in or register to post comments",6023
"10:25 am September 16, 2014                    Hi      There are 5 subject areas.  1. The Scrum Framework  2. Scrum Theory and Principles  3. Cross-functional, Self-organizing Teams  4. Coaching and Facilitation  5. Scrum at Large  I found that Scrum Guide is covering the 1st subject only, may be little bit on other subjects.  For all subjects, Scrum.org suggests 3 books for each subject.  My question is  Do we need to read all those books (atleast 1 for each subject) before trying the assessment?  Is there any 1 single book which covers all those 5 subjects?  Thanks  Senthil           Log in or register to post comments",6023
"10:05 am October 9, 2014                    Hi,        I haven't got any response for my question, can somebody help?  I am not able to decide whether I should go for the assessment now or later after studying some more.  What I have done.  1. Reading Scrum Guide 2 times,  2. Reading Scrum Training Manual from Mgmt Plaza,   3. Reading Scrum Training Series Videos,   4. Did open assessment on PSM (multiple times, got 100% 2 times),  5. Did open assessment on Developer (2 times, will continue)   6. Reading forum,   7. Reading scrum.org resources,   8. Reading other online resources.   What else should i do before attempting to assessment?  My concerns/questions are...  1. I don't have practical experience, so how do i prepare myself to answer situation based questions  2. Out of 5 subject areas, i believe scrum guide is not covering all 5 areas, which book/material should i read for other topics like    3. Cross-functional, Self-organizing Teams    4. Coaching and Facilitation    5. Scrum at Large   Thanks  Senthil          Log in or register to post comments",6023
"10:29 am October 16, 2014                    Hi Senthil,  I think the Scrum Guide  does cover all 5 subject areas, although you can't just split it into the areas by pages.  I don't think you have to gather more knowledge sources. What really matters is how deeply you study the Scrum Guide and your other sources. Try to figure out, why the Scrum Guide formulates each sentence like it does. This can not only improve your score but can also improve your understanding and your ability to transfer your knowledge into practice.          Log in or register to post comments",6023
"08:37 am October 21, 2014                    Thanks Anke, Will do the same.  Senthil          Log in or register to post comments",6023
Log in to reply,6023
Messages,6109
"02:12 am October 15, 2014                             I've been studying for the scrum master exam and have come across a topic about what the product owner does during the sprint.  Does the product owner give the development team feedback during the sprint of the development team progress?  I think the operative word here is ""progress"" and my instincts tell me that the product owner does not give feedback to the development team on their progress.  However, the sprint review is an event within the sprint and so therefore there would be an opportunity to provide feedback on progress (Against the definition of done) .  I'm a bit confused on what the assessment would be looking for as an answer here. I've seen a version of this asked for in a sample assessment and I was marked wrong in answering that the product owner does provide feedback.  If I was tested on this topic in the actual assessment do you think the answer would be in the context of either  1) its not the product owners role to give feedback on progress - they should be focused on optimising value and the development team are self managing.  or  2) yes they definitely provide feedback at the sprint review and determine what meets DOD.",6109
"03:06 pm October 15, 2014                    I will answer based on real world experience and not textbook theory -   The Product Owner is engaged throughout the sprint. They answer questions on how things are supposed to function & look, as well as making any trade offs when necessary.  The Product Owner also accepts user stories within the sprint. Meaning they have been fully developed, QA has tested them and the Product Owner ensures it meets their expectations.  My teams definition of done includes passing acceptance testing by the Product Owner, making the PO part of the teams definition of done.  During the sprint review with stakeholders, the product owner should be facilitating feedback from the stakeholders.          Log in or register to post comments",6109
"05:20 pm October 15, 2014                    > Does the product owner give the development team feedback   > during the sprint of the development team progress?   The PO can and should provide feedback to the team regarding their progress towards the Sprint Goal. That goal is mutually defined and its achievement should therefore be seen as a collaborative activity.  The Development Team may need to replan based on this feedback, although this does not absolve them of their duty, in Sprint Planning, to elicit a credible plan that secures the confidence of the Product Owner.          Log in or register to post comments",6109
"06:40 pm October 15, 2014                    Thanks.. that makes sense to me. Appreciate the clarifications.          Log in or register to post comments",6109
"09:33 am October 20, 2014                    > I've seen a version of this asked for in a sample assessment   Graham,  Can you give us the exact question?    I could see how someone might read that the PO giving feedback on ""progress of the sprint"" might be considered as the PO violating the Dev Team's self organization.  Since it was on a sample exam, it should be ok to post the exact question here.    Can you post it for us to examine closer?          Log in or register to post comments",6109
Log in to reply,6109
Messages,6094
"01:31 pm October 2, 2014                             I like the 12 principles that are allegedly behind the Agile manifesto. However, the manifesto seems unrelated to the principles and I don't understand it.   ""Individuals and interactions over processes and tools""   Both are very important, and they don't seem to be in conflict. You can use modern technology and a good process, and also talk to people.   ""Working software over comprehensive documentation""   I agree, but is this ever an issue? I've never seen comprehensive documentation valued more than working software. Usually it's not valued at all.   ""Customer collaboration over contract negotiation""   This one is OK.   ""Responding to change over following a plan""   I totally agree with this, but Scrum (at least the way my company does it) violates it. Yes, we respond to change between sprints, but we follow a plan during sprints. We have to decide in advance what our tasks are and how many hours we'll spend on each one (following a plan). But the reality is that software is unpredictable; we can give a rough estimate up front, but we often have to just dive in, figuring out the details and unexpected consequences as we go (responding to change).",6094
"03:33 am October 3, 2014                    > Yes, we respond to change between sprints, but we follow a plan during sprints.   We are asked to value responding to change *over* following a plan, not *instead* of.          Log in or register to post comments",6094
"08:21 am October 3, 2014                     We are asked to value responding to change *over* following a plan, not *instead* of.  But it seems that Scrum values following a plan over responding to change. We respond to change during our sprint planning meeting, then we follow a plan for the duration of the sprint. The absence of Scrum would involve less following a plan and more responding to change.          Log in or register to post comments",6094
"09:20 am October 3, 2014                      But it seems that Scrum values following a plan over responding to change. We respond to change during our sprint planning meeting, then we follow a plan for the duration of the sprint. The absence of Scrum would involve less following a plan and more responding to change.  Hi Ragesh,  How did you get the idea that in Scrum we follow a plan for the duration of the Sprint?            Log in or register to post comments",6094
"12:13 pm October 3, 2014                      How did you get the idea that in Scrum we follow a plan for the duration of the Sprint?    At our planning meeting we determine all the tasks for the upcoming sprint and the number of hours for each. This is the plan we're supposed to stick to. If the hourly estimate for a task changes based on new information, we can't update it. If we need to add a task, we have to beg for permission to take the hours from some other task (usually a placeholder task that holds unassigned hours for this purpose).  What I would prefer instead, and what I call responding to change over following a plan, would be to write the stories and assign points up front, but then to have the freedom to update or add tasks as details emerge, and to skip the hourly estimates altogether.          Log in or register to post comments",6094
"01:03 pm October 3, 2014                    > At our planning meeting we determine all the tasks for the  >  upcoming sprint and the number of hours for each. This is   > the plan we're supposed to stick to.  Who supposes that? In Scrum the Development Team own the Sprint Backlog including the sprint plan. They can and should adjust their sprint plan, as and when needed, in order to ensure that the Sprint Goal is achieved.          Log in or register to post comments",6094
"04:47 pm October 3, 2014                    Who supposes that? In Scrum the Development Team own the Sprint Backlog including the sprint plan. They can and should adjust their sprint plan, as and when needed, in order to ensure that the Sprint Goal is achieved. Well that would be nice. Our product owner thinks she owns the Sprint Backlog. I guess I thought so too, otherwise what keeps the developers from working on stories that the product owner doesn't care about? We don't use Sprint Goals.  If I told the product owner that we (the developers) were going to change the sprint plan as needed, she'd just say no, she needs to know the plan up front. Our Scrum consultant said that as professional developers this is a reasonable expectation for us, and that the people paying our salary can tell us how to work. How do you convince people in power to give up their power?          Log in or register to post comments",6094
"03:20 am October 4, 2014                    Is this stuff real? It sounds so out of this world to me.   Off course it is a reasonable expectation for the development team to have a plan for the sprint. It is also a reasonable expectation for the development team to continuously replan, to maximize the chances of delivering useful stuff. A real Product Owner would greatly benefit from such activities. A coordination/""divide the work"" type of person, not so much.   Often, alas: “It is difficult to get a man to understand something, when his salary depends on his not understanding it.” - Upton Sinclair.  Regards, Paul          Log in or register to post comments",6094
"01:27 pm October 4, 2014                     If I told the product owner that we (the developers) were going to change the sprint plan as needed, she'd just say no, she needs to know the plan up front.  Your PO needs to negotiate the Sprint Goal with the Dev Team.  She'd like to know that the Dev Team has confidence they can reach the Sprint Goal by having a plan.  But what are the pros for her to ""know the plan up front"" ?  Doesn't she trust the Dev Team, which is made of professionals, focused and committed people ?          Log in or register to post comments",6094
"02:08 pm October 5, 2014                    It is important that you consider when the Manifesto was written and what were the prevailing views on how software development should be managed and organized.  At that time most companies were pushing hard methodologies which involved a huge amount of documentation and many large corporations were busy building armies of people whose job was to create such documentation.  In some cases there would be huge (encyclopedia sized) tomes of information in written or diagram form created about software that would never be developed as the business requirements had changed too much while all this material was being created.  It was in this environment that the Manifesto was created.  It is not meant as a call for the second set of things/actions to be discontinued, just that the first is more important and thus should be prioritized.   Consider that today you are discussing changing the plans created for two, or three week long sprints.  At that time we were discussing plans which might refer to six months or more.  You can probably see that even if you only review your planning every two weeks, that is a major advance against doing it every six months. :-)  Of course, the pace of change is only accelerating, so it seems only natural that you might consider two weeks as too long to wait to review your work plan.          Log in or register to post comments",6094
"06:34 pm October 5, 2014                    Sounds like the PO could do with a refresher course in Scrum          Log in or register to post comments",6094
"01:00 pm October 6, 2014                    > Is this stuff real? It sounds so out of this world to me.    Which part sounds out of this world? None of this seems all that unusual to me.  > But what are the pros for her to ""know the plan up front"" ? Doesn't she trust the Dev Team, which is made of professionals, focused and committed people ?  I don't think it's an issue of trust. She needs to know the total number of hours up front, because that's how she decides what we can fit into the sprint.  > It is important that you consider when the Manifesto was written...  Good points.  > Sounds like the PO could do with a refresher course in Scrum.  To this company's credit, they're making a much better attempt at Scrum than the last place I worked, which had daily standups but no sprints, no regular reviews and retrospectives, no Scrum master, and no product owner.          Log in or register to post comments",6094
"01:38 pm October 6, 2014                     I don't think it's an issue of trust. She needs to know the total number of hours up front, because that's how she decides what we can fit into the sprint.   The goal and content of the Sprint is not decided by the PO on her own side but by the whole Scrum Team.  The Dev Team is not made of stupid robots. Your PO should collaborate with the Dev Team, otherwise she will destroy the Dev Team commitment.  Again, why does she need to know the plan up-front ?          Log in or register to post comments",6094
"08:35 am October 7, 2014                     Posted By Olivier LEDRU on 06 Oct 2014 01:38 PM   Again, why does she need to know the plan up-front ?  Well, I don't think she needs to know the plan up front, but she thinks she does. That's because without having the total number of hours, she can't decide what stories go into the sprint, do the burndown chart, and report the hours to senior management.  Now you say that the product owner is not supposed to decide the goal and content of the sprint on her own, but it should be a team effort. Makes sense. But our PO was a project manager before Scrum; she's the current boss of some of the team and the former boss of the others. Going from a project manager who owns the team to a product owner who works with the team is a demotion, so why would she go along with that? Isn't this a common problem?          Log in or register to post comments",6094
"09:13 am October 7, 2014                    Hi Ragesh,  It is common in an organisation who does not yet understand the value of Scrum and just maps traditional project management to Scrum. In Scrum, the Product Owner and the Dev Team works together as one team instead of as boss-subordinates.          Log in or register to post comments",6094
"03:57 pm October 9, 2014                     Posted By Ragesh Patel on 06 Oct 2014 01:00 PM   I don't think it's an issue of trust. She needs to know the total number of hours up front, because that's how she decides what we can fit into the sprint.   I think this is the problem.  The Product Owner should not be the one deciding what goes into a Sprint.  The Product Owner should prioritize the items in the backlog, but it's the entire scrum team should have a discussion during Sprint Planning on what to include in the Sprint.          Log in or register to post comments",6094
"04:59 am October 17, 2014                    I'm wondering does the team also estimate the backlog in Story Point or other type of sizing other than hours? The team should be able to estimate the size of the backlog items. Not in hours but in relative size. During a sprint the team is able to finish a number of story points. This is the number the PO should use to determine what could possibly go into the next sprint.   The team then desides what work needs to be done for each item to determine if the work that is needed will fit in the sprint so they can discuss with the product owner if less or more items can be added to the sprint. If the PO en teammembers agree then a commitment based on best effort can be given.  It is the responsability of the team to do what is nessesary to finish an item. So adjusting the plan is mandatory because you don't know everything upfront.          Log in or register to post comments",6094
"12:58 pm October 17, 2014                     Posted By Paul Kuijten on 04 Oct 2014 03:20 AM  Is this stuff real? It sounds so out of this world to me.    If at first the idea is not absurd, then there is no hope for it.  - Albert Einstein   If you neglect to entertain absurdity, you're ruling out many potentially great ideas!           Log in or register to post comments",6094
"07:49 am October 20, 2014                    Posted By Pieter Versteijnen on 17 Oct 2014 04:59 AM  I'm wondering does the team also estimate the backlog in Story Point or other type of sizing other than hours? The team should be able to estimate the size of the backlog items. Not in hours but in relative size. During a sprint the team is able to finish a number of story points. This is the number the PO should use to determine what could possibly go into the next sprint. Yes, I'm trying to get them to do that. Right now we estimate the stories in points, we enter the points in TFS but then never use them for anything.          Log in or register to post comments",6094
Log in to reply,6094
Messages,6112
"10:07 am October 17, 2014                             Hi,  Yesterday our Product Owner team went on a days scrum training for PO's and it seems to have caused some confusion within the organisation. We have been running scrum for around 2 years now and follow the 2013 scrum rules pretty much to the letter.  Commitment   The scrum trainer told the PO's that the engineers made no commitment what so ever other than to focus on the work in hand and tackle everything on a best endeavor basis. I agree that software development, just like any other engineering process, is difficult to predict. But i also believe that, whilst not explicitly defined, the team are committed to delivering the sprint goals. Once negotiated between the dev team and PO the sprint goals should be broad enough to allow the development team to navigate and satisfy the commitment by adjusting scope accordingly.  In some cases the development team won't be able to deliver the goals due to a variety of potential issues. In these scenarios the development team should be encouraged to communicate the issues at hand with the PO and be prepared to cancel the sprint as soon as scope adjustment becomes no longer feasible and the goal not deliverable.  Sprint Backlog Priority  The trainer also told the PO's that the development team must work on the PBI's in the exact order it was defined in the Product Backlog. That was not my understanding as i was under the impression it was entirely the development teams responsibility to organise the sprint backlog with a focus on delivering the goals as effectively as they can.  I would welcome your thoughts and ideas on the above topics. My concern is that the trainer in question may not have been familiar with the most recent version of the scrum rules that in my opinion focus on development goals in order to provide greater flexibility for the development team to respond to change.  Thanks in advance!",6112
"02:55 pm October 17, 2014                    The ""commitment"" in Scrum is indeed to the Sprint Goal. The Sprint Backlog is effectively the team's forecast of the work needed to meet that commitment, and is subject to revision.  If the PO cancels a Sprint because the Goal is redundant or seemingly unachievable, the Scrum Team should attempt to release as much value as possible from the work already done. In that context, with the absence of a Sprint Goal, the team's subsequent endeavors might be described as best efforts.  The Development Team own their Sprint Backlog and can order it any way they like as long as they deliver the anticipated Potentially Releasable Increment. There's nothing to stop them agreeing a certain order of actioning with other stakeholders such as the PO, but they are not required to do so.          Log in or register to post comments",6112
Log in to reply,6112
Messages,6045
"02:37 pm September 3, 2014                             Hi.   I am using Trello as board manager for my project. I have created one board for each Sprint. Is this correct? or I have to make only one ""super"" boad.   I'm using these lists (that I share with members): Not planned, Commited backlogs, Not started, In process, finished.   Another doubt. I have one user history but for this release (the PO wants the project in production), this UH must be modified and we have to suprime some points and fix others. In parallel, we have to continue with that UH, with the real requeriments. How can I represent this on the board? must I have to make one UH with the modifications and make another one with the real requeriments for next sprint?   Sorry for my bad english.   Thanks in advance.",6045
"03:10 pm October 15, 2014                    My recommendation is to ask the team if the board setup you currently have is working for them and ask them what they would like to change about it, to make it easier to follow along & maintain.  I recommend having ONE view of ALL the work that is prioritized for that sprint or release - whether it is defects, new user stories, tech debt or anything else. It will give you a better overall picture and enable trade offs to take place easier.          Log in or register to post comments",6045
"05:21 am October 17, 2014                    There is no right or wrong here I think, it depends on the Scrum team what they think works best for them.   My experience is that teams use two boards. One board for planning and tracking the current sprint. The other board is for managing the Product Backlog. This second board is used by the product owner to indicate what items are being prepared. What items are ready for refinement/poker planning and what items are ready for the next spring planning session. This way the overall progress can be tracked on the Product board and the sprint progress can be tracked on the sprint board.          Log in or register to post comments",6045
Log in to reply,6045
Messages,6052
"03:08 am September 8, 2014                             I am interested in the PSPO I exam and don't plan to attend a paid course as I've 3+ years experience on a scrum team and already received internal training.  I'm really happy that scrum.org professional assessments can be attended without mandatory paid courses, but the lack of an official assessment outline/sylabus makes the self-preparation quite difficult. A reading list of 10+ books can't compensate for that and also makes it impossible for my employer to get the scope of the exam and judge its ""worthiness"" against competing certificates.  I'd also appreciate if there was a ""full"" sample exam that covers all areas of PSPO I (e.g. also topics that aren't in the scrum open exam such as estimation techniques and writing of user stories)  Here are the sylabus and the sample exam of the widely recognized IREB-CPRE FL certificate, which might serve as an example:  http://www.ireb.org/en/syllabi/foundation-level/promocode/3e121.html  http://www.ireb.org/fileadmin/IREB/Pruefungen/CPREFLPracticeExamination…  kind regards,  Franz",6052
"10:54 am September 8, 2014                    Hello Franz,           Thank you for your interest in Scrum.org and for your input. Regarding the value of the PSPO I certificate, while it is not a bulleted list, we do have some fairly similar language on the PSPO I assessment page which generally addresses the PSPO I certificate and the understanding exhibited by those who succeed in earning one:           ""People that have passed PSPO I and achieved certification demonstrate a fundamental understanding of the Scrum framework, and how to apply it to maximize the value delivered with a product. They exhibit a dedication to continued professional development, and a high level of commitment to their field of practice. Achieving PSPO I is the minimum demonstration of knowledge any Professional Scrum Product Owner should be able to make.""           As per the sample exam, we encourage you to take the Scrum Open until you are able to achieve a score of 95% or higher.           With regards to a syllabus or list of PSPO I areas or topics covered, we would recommend reviewing the 'Professional Scrum Product Owner Subject Areas' which can be located on our website here:       http://www.scrum.org/Courses/Professional-Scrum-Product-Owner/PSPO-Subj…          These Subject Area Topics are:            The Scrum Framework            Scrum Theory and Principles            Cross-Functional, Self-Organizing Teams            Maximizing Value            Product Backlog Management           In addition to these listed topics, at the link provided above, you will also find a description for each of these topics, as well as the suggested reading materials (which you referenced in your post).           For PSPO I assessment preparation tips and suggestions, we would also encourage you to search our Forums for PSPO I assessment preparation suggestion posts from those who have previously attempted the PSPO I assessment.           Thank you again for your interest in Scrum.org and enjoy your day!            Kind Regards,          Scrum Support          Log in or register to post comments",6052
"12:56 pm September 8, 2014                    Hi Franz,  I did this PSM via a course and PSPO self study, its a journey is what I can say.  Lots of books and reading, my opinion is its worth doing for the journey of learning.  You don't get an auto pass on completion of a course.  You have to sit an exam post course to get the qualification.  I would agree with this URL on the assessment type if you want a comparison to show.  http://www.agileinnovation.eu/wordpress/which-scrummaster-certification…  Holding both PSM and PSPO its no different the bar remains at the same level on each.  Michael          Log in or register to post comments",6052
Log in to reply,6052
Messages,6037
"08:33 am August 28, 2014                             Hi - can you help.  I am fairly new to scrum and my product owner is brand new to it.  She owns this project which is to launch a refreshed website on a different platform making it easier to maintain etc, it will also encompass making the website mobile responsive.  She has started writing User Stories but I have a feeling they are more acceptance criteria.  Things like 'as a customer I want to be told what else I might need - email/web hosting so that I buy everything from one place and feel reassured that I have everything I need' and 'as an editor I want to easily update list of domains so that the page always looks up-to-date'.  How should I advise her in writing good user stories that the dev team can use for estimating?  TIA, Mel.",6037
"09:46 am August 28, 2014                    Does she write the User-stories just on her own side ?  User-story = 3C's = Card + CONVERSATION + Confirmation  And user-story is litteraly a description of what the user is doing with your product, so the ""I want to easily update my list"" sound odd to me.          Log in or register to post comments",6037
"03:01 am August 29, 2014                    Yes, she is putting the backlog together but I'm trying to help make it meaningful.  I've explained that the user story has to be a well defined piece of functionality or feature that the dev team can pick up and plan, it needs to be discrete and potentially shippable.  I think if she used each page as a user story that would work? i.e. as a user I want the homepage to be easily readable and informative and enable me to navigate easily to the products that I want.  The acceptance criteria would be a beautifully designed page with CTAs that are easily found etc etc.  (She has said that she thinks design needs to be part of the user stories and as part of the delivery team because we're not just delivering a new application or software but something that looks beautiful.  I think that fact it needs to look good is something that is inherent and should be part of the acceptance criteria which is just as much part of the user story as a whole?          Log in or register to post comments",6037
"05:57 am August 29, 2014                    Hi,   I'm also new to scrum, so my post reflects my understanding of user stories and i welcome any advice or correction.  I think that the user story format is ok (at least as described on wiki), but the content is a bit ""emotional"" .  in my opinion, a user story must be more concise and should go straight to the point.  "" as a customer I want to be told what else I might need - email/web hosting so that I buy everything from one place and feel reassured that I have everything I need "" Seems a little too long. With a little grooming it would look like this :  "" as a customer I want to be told what else I might need so that I buy everything from one place.  The core idea is present and the purpose is clear. No need to describe the customer feelings.  'as an editor I want to easily update list of domains so that the page always looks up-to-date' could look like :   'as an editor I want to update the list of domains'  Personally I like to enrich user stories with use cases because they bring more details to requirements.           Log in or register to post comments",6037
"09:00 am August 29, 2014                    The acceptance criteria would be a beautifully designed page with CTAs that are easily found  As a developer, I won't buy it !  How can I know if a page is beautiful ? Are your developers fashion victims ;-)  How can I know if CTAs are easily found ? (sorry, I don't what is CTA)  Maybe you can try some workshop for ""Specification by example"". What is beautifull to her ? What is easily found to her that your developer can use as acceptance criteria and test scenario ?          Log in or register to post comments",6037
"09:32 am August 29, 2014                    Lol Olivier!  I know, she is very passionate and wants this amazing looking website and I agree with her, but trying to make her understand that this is subjective and doesn't really help the team is difficult!  I think I'm going to go with each page.  Eg. As Product Owner I want a Homepage that complies with business agreed branding, that has functional Call To Action buttons etc etc and do this for each page?  The acceptance criteria would then be all these things that the Product Owner wants - refreshed look and feel based on re-designed graphics etc etc.          Log in or register to post comments",6037
"01:21 pm August 29, 2014                    > The acceptance criteria would then be all these things that the Product Owner  > wants - refreshed look and feel based on re-designed graphics etc etc.  Have you tried using ""Given...Where...Then"" clauses? That should help provide some focus.          Log in or register to post comments",6037
"01:32 pm August 29, 2014                    Sounds like your team might need some education and/or training on User Stories.    I provide this training but I'm not here to sell my services.  If you're interested you can contact me via ScrumCrazy.com.  Here are some good articles on the subject to get started with:  http://ScrumCrazy.com/userstories  http://ScrumCrazy.com/stp          Log in or register to post comments",6037
"05:50 am September 1, 2014                    My rule of thumb is: if user story makes your life more difficult, use other format that makes more sense.  Agility should serve the business, not the other way around.          Log in or register to post comments",6037
"08:44 am September 2, 2014                    Hi Mel  Actually I think you have the makings of a superb Product Owner here and you can certainly coach her towards that.  Chiming with a previous responder, the shortened versions might be (I've numbered them for reference):   1. ""as a customer I want to be told what else I might need so that I buy everything from one place and am reassured I have everything I need""  2. ""as an editor I want to update the list of domains so I can ensure the page is always up-to-date""  1 is absolutely an Epic and needs breaking down, maybe by page as you mention.  This is a great way of working - starting with an Epic then breaking it down as it becomes higher priority - No need to yet break down Epics if they are way down the product backlog order.    Then acceptance criteria need adding to each resultant user story - For the subjective areas you might have ""the following people [or roles] must score this page [assuming we're down at page level] at least a 4 out of 6 across each of the items on the attached survey"" - Then work with your Product Owner to have her create a [one side] survey for all the subjective areas of a page.    The other thing I'd say about 1 is I'm concerned about ""customer"" - do you really only have just one type of customer or does this user role need breaking down?  That said, even if you do decide you do have several types you might still decide you can represent them all in the case of this particular user story - Either way do think about it and make the explicit decisions - ""User Stories Applied by Mike Cohn is a good book for this - it's written pre the As a <> I want <> so that construct but don't be put off by that.  2 might be a user story already or might be an Epic - I'd need to know more about your domain to decide. - Either way you need to explicitly work with your product owner and decide, then add acceptance criteria.  Do keep acceptance criteria as items added to the user story itself rather than trying to wrap them all up in the user story statement.  Hope that helps  Cheers  Jem           Log in or register to post comments",6037
"10:43 am September 8, 2014                    Thanks Jem, she is very passionate and very willing to do what needs to be done.  I agree entirely that acceptance criteria need to be separated from the user story 'statement'.  I think I have a good way forward with all this great advice, thanks all!          Log in or register to post comments",6037
Log in to reply,6037
Messages,6048
"10:18 am September 4, 2014                             Hi all,  I am new to Scrum and have been using to plan a new project.  After quite a bit of research I am still not understanding how testing fits into the lifecycle.  I understand that I could take an extreme programming approach and do the testing as part of the development in an iterative way.  Alternatively, what is the norm? Do you generally release the development from one sprint into a test sprint?  or is testing done at the back end of a sprint? or is it handed off to a testing team as soon as the story is fulfilled?  I am probably missing something fundamental in my knowledge here. Would appreciate any feedback.  Many Thanks",6048
"03:29 am September 5, 2014                    Hi,  The result of a Sprint is a potentially shippable increment.  The increment is coded/tested/documented inside the Sprint.  A Sprint is not a mini-waterfall, with testing task at the end ""if we have enough time""...  Even the PO doesn't actually ask for a release, the increment has to be ""done"" and not just ""tested""          Log in or register to post comments",6048
"04:36 am September 5, 2014                    Traditionally, testing is done in order to discover errors. In agile and lean ways of working however, errors are recognized to be a form of ""waste"". The focus of testing therefore shifts away from the discovery of defects and towards their actual prevention. That's why a ""test first"" approach is favored using TDD and BDD. A level of assurance can be provided by these tests, and it may contribute to the Definition of Done for the Sprint Increment.          Log in or register to post comments",6048
"10:36 am September 8, 2014                    Hi Leonidas,  perhaps another helpful perspective is that the development team does all the work to create a potentially releasable Increment of “Done” product at the end of each Sprint and accountability belongs to the Development Team as a whole.  Therefore, the Development Team has to know what ""Done"" means and it has to test the created Increment-to-be against this Definition of ""Done"".  So, in the Definition of ""Done"" there should be some quality requirements included.  Perhaps also useful: ""Individual Development Team members may have specialized skills and areas of focus"" (Scrum Guide)  --> It is possible for the Development Team to assign some Development Team members as testers as long as the whole team still feels responsible for ALL tasks, testing included.  Best regards,  AnotherDotCom          Log in or register to post comments",6048
Log in to reply,6048
Messages,5846
"11:14 pm April 22, 2014                             Who is actualy responsible to register velocity of  team , for example in a ALM tool?  A) Dev. Team ?  B) Product owner?  C) Scrum Master?  I think actually the PO is the better choice because , he is anyway  responsible to update the release burndown chart /release plan after each sprint and he is the main person who must keep focus on product progression.  But Also Scrum Master might be intrested in this info as a metric for evaluating  the performance of team and its stability along several sprints.   What is your oponion?  Mehdi",5846
"03:36 am April 23, 2014                    Who is interested in the velocity and why?          Log in or register to post comments",5846
"04:31 am April 23, 2014                    > Who is actualy responsible to register velocity of team , for example in a ALM tool?   If this information is of use to the Scrum Team, then the first team member who sees it needs updating should do so.          Log in or register to post comments",5846
"10:23 am April 23, 2014                    Hi Mehdi,  nobody is responsible for this, because it is an administrative task which is not required by SCRUM.  What IS required is that the dev team can forecast what they can achieve during a sprint. If the team thinks past performance is a valuable input for this (It may be that due to rigorous DoD or team changes it is not valuable), they should know their velocity. This is trivial if they use the daily SCRUM to ""inspect how progress is trending toward completing the work in the Sprint Backlog"" (SCRUM guide), e.g. with a burndown chart.          Log in or register to post comments",5846
"08:24 am April 27, 2014                    I also had a bit of difficulty in answering this, the PO uses the velocity information, the scrum master in a way tracks the progress of the dev team during the sprints and then we have the dev team who estimates the work based on their current velocity. So who actually registers the velocity and when? is it done before the sprint planning or at the daily scrums          Log in or register to post comments",5846
"08:32 am April 27, 2014                    As per the scrum papers document from Jeff Sutherland, it is done during the daily scrum by the team. However if it is not necessary for the SM and PO to attend, would it be safe to assume that the dev team actually registers the velocity?          Log in or register to post comments",5846
"01:32 pm April 27, 2014                    @Michelle: Thanks  I understand from previous inputs , each member of Scrum team could update it as needed.   Velocity is the sum of story points that a team can achieve in each sprint , it means it is something that can be updated only once in a sprint, not everyday as you suggest in daily scrum.   For example if dev team pulled 3 user stories from product backlog into sprint backlog, lets say they were estimated in previous refinement meeting with  8, 5, 5 story points . Now on sprint review meeting , if the PO only accept first and second one as done but called third one as not done, the team has done only 8 + 5 = 13 (unit) story points in this sprint. . The average velocity of  last few sprints reflects better the performance of team and  must be taken into considreation instead of velocity of a single sprint. Mature teams gets after a while more or less constant velocity  and that helps PO to forcast how many sprint they might need to finish necessary part of product.  in the Scrum Guide -Sprint-Review part there is following sentence :   The Product Owner discusses the Product Backlog as it stands. He or she projects likely completion dates based on progress to date (if needed);  I think that is a good candidate for usage of velocity.And PO is a good candidate to track it .   But also retrospective meeting is a good time also for Dev. team to check if they have a constant velocity , and if not to discuss / analyse the root causes.  Mehdi          Log in or register to post comments",5846
"09:22 am May 2, 2014                    Thanks Mehdi - Although I am still not 100% confident that the PO is the one who registers the velocity. He/she definately uses it, no doubt there  In the Scrum Papers (by Ken)  The ScrumMaster needs to know what tasks have been completed, what tasks have  started, any new tasks that have been discovered, and any estimates that may have  changed.   ...  Burndown Chart  At the Sprint Planning Meeting the Scrum Team identifies and estimates specific tasks that must  be completed for the Sprint to be successful. The total of all Sprint Backlog estimates of work  remaining to be completed is the cumulative backlog. When tasks are completed as the Sprint  proceeds, the ScrumMaster recalculates the remaining work to be done and the Sprint Backlog  decreases, or burns down over time.  Daily Standup Meeting  After the meeting, the team members update the amount of time remaining to complete each of  the tasks that they’ve signed up for on the Sprint Backlog. This information is recorded on a  graph called the Sprint Burndown Chart  ...  A well functioning team will dynamically recalculate the  plan daily through a brief discussion and provide enough information for a ScrumMaster, the  team leader, to calculate a “Burndown Chart” of work to be completed  So would this make the Scrum Master who registers the velocity or the Development team who register the velocity?           Log in or register to post comments",5846
"10:25 am May 2, 2014                    @Michelle: Thanks  [code]So would this make the Scrum Master who registers the velocity or the Development team who register the velocity?[/code]  <u> I see where the mis-understanding comes from. The velocity is not, how fast Dev team finish his current tasks.</u>   what you mentined above is all about current sprint and at the level of Sprint. Normally in this level ,the estimations are also concrete  (min., hours, days, ...)   <b> The Dev. Team owns Sprint Backlock and is responsible for that  </b> which includes the selected/commited  PBIs for the current Sprint  plus all relevant Tasks which are needed to do a successful increment. Depending on the DoD, a Sprint Backlog Iteam has normally several related tasks ( Implementing  code, Test, documentations,...) .  <b>The updating the status of tasks , remaining effort for the ongoing tasks, sprint burndown chart, ... are only the Dev. Team's job.</b>  BUT   the velocity is measuring at the level of Product Backlog (normally in refinement meetings) and ideally in units (story Points , for example fibonacci series: 1,2,3,5,8,13,...) not concrete effort , the numbers (story points) are just a comparison among PBI and noting to do with how much time exactly required. The advantage of using story points comparing to time effort is that they are independent of Dev. team performance.   Measuring of the velocity is mainly used for forcasting (rough estimation) how many sprint are needed if the team and PBI list remains unchanged for delivering the next release/ full delivery of the product.     Mehdi           Log in or register to post comments",5846
"01:53 pm May 10, 2014                     Ian got it spot on 23 Apr 2014 08:30 AM  This is a scrum team, consisting of Dev Team, SM, PO one unit, if we use the example ""we are a team"" none of them are wrong, depends on how responsible or serious the team take it.  The scrum team is responsible if its truly self organizing per scrum, so its in everyone's interest.  Scrum does not say, two roles should not register that information and one must, its a team and if its ""SO""  Anyone can ""register"" that information.          Log in or register to post comments",5846
"05:47 am September 8, 2014                    My thought process after  a few iterations on this is :  Since this is not a scrum guideline or rule it can be registered by anyone.  Ideally the team can say it will be registered by PO, which is the most sensible approach but since it is not part of the framework, from an exam POV, the right answer seems ""no one"" to me but can be updated by ""anyone"".   However the PO should track the performance of the sprints and forecast the possible completion dates but suggested approach is to use the remaining effort rather.  To sum, I am not convinced that anyone is responsible for registering the velocity as per the Scrum guidelines.          Log in or register to post comments",5846
Log in to reply,5846
Messages,5914
"12:33 pm June 9, 2014                             i should stop reading on the subject, the more i read the less i know. some contradictory info is now making me doubt in my basic logic capacities :P  is anything false here?   1- velocity is used by dev team to estimate how much work they can add in a Sprint backlog  2- the only purpose of velocity is to help p.o. make forecast (!!!)  3- velocity is updated by anyone that sees it needs to be updated  4- velocity of a spi can only be accounted for when the spi is done (which is the same as 'when the po considers it done'  (i find #2 to be a little extreme, by saying that its the ""only"" purpose.. but i can see how it can be useful to the po)   thanks!",5914
"10:24 am June 10, 2014                    2 is false, because of 1.  3 is phrased misleading. Of course it has to be ""anyone"" from the Scrum Team.  What is a spi?          Log in or register to post comments",5914
"11:27 am June 11, 2014                    I think Danouche means PSI, or Potentially Shippable Increment          Log in or register to post comments",5914
"05:05 am September 8, 2014                    2 seems false.   Not sure whether 3 is true though. PO is responsible for tracking the product performance as clearly stated in scrum guide.   I can imagine potential conflict between the dev team and PO when ticking a PBI as done.  Since velocity should only account the done PBIs, it falls into PO's area.   I think to avoid any conflicts most sensible approach would be the PO to update the velocity during or just after the review meetings.          Log in or register to post comments",5914
Log in to reply,5914
Messages,6040
"09:56 am August 29, 2014                             Hi all,  When would you consider rewriting an app from scratch?   Background: Old (15+ years) large legacy app built using old technology and poor development practices (low code coverage, few unit tests, business logic mixed with ui etc.) majority of features are not used. Cost of change is constantly increasing. Market is pretty stable.  With rewriting I am not thinking that the new system would contain all the features of the original app but that you would start over from a clean slate and build something small, get feedback, iterate. What factors are important to take into consideration? I'd appreciate if anyone has any stories to share of successful/unsuccessful attempts.  There are plenty of articles out there that strongly argue against this  http://www.joelonsoftware.com/articles/fog0000000069.html  http://onstartups.com/tabid/3339/bid/2596/Why-You-Should-Almost-Never-R…  http://steveblank.com/2011/01/25/startup-suicide-%E2%80%93-rewriting-th…",6040
"01:24 pm August 29, 2014                    I especially like and agree with that 2nd article.  I don't think I could describe a scenario where I would re-write an app from scratch, as there is way too much context involved in that, and I'm not sure I'd ever find a scenario where I'd agree with it.  I much prefer the strangler pattern instead:  http://martinfowler.com/bliki/StranglerApplication.html  I would also be sure to put my technical folks and line mgmt through some serious tech training before I started down that road, to make sure the same mistakes are not repeated over again!  Scrum.org's PSD course is a good start.          Log in or register to post comments",6040
"01:26 pm August 29, 2014                    I should also mention that I'd put mgmt and executives through some EBM training before going down that road, because it would appear that they are not paying attention to the metrics that they should be.  More here:  http://EBMgt.org          Log in or register to post comments",6040
"01:35 pm August 29, 2014                    > Market is pretty stable.  Perhaps that is another way of saying it hasn't been disrupted yet  > With rewriting I am not thinking that the new system would contain all  > the features of the original app but that you would start over from a  > clean slate and build something small, get feedback, iterate.  That's the correct mindset to have. You need to identify the new MVP by formulating and then testing various hypotheses. That could involve mock-ups or even questionnaires just to test a market reaction. You already seem familiar with some of Steve Blank's work, and an Enterprise Lean Startup approach seems wise in your situation.          Log in or register to post comments",6040
"10:12 am September 4, 2014                    Charles,   Thanks for your comments - insightful as always.   I would say development practices has been much improved since the app was originally developed. I don't think that you can ever avoid ""mistakes"", you will hopefully not repeat old mistakes but you are destined to make new ones...  What specific metrics are you referring to? I am familiar with the strangler pattern, but in this case I'd be afraid that getting rid of the rarely used features might take more effort than creating new features in a new system. Purging these from the existing code base would give no business value.            Log in or register to post comments",6040
"12:17 pm September 4, 2014                    Metrics, the ones listed on this page:  http://ebmgt.org/Solutions/Agility-Index-Snapshot  The business value of removing features that are not valuable or not used are:  * less clutter in your app  * lower maintenance costs/TCO  * your team learns to pay more attention to feature usage/customer satisfaction          Log in or register to post comments",6040
"12:20 pm September 4, 2014                    > I would say development practices has been much improved since the app was originally developed.  A lot of people say that.  In all of my experiences when people say that, I've never been convinced that it's true.  People often ""don't know what they don't know""          Log in or register to post comments",6040
"04:47 am September 5, 2014                    Thanks Charles,  I hear what you're saying but software is re-written all the time and I have a had time thinking they are all failures. What circumstances made you go/not go down that path?          Log in or register to post comments",6040
"01:31 pm September 5, 2014                    In my 13yrs as a Java Consultant, I got the chance to see dozens of teams and their technical practices.  With very few exceptions, the vast majority of people and software teams completely over-estimate their technical practices and skills.  In addition, very very few people ever take the time to improve their skills at companies, because the incentives are misaligned to schedule/scope/cost.  I think much of this is caused by Taylorism management paradigms, but some of it is just the natural tendency to over estimate one's skills, and the fact that most humans don't account for ""unknown unknowns"".  [I should also mention that I've been a part of and have witnessed several re-writes in my career]  More practically speaking, the need for a *total* re-write is a long term culmination of technical debt, poor technical practices, and/or getting out of touch with your customer.  The vast majority of those deficiencies will still exist in those who've been around the company and were largely responsible for getting the system in the ditch in the first place.  Incremental re-writes via the strangler pattern mitigate the risk of making all of those mistakes over and over and over again.  They're also much less risky to the business, and can help nudge you to re-connect with your customers.          Log in or register to post comments",6040
Log in to reply,6040
Messages,6038
"02:20 am August 29, 2014                             Hi All       Is there any place where I can get standardized templates/format for recording Sprint Review/Sprint Retrospective learnings & outcomes as well as Scrum Backlog refinement steps/techniques?  Thanks in advance..",6038
"02:40 pm August 29, 2014                    Info on refinement:  http://ScrumCrazy.com/refinement          Log in or register to post comments",6038
"10:36 am September 3, 2014                    Hi Abhijit,  there are many templates, but if you want to be agile, it is the wrong way to use a template. The reason is that the template is designed for the specifiic environment it comes from, so it does not neccessarily fit to your environment.  A better way is to use the simplest way of documentation you can think of and adapt and improve over time.  Templates can help you to find ideas, but they are not really agile.          Log in or register to post comments",6038
"05:28 am September 5, 2014                    Thanks Charles  @Ludwig: Template always helps from baselining perspective even though it is from different environement.  Off course it needs to be customized to suit ones needs and the context it is applied. That was the reason behind my question so that I no longer need to re-invent the wheel   :)  Thanks again to both of you...          Log in or register to post comments",6038
Log in to reply,6038
Messages,6047
"08:51 am September 4, 2014                             Hello!  We are doing a transition from Waterfall to Agile in our company and naturally there is some resistance to Change and some discussions (which is very good, because we can Exchange our ideas and so progressively diminish resistance ;-).  During one of these discussions a colleague mentioned the blog of a friend of him, an Independent engineer with a lot of experience, etc... who stopped using Scrum: http://blog.martinelli.ch/2013/07/why-i-stopped-using-scrum.html  Can please someone comment (directly in the blog of this friend or here) the Argumentation of this engineer?  As I am a supporter of using Scrum in our Company I have given my own Argumentation for using it in our context (we have a critical size of 3 People for the development Team and one Scrummaster, one Product Owner for each Project, what is the minimal size prescribed by Scrum). Now it would be really interesting that People outside from our company which have made other experiences with Scrum also post a response and start a concrete and constructive discussion, so that we are not only influenced by one Person (and even if this Person worked since 18 years in the Engineering field, etc...) but have many views to discuss together to be able to better evaluate our choices.  Please post your comments and argumentation concerning the blog entry: http://blog.martinelli.ch/2013/07/why-i-stopped-using-scrum.html  Thanks in advance!",6047
"12:30 pm September 4, 2014                    I don't have a big problem with what the guy wrote, though I would want to hear some more context about his situation before I would consider the opinion to be credible.  Are all 3 people co-located all the time?  Is the product they produce a market leader as confirmed by press reports?  Why is there so much discussion about bugs?  That seems wasteful.  How often do they release software to their users?  What are their customer satisfaction #'s?  What market share percentage do they hold?  What's the revenue per employee?  3 people is on the low side for a Dev Team (3-9), so while Scrum may not be needed, I'd want to know all of the above before I would agree that they don't ""need Scrum.""  Quite possible I might agree in this case, but these cases are a tiny tiny fraction of a percentage point of all software dev -- almost a trivial product/context really.           Log in or register to post comments",6047
Log in to reply,6047
Messages,6044
"02:02 pm September 3, 2014                             Hi all,  I am hoping to get your thoughts on risk as part of estimation in a scrum team. That's a rather broad topic, so let me give an example to hopefully shed some light on my real need here.  I have a team that works with extremely complex infrastructure issues. Often, they will have a story that they believe should be estimated at, for example, a 5 *unless* they run into one of a few possible issues which would add another 3 points to the estimate (these numbers are examples, so try to keep them separate from the real question). Currently, they are leaving the story estimated as a 5, but if the possible issue arises, a new story (and 3 points) is added and worked on to mitigate that problem and finish the intended solution.  It is my believe that Agile inherently ""bakes risk in"" by working in short iterations and failing fast. However, this team is asking a great question and I wanted to get your thoughts on how to handle something like this.  As I see it, we have a few choices:  1) Keep working as we are, adding a new story when we find an issue that we somewhat expected  2) Estimate the story assuming that we will include that ""what if"" issue  3) Have 2 stories from the beginning - one for the work and one for the risk  What I'm trying to avoid is artificially inflated estimates/velocity, while still leaving room for those issues to come up (because they will).  Sorry if this is rather jumbled, but it's a complex situation to explain. I appreciate all of your input, in advance.",6044
"03:08 pm September 3, 2014                    Estimates should not be padded. They should be updated to reflect an improved understanding of the scope involved. So if the ""best estimate"" using the information available at the time of sizing is a 5, it should be recorded as a 5. Should subsequent events during the Sprint indicate that it is more like an 8 then the estimate should be updated at that point.  The Development Team should then take a view of the work on the Sprint Backlog, and the risk that any increased scope represents to the attainment of the Sprint Goal. Any appreciable increase in risk should be communicated to the Product Owner. The whole Scrum Team should then attempt to replan the Sprint Backlog so that the Sprint Goal can still be met.          Log in or register to post comments",6044
"03:12 pm September 3, 2014                    Some people will suggest ""spikes"" in this case, but I won't, because the difference between a 5 and an 8 doesn't warrant a spike.  (As an aside, I believe in spike tasks, but do not believe in ""spike stories"").  If you'r issue was the difference between a 5 and a 40, then spike tasks would be a good fit IMO.  With such a small deviation here (5 to an 8), my inclination would either be to:  a) default to the higher one, or  b) flip a coin on whether it's a 5 or 8.  Seriously.  If you're environment is going to be as complex as you say, than there will be lots of these, and some will be more than estimated, some will be less -- so they will all even out.  A couple of other things I'm sensing here as possibilities:  * Including technical risk as part of the estimate for an item is not ""artificially inflating"" -- it is buffering for uncertainty, and there's nothing wrong with that, IMO.  * Why do we care so much about velocity being exactly correct?  Software dev is a complex matter as you say, and velocity is really nothing more than a planning tool to help forecast release dates for releases that span multiple sprints.    I should also mention that velocity, user stories, and story points are not part of Scrum, but are useful ""complementary practices"" that can be used with Scrum.          Log in or register to post comments",6044
"03:17 pm September 3, 2014                    I have a lot of respect for Ian, but I will quibble minorly with this suggestion:  ""Should subsequent events during the Sprint indicate that it is more like an 8 then the estimate should be updated at that point.""  While this is technically ok/valid from a Scrum perspective, I find it dangerous in practice because it leads to old waterfall habits like estimates/actuals, or a team who doesn't do due diligence to try to create decent estimates because ""they can always change it later.""  I prefer the approaches I suggested, which are also ok/valid from a Scrum perspective, though I think they fall more in line with Scrum principles or realizing that not everything is exactly predictable in a complex domain, so it's a fool's errand to try for that kind of accuracy.  I think the empirical Scrum thing to do here is, call it a 5 or call it an 8, realize that complexity happens, then retrospect on it later *IF* it's really worth retrospecting on.  So, in short, any of the approaches that Ian, Lindsay, or I suggested are probably ok/valid from a Scrum perspective... the real question is -- which approach works best for the context that you're in?           Log in or register to post comments",6044
"03:33 pm September 3, 2014                     Posted By Charles Bradley on 03 Sep 2014 03:17 PM  I have a lot of respect for Ian, but I will quibble minorly with this suggestion:    ""Should subsequent events during the Sprint indicate that it is more like an 8 then the estimate should be updated at that point.""    While this is technically ok/valid from a Scrum perspective, I find it dangerous in practice because it leads to old waterfall habits like estimates/actuals, or a team who doesn't do due diligence to try to create decent estimates because ""they can always change it later.""    I prefer the approaches I suggested, which are also ok/valid from a Scrum perspective, though I think they fall more in line with Scrum principles or realizing that not everything is exactly predictable in a complex domain, so it's a fool's errand to try for that kind of accuracy.    I think the empirical Scrum thing to do here is, call it a 5 or call it an 8, realize that complexity happens, then retrospect on it later *IF* it's really worth retrospecting on.   Charles, you make an excellent point. We're only really concerned about an *average* velocity...not necessarily an *exact* velocity, so these small differences likely won't change the overall average.   I'm still interested in hearing other feedback, but I think I will recommend to the team that we just accept that these things will happen and we should estimate accordingly (""bake risk in"" to the planning/estimation) and retrospect on how to improve, if needed.          Log in or register to post comments",6044
"03:59 am September 4, 2014                    I agree that all solutions are OK from a Scrum perspective, just want to add my personal opinion about buffers.  For me they are a classical project management tool to mitigate risks. In Scrum, we mitigate risks by frequent delivery. If we estimate buffers into PBI sizes, and we measure a velocity, this velocity does not only represent what the team got done in a sprint, but also, what it could have done if specific events had happened. But some of them haven't.  From the Scrum guide: ""Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned.""  So we do not estimate for every risk that could possibly happen, but when it happens, we learn more and react. Inspect and adapt.  Lindsay, my personal choice would be to continue your practice, but ask the team what they prefer.          Log in or register to post comments",6044
"07:43 am September 4, 2014                    A team close to me has also a lot of uncertainty. The result is a big ariation of the velocity from sprint to sprint.  But does-it really matter ?  The PO can still compute an average if he wants to, but with a large cone of uncertainty.  If you re-estimate your US from 3pts to 8 pts inside your sprint, you still have the same amount of work remaining in your Product Backlog.  Can your stakeholders just accept the fact that because of the high level of complexity, your estimates are not very accurate ?          Log in or register to post comments",6044
Log in to reply,6044
Messages,6042
"05:32 am September 1, 2014                             We as a department adopted scrum  about a year ago and it has worked well on the projects we use it on.  Our department consists of 10 developers and 3 testers.  Our current situation is that we have a quarterly release of our core software product which is made up of many components. To achieve this we have about 7 developers and 3 testers in the scrum team along with the PO.  We also have another 2 developers who are mostly working on a longer term project that isn't yet part of the release.  We often get complaints from within the team that the team is too large. But I also think there is a problem that the other 2 are left out , Is there any advice on how to structure a small department like ours to make the best use of scrum?",6042
"10:35 am September 2, 2014                    Did you ask the team for their own thinking about this issue ?  Generally speaking, the 2 options are Component Teams & Feature Teams, with much more pros in favor of Feature Teams.           Log in or register to post comments",6042
"12:47 pm September 2, 2014                    In Scrum, the Product Owner should be able to release an increment each and every Sprint, not just every quarter. If it is established that a particular Sprint will *not* result in a potentially releasable increment, antipatterns such as sprint hardening can result, and the value of work in hand is likely to depreciate.  Releasing every quarter - which is to say, planning to release on cadence but less frequently than every Sprint - can be viable as part of a gradual agile transformation. In truth, many so-called agile organizations struggle to release even at quarterly frequency, and yours has done well to achieve it.  The question is: who is complaining about your team being too large, and why? It might simply be the case that the team is the right size for managing large batches of work that are released every quarter rather than every Sprint.  I suspect that if the Product Owner exerted a demand (pull) for releases every Sprint, the need to refactor the existing team may become apparent. In other words a demand for greater agility might be propagated.  This is easier said than done, because there could be a number of stakeholders who currently expect a predictive release schedule. They would need to be brought on board if greater agility is to be achieved across the enterprise.           Log in or register to post comments",6042
"05:12 am September 4, 2014                    Some members of the team are complaining about team size. But these are the same people that complain about having to waste time in daily scrums, their problem being that they do not want to hear what everyone else is doing.  I agree we should be able to release every sprint, we are looking at being able to do that, we have been successful in sticking to a quarterly release of our product. We have a very complex product made up of a lot of components with a lot of complicated ways of installing and configuring it.  The other issue is the other work and people outside of this team, in a way it would be useful to have an even bigger team so everyone is included and all time and resource can be planned as one but that would mean a team of about 15.          Log in or register to post comments",6042
Log in to reply,6042
Messages,6034
"10:34 am August 26, 2014                             What is the best practice for handling unforeseen issues that come up during testing? I'm referring to what may be debated as either a bug or a late-breaking discovery of a existing, yet undiscussed, requirement.  Example requirement:  Must support installation on SQL Server.  The above requirement is satisfied according to the definition of done in the current sprint. However, testing reveals that non-default SQL Server instances (i.e. something other name MACHINENAME\MSSQLSERVER) must be supported as well. This is not a ""new"" requirement, per se, but it is new relative to the definition of done for the current sprint.  So, I think it’s a bug if it’s a piece of delivered value that’s defective based on the acceptance criteria, or a new PBI if it represents some new/additional value to be delivered. My vote is for the latter in this case.  There are some suggestions out there on how to handle this case, including creating a third type of backlog item. I don't know if I agree with what this guy says here under ""New Definitions"": http://www.axisagile.com.au/blog/quality-testing/bah-scrum-bug-how-to-m…  Thanks,  Mark",6034
"10:57 am August 26, 2014                    Hi,  the best way to handle this is to improve the collaboration between PO and Dev team on understanding the requirements, and improving the DoD and the PBIs accordingly and continuously. DoD in the retrospective, PBI in the PB refinement.  For the specific case, I would say if the acceptance criteria of the PBI are not met, it's not done. If the acceptance criteria are not explicit or not specific enough, and the story fulfills the definition of done, the PBI is done and the ""new"" requirement should become a new PBI.          Log in or register to post comments",6034
"11:20 am August 26, 2014                    This should be seen neither as a bug in the product, nor as a new requirement, but rather as a defect in the process. It shows that rework is happening in some cases. That rework is waste, and the team should seek to improve the situation no later than the next Sprint Retrospective. A test-first approach can help avoid the late discovery of pertinent acceptance criteria.          Log in or register to post comments",6034
"11:35 am August 26, 2014                    I don't see how TDD would solve this problem, given that the requirement was unknown (or at least not called out explicitly) ahead of time.  I do agree that it's a defect in the process. My team is just hung up on what to call this thing - a bug or a PBI.          Log in or register to post comments",6034
"04:22 pm August 26, 2014                    (aside, no such thing as a ""Best Practice"" in a complex domain like software dev -- everything is contextual)  Mark, has your team tried going through this flowchart to see what their answer was?  http://www.ScrumCrazy.com/bugs          Log in or register to post comments",6034
"04:27 pm August 26, 2014                    Thanks Charles!!! That's EXACTLY what I was after!          Log in or register to post comments",6034
"04:31 pm August 26, 2014                    Happy to be of help, but if you get a minute it would be great to get feedback on what your team thought of the chart and or their issue.  I suspect you might hit the 10 minute rule on previously understood requirements... OR... it might be quite clear that no one realized that was a requirement... this is part of complexity -- sometimes you can't uncover a requirement until you peel the layer of the onion above that... sometimes you should have known... and sometimes it means you need to improve your process...but sometimes you couldn't have predicted it without peeling off that top layer... all possible scenarios in a ""complex"" domain.  Anyway, happy to be of help, and best of luck!          Log in or register to post comments",6034
"04:36 pm August 26, 2014                    I will likely not get you an answer today, but I will make sure I bring this up in our retrospective this week. I have a laundry list of process-related items like this :)  As an aside, I wonder if part of the ""is it a bug?"" calculus is the perception outside of the team (i.e. exec mgmt) on the bug metrics. That is, if we keep calling things ""bugs"" that really may be incompletely understood requirements, we'll get undeserved ""bug demerits"".           Log in or register to post comments",6034
"04:43 pm August 26, 2014                    That can definitely affect it, but more important than anything is that each ""takeaway lesson learned"" will be different depending on the root cause of the issue.  So, for instance, the PO is responsible for describing requirements to the level needed, but most PO's(hopefully PO is from the biz side) would have no way in heck of predicting or knowing the requirement you uncovered.  Sounds like your team may also not have been able to predict...    But the net net of it is that you should classify it, then retrospect on it to see if there is a way to do things better in the future.  Sometimes, usually rarely, the answer is ""we couldn't have known it until we tripped upon it"", or ""yes, we could have known it if we did 30 hours of analysis on the problem, but it was actually more efficient to do 2 hours of analysis and then just give it a whirl, then take the extra 10 hours to implement the ""discovered"" requirement - thus saving 18 hours of effort!""  So, actually, the way we did it was fine!  Many other times, if we're honest... the answer is ""we can do better.""  Just remember... that's NOT always the answer in a complex domain.  (Google the ""Cynefin"" framework for more about what I mean wrt ""complex domain"")          Log in or register to post comments",6034
"04:53 pm August 26, 2014                    Charles,  I just watched this video on the subject: https://www.youtube.com/watch?v=N7oz366X0-8  What a wonderful way to explain (albeit a little ""complicated"") Emergent Practice, as it applies to Scrum. I totally see the truth in it.  Thank you for this valuable resource. Where did you find it?  - Mark          Log in or register to post comments",6034
"06:29 pm August 26, 2014                    Cynefin is a well known model in the Scrum trainer community, and lesser known but still known within the Agile enthusiast community.  We use it sometimes to describe that Scrum really thrives in the complex space (where s/w dev lives), and how you might not have as much success with Scrum in the complicated space (where Network support might live -- Kanban might be better for net support, IT help desk, etc).  Manufacturing might fall into the obvious(formerly known as simple) or complicated space.  One of the main problems with traditional PM/PMI techniques is that they assume s/w dev is in the obvious or complicated space, which is why those techniques are 3X less successful than Agile/Scrum in s/w dev.  Pick the pright process for the right kind of work kind of thing.          Log in or register to post comments",6034
"02:31 am August 27, 2014                    > I don't see how TDD would solve this problem,  >  given that the requirement was unknown (or   > at least not called out explicitly) ahead of time.   Think about how testing caused the requirement to be discovered. If the test is identified first, rework and waste may be avoided.          Log in or register to post comments",6034
"07:23 am August 28, 2014                    Charles,  Love the chart!  One note on the thought. In your chart, it looks like a ""Requirements Bug""  is not really a bug, but a missing feature.  Would you consider a ""Design Bug"" in the same manner?   For example, ""Software doesn't work under _____ High Contrast Color Schemes"". The actual software works fine but it is missing support for this type of environment.   One could be nit-picky and go back to the PO and say ""well, you never asked for this"" but realistically, isn't this something that a member of the ""Team"" should have brought up during Sprint Planning?  Andrew          Log in or register to post comments",6034
"10:28 am August 29, 2014                    So we did our retro on this past sprint. Here's what was captured by the SM:  > Unplanned work (bugs) is not following the process and is causing sprint deliverables to be at risk. We need to make sure that new / unexpected work is going through the same process as planned work.  The team will have a daily triage session to review and edit (if necessary) in preparation for a future sprint.  Product Owner will determine severity and priority.  The SM referred the team to the ""official"" flowchart, which is probably copy/pasted from some Microsoft resource:  http://imgur.com/2r9JJQo  I don't think this state diagram captures anything useful in terms of deciding on whether or not to commit NOW. That's really the esssence of the whole problem.  While your flowchart is useful, and provides substantially more value, I think the SM was hesitant to offer up an alternative to the ""official"" how-to-triage-bugs procedure documented internally. All this procedure documents is what fields in TFS to fill in :(  Ultimately, the fix-it-now vs. fix-it-later decision lies with the PO, with guidance from the team on effort, severity, etc.           Log in or register to post comments",6034
"12:58 pm August 29, 2014                    Andrew,  > One could be nit-picky and go back to the PO and say ""well, you never asked for this"" but realistically, isn't this something that a member of the ""Team"" should have brought up during Sprint Planning?   The PO is responsible for all decisions wrt requirements.  If no requirement is ever created (by whomever) to make your system work on a particular platform/environment, then the requirement does not exist, and thus, if there is no requirement, then there is no bug.  If no one(including the Dev Team) thought to add it as a requirement, then it's simply a ""missed feature"".  I would hope that a good Scrum team is collaborating well such that they might bring this up, but pointing blame at the PO or Dev Team is not the important part here.  What's important is ""Do we have a good shared understanding of what platforms/environments we support?""   If this issue brings that point to light, then let's get to fixing that problem!  Let's make a list of all platforms/environments we support!  Also, there are likely to be lots of ""technical thingies"" that a business side PO would never think of, and this is why the PO + Dev Team collaboration is so important.  This is also why it is perfectly fine for the Dev Team to come up with requirements.  In my classes I sometimes say that the 'PO has the ""last say"" on requirements, but that doesn't mean they have the ""only say.""'  As an aside, this kind of requirement is something I consider to be a ""non functional requirement"", which is perfectly well suited as PBI and/or on the DoD.  See here for more:  http://www.scrumcrazy.com/Handling+Non+Functional+Requirements+in+User+…          Log in or register to post comments",6034
"01:04 pm August 29, 2014                    Mark,  > I don't think this state diagram captures anything useful in terms of deciding on whether or not to commit NOW. That's really the esssence of the whole problem.  Agreed.  it's simply a diagram that explains how a tool works, and the diagram is useful for *that* purpose only.   > All this procedure documents is what fields in TFS to fill in :(  Again, not exactly helpful from a Scrum self organization perspective.  It's more of a ""here's how you fill out the red tape form -- don't forget your TPS cover sheet!"" (movie reference)  > Ultimately, the fix-it-now vs. fix-it-later decision lies with the PO, with guidance from the team on effort, severity, etc.   Completely agree, so long as we use Scrum's mechanisms to decrease sprint scope when new unplanned work comes in.  The PO should also be communicating to all interested stakeholders every time one PBI is given higher precedence than another mid-sprint.  (Otherwise certain stakeholders will try to game the system by only bringing stuff in mid sprint)  The SM and PO should be making it plainly transparent every time unplanned work causes a sprint scope change -- in other words, make the tradeoff highly visible to all stakeholders.  And lastly, like the chart says, we should constantly retrospect on ALL of those occurrences to find root causes and try to fix those root causes.          Log in or register to post comments",6034
"01:27 pm August 29, 2014                    > And lastly, like the chart says, we should constantly retrospect on ALL of  > those occurrences to find root causes and try to fix those root causes.  Indeed. It is important to triage defects when they arise and to deal with them expediently, but they are still rework and waste.          Log in or register to post comments",6034
"05:36 am August 30, 2014                    Thanks Charles - I figured you would say something like that (not in a negative sense). It's really critical to ensure all groups are working together in the scrum meetings.   So do I have it right that an item like the one discussed gets raised in daily scrum and then put into discussion for the next sprint backlog where the PO can decide which way to go? And as noted, retrospect it so similar items can be identified earlier.          Log in or register to post comments",6034
"07:51 pm September 3, 2014                    If it was truly a ""missed feature"", then I would think it could get raised as soon as it is found.  Also, the PO might or might not be at the Daily Scrum.  I would expect the Dev Team to raise it to the PO as a new PBI using some sort of typical communication mechanism like verbally, email (CC the whole team), etc.  No need to wait for a Daily Scrum...  See these patterns for a little more detail on what I'm saying here:  http://www.scrumcrazy.com/Daily+Scrum+Patterns+Summary  Specifically, see:  ""PO Attends""  ""The After Party""  ""Anti-Pattern: Save All Obstacles For The Daily Scrum""          Log in or register to post comments",6034
"07:52 pm September 3, 2014                    My response above was for ""Andrew"" ...          Log in or register to post comments",6034
Log in to reply,6034
Messages,6043
"03:24 pm September 2, 2014                             Dear Scrum.org team,  it would be nice if also the free ""Open Assessments"" were listed in the ""My Assessments"" section of the user profile page once the user completed it. Right now only the non-free assessments seem to be listed there.  Thanks,  Franz",6043
"03:28 pm September 2, 2014                    Hello Franz,  Thank you for your feedback. The Open assessments are to be used as a learning tool. We offer them so people can take them as often as they like to practice, but we do not offer badges for the free assessments, and your Open assessment results are not designed to appear in your Scrum.org member profile. Only our Professional-level assessments for certifications have score results, badges and certificates that will show in your Scrum.org member profile.          Log in or register to post comments",6043
Log in to reply,6043
Messages,6036
"01:41 pm August 27, 2014                             Hi im trying to pay for the PSM online assessment - Professional Scrum Master I Assessment Fee  Getting this error,  Sorry, we encountered an error while trying to process your credit card.   Please confirm your payment information and re-submit your order  I tried 2 cards and my girlfriends card too but all got the same error.  Any ideas?  Thanks,  Phil",6036
"02:46 pm August 27, 2014                    Hello Phil,  Our shopping cart is temporarily out of service and is not allowing orders to be successfully processed. As such, you may have received an error message and were unable to complete your order checkout on our website.  We sincerely apologize for this occurrence and for any inconvenience this might have caused. Please know that we do appreciate your time, and we are doing everything we can to resolve this issue.  We will let you know once the problem has been fixed. Again, we apologize for the inconvenience, and thank you for your patience and understanding.          Log in or register to post comments",6036
"12:54 pm September 2, 2014                    Hi Phil,  Did you paid the assessment ?  I'm having the same problem...  Thanks          Log in or register to post comments",6036
"01:28 pm September 2, 2014                    Hello Vitor,    We addressed the issue with our shopping cart service on August 27th, and are happy to report that all orders have since been processed accordingly without issue. There are many other reasons you may be receiving a ""payment declined"" message. We sent an email to you in response to your problem. We hope you find the information helpful.          Log in or register to post comments",6036
Log in to reply,6036
Messages,6033
"08:18 pm August 24, 2014                             Hi all,  We've been running our project using Scrum for the last 12 or so months, and recently the backlog has started to become bloated during sprints. We've been adding in all the incidental tasks that have been happening across the team so there is an accurate reflection of the amount of effort that has gone into the sprint, but I'm wondering if this really should be happenng. For example, critical bugs in Production have come up that have needed to be addressed, so we've added stories for those (during the sprint, as well), plus it's performance review time too.   The mindset behind this happening is to try and track the effort that has gone into the sprint, beyond the stories added during planning.   If anyone can shed some light on this, give their own personal experiences/opinions, that would be most helpful.",6033
"03:25 am August 25, 2014                    Hi Hamish,  do you have a Sprint goal? If you do, it is OK to add items to the sprint backlog as long as the team can keep the focus on the sprint goal. If you don't, it happens easily that the team works event-driven on the things that come from production, and there is no real reason for you to do sprints at all. You can use Kanban instead to handle these issues. But if you value the advantages of incremental delivery of value, you may want to fix this by stating an explicit sprint goal and handle production issues in a way that doesn't affect this goal. Ask the team how they want to do this and which decisions are to be made for each production issue. This can result in a diagram like this:  http://www.scrumcrazy.com/One+way+to+handle+Bugs+and+Production+Support…          Log in or register to post comments",6033
"05:01 am August 25, 2014                    > For example, critical bugs in Production have come up that have needed to be addressed...  Who is performing triage on these defects? If it isn't the PO then he or she must at least be kept informed, as defects represent undone work. The PO needs to account for any impact this may have on the Product Backlog.          Log in or register to post comments",6033
"09:06 am August 25, 2014                    Some maybe naive questions, being ignorant of your exact situation:  If the defect only ""recently"" started to bloat the Sprint Backlog:  - perhaps you are creating Technical Debt in your development process?  - What does the Scrum Master say about these upcomings?  - Do you yourself have an idea what causes the problem? Have there been any recent changes in process, team membership, tools, ...?          Log in or register to post comments",6033
"05:34 pm August 25, 2014                    Thanks for the replies, everyone. I'll go through and try and adress each point, and add the required info. Firstly though, up front, I am currently acting in the scrum master role. This happened by default by a certain extent, as the only trained scrum masters were the development team, but that was causing issues. I am the BA on the project, so it fell to me to take up the role, despite a lack of training. The devs support me in the required knowledge, and we've been using the retrospectives to help me get up to speed. Still, I'm hoping to get some training in the near future, but in the meantime, I'm trying to do what I can to upskill, hence using places like these forums to ask questions.  @Ludwig - We did have sprint goals at one stage, but we are adding such small and various incremental changes each sprint that trying to have one goal has been a bit of a problem. Still, it might be something we need to get better at. I've also put together an incident management process that looks very similar to what you linked to, so it would seem we are managing bugs in a fairly sensible fashion. The tracking of these other activities has been more about being able to show the business why we've fallen short in some sprints etc, as we can give a quantifiable response where necessary, e.g. ""Well, we lost the exquivalent of 5 story points this sprint on dealing with the office move, then 4 more on people having to complete their performance reviews"".  @Ian - As above, I have a incident management process that triages all the bugs etc, so I believe we have these well in hand. As a team though, we have a lot of others issues to deal with, for example, we lost half a day to infrastracture issues, so a story was added to reflect that. My thinking is that it's ok to track the effort taken on addressing some of these issues, even using story points, but I'm hesitant about adding things like that to the sprint itself.  @Another.com - The scrum master, me, is feeling that we're not tracking this work appropriately, and that's why I've come to these forums to get others viewpoints. As for tech debt, yes, that is something that we don't manage very well, and I believe we need to improve on. Unfortunately we have had very aggressive timelines to get the product into production, and as a result, we've cut corners. Everyone is aware of this, and I'm constantly trying to find ways to address this. As for what's causing the current problems, we are simply being impacted by a lot of external forces at the moment, that are beyond my power to intervene with. I already remove a lot of impediments as it is, but there are some things, as a scrum master, even I can't deal with. I just want to try and manage them appropriately.          Log in or register to post comments",6033
"06:08 pm August 25, 2014                    > As a team though, we have a lot of others   > issues to deal with, for example, we lost half a   > day to infrastracture issues, so a story was   > added to reflect that.  You can account for infrastructure issues how you like, and it is reasonable to size them with story points if they help the Development Team estimate their remaining available budget for a sprint. The same can be done for housekeeping matters and for paying off technical debt.  However, it is up to the Product Owner to decide if this work represents value for the Product, and whether or not it should be represented on the Product Backlog. As such, the PO should be kept informed of any changes to sprint scope. Note that the Development Team can action this work regardless of whether or not the PO values it, since they wholly own their Sprint Backlog.          Log in or register to post comments",6033
"08:00 am August 26, 2014                    Hi Hamish,  as you have asked for personal opinions:  To me it sounds like you already are headed in the right direction: You are the Scrum Master, you know what your job is and you care for accomplishing your tasks. If ""external forces beyond your power to intervene with"" are causing the Scrum Team to create technical debt, I guess your best strategy regarding the external forces is to  - always expose the problem to management, the Scrum Team and perhaps also to some of the external forces  - further remove as much of the impediments as you can, taking one step after the other  - have more lot of staying power than the external forces.  Perhaps there are some more experienced forum members who can share some best-practice-tips with you.  Good luck!           Log in or register to post comments",6033
"04:36 pm August 26, 2014                    Hamish,  Thought you might like this to help with your scope mgmt issues within the sprint:  http://ScrumCrazy.com/scope  Hope this helps!          Log in or register to post comments",6033
"06:02 pm September 1, 2014                    Thanks for the feedback, everyone, it's given me some good points to consider.          Log in or register to post comments",6033
Log in to reply,6033
Messages,6041
"12:36 pm August 30, 2014                             Hi folks,  Are there any significant differences between Evidence Based Management and Learn Startup ?  The Lean Startup MVP, released in order to validate hypothesis is build to collect evidence in order to pivot or continue.  Both systems look very close to me, so I wonder if I miss something important here.  Yours  Olivier",6041
"02:02 pm August 30, 2014                    I believe the metrics used in EBMgt are protected as IP, so it's difficult for an outsider to build a full picture.  However, I remember Ken saying that lagging indicators were given some weight in Agility Path. If that is still the case with EBMgt then it may be a departure from the Lean Startup practice of using actionable metrics drawn principally from leading indicators. Also I'm not sure if EBMgt has the same lean business philosophy behind it. For example, would it support a concierge MVP?          Log in or register to post comments",6041
Log in to reply,6041
Messages,5893
"08:03 am May 26, 2014                             Hi,  self-organizing teams, do they need  a) a scrum master  b) a product owner?  in my opinion they still need both. is there anything they don´t need if they are working as a self-organizing team?  what are self-organizing teams doing?  do the pull the work and reorder user stories form/in the product backlog?  thanks in advance",5893
"08:16 am May 26, 2014                    Where does this question come from?   In Scrum, there are 2 self organizing teams: The Scrum team and the development team (which is part of the Scrum team).  The Scrum team needs a scrum master and a product owner to be a Scrum team.  The development team also needs a scrum master and a product owner to be able to work. However the scrum master and the product owner are not part of the development team.  There are many things they don't need: Project managers, team leads, micromanagement,...  Pulling work and reordering user stories in the product backlog are examples of things self-organizing teams do.          Log in or register to post comments",5893
"08:22 am May 26, 2014                    thanks for your answer.  but the self-organizing development team does not reorder the user stories in the product backlog. that is the job for the product owner, or?           Log in or register to post comments",5893
"08:43 am May 26, 2014                    It is the job of the product owner. However the product owner can do his jobs himself or delegate them to the development team. In each case he remains responsible.   So it is possible and does not violate the Scrum rules if the development team reorders the user stories in the product backlog. But in conflicts, the product owner has the last saying.          Log in or register to post comments",5893
"11:59 am May 26, 2014                    > The development team also needs a scrum   > master and a product owner to be able to work.  Strictly they shouldn't need an SM or a PO in order to develop a potentially releasable increment. They should have all the skills and capabilities necessary for creating such an increment, or should aim to acquire them.  However a Development Team does need an SM and a PO, more or less by definition, in order to fulfil its responsibilities to the Scrum Team and the shared process.          Log in or register to post comments",5893
"02:51 am May 27, 2014                    You are right Ian, that's what I meant with ""being able to work"". Without a PO, they don't know which PBIs to work on next, and without the SM it is hard for them to improve their process.          Log in or register to post comments",5893
"08:54 am June 2, 2014                    Self-organized is not enough.   The Dev Team is not supposed to be self-design and self-managed (but it can be).  The self-organized dev team need ""something"" or ""someone"" to manage the boundaries and to align the dev-team with the company's target.  Isn't it par of the SM & PO duties ?          Log in or register to post comments",5893
"02:32 pm June 2, 2014                    > The self-organized dev team need ""something"" or ""someone"" to manage the boundaries  In Scrum the ""boundaries"" to be managed are those between sprints. If the work of multiple teams must be integrated in order to produce an increment, then the negotiation across team boundaries need only involve the Development Teams themselves. They should have all the skills and resources required to build the increment, and no other roles or parties should strictly need to be involved.          Log in or register to post comments",5893
"01:28 am August 30, 2014                    Self Organizing Teams can be simple and yet be very effective.  Here is the post which have the hand guide for the same.  http://bit.do/selforgteam          Log in or register to post comments",5893
Log in to reply,5893
Messages,6039
"05:10 am August 29, 2014                             Hi folks,  My question is not about Scrum but about some common practices behind Agility.  I'm trying to sell some XP practices to the teams around me.  Everybody is buying Continuous Integration very easily.  Everybody is buying a little of pairing, but I hardly can say they practice pair-programming. And the managers always think about pair-prog = 2x more money to pay for the same line of code !  I've found this interesting study from Cockburn & Williams about this topic : http://www.cs.pomona.edu/classes/cs121/supp/williams_prpgm.pdf  My main issue is to sell the TDD.  I have to struggle with the managers about the cost of automated unit-test, but I've found some ammunition, for instance with this study :  http://research.microsoft.com/en-us/groups/ese/nagappan_tdd.pdf  The developpers are buying automated unit-testing quite easily but they are always coding their unit-test after the source code.  They are still using unit-testing as a testing practice instead of trying to use TDD as a design practice.  Obviously, the study is comparing TDD with non-TDD, but I can't find ammunitions in order to convince people to go from ""unit-testing after coding"" to real TDD.  Do you have any advice ?",6039
"06:10 am August 29, 2014                    > they are always coding their unit-test after the source code.   Do they *always* do this?  What is the current level of code coverage, and what suggestions are they making for coverage to be improved?          Log in or register to post comments",6039
"08:15 am August 29, 2014                    Yes, always :-(  In my company, we are developping in Java. JUnit usage is not largely adopted.  The few ""agile"" teams are just discovering JUnit, and they like it.  The code coverage oscillates among the projects from 50% to 75%.  In France, we fear unemployment, so when you have a job, you keep it. The consequence is we are ""old"" developpers here, and like every old people, we have our (bad) habits and it is very difficult to change.  The teams reaching above 50% of code coverage are very happy with that.  As a way to improve, some teams have something in their DOD like ""code coverage should not goes down"", but it is still very focus on testing with JUnit and not having better design & quality using pure TDD.  I don't want them to reach 90% of code coverage with JUnit, I'd like them to try real TDD, without compelling them to it.          Log in or register to post comments",6039
"09:27 am August 29, 2014                    How good/bad is quality? It's harder to sell TDD if quality is perceived a good enough and bugs does not increase over time. Suggest to the team that you try it for some sprints and then evaluate.          Log in or register to post comments",6039
"01:11 pm August 29, 2014                    How about approaching this from the angle of traceability? BDD and TDD are good ways of linking requirements through to code, and thereby of controlling technical debt. The PO or other senior organizational stakeholders may value this even if the Dev Team members currently don't.          Log in or register to post comments",6039
Log in to reply,6039
Messages,6035
"06:41 am August 27, 2014                             Hello everyone,  I have been trying to purchase  PSM-I assessment, yet cannot get past the checkout. The standard checkout form claims my credit card details are invalid (they aren't, I tried with several different cards that all work on Amazon etc.), and MasterPass is not (yet) available here in Germany.  Looks to me that the checkout simply does not work for German folks with German credit cards.  Any workaround known?  Thanks!",6035
"02:47 pm August 27, 2014                    Our shopping cart is temporarily out of service and is not allowing orders to be successfully processed. As such, you may have received an error message and were unable to complete your order checkout on our website.  We sincerely apologize for this occurrence and for any inconvenience this might have caused. Please know that we do appreciate your time, and we are doing everything we can to resolve this issue.  We will let you know once the problem has been fixed. Again, we apologize for the inconvenience, and thank you for your patience and understanding.          Log in or register to post comments",6035
Log in to reply,6035
Messages,6029
"08:43 am August 21, 2014                             Hi to all,  I attende a PSM I course and made no the exam.  Is the PSMI exam fundamentally different then the PSPO I exam ?  Can I try to make the exam, when having passed the PSMI?  Or are the questions so different and pointing on tools of the PO, which is not described in the Scrum Guide but only handled in the appropriate PSPO trainings and by being expert in using it?  Thanks a lot,  Patricia",6029
"11:28 am August 25, 2014                    Hi Patricia,  have a look at this thread:  https://www.scrum.org/Forums/aft/846  Best, Ludwig          Log in or register to post comments",6029
"01:16 am August 26, 2014                    Hi All,        Recently took PSM-I exam and couldn't make it, can anyone please guide me on the books/ references that i need to go through. I read a lot of material on Agile-scrum and sample question/ answers on the web, and also consistently i scored 100% in the open assesment and was pretty confident before i gave the exam.But the questions were very tricky and with so less time i couldnt make it :(  Thank you,  Akhila          Log in or register to post comments",6029
"11:02 am August 26, 2014                    Hi Akhila,  have you attended the recommended 2 day course?  I found that very helpful.  Best, Ludwig          Log in or register to post comments",6029
Log in to reply,6029
Messages,6025
"05:13 am August 20, 2014                             During developing web-projects, manager always need to test the new features. Typically, this is done using test servers. But often, the manager (e.g. me) can’t run a test server himself to see the new features and has to ask developers for the help, distracting them from their work. Besides purchased test equipment is not necessary 90% of the time.  A few days ago i found project teatro.io, which automatically creates a test server in the cloud for each new feature at the time it was added to the project. The manager does not need to configure anything himself - when developers have prepared a new feature which they want to show to their manager, they make changes to the code. Teatro sees these changes, launches a personal test server for this concrete feature and sends a unique link to the manager. It only remains to follow the link and start testing.   Access to the service is provided on a monthly subscription basis. Pricing depends on a maximum number of parallel servers and projects.  Maybe somebody will find it useful for him.",6025
"08:26 am August 26, 2014                    Dear Alexey Ermolaev,  I have difficulties finding ""teatro testserver"".  There is no article in wikipedia, no website I can refer to.   Can you point me to a source of information about the testserver, please?  I like using Jenkins (http://jenkins-ci.org), but I am not sure whether it is like what you found.  Tim          Log in or register to post comments",6025
Log in to reply,6025
Messages,6021
"05:02 pm August 15, 2014                             How would one handle a situation where the development manager (to whom the Development Team reports) is also acting as Product Owner?  I see a few issues here, as the manager is implicitly an authority figure, and as such, may use his influence over the Development Team to circumvent Scrum. Specifically, giving directives to the Development Team to alter requirements and change scope in the middle of a sprint, without communication with the Scrum Master.  How can the Development Team delicately navigate this issue without appearing insubordinate? The dev manager is clearly not working within Scrum.",6021
"05:38 am August 16, 2014                    The Development Team should inform the PO.  The Dev Team can just say ""we are ok for doing your stuff next Sprint, if our PO is also OK""  The PO is responsible for the Product Backlog, not any other ""managers""          Log in or register to post comments",6021
"05:53 am August 16, 2014                    The PO reports to the dev mgr too. Now what?          Log in or register to post comments",6021
"06:05 am August 16, 2014                    If your PO have no authority on the Backlog, then, he/she is just not the PO.  If the Dev Manager want to decide the order and value of the Product Backlog Item, then give him the PO role.  Maybe the current PO, helped by your Scrum Master, should explain the role of PO in Scrum.  If your managers actually don't want you to work using the Scrum framework, you can try to have the managers squeezed between the Scrum Team and the client/customer how should be very happy of Scrum because of the transparency on the product you offer.          Log in or register to post comments",6021
"06:09 am August 16, 2014                    The current PO is completely submissive to the dev mgr, both organizationally and culturally. Since this is currently an internal project, there is no ""customer"" of which to speak.  I really only see two options here: 1) quietly inform the Scrum Master of the dev mgr's subversion of Scrum, or 2) quietly inform the dev mgr's boss (VP) of the same.   Neither (1) or (2) will end well for me. So, I either need to suck it up becuase I clearly have no opportunity to improve this organization's process, or find another job. Is there an option (3) I have not considered?           Log in or register to post comments",6021
"06:20 am August 16, 2014                    I'm very sad for you. You are trying to perform the job of your Scrum master plus your own developer job.  It is very difficult to change an organization mindset, especially without sponsorship.  Be confident you do your best.  You have already improve a lot your understanding of Scrum, but the people around you are far away behind.  Be patient, the improvement will take a lot time to implant.  Of course I don't know the people around you, but I'll give option 1 - (inform the SM) a try.  Option 2 is in the hand of the SM.          Log in or register to post comments",6021
"06:23 am August 16, 2014                    Option 3 can be asking & planning for training for the whole team ; attending seminars ; coaching from outside experts          Log in or register to post comments",6021
"06:27 am August 16, 2014                    Either option 1 or 2 will probably result in retribution for me being the Scrum ""whistleblower"".  I have inquired about training, and was told I need to plead my case, as there is no formal training budget. The new VP who came on board informally trained the organization on Scrum. He clearly did a poor job.          Log in or register to post comments",6021
"06:33 am August 16, 2014                    You are not ""whistleblower"", you are raising impediments.  Again, I don't know the people around you, it difficult for you to be honest and transparent if their is a strong lack of confidence and respect around you.  You can try not to ask training or coaching for you, but for the whole team.          Log in or register to post comments",6021
"06:41 am August 16, 2014                    I understand what you're saying, but the impediment is my boss himself. He doesn't follow the process. I can't fix that without consequences to myself, can I?  If I ask for training for the whole team, it will be denied because the VP already trained the team himself, albeit ineffectively. He'd never approve outside training, as it would be an offense to his ego.  Perhaps I'm jumping to too many conclusions here, but I've been doing this for 20 years, and I know human nature.          Log in or register to post comments",6021
"06:47 am August 16, 2014                    Ask for a few days of in-site coaching, not for a outside 2 day-training.  The message to your VP could be ""we understood your great training but actually we have a hard time trying to make it work""          Log in or register to post comments",6021
"07:01 am August 16, 2014                     Just try an experiment, ask everyone on the team to register on scrum.org.  This can form part of an experiment.  Get everyone together and have a room with LAN access.  Ask everyone to sit the open exam (including the VP), this is based on real deal Scrum.  The results from the experiment will show as a percentage on how scrum is understood.  Same conditions as everyone, one shot to do the best you can in the time you can.  Passing the Scrum Open assessment is an indication that you are aware of some of the basics of Scrum.  The VP cant argue with the results from this experiment.  Its also a bit of fun to get people thinking about scrum as well, 30 minutes well invested.  This will give you the data that's the important part.  What people think and what people know are two separate things.  Here were testing the what they know based on what they think from what they have been taught.  If your prediction is right the data will show that people need to be educated ""correctly"".  To say Ken and Jeff know nothing if the result goes how you think it will, will just show it even more.  Michael          Log in or register to post comments",6021
"07:40 am August 16, 2014                    There are no agile whistleblowers, only team members who promote transparency.  Expose the impediments (focusing on the problem rather than the person) using information radiators and then try to cultivate retrospective analysis. I don't recommend promoting solutions at this stage...just exposing the problems. Who prioritized what, and when and why? What were the consequences? All team members should be pro-active about bringing these matters to general attention.  Transparency is the first step in an agile transformation. If this is objectionable to an organization, then it is reasonable to consider if it would be more productive to invest your time and effort elsewhere.          Log in or register to post comments",6021
"08:13 am August 16, 2014                    Since my desire for transparency is solely directed at one person (my dev mgr), then I fear the consequences. The daily stand up is not a ""safe place"" in which to raise this impediment.           Log in or register to post comments",6021
"11:49 am August 20, 2014                     Posted By Olivier Ledru on 16 Aug 2014 05:38 AM  The Development Team should inform the PO.    The Dev Team can just say ""we are ok for doing your stuff next Sprint, if our PO is also OK""    The PO is responsible for the Product Backlog, not any other ""managers""  I disagree that the Product Owner should be involved in this, at least at this point.  Respectfully, I also disagree that the Development Team should be tasked with (a) confronting the Development Manager, and (b) making *any* promises - no matter how thin - regarding the next Sprint.  The former puts the Development Team in an awkward position with their functional manager, which may increase anxiety, further distract them from their work, etc.  The latter could easily be construed by the Development Manager as a future commitment, even if the Development Team qualifies their response with ""if our PO is also OK.""  In my opinion, this falls squarely on the shoulders of the Scrum Master; this is precisely the type of situation for which the Scrum Master is prescribed:  1) Remove impediments  2) Improve the organization's understanding of Scrum  As Scrum Master, I would have a discussion with the Development Manager and explain how his/her actions are counterproductive to the entire Scrum process, not just to the Development Team.  The best way to do this is to quantify the impact of his/her actions on the Development Team, and explain why Scrum forbids this type of interaction.  For instance, introducing items into the Sprint Backlog through backdoor interactions severely impacts transparency.  If there is resistance on the part of the Development Manager, the Scrum Master then needs to examine why.  Is there an issue with the organization's commitment to Scrum, or just the manager's commitment to Scrum?          Log in or register to post comments",6021
"01:38 pm August 20, 2014                    Thank you Jason. I think your analysis is spot on.  Since I raised my initial concerns in this thread, the Dev Mgr seemed to sense my frustration, and we spoke privately. I raised many of the points discussed in this thread regarding our roles, Scrum, etc. He was very receptive, and clearly wants to not only learn, but be a part of the solution.  He asked what we could be doing differently or better, and I explained that we're not fullying embracing Scrum (i.e. blurry roles, no Sprint retrospective, priorities outside the commited sprint PBIs, etc.)  The Scrum master was unaware, and I mentioned to her that we should at minimum be two sprints ahead in our grooming (we're grooming just-in-time, which is stressful and inaccurate), and that we are not learning any lessons that a Sprint Retrospective is prescribed to help with.  I still think the Scrum Master is the weak link in the whole situation. From where I sit, she's a daily stand-up facilitator and no more. I hope she's more, but I haven't seen it.           Log in or register to post comments",6021
"02:18 pm August 20, 2014                    I'm glad to hear the Development Manager was receptive and open to suggestions; I'd take that as a clear indication of his commitment to the framework.  Nice work!  As for your Scrum Master, it sounds like there's an opportunity to lead by example, especially now that the Development Manager has overtly expressed a desire to more fully embrace Scrum.  At the end of your current Sprint, you might consider suggesting to her that the team participate in the requisite Retrospective, and express your desire to hear her feedback on the team's performance.  Since you aren't participating in Retrospectives right now, may I ask what 'done' means to the team today?  What did it mean when you first began participating in Sprints?  This is something that should evolve over time; has it?          Log in or register to post comments",6021
"03:08 pm August 20, 2014                    I can see that the SM is receptive too. In our daily SU yesterday, I suggested the Sprint Retro, and she scribbled in her book, agreeing that we have been avoiding it and need it.  ""Done"" has been quite nebulous. We've generally had a theme for each sprint, and features to be implemented that fit within that theme. Done has meant that there are zero defects for those features by Sprint Demo day (the Monday after the Friday when the sprint ends).  I also have a feeling that my team is the furthest along (relative to the rest of the org) in our practicing of Scrum. This isn't saying much though.          Log in or register to post comments",6021
"11:11 am August 25, 2014                    Hey, congratulations to your achievements - it sounds like several steps into the right direction (from my perspective)!  And I wanted to thank you for this thread. As our organization is just changing into something agile-like, this helped me a lot in understanding and foreseeing some future problems. So: thank you!          Log in or register to post comments",6021
"11:13 am August 25, 2014                     Posted By AnotherDotCom on 25 Aug 2014 11:11 AM  Hey, congratulations to your achievements - it sounds like several steps into the right direction (from my perspective)!    And I wanted to thank you for this thread. As our organization is just changing into something agile-like, this helped me a lot in understanding and foreseeing some future problems. So: thank you!  You're very welcome. This community does a great job at providing shared learning.  As a footnote to my story, my team has a Sprint Retrospective this week that will hopefully allow us to shine a spotlight on areas for improvement.          Log in or register to post comments",6021
"11:18 am August 25, 2014                    I'm looking forward to read your feed-back of your Retrospective !          Log in or register to post comments",6021
Log in to reply,6021
Messages,6027
"10:00 am August 20, 2014                             Hi fellow Scrum.org'ers,   while taking the PSM I examn I stumbled across a question that has actually been bothering me for some time and for which I didn't really find any information in the official scrum guide. The question in question is about whether Scrum Master and Product Owner should be full time jobs.   I have actually had a manager ask me once why I needed so much time for my Scrum Master role. He told me that he had previously held that role and found it no problem to squeeze in at least 75% development work. However unfortunately I didn't really have any good and graphical examples at hand showing what a Scrum Master needs his time for, being not that experienced myself.   On the other hand I have heard colleagues say that ""a good scrum master can work with two teams simultaneously, a very good scrum master can only handle one team at a time"". I have read the discussion about what a Scrum Master can and should do on the forums, and while this helped a lot (especially getting some examples for my next discussion about Scrum Master time) I still wondered if Scrum itself should or does enforce the Scrum Master as a fulltime job.   Personally I could imagine that a team which has mastered self organization does not need a fulltime Scrum Master role since the team itself will self organize a lot of what a Scrum Master would spend time on when starting a new team down the road to Scrum.   However while I could agree on a part time Scrum Master being at least imagineable, I find it very hard to believe that a part time Product Owner could work well. Having some background in Requirements Engineering I find that there is always something to detail, someone to talk to or some new idea to envision as a Product Owner. But again I didn't find any information about whether or not Scrum places any demands on the time a PO should be assigned to a team.   What is your take on those two roles? Should they be fulltime or not? What advantages / disadvantages are there? Did You find an official statment as to whether these roles are fulltime roles or staffed as available?   Looking forward to your answers,   kind regards  Jan",6027
"11:39 am August 20, 2014                    Jan,  Scrum does not specify those roles as being full time, part time, etc.  It is left out on purpose, because like you mentioned, different contexts will require differing amounts of time.  When I coach Scrum Teams and executives, I tell them that this is one of the numerous areas where Scrum can act as a magnifying glass as to whether what you're doing is working or not.  Maybe a 25% SM will work, maybe a 100% SM is the minimum that will work - etc... different for every team/org.  Scrum asks and requires that you come up with what you believe is optimum for that context, then Scrum asks you to retrospect on your decision every Sprint -- remember -- context can change over time, so what was once a 25% SM role may become a 100% role once the context changes, and vice versa.  The manager you mentioned might have been faithfully executing that role effectively, or might not have the first clue about what a SM is supposed to do.  I can't judge that, but you should take that into consideration as well.  Also, maybe the team has experienced more impediments due to new team members not trained in Scrum joining, or experienced team members leaving, etc.  In other words, the context might have changed.  I personally have never seen a SM be truly effective with less than 50% of his/her time allocated as playing the SM for that team.  The PO question varies much more drastically than that, so I can't give much specific advice there.  The only real way to know if what you're doing is working is to do this:  Consult the Scrum Guide for the duties and responsibilities of the role.  Assess whether the role/person has enough time to faithfully and effectively deliver on those duties and responsibilities.  Then, ask the Dev Team to do the same.  Retrospective, inspect, and adapt.  Continually re-adapt as necessary.          Log in or register to post comments",6027
"12:37 pm August 20, 2014                    Hi Jan  Bear in mind too that a Scrum Master has organizational agile coaching as one of their responsibilities. I'll wager that the person who still found time ""to squeeze in 75% development work"" was less than industrious in fulfilling that particular part of their remit.          Log in or register to post comments",6027
"11:03 am August 25, 2014                    Hi Jan,  I'm certainly not as experienced as my pre-writers, but reading your post, I immediately had some situations in mind, which I'd like to share with you:  Situation 1:  A Scrum-experienced organization with only 10 employees, including PO, SM and 6 additional developers. All employees are familiar with agile practices and have been working with each other for years.  --> Here, I imagine, it could be more efficient, if the Scrum Master was appointed to some development tasks, too.  Situation 2:  An organization raises a new requirement for a new product line with a very simple and restrictive scope. Although it's a rather small addition to the previous product, a small Scrum Team with only 3 developers is assigned to implement the new product line.  --> Probably the Development Team doesn't need the PO to renegotiate and explain Product Backlog Items all the time. Moreover, the Product Backlog shall grow and change as more information (e.g. through customer feedback) become available, so the PO shouldn't create exhaustive Product Backlog Items descriptions from the beginning.  Situation 3:  A huge organization decides to use Scrum from now on and wants to create a completely new product. The Development Teams have a size of 9 persons. Management and customer contracts are still aligned with non-agile practices and time-boxes.  --> In this situation the Scrum Master surely needs his or her full time to serve the PO, the Development Team and the organization in facilitating them in their Scrum process improvement. And the PO will need all time he or she has, to create and grow a Product Backlog from which the Development Team can begin and continue the Sprints.  Besides, I've found the following passage in the Scrum Guide, indicating that PO and SM could spend some time as developer, too:  ""The Product Owner and Scrum Master roles are not included in this count [N.B. in the count of the Development Team size] unless they are also executing the work of the Sprint Backlog.""  I hope, this helps you a little to reconcile with the thought of a part-time SM or PO?          Log in or register to post comments",6027
Log in to reply,6027
Messages,6007
"11:29 am August 7, 2014                             Hi there,  preparing for the PSMI I have a question concerning The Scrum Guide.  On Page 5 it says ""The Product Owner is one person, not a committee."" and ""The Product Owner is the sole person responsible for managing the Product Backlog.""  However, the Scrum Open Assessment implies that when multiple teams are working together, they can share a common Product Backlog.  Does this mean that when multiple teams are working together, these teams consist only of a Scrum Master and a Development Team while sharing the Product Owner with the other teams?  Thank you for sharing your points of view!  Best regards,  AnotherDotCom",6007
"01:23 pm August 7, 2014                    No, it just means that each Development Team is in no doubt about who their PO is, and that each team's PO is competent to do the job.  It's certainly possible for teams to share their PO. But there's also nothing to stop multiple products, and their clear owners, from being aggregated into a larger product which also has a clear owner. Each collaborating team could thereby have its own PO.          Log in or register to post comments",6007
"04:08 am August 13, 2014                    Thanks, that was a pellucid argument.    Just out of curiosity: does Scrum Theory say anything about how multiple POs should organize their shared Product Backlog and their collaboration in general?  Oh, never mind my contemporary question, I've already found some information on the topic ""Prioritizing a Backlog with multiple Products in it"" (https://www.scrum.org/Forums/aft/1014). Sorry!          Log in or register to post comments",6007
"02:21 am August 25, 2014                    Each product has only one Product Backlog  Each Product Backlog is managed my only one PO.  => That mean each product has only one PO even it is incharge by multi team.          Log in or register to post comments",6007
"08:44 am August 25, 2014                    Hi Bui,  that is the same trap, I've walked in at first.  Now I think, it's wrong to say it restricted and in general like that.  If the product is so big that the development work is split - why shouldn't it be allowed to split the Product Backlog, too, and get one Product Owner for every part of the Product Backlog? The essentials are that every Product Owner is solely responsible for his Product Backlog items.  So, both options are compatible with Scrum:  - 1 big product, unsplit Product Backlog, 1 Product Owner, 1 Scrum Master, multiple Development Teams  - 1 big product, split Product Backlog, multiple Product Owners, multiple Scrum Masters, multiple Development Teams.          Log in or register to post comments",6007
"09:12 am August 25, 2014                    Each product should have a single Product Backlog that is managed by exactly one Product Owner.  However a product may be composed of multiple other products. The backlogs of component products can thereby be aggregated and held to be team views upon a larger single Product Backlog. How this is managed, and at what level of granularity, is a matter for collaboration between the Product Owners themselves. The important thing is that each Scrum Team has a clear view of its own Product Backlog and is in no doubt about who their Product Owner is.          Log in or register to post comments",6007
Log in to reply,6007
Messages,5952
"06:32 am July 7, 2014                             Hi all,  I was wondering if the Product Backlog Refinement affects the Sprint Backlog Items as well? On page 13, the Scrum guides specifies the following:  ""This is an ongoing process in which the Product Owner and the Development Team collaborate on the details of Product Backlog items. During Product Backlog refinement, items are reviewed and revised. The Scrum Team decides how and when refinement is done.""  Is it referring to the PBI outside the Sprint Backlog only or all the PBIs? If it's referring to the ones in the Sprint Backlog as well, this process might lead to changes and might need to make another Sprint Planning, no?  Thanks,",5952
"12:41 pm July 7, 2014                    No.  The reason for backlog refinement is so the PO can plan for future increments and releases.  When an item from the Product Backlog is committed to a sprint and worked on, it doesn't need to be groomed or refined during backlog grooming.  It is in the sprint and any clarification that is needed by the dev team should be taken up with the PO in real time.          Log in or register to post comments",5952
"04:05 pm July 7, 2014                    Ideally, No - but has to be in case-by-case scenario - as Product Backlog includes Sprint Backlog too. Grooming ideally involves all product backlog items that are not in the current sprint.  Sprint backlog is well planned and refined in the sprint planning. And if there is any need arises where sprint backlog item needs to be refined for example additional information has been found that requires changes that are not envisioned in the sprint planning - those needs to be informed ASAP to the PO and/or the team in the stand-ups.  The PO and the team can re-negotiate the current sprint backlog item with new information with a possible solutions like   a) Accepted by PO and the Team, with possible risk to the current sprint  b) Accepted AS-IS by PO and the team, with additional backlog item added to deal with the new information.   c) Removed from current sprint and bring back some thing else from product backlog - that can change the scope of the current sprint.           Log in or register to post comments",5952
"05:39 pm July 7, 2014                    If either the Product Backlog or Sprint Backlog are insulated from change, waste is likely to be incurred due to delay and subsequent rework. Any developments in one should therefore be assessed for potential impact upon the other.  Change is managed through clear ownership of the Product Backlog (by the Product Owner) and the Sprint Backlog (by the Development Team), and the facilitation and guidance of the Scrum Master. Collaboration regarding undone work on either backlog should occur between them on an ongoing basis.          Log in or register to post comments",5952
"07:43 am August 4, 2014                     Ideally, No - but has to be in case-by-case scenario - as Product Backlog includes Sprint Backlog too.   No, the Product Backlog does not include the Sprint Backlog. They are separate artifacts. In Product Backlog Refinement the Product Backlog is refined, which means the items of the Product Backlog are reviewed, decomposed, enhanced etc. Speaking of Product Backlog Items here does not mean the Sprint Backlog is refined too, only because it contains Product Backlog Items as well. The wording can be misleading, and in my opinion the items should be called Sprint Backlog items as soon as they go from Product Backlog to Sprint Backlog to avoid confusion. Maybe this wording is on purpose to make it clear that we are still talking about the same items.          Log in or register to post comments",5952
"08:55 am August 4, 2014                    > No, the Product Backlog does not include the  > Sprint Backlog. They are separate artifacts.  The Product Backlog should reflect the entirety of undone work, including any undone work that is currently in the Sprint Backlog. PBI's should only leave the Product Backlog when the PO removes them or they have satisfied the Definition of Done.  Sometimes we talk about ""returning"" undone (and re-estimated) work to the Product Backlog from the Sprint Backlog, but this is not strictly correct...if it is undone, the work never actually left it.          Log in or register to post comments",5952
"09:26 am August 4, 2014                    No, I disagree. The Scrum guide states ""Product Backlog items can be updated at any time by the Product Owner or at the Product Owner’s discretion."" and ""Only the Development Team can change its Sprint Backlog during a Sprint.""  This leads to a contradiction if Sprint Backlog is a subset of Product Backlog.          Log in or register to post comments",5952
"09:55 am August 4, 2014                    ""or at the Product Owner's discretion"" is perhaps the key phrase here. Those PBI's that are currently in the Sprint Backlog, and which remain undone, are subject to potential replanning by the Development Team. They wholly own the Sprint Backlog and only they can change it.  The PO must of course provide approval for any changes to the PBI's and should in fact provide the necessary guidance for doing so.          Log in or register to post comments",5952
"05:21 am August 25, 2014                    I've just posted a blog on this subject:  ""Counting Chickens: Undone Work in Scrum""  http://java.dzone.com/articles/counting-chickens-undone-work?mz=123873-…           Log in or register to post comments",5952
Log in to reply,5952
Messages,6031
"01:39 am August 23, 2014                             Hi All ,  I have passed PSM-I by self study with 90% score .  I was able to finish all the 80 questions in 35 minutes.  Below are the items that helped me :  A) working in Scrum project for past 6 months and having enormous interest in scrum implementation in organization .  B) Scrum Org forums are very very helpful  C) Reading and understanding Scrum guide .",6031
Log in to reply,6031
Messages,5976
"03:54 pm July 18, 2014                             I am a new Scrum Master at a fairly small non-profit org.  We began implementing scrum in January and are doing pretty well, but have plenty of room to improve.  We may be close to a big challenge, which brings me here to seek input.  We are in our 9th sprint of a big, intensive web import project and we only have 3 developers.  Management has recently decided that they want our developers to completely re-design the org's website and maintain complete control and ownership of everything.  Somehow in this process, it seems they are planning on hiring a 3rd party, outside of our org, to help since we are a small team.  I don't know how to work with 3rd parties in the scrum process and need help in ways to do that.    Do we expect a rep from the 3rd party company to become a part of our processes and call into the daily scrum and be in all of our discussions?    Do we let them work as they need to, but refrain from including any of their deliverables in our backlog (as sprint ready) until we can verify those items are ready?  I'm open, I just don't know how to work in that scenario since I'm pretty new at this.  Another side to this is time and prioritization.  We will have the same team working on 2 large projects.  I do not know if the Product Owner will be the same or if it will be a different person.  Whatever the case, I'm not sure how to prioritize work (or coach the PO to do so) so that neither project suffers.  Thankfully, there is no time limit that has been announced, but I feel like there should be some form of time goal so it doesn't go on for eternity.  Any thoughts or suggestions on any of this?  Thanks in advance!",5976
"04:28 pm July 18, 2014                    > Do we expect a rep from the 3rd party company to become a  > part of our processes and call into the daily scrum and be in  > all of our discussions?  It sounds as though the 3rd party will be contributing to each increment, and that the Definition of Done will not be satisfied without their efforts. That makes them part of your team. You do not need to run them as a separate team, because you only have 3 developers to begin with.   You should therefore ""expect"" to have the 3rd party developers on site and fully integrated with the team you have. We are not just talking about a representative here; we are talking about all of the people who will be doing the actual work...the people who are responsible for inspecting and adapting their process, and for meeting and improving the Definition of Done. In Scrum one should expect these people to be co-located in order to make communication and collaboration as effective as possible.   > Do we let them work as they need to, but refrain from including any of  > their deliverables in our backlog (as sprint ready) until we can verify those  > items are ready?  That may be a defensive option if the 3rd party workers cannot be co-located and included in the team. In effect, they would have to be run as a separate team contributing to the same increment. They can collaborate in terms of release co-ordination, possibly via a Scrum of Scrums, but that is less effective than having them inducted and co-located in the same team, which is currently very small.  >  We will have the same team working on 2 large projects <...> Thankfully,  > there is no time limit that has been announced  Consider running sprints of no longer than 2 weeks each and interleaving them, so that the team works on each project in alternate iterations. That way, you can still deliver a potentially releasable increment every month for both projects. You can operate 2 different Product Backlogs and it doesn't matter if the PO is the same. All you need is their agreement and organizational buy-in for this operating model. If you have 2 separate PO's, I'd strongly advise getting protocols in place for how fixes or emergency unplanned work will be handled out-of-sprint for each project, as the unforeseen will always arise. This doesn't have to be anything formal; it could just mean deferring the prioritization call to a more senior stakeholder, but whatever it is you should take care to set expectations clearly.           Log in or register to post comments",5976
Log in to reply,5976
Messages,5971
"04:19 pm July 16, 2014                             Hello  After a normal poker planning evaluation of several PBIs that are part of a specific feature that our team has been asked to develop for a client, we were able to translate the numbers and give a cost estimate for the feature to that client and he has agreed to that evaluation.  However, we are also asked to provide the real costs of implementing the feature, because the organization where I work usually charges the real costs to the client, which at some point makes sense. In Scrum, since we're not tracking the ""real"" time spent on each PBI, how do you come up with the right numbers?  Of course, if we were only working on these PBIs in a sprint, it could make things somewhat easier to calculate, but we are not. We have a bunch of not necessarily related PBIs that are also part of the sprint.  I would much prefer sticking with the planned evaluation if the PBIs for that feature are all DONE at the end of the sprint, but I also understand the ""honest"" way of thinking of my organization when billing the true costs to the client.  I'd appreciate any insight!  Thanks",5971
"04:45 pm July 16, 2014                    Scrum provides for an iterative and incremental means of delivery. That implies funding should be incremental, and costs should be per Sprint. It is up to the client (or more precisely, the Product Owner) to determine if the Return on Investment is adequate and further Sprints at that cost are justified. Essentially clients should pay for the incremental reduction of risk, the demonstration of success being the ongoing delivery of value, increment by increment, for a known price per increment.  In Scrum you should not attempt to map costs to story points. As Ken Schwaber (the co-founder of Scrum) has said, the only purpose of estimation in Scrum is for a team to be able to ""get its arms around"" how much work it thinks it can do in a given Sprint.  If this is too revolutionary a funding model for your client, you could try making a best-guess estimate for the final cost. If you know the price to charge for each Sprint, you can then work out how many Sprints can be funded. Although the final costs might be fixed, the scope would be variable and the client (through the Product Owner) would determine the delivery goals on a sprint-by-sprint basis. This is not as agile as true incremental funding, but it is often the most practical approach.           Log in or register to post comments",5971
"04:53 pm July 16, 2014                    I agree with Ian if your client is buying whole sprints worth of work, etc, but it sounded like from your context that this was just a lone feature kind of thing.  If so...  I would say that his has nothing to do with Scrum.  If you want to bill your client for time and materials, then have each person who participates in it log time to it, including all meetings where the entire team is present and the feature is discussed.  I think that's an incredibly inefficient and ineffective way to do it, though, and should have absolutely nothing to do with Scrum.  If it was me, after the Sprint, I'd ask my team -- ""You guys estimated this at an 8 -- did it feel like an 8 when you did it?  If not, what did it feel like?"" -- then I'd do   (estimated *actual* cost in story points)/ (story points completed in the sprint) * cost of team for a sprint   and charge that to the client with the appropriate markup.  Now, if you do *all* your work that way, then I would make sure I was MUCH more careful to separate this exercise from Scrum and disclaimer disclaimer disclaimer it as it has nothing to do with Scrum-- but I would still probably use the same approach.           Log in or register to post comments",5971
"05:14 pm July 16, 2014                    Yes, that calculation would be a good way to pro-rata the cost of a feature per sprint.          Log in or register to post comments",5971
"06:48 pm July 16, 2014                    Ok, that's a good suggestion I guess.  I know all about this not being Scrum at all, but at the same time, we've got reality to live with. The organization I currently work for is still in its infancy in regards to Scrum (and Agile in a whole) and my team and I (which I am coaching) are leagues beyond its traditional thinking and approach.  We are nearing the end of project development and we will soon fall into maintenance and evolution of the application, which will then be handled by another team, hopefuly with some Scrumban approach where time spent on each request is often better registered...  The project in itself is a great success and the first to be completed using Scrum and we are proud of that fact. Management quickly understood the benefits and is very happy with the results. However, I now feel like the management responsible for maintenance and evolution is still ""old-fashion"" and will need convincing too. Their budget being spread across several applications, they need to more closely follow costs of the changes and bill the clients accordingly. I believe a good Scumban approach will better server them now.   So I guess we're just in-between phases...  Thanks for the suggestion!          Log in or register to post comments",5971
"09:23 pm July 17, 2014                    For the record, I do not believe in Kanban or Scrumban for software development.  I would probably recommend Scrum with 1 week sprints, one backlog with all supported products on it, and emergencies handled as follows:  http://scrumcrazy.com/bugs  Also, for the record, I don't believe in handing off software to maintenance teams.  I believe in software teams supporting their own software and ""eating their own dog food"" -- because it encourages good habits long term which are better for the company generally speaking.  OTOH, I don't look down on your approach either, so please don't take this as an insult -- just stating my opinions.          Log in or register to post comments",5971
"11:47 am July 18, 2014                    Charles,  Funny you should mention that.  I went to a seminar where Mary Poppendieck was presenting a session and that's one story she told.  Cant remember if it was HP, the team that delivered the software was responsible for 30 days post launch.  Prior to this it was handed straight off to maintenance, who had hell every time from customers.  It wasn't long before the software became far superior in quality after the teams had to support it.  360 experience turned things round dramatically and the rest they say is history.  Michael          Log in or register to post comments",5971
Log in to reply,5971
Messages,5968
"12:47 pm July 15, 2014                             HI.  I went to a job enterview and this guy tell me that they use contracts with defined time to end all projects and for that reason Scrum does not work.  Is this true? Scrum is not for all projects? can't be adjusted?  Thanks in advance",5968
"01:03 pm July 15, 2014                    > I went to a job enterview and this guy tell me that they use contracts with defined  > time to end all projects and for that reason Scrum does not work.   Nonsense. In Scrum, or indeed any agile approach, scope should be flexible. Because of that it's quite possible for time and/or cost to be fixed. It's more likely that their contracts do not actually provide for scope variation except by amendment.          Log in or register to post comments",5968
"03:37 am July 16, 2014                    On the opposite, it is easier to stick to defined time with agile framework like Scrum than with waterfall methods, because of the regular delivery of ""done"" increment and the high level of transparency.          Log in or register to post comments",5968
"07:34 pm July 17, 2014                    Thanks!!!... to be honest, I did not know what to say...          Log in or register to post comments",5968
"08:39 pm July 17, 2014                    Even though we think that fixing ALL of scope/schedule/cost is a complete trap, Agile projects are 3X more likely to meet schedule/scope/cost than waterfall/traditional methods.  See here:  http://www.mountaingoatsoftware.com/blog/agile-succeeds-three-times-mor…  If they want a way to really embrace Agile and still do contracting, have them see here:  http://www.agilecontracts.org/  http://www.amazon.com/Agile-Contracts-Creating-Managing-Successful/dp/1…           Log in or register to post comments",5968
Log in to reply,5968
Messages,5973
"07:09 pm July 16, 2014                             Hi,  I have been reading The Scrum guide on this website and can't find any reference to project managers. Is it the case that you don't need or should not have a project manager in Scrum?",5973
"09:29 am July 17, 2014                    Yes, Per scrum guide there is no need of project manager. Normally this work is divided between Scrum Master and Product Owner. Since the scrum team is self organizing and disciplinary and committed to sprint goal. They don't need project manager.          Log in or register to post comments",5973
"01:38 pm July 17, 2014                    Agree. However in organizations making the switch from tradition waterfall SDLC to SCRUM, its not uncommon to have a project/project manager on top of Scrum master and product owner. In this case the role of project manager changes to become a liaison between customer/Application engineering and marketing as well.          Log in or register to post comments",5973
"01:58 pm July 17, 2014                    Also to add.   1. Usually since Scrum Master are management positions, a PM from a waterfall structure may learn and align to the SM role.  2. Defining the product roadmap requires functional and technical roadmap alignment. A PM or Senior PM may help facilitate the roadmap with various stakeholders.  3. Scrum master may need to coordinate with other SMs within and outside their department. At that time, we may want to position a PM or Senior PM to help out these interactions within the Organization to help with dependency, conflict resolutions. This can also be a Scrum of Scrum role.  4. Organizations moving into Agile from Waterfall, will require handholding where Scrum coaches can work closely with existing management staff including Project Managers to align them in various positions within the new framework.  Thanks, Venkat.           Log in or register to post comments",5973
"02:26 pm July 17, 2014                    A successful agile transformation does not involve alignment, but deep and pervasive change. If that isn't understood, an organization is more likely to try and ""align"" the Scrum framework with their existing roles and practices. The result in such cases is usually very little change at all.          Log in or register to post comments",5973
"02:33 pm July 17, 2014                    IMO, in a truly Agile organization, there is usually no real role for a traditional PM at the team level, and there certainly is no PM role in Scrum.   Sometimes there is a role for a PM above the team level or elsewhere outside of a software team. Sometimes an org ascribes other duties to a PM that have little to do with PM and little to do with Agile per se.   With respect to Venkat's replies above...in an Agile context  I agree with 1, but that is easier said than done... but certainly possible  I believe #2 is a PO duty, not a PM duty.  I believe #3 is an SM duty, in combination with a Dev Team and a PO duty.  Agree with #4.  With regards to an earlier comment:  > its not uncommon to have a project/project manager on top of Scrum master and product owner. In this case the role of project manager changes to become a liaison between customer/Application engineering and marketing as well.  I believe that the above ^^^ is a PO duty.  At a higher level, there is no such thing as a ""project,"" either... unless you want to consider each Sprint as a separate project with the length of the sprint only.  At that low a level, I'm also not sure what value there is in terms of thinking of a Sprint as a project -- except to help describe to people who have a waterfall/pmi/traditional mindset.  You certainly don't need a PM to manage a one sprint project.          Log in or register to post comments",5973
Log in to reply,5973
Messages,5969
"11:39 am July 16, 2014                             A 10 question survey on agile transformation is being run on agilepatterns.org. Anyone with experience of organizations trying to adopt agile practices is invited to participate. The survey will end on 31 December and a synopsis of findings will be published the following month.  https://sites.google.com/site/agilepatterns/home/2014-agilepatterns-org…",5969
"03:33 pm July 16, 2014                    Thanks Ian, just completed it now.  Michael          Log in or register to post comments",5969
Log in to reply,5969
Messages,5573
"03:21 pm September 23, 2013                             Hello,  I am preparing for Scrum PSM 1 and need some advice regrading below questions...  1) Latest Scrum guide has removed grooming keyword and introduced refinement keyword. If there is a question on grooming in exam with options say, a) grooming b) none of these. Shall i still be selecting ""grooming"" as right answer OR follow Scrum guide and opt for ""none of these"".  2) Every Scrum team must have a dedicated product owner and Scrum Master OR they can also be PO/SM for other teams?  3) What if dev team not having all required tools and infra to completely finish any PB's items? Should they redefine ""Done"" and do the same work for PB items And also improve its skills, tools etc over time and adjust DOD accordingly? Or, some other approach need to be followed here.  4) Can a development team deliver a single document at the end of Sprint, if PO asked for it?   5) Can a development team deliver a working software with minor known bugs in it?   6) Development teams are working in different physical locations and having logistic issues before the Daily Scrum. Should the SM tell team how to do it OR let the DT self-manage and determine what to do?  7) What a sprint backlog can include - User Stories, Tasks, use cases, tests OR any of these being a decomposition of selected PB items.? As per Scrum guide 2010 - Sprint backlog is a list of tasks and user stories, use cases and tests are part of PB.  Thankyou  LC",5573
"09:04 pm September 23, 2013                    Hello Lalit,   Allow me to share some insights, without necessarily giving away some answers. I hope this doesn't frustrate you or anyone else reading, but rather raise some questions to try and reinforce some concepts.  (2) Think about whether the question is asking whether there can be multiple Product Owners or Scrum Masters' for the same team, or something else?   (3) Think about whether this realization comes during a Sprint, or raised later, say at a Retrospective? Should the team do the best it can? Is it acceptable to have the DoD evolve? Is it the tools, or the skill-set in question?  (4) Should the Dev Team take on the risk and/or burden of challenging the PO in what is to be delivered?  (5) Appears to go against the spirit of a potentially shippable / releasable increment.  (6) Review the section ""Scrum Master Service to the Development Team"" -- also, what is ""self-manage"" implying?  (7) In the Feb. 2010 Guide, this is listed under the ""Tip"" section on the right hand side. i.e. Its not mandatory to use these alone....  Hope some of this helps.          Log in or register to post comments",5573
"05:11 am September 24, 2013                    1) Latest Scrum guide has removed grooming keyword and introduced refinement keyword. If there is a question on grooming in exam with options say, a) grooming b) none of these. Shall i still be selecting ""grooming"" as right answer OR follow Scrum guide and opt for ""none of these"".   Answer: I'd be inclined to still select ""grooming"". It's unlikely the questions in the test engine will have been falsified on the basis of this change in terminology.  2) Every Scrum team must have a dedicated product owner and Scrum Master OR they can also be PO/SM for other teams?   Answer: I think we need to be careful with the wording here. They should be dedicated in the sense that they can fulfil their roles without compromise. That isn't necessarily the same thing as being 100% allocated to a team.   3) What if dev team not having all required tools and infra to completely finish any PB's items? Should they redefine ""Done"" and do the same work for PB items And also improve its skills, tools etc over time and adjust DOD accordingly? Or, some other approach need to be followed here.   Answer: The Definition of Done should always express what is realistically achievable. If a Development Team do not own their own process, and cannot take a backlog item through to completion by themselves, then their DoD should reflect that. They should then improve their skills, tools etc. as you suggest and bring their DoD closer to release-level quality.  4) Can a development team deliver a single document at the end of Sprint, if PO asked for it?   Answer: Yes. It can be negotiated into the Sprint during Sprint Planning. It's up to the PO to determine its priority and business value.  5) Can a development team deliver a working software with minor known bugs in it?   Answer: Yes. In fact they can deliver working software with major bugs in it, not just minor ones. What matters is that the defects are understood by the PO so he or she can make an informed release decision.  6) Development teams are working in different physical locations and having logistic issues before the Daily Scrum. Should the SM tell team how to do it OR let the DT self-manage and determine what to do?   Answer: The SM should encourage the Development Team to self-manage, and be prepared to assist and coach them, in order to ensure that the Daily Scrum happens and that the rules are followed.  7) What a sprint backlog can include - User Stories, Tasks, use cases, tests OR any of these being a decomposition of selected PB items.? As per Scrum guide 2010 - Sprint backlog is a list of tasks and user stories, use cases and tests are part of PB.   Answer: A Sprint Backlog is the Development Team's plan for delivering selected Product Backlog Items in order to meet a Sprint Goal. As such, it should contain whatever the team think is needed for the job. The contents might be tasks, the stories themselves, spike activities, a reminder to bring in doughnuts and coffee, or any combination of such things.          Log in or register to post comments",5573
"08:53 pm September 25, 2013                    Thanks guys. I cleared PSM 1 in first attempt with 94% score.          Log in or register to post comments",5573
"12:07 pm September 30, 2013                    Congrats Lalit!!!!   Can you pl let me know what all things i need to study as preparation for the PSM-1 exam.. Things I have already done :   1. Read the scrum guide   2. Read the book - Agile Project Management with Scrum  3. Practiced the Open assessment tests more than once.  Please let me know what all stuff i need to from my end to successfully pass the exam in a single try, considering i have not managed any scrum project or worked in the same earlier...          Log in or register to post comments",5573
"02:03 pm October 27, 2013                    Regarding the 4th question:  Can a development team deliver a single document at the end of Sprint, if PO asked for it?   I think it's not possible, because the Development Team should create at least some piece of functionality by the end of every Sprint in conformance to DoD. I don't think it's possible with only single document.          Log in or register to post comments",5573
"12:43 am July 15, 2014                    Hi,  I have attempted  PSM1 three (3) times so far. got 68%, 77%, 77% so far. very dis-heartened and dis appointed. I read scrum guide, took several Open assesments (always got 100%), ...................anyone please advise what am I missing and how can I bridge the gap ?  Score breakown on 3rd attempt:-  ------------------------------  Scrum Framework - 90%  Theory & Principles - 75 %  Cross-Functional, Self Organizing - 58%  Coaching & Facilitation - 57%  please let me know what books or materials should I read and whatever it takes me to complete the Test with Success, please advice.......  Thank You  Chaitu          Log in or register to post comments",5573
"11:18 am July 15, 2014                     Sudha,  Have you asked for the feedback from scrum.org on each attempt you have made?  If you have the password mails you can request feedback on each one of the three so far.  This may turn up a common theme in areas within scrum inside the topic.  You wont be given the exact questions you failed on, what you will get is areas that you are needing study in.  This would be my foundation if your looking to adapt and inspect what you have achieved so far.  Its an achievement, not a failure and you are progressing with your studies, thats a good thing.  Disheartened moving from 66% to a 77% means you are almost there with it, thats a real positive.  Take the positive and push it further and am sure you will get to your goal.  Michael          Log in or register to post comments",5573
"05:54 am July 16, 2014                     Posted By SUDHA CHAITANYA on 15 Jul 2014 12:43 AM  Hi,    I have attempted  PSM1 three (3) times so far. got 68%, 77%, 77% so far. very dis-heartened and dis appointed. I read scrum guide, took several Open assesments (always got 100%), ...................anyone please advise what am I missing and how can I bridge the gap ?    Score breakown on 3rd attempt:-    ------------------------------    Scrum Framework - 90%    Theory & Principles - 75 %    Cross-Functional, Self Organizing - 58%    Coaching & Facilitation - 57%    please let me know what books or materials should I read and whatever it takes me to complete the Test with Success, please advice.......    Thank You    Chaitu  Do you work in an Agile environment ? Are you trying to relate the questions to what you do rather than what you should do ?  Have you read the discussions in the forum ?  Self Organizing teams was something which I had to learn on my PSM II for both attempts and the feedback I received was  ""A Scrum Master's role is that of a coach and a teacher. Their primary responsibility is to teach Scrum's theory, practices and rules. If the question asks how would you respond as a Scrum Master, don’t only focus on what you would do to solve the problem, but instead include in your answer that your primary function is guiding the team to solve their own problems by using the three pillars of empiricism. It’s too easy to fall back on our natural inclination to use our wisdom to solve other’s problems, but that does not encourage self-organization. A Scrum Master is not serving a team when they do something that the team could do themselves. This does not encourage self-organization.""  and  ""The only place where you lost any fairly sizable number of points was in your description of what parts of Scrum help with self organization. Scrum, being a framework, doesn't mandate a number of the practices you included in your answer.""  I found it easier (having not a lot of scrum experience) trying to relate Scrum to what we've done in the past... eg our projects that we used to laugh about and design on the back of our Cigarette boxes.  Initial goal for project, broken down into what were main objectives and parts, decompose one object and do that.  Every morning look at what we had done, and think of what we were doing next (plan for the day approach), see any problems and come up with plan of what we were going to do.  At the end of that section, when it was complete, integrate that and pick a new piece of work and start again.  The downside of our technique, used to be if we had a complicated project, we need a bigger cigarette box, so we used to draw it on the whiteboard.   But being serious, are you concentrating on the scrum exam too much and being too formal, rather than thinking about what you have to do to get a product out and then reading the scrum guide and tying it in to what you need to get done.  It's like at work at the minute, we have an approach of developers doing what they want... they code and to hell with everything else.  They took agile and bent it into something else, anything which doesn't involve code is a no no to them.  They each write their own code and then dump it on QA team, so when it falls over, it's because it wasn't tested (not their problem).  Quality is none existent and the QA team is snowed under.  Back to basics, when does testing begin and who is responsible for quality.  They do a token standup every morning, when the developers have no idea of what the goal of the sprint is or what each other are working on.  They have managed to silo themselves not only into a team of only developers, but ones which don't understand each others work.  The standup to them is not checking the plan and adjusting as necessary, its an opportunity to answer 3 questions with no meaning to them.  Now given that scenario, read the guide, apply the framework and you can see straight away how it would work.  Add a good dose of XP, pair programming, test driven development, story boarding etc,  From there, the exam will probably make far more sense           Log in or register to post comments",5573
"11:36 am July 16, 2014                    Read Scrum Pocket Guide by Gunter Verheyen. Anyway the best preparation is attending one of PSM classes. Find the one next to you.          Log in or register to post comments",5573
Log in to reply,5573
Messages,5967
"06:16 am July 15, 2014                              Interesting question.  Who would be the most suitable choice for product owner?  Dev team member  Scrum master  Project Manager  Manager  Business Specialist  Really I have no idea how you could say either one is correct 100% of the time, if I'm totally honest.  I doubt that the books would give a spot on answer either, there is so much variance with this question.  You could argue neither if they dont have the required skill and experience, or all of them if they tick the boxes.  Any advice from a PST on the thinking around this question?",5967
"08:19 am July 15, 2014                    Well, I usually ask - who is going to be killed if the product fails? OK, this is the one who's your Product Owner.  I suggest to read a wonderful post about the role of the Product Owner written by Gunther Verheyen:  http://guntherverheyen.com/2014/04/30/product-ownership-in-scrum/          Log in or register to post comments",5967
"08:19 am July 15, 2014                    Think of the PO role as a mini-CEO. So, what's the best fit for that?          Log in or register to post comments",5967
"08:42 am July 15, 2014                    In my context, it is not easy.  Very often, the one who is going to be kill is flying from meeting to meeting, which make him a bad choice for PO.          Log in or register to post comments",5967
"08:53 am July 15, 2014                    Would the the BA not being able to take serious decisions and almost no access to business be a good one?          Log in or register to post comments",5967
"08:59 am July 15, 2014                    Yes, actually, our PO are usually people from the BAs, but in a highly pyramidal structure as mine, they won't be killed in case of failure.          Log in or register to post comments",5967
"09:15 am July 15, 2014                    Althoguh it's possible to work in Scrum with BA being a PO (or proxy PO) this is a very limiting position.  Would the BA be able to invite important stakeholders and end users to the Sprint Review?          Log in or register to post comments",5967
"09:23 am July 15, 2014                     Thanks Guys,  Thats what i like about questions like this, the debate on what is the actual answer.  The wording is a bit off, ""suitable"" or ""most appropriate"" I cant remember the exact wording.  Any of them could be suitable or even most appropriate, I dont think entreprenuer was listed as a   chioce as in Gunters Blog sadly.  Remember there are good CEO's and lousy CEO's, even mini CEO's  that applies to any role,   PM, Manager, Dev team, Bus Spec etc.  Manager would be mini CEO, as the PM is a whipping boy for everything (although no PM in scrum).  Bus analyst could be graduate with no experience, SM and Dev team may have experience.  You could overcook this time and time again as a question.  If we say the PO is responsible for the success and failure that is great, as is a PM for the project.  PM and manager attend lots of meetings, but what makes them better or more suited than anyone else?  Why would a bad PM or bad manager make a better PO than a good SM or Dev team or Bus Analyst?  What we cant say is that either one of them is a better choice, more suited or most approprate  just based on a current role. There is much more to it than that.  Sadly the question doesnt go that far so its one persons perception vs what someone thinks.  Michael          Log in or register to post comments",5967
"10:44 am July 15, 2014                    @Illya : yes, for most product, the BA manage to invite some important stakeholders, but it is very difficult because they have very little time to share with the scrum teams.  So we have a hard choice between (more or less) powerfull PO and available PO :-(          Log in or register to post comments",5967
"10:59 am July 15, 2014                    Is there a way to combine best of 2 choices? (merge)          Log in or register to post comments",5967
"11:12 am July 15, 2014                     IIlya / Oliver  Sadly no, you can only select one from the list.  Question is as debated, which one is the 100% answer and how do we get to that conclusion from what  we have discussed in this topic?  What I think differs from what you both think, tricky question eh.  Has no one nailed this down anywhere that categorically says ""The most suitable choice for a PO , when choosing one is xxxxxxxx, the reasons are as follows if we look at the other realistic options......""  Regards  Michael  Michael          Log in or register to post comments",5967
"12:16 pm July 15, 2014                    OK, let me nail it down:  1. There isn't the best anwer in a complex world (Cynefin framework) and also I don't know your context and can only ask questions, trying to do my best so that you could answer that question on your own.  2. This is not Scrum that has to fit your organizational structure and make the best fit for the PO, on the contrary it's your company which has to embrace the importance of the PO role and thus change its approach in PO selection. SM can be a brave change agent to challenge this status quo.  3. Realistic options - BA is too far from business and is not powerful PO. On the other hand, having a PO who isn't able to work with the Team on the regular basis is a bad choice. Remember one of the Agile Manifesto principles - developers and business people should work together on a daily basis.   Now think what you can do about that.          Log in or register to post comments",5967
"12:54 pm July 15, 2014                    > Any advice from a PST on the thinking around this question?  I'm not a PST but if I had to choose exactly one answer of those available, I'd choose Scrum Master. I'd make this choice on the basis that, if an SM was appointed PO, he or she may be placed in an improved position to coach certain stakeholders about product ownership.  > 2. This is not Scrum that has to fit your organizational structure and make the best fit for the  > PO, on the contrary it's your company which has to embrace the importance of the PO role  > and thus change its approach in PO selection. SM can be a brave change agent to challenge  > this status quo.   Illya is right. That's the behavior a Scrum Master might encourage and coach as an organizational change agent.          Log in or register to post comments",5967
"01:31 pm July 15, 2014                    IIlya / Oliver /Ian  Thanks for the discussion,   This is an actual question, I just couldn't see the thinking with it.  I just wondered if anyone knew the actual thinking around it?  SM would make sense coupled with the fact if it was the team that selected the SM.  May be a member of the dev team as well.  The SM would have the respect of the team and as you rightly say, understand the framework .  Having to ""provide services"" technically would tick all the boxes for a good PO with coaching.  Clearly either of them could be good, better choice. most suitable based on experience.  Best guess could put it at SM from the ones in the list, but its a odd question for sure.  As to if that's the actual right answer, that's anyone's guess.           Log in or register to post comments",5967
"01:43 pm July 15, 2014                    > Best guess could put it at SM from the ones in the list, but its a odd question for sure.   > As to if that's the actual right answer, that's anyone's guess.  Correct. The person formulating the question could have excluded an SM/PO combination because of the potential conflict of interest, which would be a reasonable position to hold. It is unlikely they agree with my own reasoning for making that choice. It does seem to be an odd question.          Log in or register to post comments",5967
"03:40 pm July 15, 2014                    I found this in CSPO along the same lines, although the question is from scrum.org  We can at least adapt some lines of thinking from it.  Who should Be a Product Owner  Needs to be empowered to make decisions about the product.  At a suitable level of seniority in the organization so that stakeholders can be managed effectively.  Should be familiar with the application area  Should understand the consequences of business and technical decisions  Can be a line manager  When he or she respects the self-management of the team  When he or she does not have objectives conflicting with the project goal  Based on that thinking (also scrum), the SM could be a choice, but so could PM and manager.  As PM isn't a role in scrum and SM is a management position, plus what we discussed above.  With only one possible clash Ian pointed out SM/PO, ""looks to be"" the most suitable answer.  What a great question, its a real stinker to answer and a good question for PST's to add to their   thinking for candidates.  Michael          Log in or register to post comments",5967
"03:42 pm July 15, 2014                    Re: the original question/post above...  If you were to read this article:  http://guntherverheyen.com/2014/04/30/product-ownership-in-scrum/  What would be your answer?  Remember that the question didn't say ""100% of the time"" -- it says ""best"".. put your Scrum/Gunther hat on.          Log in or register to post comments",5967
"03:48 pm July 15, 2014                    Another good article on point... maybe even better than the one I posted above:  http://guntherverheyen.com/2013/12/19/illustrations-of-scrumand/          Log in or register to post comments",5967
"04:08 pm July 15, 2014                    Charles,  Thanks for the links but its really still unclear from the list.  Business person with full (functional and budgetary)   responsibility over the product and knowledge over all product management aspects   (marketing, competition, users, legal, finance).   This puts the SM out, Dev team out, Business analyst out.  PM will (or should) understand   scope  time  cost  communication  risk  quality  May not understand SCRUM and as a thought may not be able to deal with self organising teams.  LM should understand and usually has gone the PM route first.  scope  time  cost  communication  risk  quality  finance  competition  legal  Marketing  May not also understand scrum, but should have the ability to understand people.  Mini Ceo really doesn't answer the question, unless it was in the list (TBH cant remember).  There are so many variables in it, you can have a bad mini CEO so that's not concrete enough to say  this is the best choice based on a job role alone, or that's my thoughts on it.  Would you employ a mini CEO just based on the fact that he or she has been a mini CEO.  Wouldn't be enough for me, I would need a little more than that for selection.  To support the debate, lets assume Jenaro Garcia Martin came for a job as PO, he would be the best fit?  http://www.thedrum.com/news/2014/07/14/ex-gowex-ceo-could-face-over-ten…  Michael           Log in or register to post comments",5967
"04:29 pm July 15, 2014                    Let me start from another angle... where did this question come from?           Log in or register to post comments",5967
"04:44 pm July 15, 2014                    Hi Charles,  PSPO I exam, that is why I appreciate the thoughts of PST on it.  I was stumped when i saw it as a question, as its so variable on many fronts.  What is the correct thought for the answer, SM looks to be blown out of the water with what  Gunther has written on it, and looks to be the Manager, if we use all those factors.  I have had some great Managers over the years, i have also had some bad ones.  Mini Ceo isn't a term i have heard used, that's like saying mini SM or mini dev team member.  What do you believe is the best/suitable choice and why?  (Excluding Jenaro who ticks all the boxes but still doesn't look like a favorite) :-)  Michael          Log in or register to post comments",5967
"04:47 pm July 15, 2014                    Shouldn't the 'most suitable choice' be based upon the future fulfillment of the role, over where to look for someone?  Think of the Product Owner as a 'value optimizer'. Wouldn't the 'most suitable' person be the best placed person to decide gather, express and order ideas on the Product Backlog?  This question has little learning in it.          Log in or register to post comments",5967
"05:00 pm July 15, 2014                    Cool. If this is from our assessment, then we will revise this ;-)          Log in or register to post comments",5967
"05:01 pm July 15, 2014                    Hi Gunther,  You are correct in that its based on the future fulfillment of the role.  The SM would be an ideal choice as he would tick most of the boxes, but that's a guess.  From your write up Mini Ceo would put the SM out, so really have no idea, puts me at Manager.  I agree, the question is a stinker as its so variable, any of them may have the experience to be a good PO.  I will contact Admin and see if we can get clarity on the question in the pool.  Thanks for all the help (Everyone in the thread) that's contributed to try to resolve it.  Michael           Log in or register to post comments",5967
Log in to reply,5967
Messages,5962
"01:49 pm July 11, 2014                             From http://www.dzone.com/articles/sprint-planning-practice  In sprint planning, It is said  that in second phase where dev team really tasks down the stories and realize that re-arranging the priority can make to sprint goal in the defined time. Is it really ideal. Can they change the priority  set by PO at first place?   It might really make a difference and they can meet the goal but it this allowed or a best practice?",5962
"02:36 pm July 11, 2014                    I assume the Dev. Team should share this finding with the PO who makes the final decision.          Log in or register to post comments",5962
"02:47 pm July 11, 2014                    I wrote that article. I was referring to the Development Team's prioritization of Sprint Backlog items to meet the Sprint Goal.  The Development Team wholly own the Sprint Backlog and so they, and not the Product Owner, determine any prioritization.  The PO owns and prioritizes the Product Backlog. Once Product Backlog Items have been inducted into a Sprint Backlog, the PO can expect the corresponding work to be delivered in the form of a potentially releasable increment that meets the Sprint Goal. How that work is done during the Sprint is up to the Development Team.          Log in or register to post comments",5962
"03:02 pm July 11, 2014                    Ian, you're right talking about the time after planning, the DT owns the SB. However what you write in the article regarding the 2nd part of the Sprint Planning is confusing me: The team will prioritize the Sprint Backlog so that the risk of not meeting the Sprint Goal is minimal. This should take into account any external dependencies that must be resolved before the work can be completed.  Does that mean that DT changes the order of the selected PBIs? I don't agree with that. I consider that should have been done before during the PBR session(s). If DT doesn't reach the Goal and doesn't complete all selected PBIs - the PO would be very surprosied to know that , say, top 3 Stories were not completed as the DT changed the order.  Did I understand it correctly?          Log in or register to post comments",5962
"03:02 pm July 11, 2014                    By the way, in the article I also described some of the compromises that are made in order to run a Scrumban operation (such as being flexible about a Sprint Goal). That's not Scrum, and so I don't recommend using that article for examination purposes. Use the Scrum Guide instead.          Log in or register to post comments",5962
"03:18 pm July 11, 2014                    > Does that mean that DT changes the order of the selected PBIs?   That's a very good question. When the PBI's are inducted into the Sprint Backlog, we might presume they are taken in natural order...i.e. as they were originally ordered by the PO in the Product Backlog.  However, there is nothing in the Scrum Guide which says that this order *must* be preserved. Moreover, the Guide says that the Development Team own the Sprint Backlog, and so we can infer that they may in fact prioritize it as they see fit.  In other words - strictly speaking - the PO has the right to expect the Sprint Goal to be met, and for the team to do their best to achieve that goal. However the PO has no right to expect certain PBI's in the Sprint Backlog to be actioned in preference to others. That would be the Dev Team's call.  In practice though, I concur that it is reasonable to action the PBI's in natural order. Let's also remember that there is nothing to stop a Scrum Team from *agreeing* amongst themselves to do exactly that, perhaps so as to deliver an increment in multiple small batches.          Log in or register to post comments",5962
"03:49 pm July 11, 2014                    NB, let's also bear in mind that PBI's have a value as well as an order. So if the PO values a certain item more or less highly than others, there is an attribute for capturing that information, and which is quite independent of the item's position.          Log in or register to post comments",5962
"04:56 pm July 14, 2014                    So to make sure I understand clearly, Ian, Is it okay for DT to change the priority of the PBI""S as long as they meet the goal. So 3rd or 4th PBI in order might be heavy on dev and so on testing. In this case Can dev team not pick that up early in the sprint and in parallel work on others in order.   Just with personal exp, in last sprint we just could not make a PBI that was lowest priority in sprint because of huge work associated with it.  Could we have changed the order among ourselves keeping PO aware and could have achieved sprint goal in time with all stories?  Appreciate your feedback          Log in or register to post comments",5962
"05:20 pm July 14, 2014                    > Is it okay for DT to change the priority of the PBI""S as long as they meet the goal  Yes. In fact it is important for a Development Team to constantly update the Sprint Backlog so that the Sprint Goal can be met.  > Could we have changed the order among ourselves keeping PO aware  That would be a good team behavior, yes. Bear in mind that the PO and the team should collaborate throughout the Sprint to make sure that the Sprint Goal is achieved. The PO can, and should, clarify the scope of the Product as it relates to the current Goal when necessary.          Log in or register to post comments",5962
"03:10 am July 15, 2014                    I have the same question though. Imagine the team doesn't complete the stories in time. And say you've put the top story to the bottom and this is the one that hasn't been finished. How would you explain to Product Owner that the top ordered PBI was not finished? Do you think she'd be happy with that?          Log in or register to post comments",5962
"09:40 am July 15, 2014                    I dont think, This drastic change of moving top priority to last by DT can happen or should happen in close to ideal world. It still remains top priority and DT needs to make sure that they start working on that since beginning. I was talking of the priority 3/4 to moving it early. Some less priority may be lengthy.  I may be wrong but PO and wont agree to such drastic change even if DT proposed, I believe.          Log in or register to post comments",5962
"12:29 pm July 15, 2014                    > I have the same question though. Imagine the team doesn't complete  > the stories in time. And say you've put the top story to the bottom  > and this is the one that hasn't been finished. How would you explain  > to Product Owner that the top ordered PBI was not finished? Do you  > think she'd be happy with that?  The only reason for the Development Team to change the Sprint Backlog is to make the Sprint Goal more achievable. The Sprint Backlog, including the PBI's that were negotiated into it, is a plan and not a specification. So as long as the Goal is met then yes, I'd expect the Product Owner to be happy with any decision the team makes regarding the Sprint Backlog it ultimately owns.   Let's illustrate this using an extreme example. Suppose a Scrum Team agrees its Sprint Goal during Planning, but the PO disappears until the following Review. That wouldn't be a great implementation of Scrum but it wouldn't actually break the rules either. So at the end of the Sprint, the Development Team could say to the PO ""Guess what? We threw away all of the PBI's that were in the Sprint Backlog, because when we got down to it we found they didn't really help in achieving the Sprint Goal. We replanned the Sprint totally...but we got the job done and the goal we agreed has now been met. Here's your potentially releasable increment!""  In Sprint Planning, once a Sprint Goal is agreed all of the selected Product Backlog Items (PBI's) become subservient to the achievement of that Goal. Once that Goal is agreed, the PO should care about getting the functionality it represents. The Product Backlog should express the totality of undone work, and it should be revised by the PO each time he or she is in receipt of an increment. The Product Backlog is not a checklist of things to be marked off in each Sprint. If this is not the case, and the PO values certain PBI's in a Sprint Backlog more than the Goal, then Scrum has not been properly implemented.          Log in or register to post comments",5962
Log in to reply,5962
Messages,5873
"12:47 pm May 9, 2014                             Our team is just finishing our 4th two week sprint. I like certain aspects of Scrum, but there seems to be an awful lot of overhead. I've asked why this is necessary, but haven't heard a good answer yet.  What if we skipped all the planning and tracking, and just focused on getting the work done? Meaning we wouldn't size stories, or estimate how long tasks would take or how many stories we could finish, or do burn down charts. We'd just take stories from the product backlog, and do as many as we could before the sprint ended.  Wouldn't this be more efficient, without giving up anything important?",5873
"01:05 pm May 9, 2014                    In the approach you describe, what would happen to the Sprint Goals? Would there be any purpose to sprinting at all? What do you think the consequences might be for incremental release and the management of risk?          Log in or register to post comments",5873
"02:00 pm May 9, 2014                    > overhead  Thinking of it as overhead is your first mistake.  Scrum is about a lot of things, but one of those things doing the minimum amount of necessary overhead to delight customers with a fantastic product.  Each component of Scrum has a purpose.  It sounds like you spend more time in your Scrum Events than you think is valuable.  Have you asked the Scrum team what they think?  What is your role on the team?  Which Scrum events do you think have a non valuable purpose?  > just focused on getting the work done?   I'm sure the software developers at Myspace got a ""lot of work done"".  Where did that get them now?           Log in or register to post comments",5873
"05:06 pm May 9, 2014                    > In the approach you describe, what would happen to the Sprint Goals?  The sprint goal would be to complete as many stories as possible.  > Would there be any purpose to sprinting at all?  The purpose would be to create a potentially shippable release and demo it to the stakeholders.  > Have you asked the Scrum team what they think?  Everyone seems to love it, and I don't understand why. But today after I asked in our retrospective why we need all the overhead, someone later came to me privately and said he agrees with me, but he doesn't want to say anything.  > What is your role on the team?  Developer.  > Which Scrum events do you think have a non valuable purpose?   Almost all of the planning and tracking the developers have to do.  For example, if I'm given a story that I don't even understand, how can I be expected to figure out all the tasks and how long they'll take? And what would be the point of comparing my actual time against my wild guesses and trying to draw conclusions from that?  > I'm sure the software developers at Myspace got a ""lot of work done"".  Where did that get them now?  But getting more done is better than getting less done. Working slower would not have saved Myspace.          Log in or register to post comments",5873
"07:53 pm May 9, 2014                    If each Sprint Goal was merely to complete as many stories as possible, why would the team need to sprint at all in order to provide a release? Where would the advantage be in batching stories this way?  In Scrum, work is batched into sprints so that clear *business* goals can be met. If each increment meets such a goal, the development of the product can be de-risked accordingly.  If business risk is very low - for example, if each story represents a small, isolated, and well understood change - then alternative agile approaches such as Kanban may become viable. Business As Usual work often fits this pattern and it can sometimes be progressed as an unestimated stream.  Scrum, on the other hand, is optimized for dealing with uncertainty, where scope is unclear and backlog items can be weakly and/or tightly coupled. That represents a higher level of risk than individual stories can address. These risks can however be mitigated if each increment corresponds to a clear Sprint Goal of substantial business value. The events, roles, and artifacts of Scrum are all designed with the attainment of such goals in mind.          Log in or register to post comments",5873
"01:00 pm May 12, 2014                    > If each Sprint Goal was merely to complete as many stories as possible, why would the team need to sprint at all in order to provide a release? Where would the advantage be in batching stories this way?  Well, they wouldn't _need_ to sprint. But I thought the point of sprinting is that instead of having to wait forever to get something they might not want, the end users get new releases often and they can give their feedback to drive future sprints.  I don't see why it matters if the sprint goal is to do stories A, B, and C, or just to do as many stories as possible (and completing A, B, C, and D).  > In Scrum, work is batched into sprints so that clear *business* goals can be met.  Wouldn't the stories meet the same business goals whether or not you spend 4 hours guessing how long it will take to do them?  > Scrum, on the other hand, is optimized for dealing with uncertainty, where scope is unclear and backlog items can be weakly and/or tightly coupled.  Yes, that's what we're dealing with on this project.  > That represents a higher level of risk than individual stories can address. These risks can however be mitigated if each increment corresponds to a clear Sprint Goal of substantial business value. The events, roles, and artifacts of Scrum are all designed with the attainment of such goals in mind.  Not sure what is meant by risk mitigation or whether we're doing it. I guess I'll look into that.          Log in or register to post comments",5873
"05:52 pm May 12, 2014                    From your statements White Alligator, there are still areas related to Scrum that you and your team are not understanding completely.  Firstly, nobody on a Scrum team is given a story.   Team members accept stories/tasks based on their availability.   Nothing is ""assigned"" in Scrum.  Secondly, a HUGE red flag is your statement that you have a story in your sprint that you do not understaned.   For any user story to be brought into a sprint, it needs to be understood by everyone on the team.   If this is not happening, then that is a problem.  From your concerns, your team may prefer to work in more of a Kanban structure where user stories are pooled and prioritized, and teams simply grab stories to work on.   The benefit to Kanban is placing queue limits on the various phases of the development effort (analysis, dev, testing, etc) to optimize team productivity, enforce a consistent flow, and uncover organizational impediments to the flow.  The reason that sprints are timeboxed is because there are 4 basic attributes to a project: time, cost, scope, and quality.   In Scrum, 3 of the 4 are fixed.   Quality = TDD, DoR, DoD.   Cost = fixed team sizes.   Time is fixed with a sprint duration.   Therefore, the only attribute that can vary sprint by sprint is the scope: i.e. - how much to commit to each sprint.           Log in or register to post comments",5873
"06:33 am May 13, 2014                    > Well, they wouldn't _need_ to sprint. But I thought the point of sprinting  > is that instead of having to wait forever to get something they might not  > want, the end users get new releases often and they can give their feedback  > to drive future sprints.   In Scrum each release should represent a coherent piece of useful functionality. There's no point in batching work into a sprint unless the work being done, in aggregate, meets a valuable Sprint Goal.  > I don't see why it matters if the sprint goal is to do stories A, B, and C,  > or just to do as many stories as possible (and completing A, B, C, and D).  Neither of those would be credible Sprint Goals. A good Sprint Goal is more than the sum of individual items in a Sprint Backlog, and more than just the number of items selected.  Example: ""This Sprint, we will allow new customers to register on the new site""  This goal would be derived from multiple items that were prioritized on the Product Backlog by the Product Owner, and which were negotiated into the Sprint Backlog during Sprint Planning. Perhaps the PO originally wanted *all* customers to register...but that would have been too much to take on...so the Scrum Team agreed to limit the functionality to new customers only. Existing customers, for the time being, will have to continue using the old site.  This Sprint Goal - to register new users - is the discrete piece of functionality that will be delivered by the end of the Sprint. The PO can set stakeholder expectations accordingly, and he or she can expect to be in receipt of a suitable potentially releasable increment at the end of the sprint timebox.  The items in a Sprint Backlog are secondary to and serve the goal. Remember that a User Story is nothing more than a placeholder for a conversation. A Scrum Team can and should replan throughout the Sprint as new things are learned and as scope is clarified. A Sprint Backlog can change substantially during a sprint in order to meet the agreed goal.  > Wouldn't the stories meet the same business goals whether or not you spend  > 4 hours guessing how long it will take to do them?   You won't have a business goal for a Sprint unless you formulate one. Sprint Planning isn't about guessing games. It's about discussing the backlog items with the PO, so a team understands the scope of the work being asked for, and the value of the next potential release. A smart team will spend 10% or so of each sprint refining the Product Backlog so it is in the best possible shape for estimation and Sprint Planning.  A Scrum Team should be able to enter Sprint Planning well prepared, with Product Backlog items either already estimated or sufficiently understood to be estimatable, and confident that few surprises are likely to be in store.          Log in or register to post comments",5873
"01:36 pm May 13, 2014                    Ian, thanks for that explanation. I guess we are not formulating sprint goals because we didn't know we were supposed to. And I guess we are not entering sprint planning with well understood backlog items because some people don't think we need to.  Tim,  > Firstly, nobody on a Scrum team is given a story. Team members accept stories/tasks based on their availability. Nothing is ""assigned"" in Scrum.  The product owner happens to be my boss (in non-Scrum terms) and said ""Can you do this?"" Is the PO supposed to just wait for people to step forward and claim stories on their own? I would have volunteered to do these stories anyway, because I'm the only person on the team who has worked on this app, and I haven't worked on any other apps (I'm new to the company).  > Secondly, a HUGE red flag is your statement that you have a story in your sprint that you do not understaned. For any user story to be brought into a sprint, it needs to be understood by everyone on the team. If this is not happening, then that is a problem.  I guess we have a problem then. I'll accept a story and give my task breakdown with the hours. Then after the planning meeting, I'll have to go talk to someone to find out what the story means. Then I can ask the product owner for clarification on exactly what they want. Then I'll find holes and we'll need to ask the customer for more details. There's often a lot of back and forth before I even know what I'm trying to do, much less know how I'm going to do it. Is this not normal?  I've only worked at one place where we had good requirements up front - the one place where I've used the waterfall method. While Scrum does not forbid requirements documents per se, many Scrummers seem to think that they're a bad idea, and that the requirements should be figured out during the sprint.  > From your concerns, your team may prefer to work in more of a Kanban structure where user stories are pooled and prioritized, and teams simply grab stories to work on.  That sounds better to me, but there's a big company-wide push for Scrum right now.          Log in or register to post comments",5873
"02:31 pm May 13, 2014                    > For example, if I'm given a story that I don't even understand, how can I be expected to figure out all the tasks and how long they'll take?   Product Backlog Refinement (formerly called grooming).  See:  http://www.scrumcrazy.com/What+does+Product+Backlog+Grooming+Look+Like%…  (also be sure to see the links to other articles at the bottom of that page)  > And what would be the point of comparing my actual time against my wild guesses and trying to draw conclusions from that?   Scrum does not suggest tracking ""actuals"".  That's not part of Scrum... that's something your team/org has added.  Personally, most of the teams I coach find no value in doing that.          Log in or register to post comments",5873
"02:34 pm May 13, 2014                    > But getting more done is better than getting less done. Working slower would not have saved Myspace.  Not necessarily.  If your ""working slower"" turns out to have more value than your ""getting more done""  - then working slower would be better.  If you ""worked slower"" and instead created Facebook, wouldn't that better?          Log in or register to post comments",5873
"02:36 pm May 13, 2014                    > Almost all of the planning and tracking the developers have to do.   I suspect that that the reason your planning and tracking don't work is because you don't understand the work you're planning and tracking.  Fix that problem with refinement practice, and the other practices might start to have value.  I'm assuming that you have stakeholders that are interested in release dates.  If that's not the case, then maybe you don't need to plan or track.  In the real world, I don't see this case often.          Log in or register to post comments",5873
"08:29 am May 16, 2014                    Charles,  > Product Backlog Refinement (formerly called grooming). See:   http://www.scrumcrazy.com/What+does...ok+Like%3F   (also be sure to see the links to other articles at the bottom of that page)  Good stuff, thanks.   > Scrum does not suggest tracking ""actuals"". That's not part of Scrum... that's something your team/org has added. Personally, most of the teams I coach find no value in doing that.  Interesting. They're telling us it's so that we can give more accurate estimates going forward (i.e., if your estimates are consistently too high or too low, then adjust accordingly).  > Not necessarily. If your ""working slower"" turns out to have more value than your ""getting more done"" - then working slower would be better. If you ""worked slower"" and instead created Facebook, wouldn't that better?  You're comparing apples and oranges. Creating Facebook faster is better than creating Facebook slower. Creating Myspace faster is better than creating Myspace slower.  > I suspect that that the reason your planning and tracking don't work is because you don't understand the work you're planning and tracking. Fix that problem with refinement practice, and the other practices might start to have value.   I hope so - we'll see.  > I'm assuming that you have stakeholders that are interested in release dates. If that's not the case, then maybe you don't need to plan or track. In the real world, I don't see this case often.  The stakeholders are interested in eventually getting a release, but I don't think they care exactly when. We told them in March that we'd have something for them in a few months. We have not released anything to them yet because it would be confusing for them to receive some of the changes but not all of them.          Log in or register to post comments",5873
"06:28 pm May 17, 2014                    > They're telling us it's so that we can give more accurate estimates going forward (i.e., if your estimates are consistently too high or too low, then adjust accordingly).   There is some merit there, but you don't need hours to accomplish that.  You can use story points and whether team can accomplish their forecast for the sprint or not.  We also need to remember that software development is no exactly predictable (like the stock market), so trying to predict exactly is a bit of a fool's errand, or waste of time.  The most important thing to try to get good at is forecasting how much work can be accomplished in a sprint, and making sure all sprints end with a potentially releasable increment of software.    see this article for more:  http://scrum.jeffsutherland.com/2010/04/story-points-why-are-they-bette…          Log in or register to post comments",5873
"06:34 pm May 17, 2014                    > We have not released anything to them yet because it would be confusing for them to receive some of the changes but not all of them.  Usually, but not always, this is a sign that the PO doesn't know how to work with the dev team to break work in to smaller, coherent, releasable chunks.  It is very rare for a system to have to go more than a few weeks or so without being releasable -- if you plan it right, and be sure your software modules are ""loosely coupled"".    Having stuff that is so intermingled that it's not releasable for a few months is typically, but maybe not always, a waterfall habit.          Log in or register to post comments",5873
"01:40 pm May 19, 2014                    > http://scrum.jeffsutherland.com/2010/04/story-points-why-are-they-bette…  Fantastic article, especially the comments. It seems that Jeff Sutherland would agree that my team is wasting a lot of time. I could totally get behind Scrum if we were doing it his way.          Log in or register to post comments",5873
"07:47 am July 15, 2014                    One big goal of Scrum is showing all the issues a company has, it sounds like it's doing that in a great way :)  I'm just studying for PSM1, it's great to see you mention from practice all the usual examples of things that can go wrong ;)  It sounds like your Scrum Master needs to re-read the Scrum guide on here several times, and then push to actually start using Scrum without all the Scrum but's, you might enjoy it a lot :)           Log in or register to post comments",5873
Log in to reply,5873
Messages,5964
"10:19 am July 12, 2014                             Hi,  I’m currently facing with the following issue.  The client that I work for has a product called Product X. Product X is a custom product created for Company A. What I’ve heard is that when Product X was created, it went hand-in-hand with stress, many months of long hours, overworked colleagues,  burnouts, fights etc. Eventually they push Product X into production and now 1 year later we’re still doing some occasional bug fixing and RFC’s. But ok, this is all manageable and the bugs are getting lesser and lesser.  By the way, this was a traditional waterfall project.  Now we have Company B who wants to use Product X as well. Seeing that Product X was custom-made for Company A, a lot refactoring will need to take place. So basically what we offer Company B will be exactly the same as what we did for Company A.  Now the problem:  Company doesn’t care about the budget. Budget is not an issue. They do however have a very strict deadline. And no, my client works in a branch where the deadline can’t be messed with…  So what my team is facing now is fixed deadline and fixed features. Company B wants exactly what Company A wants, so delivering a minimal market feature is out of question.  I’ve been discussing this with the team and we’ve already concluded that it’s impossible (within normal working hours) for the team to deliver Product X on time.   What would you do?  -	Would you still use Scrum seeing that most features are clear, everyone knows what to do and therefore all the Scrum events seems a bit overkill.   -	Would you ask your team to do some serious overwork?",5964
"03:51 pm July 14, 2014                    > - Would you still use Scrum seeing that most features are clear, everyone knows what to do and therefore all the Scrum events seems a bit overkill.  From what you describe, with supposedly clear requirements, I'd be more inclined to run a Kanban and put Company B in the driver's seat for backlog prioritization. Run very tight iterations of no longer than a week, so Company B get what they've asked for rapidly and in very small batches.  Essentially you are shifting the bulk of the risk back on to Company B and reducing your own exposure to about a week. In short they get what they've asked for. The difficulty could be in getting Company B to participate in the highly engaged manner required, each and every week. If they are desperate enough to meet the deadline though, I dare say they might be persuaded.  - Would you ask your team to do some serious overwork?  No.            Log in or register to post comments",5964
Log in to reply,5964
Messages,5965
"01:27 am July 13, 2014                             Hi all,  I have just passed the PSM I assessment with score 94% (the 2nd attention).  Thanks all for your support & advise.",5965
"01:15 pm July 13, 2014                    Congrats Bui.  can you give some insights into how you prepared for the exam and what helped you the most as i am also preparing for the exam.          Log in or register to post comments",5965
"09:47 pm July 13, 2014                    Hi nipunanand,  Bellow was my preparation:  - Read the Scrum guide in my language until understand it fully  - Read the Scrum guide in English several times. At least 5 times in my case  - Try Open Assessment until i could got 100% within 5 minutes.  - Read all topics which related to PSM I questions. Many of them are able to be meet in the real PSM I assessment.          Log in or register to post comments",5965
"03:28 am July 14, 2014                    > Read all topics which related to PSM I questions. Many of them are able to be meet in the real PSM I assessment.  have you read them from the forum or you have followed any book to do so          Log in or register to post comments",5965
"08:33 am July 14, 2014                    I read mostly from this forum.          Log in or register to post comments",5965
Log in to reply,5965
Messages,5939
"05:59 pm June 26, 2014                             Hi everyone,   I am looking for all the best and inspirational video's regarding Agile/Scrum.   So what's your favourite? Let me know and I'll add it to the playlist and we'll all benifit! You can ofcourse follow or like the playlist and use the video's in your own organisation!   Find the playlist here: http://www.youtube.com/playlist?list=PLylf4uFy7hnFcF5a6PEu8kzg-HTb-HmtF  You can also find me on twitter: @alblasj  Thanks!",5939
"08:57 pm July 13, 2014                    I'm not sure if they can really be described as ""inspirational"", but I've got about 50 videos on the agilepatterns.org website. They average 2 or 3 minutes each and I talk a bit on various best practices.          Log in or register to post comments",5939
"03:06 am July 14, 2014                    there are video training for scrum on pluralsight by David Starr. He is COO of Scrum.org. there is for scrum fundamentals, agile planning and agile team practices.          Log in or register to post comments",5939
Log in to reply,5939
Messages,5963
"09:31 am July 12, 2014                             Hi.. i'm planning to take PSM exam in Safari(Browser) will there be any problem ? Or do you suggest to take in IE.",5963
"12:32 pm July 13, 2014                    Hi, I took the exams with Safari on MacOS X 10.9.  No problem with it.          Log in or register to post comments",5963
Log in to reply,5963
Messages,5957
"11:29 am July 10, 2014                             Hello Scrum.org team all All ,  I plan to pay & do the PSM again next week. (the 1st time i got fail )  I hear that i can get 10% discount in this case.  Can you confirm and give me your guide ?  Thanks",5957
"12:28 am July 11, 2014                    Hello, Can anyone help on this question ?   Thanks a lot.          Log in or register to post comments",5957
"02:19 am July 11, 2014                    I have never heard of any discount for PSMI exam. Where have you learnt about that?          Log in or register to post comments",5957
"02:29 am July 11, 2014                    Hi Illya,  I remember that i have ever read in this forum but i dont remember exactly which topic.          Log in or register to post comments",5957
"02:32 am July 11, 2014                    In addtion, i'd like to know how many question in the pool and how many question (or percentage) that can i meet again in the 2nd attend ?  Thanks.          Log in or register to post comments",5957
"04:03 am July 11, 2014                    The discount is only if an error occurred while doing the exam (the website went down, your computer crashed etc). Nobody knows the number of question in the pool of exam questions, and I don't believe Scrum.org will give this information. Finally, the percentage to pass the exam the second time is still like the first time; 85% (68 questions from 80)           Log in or register to post comments",5957
"06:29 am July 11, 2014                     Exam is no easier the second time around the pool is different and question sets are random.  Discount can be awarded at discretion by scrum.org on an individual case basis I think.  Its not guaranteed, if you are awared it is 10% off the resit exam.   Playing the numbers game on what may be in the exam second time or how big the pool is isnt what scrum is all about.  This is the difference between knowing scrum and understanding scrum.  Michael          Log in or register to post comments",5957
"10:46 am July 11, 2014                    Hello Bui Tuan Ninh,  We thank you for your continued interest in Scrum.org; it's great that you are interested in making a second attempt at the PSM I assessment! Regarding your inquiry, Scrum.org does not extend an overarching policy of offering discounted rates for additional assessment orders. If you would kindly send us an email directly to support@scrum.org, we will be happy to examine your specific inquiry and address your individual case accordingly. We hope to hear from and further assist you soon. Thank you and enjoy your day!          Log in or register to post comments",5957
Log in to reply,5957
Messages,5935
"06:27 pm June 24, 2014                             Hi all,  I just passed my PSM II with 93% :-)  I failed it 3 weeks ago with 70%, but I got excellent feedback after the exam and read some more.  The feedback provided was just at the right level and detail which allowed me to correct my understanding.  I can safely say, that is a hard exam.  I felt like I was struggling for time at the end and it wasn't a lot easier the 2nd time around, but at least I knew what to expect.  On a different note, I just wanted to say thank you for all the support from scrum.org and the members of the forum.  Much appreciated  Byron",5935
"07:30 pm June 24, 2014                    Hi  So what difference will PSM II make with regards to the management of project compared to PSM I?  Pankaj          Log in or register to post comments",5935
"09:01 am June 25, 2014                    None, but perhaps it could be used to evidence a degree of competency in a wider Scrum coaching context. The questions I was asked seemed oriented that way to me.          Log in or register to post comments",5935
"10:57 am June 25, 2014                    Hi,  I couldn't answer the question as I am not a scrum master, I am a DBA.  My interest in agile is purely to understand what is going on with the change our company is currently experiencing.  From my perspective, I got a lot out of doing the psm II as it opened my eyes to what is involved with a scrum team and how it should function.  I was still waiting for databases coming with full specification etc. so I was getting annoyed when they weren't, so in terms of managing my expectations there was a lot of value to be had.          Log in or register to post comments",5935
"12:56 pm June 25, 2014                    > So what difference will PSM II make with regards to the management of project compared to PSM I?  I'm not sure the exam or cert itself will make a difference, but the experience and studying required to pass the exam is what will vastly improve a Scrum implementation when guided by someone with a PSM II.           Log in or register to post comments",5935
"01:15 pm June 25, 2014                    I just passed PSM I yesterday with 88% which is very marginal. So I feel I need to have a solid preparation for PSM II . So I am not sure where to start , with my preparation with PSM II.   I have taken several scrum courses and worshops before. so i am not sure if i should go for a course. Will that make any difference in passing PSM II ?   Thanks in advance for your advice.          Log in or register to post comments",5935
"06:29 pm June 25, 2014                    Firstly congratulations on passing your PSM I exam !!  Many (including myself) have failed by much narrower margins than 3% , so don't detract from your result ... 88% is respectable in my books , a well deserved pass. From what I've read here , and I don't have a PSM II so please anyone correct me if i'm wrong, the PSM II is a more essay type exam , for questions that require you to give a logical response to the process you followed to get your decision .. I'd take the suggested reading material , and treat it is mandatory reading ! I personally feel that doing the PSM I exam helped me grow substantially as a scrum master , i didn't teach me ""new"" scrum rules, but it challenges you to think , analyze , inspect and either be damn sure of your thinking, or adapt to think beyond the common anti patterns that have become almost accepted dogma in many scrum circles of thought ...   again, well done !          Log in or register to post comments",5935
"01:20 am June 26, 2014                    Thanks Garin. That was very encouraging. I will start reading the books from today :)          Log in or register to post comments",5935
"06:35 am June 26, 2014                    I was using the exams just to see if I improved  PSM I	30-Apr-14	91  PSPO I	02-May-14	89  PSD I	05-Jun-14	85  PSM II	06-Jun-14	70  PSM I	10-Jun-14	99  PSM II	21-Jun-14	93  so... I read gunters book and scrum guide for psm1... just practiced the online one and waited until I could score 100% in 4 minutes or so.  I then read all the parts around the questions, read that product owners book and had a go at pspo and psd... but I'd also done foundation testing and application lifecycle from Microsoft.  psm II, I wasn't sure what to expect, so just went for the have a go approach.  Once I'd seen the format of the questions, this then led me to the resource videos on this site, software in 30 days, scrum in the enterprise.  I then went looking for all sorts of papers and videos of kens.  I got a lot of very useful feedback from the exam results.  I then went back and did psm I again to see after studying, I had improved and hit 98.4% - 1 question wrong and knew why it was wrong, so happy that I improved.  then back to psm II and 93% along with some feedback on why I was wrong.  Whilst I'm on... things worth thinking about and relating to scrum \ work... self-organizing (how would you define it) and look at what you actually do.  Ethics, values and being professional (mapping them to company values) - that's more interesting a question --- what do YOU do (I didn't like what I saw, when I looked at myself and the I.T. team) - respect is the killer.  So whats next for me.  reading pmi-acp and then back to learn some more about other frameworks etc.  Look at system centre, labmanager, test manager etc and tfs.  Then back for resits to see if I've improved.  If you scored 88%, then I would think about what went wrong and use the exam to correct any misinterpretations you have.  Read through the forums and listen to questions \ Answers and then read some more and decide what you think is best answer.  I know i'll be doing pspo and psd again and I might or might not do PSM II again (new questions are always good)... as I'm fairly clear on what I did wrong, but new questions becomes new knowledge check.  As I already stated, I don't work in either an agile or scrum environment, so there might be more value in other members opinions who do, but I use the exams to validate my learning as it is the only feedback loop available to me at the moment.          Log in or register to post comments",5935
"06:55 am June 26, 2014                    I think that I'm more of a glass half empty sort of person judging by my above post.  My favourite quote at the minute is ""second place is just first loser"" :-)  I will never be happy with anything less than 100%, but I also understand about diminishing return and value, there would be little point in re-vising psm I for me, when I know what I did wrong.  That works for me and my personality and how I learn, but other people do things differently and that works for them.  If I looked objectively at my score and adopted an agile approach then I would describe my less than 100% score as a technical debt and eventually it will come back to bite me. Now balance that against cost and would there be value in reading a lot more ?           Log in or register to post comments",5935
"06:55 am June 26, 2014                    I think that I'm more of a glass half empty sort of person judging by my above post.  My favourite quote at the minute is ""second place is just first loser"" :-)  I will never be happy with anything less than 100%, but I also understand about diminishing return and value, there would be little point in re-vising psm I for me, when I know what I did wrong.  That works for me and my personality and how I learn, but other people do things differently and that works for them.  If I looked objectively at my score and adopted an agile approach then I would describe my less than 100% score as a technical debt and eventually it will come back to bite me. Now balance that against cost and would there be value in reading a lot more ?           Log in or register to post comments",5935
"08:10 am June 26, 2014                    Once again thanks a lot for this deep insight Byron. I will start with reading the books.          Log in or register to post comments",5935
"02:47 pm June 27, 2014                    Thanks for your transparency and sharing, Byron.  I wish you well with your Scrum implementation.          Log in or register to post comments",5935
"02:48 pm June 27, 2014                    (I meant to say Scrum Journey, not implementation)          Log in or register to post comments",5935
"07:54 am July 7, 2014                    Thank you all for sharing your insides about the PSM II exam.   I am currently preparing my first PSM II attempt.  I made a significant progress by reading and understanding ""Software in 30 days"".   Since I am not a native speaker of the english language, I suppose I should look into the art of writing an essay in an english textbook?          Log in or register to post comments",5935
"03:07 am July 10, 2014                    Hi Byron,  As you mentioned for PSM1 we can prepare by reading Scrum Guide and Scrum Pocket Guide can you please tell how we can prepare for PSPO 1 and PSD 1 exams. Do you recommend any books for PSD1 or foundation testing and application lifecycle exams were helpful in achieving the certification.  Regards.           Log in or register to post comments",5935
"10:58 am July 10, 2014                    Hi Byron,   As you mentioned for PSM1 we can prepare by reading Scrum Guide and Scrum Pocket Guide can you please tell how we can prepare for PSPO 1 and PSD 1 exams. Do you recommend any books for PSD1 or foundation testing and application lifecycle exams were helpful in achieving the certification.   Regards.          Log in or register to post comments",5935
Log in to reply,5935
Messages,5955
"05:14 am July 10, 2014                             Hi all,  there is a question on the PSM I assessment that asks about the relative size of items in Product and Sprint backlog. My criteria has been that since Sprint Backlog items are usually smaller because:  1) Product Backlog can be refined to a certain degree, but the Sprint backlog items should be detailed to a low level (understandable by both PO and Dev Team)  2) Sprint Backlog contains the plan for the Sprint and tasks are also items in it (smaller)  What do you think?  Thanks!  Àlex / Barcelona",5955
"06:56 am July 10, 2014                    > Sprint Backlog contains the plan for the Sprint...  That's the key point. Product Backlog Items (PBI's) describe business value, whereas a Sprint Backlog is a plan for delivering associated business value. The two are not really comparable in terms of size.  In practice, a Sprint Backlog will often be expressed as tasks for implementing a collection of PBI's that meet an agreed Sprint Goal. There will usually be multiple tasks associated with realizing a single PBI and so, by implication, these tasks are commonly regarded as being ""smaller"".  However it doesn't have to be that way. A Sprint Backlog is a plan, or forecast, for implementing a subset of associated PBI's. It does not necessarily have to consist of tasks, nor does it necessarily have to be decomposable. It could be a single entity that is subject to revision as the Sprint progresses, by the addition or removal of elements that are determined in an ad-hoc way at the time. By that definition, the Sprint Backlog, as a single coherent item, would actually be *larger* than any of the individual PBI's being tackled.          Log in or register to post comments",5955
Log in to reply,5955
Messages,5956
"05:55 am July 10, 2014                             Hi all,  I would like some advice about the self-accountability concept in Scrum, specially because English is not my mother tongue so I might loose some of its semantics.  When we say that team members in scrum increase their feeling of self-accountability, do we mean that they cannot blame anyone else by the wrong decissions since all of them are decided by the team. An opposite wrong meaning could be that they feel more observed or they can be blamed more easily.  Is this meaning correct? What do you think?  Thanks!",5956
"06:37 am July 10, 2014                    > When we say that team members in scrum increase their feeling of  > self-accountability, do we mean that they cannot blame anyone else  > by the wrong decissions since all of them are decided by the team.  > An opposite wrong meaning could be that they feel more observed  > or they can be blamed more easily.  There is an English saying: ""an optimist sees a glass as half full, while a pessimist sees it as half empty"".  Both of the meanings you have ascribed to ""self-accountability"" concern the difficulty of apportioning blame elsewhere. That's the half of the glass which is empty.  However a team that is truly self-accountable will own its working practices and the means of delivery. Therefore, pretty much by definition, it will be respected and trusted as a skilled body and it's members will be motivated accordingly. That's the other half of the glass and it is the more valuable one.          Log in or register to post comments",5956
Log in to reply,5956
Messages,5954
"01:20 am July 10, 2014                             Hi.  What happen if a user history is done and next sprint the PO, realize that it has to be enhanced with some adds, more functionality that impacts in the DB too. We have to create another US?... brings the US back to board and add the new activities? We have to do anything else?   thanks in advance.",5954
"03:36 am July 10, 2014                    Story consists of 3C - Card, Conversation, Confirmation and US ""dies"" is the Sprint when it's Done and Converstation is over. Thus formally a new story should be created even if it's similar (iterative devolopment).          Log in or register to post comments",5954
"06:19 am July 10, 2014                    NB this is true even when work associated with an old story is found to have defects. New ticketed work can be raised *against* the old story (i.e. referencing it), or you can duplicate the story and give it better acceptance criteria. A story can be cloned and improved but never brought back from the grave. Once its conversation is over, a story is finished.          Log in or register to post comments",5954
Log in to reply,5954
Messages,5530
"11:27 am August 8, 2013                             I forgot to add in my last post something regarding the PSM1 assessment. When finishing the exam, but before hitting ""finish exam"" you get the opportunity to review your questions. If you need to go back you have to click individually through all the questions until you find the one you wish to review! Not very user friendly, especially as you're on a time limit!  Further, with multiple choice questions, why do some question tell you to, for example, pick 2 answers, while with others you have no idea how you're supposed to pick?  I wish Scrum.org would redesign the format of the exam and the questions to make it a bit clearer and a bit more user friendly.",5530
"12:33 pm August 8, 2013                    Hello and thank you for your feedback. We are currently working on improving functionalities, which will make it quicker and easier for our users to review their assessment questions during the session. Enjoy your day!  Joe (Scrum.org)          Log in or register to post comments",5530
"01:48 am September 3, 2013                    With the open book nature of the assessment, the existing implementation that is time-boxed, with simple navigation is probably fine as it increases the degree of toughness to a certain extent and could be viewed as a differentiator.  --Bhuvan.          Log in or register to post comments",5530
"09:31 am January 17, 2014                    Re: PSM1  test navigation:  I'm planning on taking the PSM1 this weekend, and am curious: have the improvements in navigation mentioned back in August materialized since? Specifically, is it possible to mark a question that you want to review later, and to be able to jump to it quickly, without clicking through all the questions in between? Hoping for a quick answer...  thanks!          Log in or register to post comments",5530
"10:39 am January 17, 2014                    Hi Nilitopi,    Thanks for your question. I suggest writing down question numbers you want to refer back to.     The navigation enhancements will allow you bookmark questions to refer to, as it's possible in the PSD I assessment. PSM I assessment functionality enhancements are coming soon.    Daniel          Log in or register to post comments",5530
"07:00 am January 20, 2014                    I completely agree with RMDonovan.   I wrote down the question numbers I wanted to review in the remaining time just to find out that I have to count which is the question - this is absolutely user-UNfriendly and costed me a lot of time to check on all those questions I have marked.          Log in or register to post comments",5530
"03:13 am January 30, 2014                    I am in Chennai / India and wish to apply for PSM-1 assessment.  I am having the following questions.   What is the fee that I would be required to pay and where is the link to book for a program.   Is the exam conducted through a prometric centre in Chennai / India ?   Or is the exam to be taken over the web from home ?   It would be great if the process is expalined in detail.   This response would help many other people desirous of taking the exam going forward.  Thanks & Regards,  Srinivas V          Log in or register to post comments",5530
"09:42 am January 30, 2014                    Hello Srinivas,  Thank you for your interest in Scrum.org! You are able to purchase an attempt at the PSM I assessment by going to the following link and clicking 'Get Password'.  https://www.scrum.org/Assessments/Professional-Scrum-Master-Assessments…  Each attempt is $100, and we would highly recommend that you first read The Scrum Guide and take the Scrum Open until you get at least a 95%. It is also a good idea to read the forums at scrum.org for extra information and valuable discussion.   Scrum.org assessments are not conducted through a prometric centre; they are online assessments and can be taken wherever a solid internet connection is available.  When we get the order for your PSM I attempt, we will process your password and send it to you within one business day. Your password will have a 14 day window of usage from when it is sent to you, so don't order it until you are ready.   Thank you and best of luck!  Joe (Scrum.org)          Log in or register to post comments",5530
"09:37 am April 22, 2014                    I have a query...If in between the asessment, the internet connection is lost, can we restart the assessment from where we left ?          Log in or register to post comments",5530
"08:50 pm April 28, 2014                     Posted By Jay on 22 Apr 2014 09:37 AM  I have a query...If in between the asessment, the internet connection is lost, can we restart the assessment from where we left ?  Jay,  I think you should be able to, but Scrum.org's support team can help in in case of any difficulties with the assessment.          Log in or register to post comments",5530
"06:46 pm June 26, 2014                     Posted By Sunish Chabba on 28 Apr 2014 08:50 PM   Posted By Jay on 22 Apr 2014 09:37 AM    I have a query...If in between the asessment, the internet connection is lost, can we restart the assessment from where we left ?    Jay,    I think you should be able to, but Scrum.org's support team can help in in case of any difficulties with the assessment.  I have the same doubt.... If during the test something happen, like lost connection or computer problems is it possible make the test again with the same password? Someone can answer it?          Log in or register to post comments",5530
"10:06 am July 9, 2014                    Is reading /mastering scrum guide and getting over 95-100% in open assessment atleast three times in a row, gives go ahead and buy PSM assessment? Do I have to prepare on anything else? I am just making sure and want to clear it with shining numbers in first attempt. Please let me know if I have to study anything else before I attempt for PSM? Any reply is much appreciated.          Log in or register to post comments",5530
"10:27 am July 9, 2014                    Snehal, you have to get 100% on Open Assessment every time you take it.  Make sure you know Scrum Guide REALLY well, that means knowing and being able to cite not only ""what"", but also underlying ""why"" of each piece of it.   Also make sure you know the Agile Manifesto, Scrum Values and their connection to Scrum Guide. That's important  because there are a lot of tricky questions and to answer those the simple knowledge of Scrum.Guide wouldn't be enough. In this case you have to refer to Agile values and principles.   A good idea is to surf through this forum as well.  Don't forget though - visiting one of PSM live classes is the BEST preparation.          Log in or register to post comments",5530
"11:11 am July 9, 2014                    Rather than getting 95-100% in the Open Assessment just because you learned the same pool of questions by heart, make sure you are answering them because you understood them.  If you think you understood why you are answering the way you answered in the open assessment, then you are ready to go for the proper assessment. But if you are just answering the correct answer because you learned it by heart, then you need to do more reading          Log in or register to post comments",5530
Log in to reply,5530
Messages,5932
"10:25 am June 23, 2014                             Sorry for my bad english. I hope you can understand me and our problem:  We currently have a well-functioning scrum team. All team members are happy. But our Product Owner will leave the project in one year. In the meantime, he/we need an additonal PO.   In SCRUM it is allowed to have two PO´s but always one at the same time. Our project management want a specific person but the hole team reject this person.  About this person:   Until six months ago, he was our scrum master. During this time, the whole team was unhappy. The scrum master was at the same time project manager and a conflict of interest was there all the time.   He has not lived the scrum process and keep himself, however, violated.   The members had to remember him always on the process but without success. He ignored scrum.   He also doesn't have the necessary soft skills. On all the time, he has played as our chef who doesn't trust us.   Currently, he is only deputy project manager. Now, he should be the new product owner with 50 %. He and the other project managers want it that way. Would he again participate in the planning meeting,  it would take 3 instead of 1 day. He discuss everything for hours.  Because he wants to understand everything that is technically and wants to control the whole team, all members will be unhappy.  As a product owner he is constantly changing his opinion in one sprint. He takes things DONE and reactivated it again in one sprint.    Can the project management really intent a product owner against the team?",5932
"02:01 pm June 23, 2014                    Hi Heike,  The first asset you have is a functioning team (albeit dev team) not scrum team, this is a plus for a start.  You need to forge this into a scrum team with an effective SM and PO.  What you need is a good SM, that would get a buy in from day one from managers that if scrum is to be   adopted, it is to be supported all the way, this includes the PO and from the dev team.  Outline your concerns as a dev team on why this didn't work last time ie lack of knowledge,  non adherence to scrum, PM approach to scrum etc.  As PO he should be in the planning meeting, the product backlog and value is what the PO brings.  from that as a team you need to create the Sprint backlog and craft a goal to work on.  In the scrum team its PO, not deputy manager or project manager, so also must be able to switch hats.  If this is not possible then the potential PO should not be the PO or it wont work.  Remember the role of the PO is value optimizer in scrum, not GM, assistant manager or PM etc.  Sprint planning has a time box, and if everything is refined and has a DOD then that's covered.  If its agreed ,its agreed... unless the PO wants to abandon the sprint on a regular basis?  (highly unlikely)  A good SM should be advising on time and as a team agree in the planning, if its broken.  Question why and also the SM should be coaching on scrum as he provides services.  The SM perhaps needs to be more hands on with the services, as he/she isn't mentioned much.  Retrospectives are the place to reflect how the sprint went as a team but do document it.  If its not working then show its not working is the simple way and implement those changes that will make it  work. Scrum is simple, getting it working is not so simple.  Often the team selections are outside of your control, here you have the opportunity to at   least correct things before the team is working so it gets the best foot first.  With an agreement in place with managers, possibly training and coaching has a chance.  Your team has just as much potential as any other team out there.  Importantly you have a PO so they can shadow all the way with a working formula well in advance.          Log in or register to post comments",5932
"02:38 pm June 23, 2014                    > We currently have a well-functioning scrum  > team. All team members are happy.  This implies that your current PO is happy and that Sprint Goals are being met. If this is the case then well done. You should now be careful to secure the professional high ground you have achieved, so there is no backsliding when your PO is replaced. At this point, I would strongly recommend establishing your team's successful narrative in the minds of all stakeholders.   In other words, you need to make it clear to all parties, including management and the replacement PO, that right now you have a working system. You need to make it clear that the new PO will need to sustain this proven approach so that the Product and its stakeholders continue to be well served. Use metrics, your delivery record, and the testimony of the current PO to evidence this.  Is there any chance of having your PO conduct a handover with the new one, so that he is phased in gradually and the risks of change can be controlled?          Log in or register to post comments",5932
"12:44 pm July 8, 2014                    That's a great question, Heike.  First, the bad news: It;s usually the Product Owner that gets to choose the development team, not the other way around.  Now, the good news: The development team should get to choose their scrum master.   Your scrum master is responsible for ensuring that scrum is applied in accordance with the scrum guide. This includes things like keeping timeboxes, one of your listed concerns.    As another piece of good news, I usually find that ex-project managers make better product owners than scrum masters.  This is often because not all ex-project managers can handle the change from managing, to coaching. So the new role for your old scrum master may work out well.          Log in or register to post comments",5932
"02:17 pm July 8, 2014                    Good question, did you share your concerns with the management? Did you talk to the new PO (your ex SM) and share your concerns with him?  Also I give +1 to Ian's answer.  Nevetherless I agree when Derek saying that ex-project manangers often become good POs, it's no easy to stay away out of manage and control culture. And this is bad news.           Log in or register to post comments",5932
Log in to reply,5932
Messages,5946
"04:17 am July 3, 2014                             Hi guys,  So yesterday I sat for my first attempt of the Scrum Master Certification (PSM I). I have been following the forum for a couple of days, read the guide pdf multiple times until I understood what it was saying, did the open assessment and went really well from the first time and did them again until I got 100% repetitively...but I still got 80% in the exam.  And I think I know the reason why...because the exam (apart from the small pool of questions which are the same as the open assessment), it is based on practical knowledge you get while working with SCRUM on a day to day basis. I do not have that type of experience...  So, just a heads up to anyone who is considering sitting for the exam...if you do not have any experience in SCRUM development on your day job, do not sit for the exam because the theoretical part is not enough to pass the exam.  Regards,  Damian",5946
"04:22 am July 3, 2014                    Damian, PSMI assessment is not based on practical knowledge. It's just about the Correct thinking and understanding of Scrum Guide, Scrum Values, values and principles of Agile Manifesto. I think Professional Scrum Master (PSM) would help you a lot. I also recommend you to read as many of Ken's blog posts as you can. That would definitely help a lot.          Log in or register to post comments",5946
"05:37 am July 3, 2014                    Sorry but I do not agree with you.   I think you need to have some practical knowledge of agile and scrum experience to get information which is not present in either the scrum guide, open assessment or e-books I read          Log in or register to post comments",5946
"02:07 am July 4, 2014                     Hi Damian,  Illya is correct, you don't need practical knowledge to pass the exam.  80% is almost there, lets not discount that as any bad thing, shows that's true and a bloody good effort.  The open is a guide, but to crack the exam you must know that guide inside out and be able to expand it.  Experience helps, but you don't need it to pass though.  The exam isn't easy that much i can say, but with the right mindset is possible.  Stick with it, do some more study and really get to know the guide inside out.  80% shows your nearly on the money with it, and also shows the value of the exam and whats expected.  Michael          Log in or register to post comments",5946
"06:00 am July 4, 2014                    Thanks Michael,  I'm spending another couple of days studying and maybe give it another shot during the weekend. All I need is another 4 correct questions and I'll pass :)          Log in or register to post comments",5946
"08:28 am July 4, 2014                    Damian, PSMII is definitely an exam where you need a lot of practice being a Scrum Master. Knowing theory. principles of Agile/Scrum and common sense is quite enough for passing PSMI. But you REALLY need to know Scrum Guide WELL.          Log in or register to post comments",5946
"06:45 pm July 7, 2014                    Hi Damian,  Besides of the Scrum Guide, I'd recommend you to go through this .pdf as well, it helps you figuring out the little details that would give you for sure those 4 extra good answers :)  http://mgmtplaza.com/downloads/Scrum%20Training%20Manual.pdf          Log in or register to post comments",5946
"07:18 am July 8, 2014                    Thanks all!  Took the exam again this morning and got a 93.8%          Log in or register to post comments",5946
"07:20 am July 8, 2014                    Good job, my congratulations!          Log in or register to post comments",5946
"09:13 am July 8, 2014                    Hi Damian, Did the scrum master training manual helped you with doing the second exam?  I just did my PSM I exam and had the same results and feeling you had when you did your exam the first time.  And congratulations on passing your exam btw.... :)          Log in or register to post comments",5946
"09:19 am July 8, 2014                    Hi Tkwoen,  Basically I spent another couple of days reading through the Scrum guide until I made sure I know it all. Make sure you have the latest Scrum Guide...as I previously had the 2011 version. It can be found here: https://www.scrum.org/Portals/0/Documents/Scrum%20Guides/2013/Scrum-Gui…  And finally go through as many posts as you can in these forums. There are a lot of answers and explanations by the forum members which can help you a lot. Also, when finding any difficulties or questions while reading through the Scrum Guide, check the forums and if nobody has already asked those questions, create a new thread and someone will help you for sure.  Hope this helps :)          Log in or register to post comments",5946
"09:28 am July 8, 2014                    Hi!  Thank you for your swift response! I also had the 2011 version! :s  I haven't thought of going through the forums, thanks for the advice!  Better get back to studying :)  Cheers!           Log in or register to post comments",5946
"01:16 pm July 8, 2014                    Damian,  Well done, great that you stuck with it and passed.  Not only that, the qualification and what it takes to get it, its not just a attendance ticket.  Michael           Log in or register to post comments",5946
Log in to reply,5946
Messages,5942
"08:08 am June 30, 2014                             HI -   I just sat the PSM I and came across a question related to Sprint 0 - a concept that doesn't feature in 'The Definitive Guide to Scrum: The Rules of the Game'.  Is Sprint 0 a recognized concept for the purposes of the PSM I test?  Thanks  S",5942
"08:18 am June 30, 2014                    No, it isn't. See these threads for more information:  https://www.scrum.org/Forums/aft/645  https://www.scrum.org/Forums/aft/366           Log in or register to post comments",5942
"02:54 am July 1, 2014                    From SCRUM timeboxed events perspective, it is not a valid sprint. It is usually the name given to do initial activities like refining product backlog, architecture envisioning, priortization and release planning etc.          Log in or register to post comments",5942
"12:05 pm July 2, 2014                    Yes it is if you are using Zero-based numbering like in C like language.  If you are using VB then it starts with 1.          Log in or register to post comments",5942
"05:00 am July 3, 2014                    > From SCRUM timeboxed events perspective,  > it is not a valid sprint. It is usually the name   > given to do initial activities like refining   > product backlog, architecture envisioning,   > priortization and release planning etc.  True. However just to be clear, it isn't the nature of these activities which make the ""Sprint Zero"" concept invalid. The problem is that it does not usually result in an increment which the Product Owner values, nor is it usually timeboxed for that purpose.  It could be argued that a PO *should* value the things you mention, and that readying the Scrum instance is a meaningful goal for the first sprint.          Log in or register to post comments",5942
"04:37 pm July 7, 2014                     From official scrum guide - there is no Sprint 0.   In practical world, when a team sets out to adopt Scrum  - usually Sprint 0 is used for the first time to adopt the scrum  framework in the current business process.   Sprint 0 - as any other sprint - has a goal. The goal usually is to set the team for a change. The goal is agreed by the scrum team. One of the basic requirement of the scrum is to have a product backlog and this sprint 0 is ideal to solidify the approach to maintain the backlog either in Agile software tools/Wiki or shared project notebook or post it notes on the wall. or select another that simplifies the work.   Sprint 0 - may or may not have a potentially ship-able product increment - agreed by the scrum team.  http://www.mountaingoatsoftware.com/blog/sprint-zero-a-good-idea-or-not           Log in or register to post comments",5942
Log in to reply,5942
Messages,5951
"06:41 am July 4, 2014                             Hello,  English is not my native language. So, can we copy text during doing the  PSM I assessment to the Dictionary tool to have the translation ?  I wonder that maybe it is read-only text.  Looking forward your answer.  Thanks.",5951
"06:51 am July 4, 2014                    I think you can highlight copy and paste text but I don't you will have enough time to do so. There are 80 questions which must be answered in 60 minutes so you will be a bit tight with time.  My advice would bee to read the guide in english as well to familiarise yourself with the english terms before sitting for the exam.          Log in or register to post comments",5951
Log in to reply,5951
Messages,5940
"09:24 pm June 26, 2014                             Hi.. I would like to thank you all who have answered in the discussion forum, as it helped me to get a deeper insight on Scrum framework.",5940
"09:41 pm July 3, 2014                    Hello Vinay,  Could you share me how long did it take you to get the PSM ? and could you share me any tips ?  Thanks          Log in or register to post comments",5940
Log in to reply,5940
Messages,5949
"06:43 am July 3, 2014                             Hello,  I found that sentence in page 11 of Scrum-Guide document, at section  ""Sprint Review"".  I think that once ""Sprint Review"" is official event and be mentioned as its important, why it is ""informal"" meeting?  Could you help me clear ?  Thank you.",5949
"06:55 am July 3, 2014                    You are right, it is an event and as such part of the framework and its rules.  I think what they want to point out with the word informal is the difference to a formal status or project closure meeting in waterfall projects.  ""During the Sprint Review, the Scrum Team and stakeholders collaborate about what was done in the Sprint. Based on that and any changes to the Product Backlog during the Sprint, attendees collaborate on the next things that could be done to optimize value.""  So the attendees collaborate. This is very different to a Product Owner presenting what was done and stakeholders giving standing ovations, which is not the purpose of the review, because ""the presentation of the Increment is intended to elicit feedback and foster collaboration"".          Log in or register to post comments",5949
"07:07 am July 3, 2014                    > I think that once ""Sprint Review"" is official   > event and be mentioned as its important, why it is ""informal"" meeting?   Formality would constrain behavior and could potentially reduce openness and transparency. Honest and frank discussion is necessary in order to maximize the value of the event. That's what is meant here by ""informality"".          Log in or register to post comments",5949
"04:50 pm July 3, 2014                    +1 to both answers above.          Log in or register to post comments",5949
Log in to reply,5949
Messages,5892
"04:00 am May 26, 2014                             When delivering a Sprint ---Does the actual code deployment in production take place before or after the sprint review meeting?  And when does the retrospective take place in respect of live code deployment?",5892
"06:37 am May 26, 2014                    Each Sprint must deliver a potentially releasable increment to the Product Owner. The matter of release is therefore orthogonal to the work done in the corresponding Sprint, and is at the discretion of the PO.  Note that this does not preclude the possibility of making a release, or indeed multiple releases, during the Sprint itself. Also, there's nothing to stop the Development Team from making the deployments if both they and the PO are willing to support that arrangement. The important thing is that, even when something like continuous deployment into live is in force, the PO has ultimate control over each release configuration and can therefore account for the Return On Investment each one yields.           Log in or register to post comments",5892
"06:40 am May 26, 2014                    Hi Abhijit,  deployment is not part of Scrum, because Scrum is a framework for developing products, not for delivering them.  This means, the deployment in production happens whenever the Product Owner feels like it. Usually he will decide this after the review, because then the product increment is transparent to him.  The retrospective takes place directly after the review. Again, deployment is not part of Scrum and should be decoupled from the Scrum events in order not to become an impediment.          Log in or register to post comments",5892
"01:33 am May 28, 2014                    Thanks Mitchel and Ludwig..  In similar lines, this is a typical question with options..  When should the Product Owner ship or implement a Sprint increment?   A.  At the end of every Sprint.   B.  When the Team feels is done with every Sprint.   C.  Whenever the increment is free of defects.   D.  When it makes sense.   My pick is Answer D..  What would you guys feel?          Log in or register to post comments",5892
"03:26 am May 28, 2014                    My answer would be D too.  A - It's not necessary to release the increment. I can be done, but it's not mandatory.  B - It's up to the team to provide a possibly releasable increment but the team doens't get to decide when to actually release it. That's up to the PO.  C - The increment should be potentially releaseable. Your definition of done should say that it's free of known defects. TDD should help in that.  D - When it makes sense to the PO, he/she can release an increment whenever he/she feels like it. Seems like the most logical answer.  HOWEVER:  In some (most?) environments, the people who work on the increment (Development team) will also be the ones that release it.  Releasing software takes time and preparation.  So if the PO decides to release it, one or more people on the team will invest time in it.  This will affect the velocity of the team during the sprint.  How should one handle that?          Log in or register to post comments",5892
"09:59 am May 28, 2014                    > Releasing software takes time and preparation.   > So if the PO decides to release it, one or more people on the team will invest time in it.   > This will affect the velocity of the team during the sprint.   > How should one handle that?  Each increment *must* be potentially releasable. If sufficient time has not been spent in preparing for release, then the potential for doing so can't be there, and the Definition of Done is either inadequate or is being improperly applied. With a good DoD, if the PO decides to release then the implementation of that decision should take negligible time.  The original question is a bit harder that one might suppose, because both A and D are valid answers. A is valid because a PO should not negotiate a sprint backlog or goal without release being the aim. The PO *should* therefore release at the end of every sprint, even if it is not mandatory to do so. Remember that in Lean terms, a failure to release increases batch sizes and the depreciation of stock-on-hand.   However, if we are limited to one answer only, then D is certainly the best. A PO should never release if it doesn't make sense to do so.           Log in or register to post comments",5892
Log in to reply,5892
Messages,5895
"09:18 am May 27, 2014                             When the PO is not involved and the team cannot rely on him/her, what could the SM do?  I'd say the SM should try to talk to the PO and make sure the PO understands the problems he is causing.  Are there any actions the PM could do?",5895
"10:19 am May 27, 2014                    If a PO's behavior results in a poor or improper implementation of Scrum, then the Scrum Master may need to work with the wider organization in order to tackle this impediment. This could mean approaching stakeholders directly and appraising them of the situation, including any risk to delivery or the potential impact on return on investment.  That said, the Scrum Master should always try and resolve the matter with the PO in the first instance.          Log in or register to post comments",5895
"10:23 am May 27, 2014                    Thanks for the response.  That would also be my first approach and it seems logical.  However, there was a question in the PSM 1 yesterday that made me choose 2 answers.  I also selected that the SM could address the problem with the PO's functional managers.  However, not being able to reproduce the exact question and the possible answers, I'll never know.          Log in or register to post comments",5895
Log in to reply,5895
Messages,5865
"05:08 pm May 4, 2014                             I have passed the PSM 1 exam a few weeks ago – harder than I thought but went well.  While doing the open assessments, I also did some open assessments from the developer PSD 1 section - as recommended by many users in this forum. I would like to give this exam a try.   However, in the ""Scrum developer subject areas"" section on this website, there is no clear indication of a specific book for preparation of this exam, or a ""guide"" similar to the scrum guide for PSM I.  It only lists a selection of books on specific development areas (testing, programming, architecture etc).   Would anyone be able to recommend a book (or 2) that would be sufficient to prepare for the PSD 1 exam – or is it a question to read across a number of books?   Thanking you in advance   Bruno",5865
"08:43 pm May 4, 2014                     Posted By Lotus72 on 04 May 2014 05:08 PM  I have passed the PSM 1 exam a few weeks ago – harder than I thought but went well.    While doing the open assessments, I also did some open assessments from the developer PSD 1 section - as recommended by many users in this forum. I would like to give this exam a try.     However, in the ""Scrum developer subject areas"" section on this website, there is no clear indication of a specific book for preparation of this exam, or a ""guide"" similar to the scrum guide for PSM I.    It only lists a selection of books on specific development areas (testing, programming, architecture etc).     Would anyone be able to recommend a book (or 2) that would be sufficient to prepare for the PSD 1 exam – or is it a question to read across a number of books?     Thanking you in advance     Bruno   Hi Bruno,  I'm afraid that a single book or two won't be of any help in assessment prep. In fact, I believe Scrum.org assessments are still evolving, and though, there is some ambiguity in questions and less standardization related to the paid assessments (at least I feel about that), going through all references provided may or may not help you in passing the assessment. Good thing is that you've got the PSD I open assessment and it will help you in focusing your preparation to key areas and Scrum guide is also there for you.   Best bet is to go for PSD training because the PSTs will invariably cover the areas coming in the assessment.   Regards,  Sunish          Log in or register to post comments",5865
"04:02 pm May 5, 2014                    OK thanks Sunish. Going for PSD training is not a option for me (for now) so I might try and cover the subject areas through the recommended books.   thanks!  Bruno          Log in or register to post comments",5865
"09:44 am May 16, 2014                    Focus on these topics:  Test automation: Concepts such as TDD, BDD, etc  App life cycle management: Continuous Integration  Open assessments: PSM 1 & PSD  Some questions are based on common sense. Think about what you can do 'best' in a situation  Navigating to unanswered or going back to review answers is a big pain. Keep a note of question # & brief of title in a notepad for quick reference  All the best!  Thanks,  Sukrut          Log in or register to post comments",5865
"04:32 pm May 19, 2014                    Hello Sukrut/All,    We thank you for your interest in Scrum.org and for contributing to this thread. We just wanted to quickly and kindly note that, unlike our practice, Open assessments, our PSM I, PSPO I and PSD I assessments do now provide a feature which enables the bookmarking of specific questions during your session.     The feature allows you to bookmark and to easily return to and review any questions that you may wish to revisit, during the 60-minute time-box allotted for the assessment.       Thank you again and enjoy your day!  ---Joe (Scrum.org)          Log in or register to post comments",5865
"01:26 pm May 26, 2014                    Hi Joe,  I'm assuming you work for Scrum.org, hence this email.  Just as a note, I took the PSM Open Assessment today and noticed a funny thing.  I believe the 'answer choices' are randomized and on one question, ""All of the above"" appeared as the 2nd choice among 5 choices.  It wasn't the correct answer, but it did get me thinking...""Does this mean the same as picking A or A,C,D &E?).  I wonder if you've coded it to prevent ""All of the Above"" from appearing as the first choice?           Log in or register to post comments",5865
Log in to reply,5865
Messages,5703
"11:12 pm January 12, 2014                             During the Sprint, if development team finds out it is unable to complete all the work that is committed and described in DoD, then they Immediately raise the issue to the Scrum Master as an impediment.   Please share your thoughts to handle this situation for the SM  Rgds",5703
"11:20 pm January 12, 2014                     There is something wrong here, if Dev team is not able to complete the work it is not an impediment, Dev team should negotiate it with PO, scrum master can just facilitate the meeting.  Cheers  Sanjay          Log in or register to post comments",5703
"11:56 pm January 12, 2014                    If the Development Team finds it cannot complete its work, this might be due to an impediment which the Scrum Master can tackle.  Examples include external dependencies or the sudden absence of a critical resource.  If the problem is a matter of overcommitment, or the work in the Sprint Backlog is subsequently thought by the team to be unactionable within the Sprint, then they will need to liaise with the Product Owner as Sanjay describes.          Log in or register to post comments",5703
"12:51 pm January 13, 2014                    Any impediment raised by the scrum team needs to be addressed by scrum master as this is one of the primary way in which the scrum master can improve team productivity. Usually impediments are raised during the daily scrum as part of issues / blocks  reporting.  I have seen cases (mostly if the teams are remote) where the issues will not be reported in daily scrum and SM will need to apply other techniques to see if things are blocked.  During the initial stages of project, all kinds of issues will be reported as issue / blocks. For e,g PO having second thoughts on a story requirement, or waiting on some other team member to  complete , waiting on external inputs etc. Generally a discussion needs to be had to come to an understanding as to what constituents an impediments or blocks that needs to be addressed by SM          Log in or register to post comments",5703
"08:42 am January 14, 2014                    Hi Mouli,  this is a question from the PSM I assessment. The only right answer is: If the team is not able to fulfill the DoD, the SCRUM master should work with the team to find a DoD they can fulfill (short term), and support them to improve their skills and the DoD step by step (long term).  This problem is completely different to a team not being able to deliver everything that is in the Sprint Backlog. For that problem of course they will re-negotiate the Sprint Backlog with the Product Owner.  Best, Ludwig          Log in or register to post comments",5703
"09:47 am May 26, 2014                    Wouldn't it depend on if there's an outside impediment or not?  So if the Dev Team can't complete its work because they are waiting on something from an outside party (outside of the SCRUM Team), this would be an impediment and the SM should get involved to remove it.  But if the Dev Team ""bit off more than they could chew"" (perhaps they didn't realize testing a story would be so time-consuming), then they would re-negotiate with the PO.          Log in or register to post comments",5703
Log in to reply,5703
Messages,5815
"04:32 am March 30, 2014                             Hi all @ scrum.org  I attended PSM training, hold PSM1 and have Six sigma background.  My personal opinion of scrum is its a great framework and is very simple.  Certainly I don't have all the answers but do believe in what i do and trying to keep the   team together,Keep them interested, further their knowledge, coach on BP  always give a reason ""why"" and explain it and encourage.  When I started out my quest it was because I wanted to know more about scum and also why scrum   fails in organizations and had no real idea, now I can report back on what I learned.  i.e how does it go from scrum a framework to non framework, i.e just a name.  There was one great post on here https://www.scrum.org/Forums/aft/388  This concerned the PO behavior, its a long post but an educational read for some insight.  Behaviors should should make ""sticky"" status as its common and no frame covers this.  Background:  Recently I was a SM for a team of eight people in an organization.  A Large organization also containing mainly a demographic of 30-55 year old people.  Agile in place now for well over a year and running Sprints over that period.  This evolved from two teams of seven to post reorg one team of eight with one SM and KM.  I had the fortune to be coaching a team pre reorg that really could see why this worked   and was a real pleasure to work with, and one that I consider as a SM as a real success from   no real in depth understanding to ""we get it"" and what it can do for a team.  post reorg we had a mixed ability with some people really buying into what it is,   Some keen on learning and people just not interested and making it disruptive/problematic.  This is where it went wrong certainly for this team, two people disrupted the progress.  Problems and behaviors:  I had two members that eroded the development and real acceleration of the team.   The other team I was not responsible for before the merge certainly had a different way of   working. This goes back to Agility in name only, not scrum, not agile, not even waterfall,   more non structured and disorganized if i have to put a term on it.  There isn't a framework or method out there to compare with.  This may sound familiar so you can see how many you tick off as danger signs.  Always making issues when a very simple request was asked.  Sprint events always being called another meeting.  Not willing to commit to agreements such as be on time at stand up.  Sometimes not even bothering to attend the stand up.  Cant see any benefit in retrospectives.  No benefit in estimating tasks.  No benefit in updating work.  Meetings too long.(time-frame they agree to).  Meetings too short (time-frame they agreed to).  Too many meetings (all subject to having the option to decline).  Don't see the point in estimating. (didn't do that before you came).  We worked better before (even if you cant prove that to back it up).  We have always done it like that, this will not work.  Not willing to commit to the team as a team to an agreement that's made.  No real input to the team as a whole.  No matter what you do there will always be complaints.  As a SM I did all the right things for the team.  *Explained why we do things  *What those benefits are continually.  *Continually showed those benefits.  *Coached on all aspects of scrum.  *Tried to get them involved.  *Tried to get them to commit as a ""team"".  *Tried to get them to inspect and adapt as a team.  *Tried to get them to be brave and fearless.  This still wasn't enough for the members that were not buying in.  Generally made the life as a SM really difficult as they possibly could.  The team didn't have the confidence to deal with the situation as its not in their DNA.  Management wouldn't deal with the situation either.  As a SM have no real authority to do anything, ""put up or shut up"".  Rather than tackle the problem people generally put plasters on things is my point.  Teams, individuals, managers, why you ask? Because its as good a solution as any.  Usually one that pacifies until the next problem.  ""Its okay""   ""they find change difficult""   ""give them more time""   ""you have to understand their mindset""  I thought it may have been down to the most basic fundamental question   ""Do they understand""   Had that most fundamental question not been asked, had they had any form of training?   The answer is yes and yes and also know of the company they received it from.  As a company its pretty solid without naming them.  We can tick off a basic understanding and I also coached through my time.  Reflections:  After several months of still getting the same responses,complaints and behaviors  With no real help in resolving the situation,It was too much to deal with as SM and   also undertaking full-time development team role.   Members that really wont move on, undermining the framework and generally causing problems   in the team does have an effect on teams,and also taking time from committed team members.  I too decided to follow my own advice and called time on SM Role with that team.  I did apologize to members who feel I may have let them down by stepping down   and they now have to live with the chaos afterwards.  This goes back to people happy to ignore things, say Agile doesn't mean you will do Agile.  A plaster is as good as any framework attitude in some big companies, and that's a real shame  Somewhere from the top that message is diluted and diluted and diluted and we end up with   teams like this who are left to run loose as its the easier option than tackling the problem  I look on that team I coached as a success for a percentage of that team, they understand what   scrum really is all about. They will go on with the following,   The right mindset, the right attitude, a desire for the knowledge and an understanding.  Thats all that really matters.  My point being that over time those few may encourage another few and the cycle continues   with the right mindset and at some point in time that catches up.  When coaching and explaining and showing benefits doesn't work, that's a behavior issue.  If you don't get any help in resolving that and the team wont resolve it.  you also have to consider your sanity as a SM as you cannot do it all, you are important too.  As SM should not have to do it all or be expected to, the team should accept that.  Some organizations are more ""say-and don't do"" than you think and will run for the plaster first.  Even large organizations, so don't be surprised by this.  Plasters are only good for a short while, the problem does not go away, we just repeat the cycle.  Summing up:  This may sound like a sad tale, indeed it isn't, its something I can share.  I now have a greater learning of problematic teams.  One other aspect is I have also know that ""say-and don't do"" is a huge problem at all levels.   Just because an organization says it is Agile (not going), doesn't mean to say they are Agile.  So far In my life have seen change fostered all the way in an organization once.  No dilution, and that company still is a success even now 15 years post change.  It produced some great mindsets and teams and that is reproductive and why its successful.  From that I can draw the following conclusions on commitment vs interest.  you will have high success of scrum adoption with full support across the organization.  if you don't get that support will have limited success of scrum adoption.  Limited success is better than no success as it also has its rewards.  The future will take care of the bigger rewards from the limited success of today.  Success is the key word here even if its limited, not failure and you get to keep your sanity as a SM.  :-)  michael",5815
"09:27 am May 26, 2014                    Management wouldn't deal with the situation either.    As a SM have no real authority to do anything, ""put up or shut up"". This is why management needs to understand SCRUM and buy off on it.  They recommend that everyone in an organization, even top management, gets some kind of SCRUM training so they know what to expect and will back up the people implementing it. It was too much to deal with as SM and also undertaking full-time development team role.   So you were both a Scrum Master and a Development Team Member?  Technically allowed, but not recommended.  I wonder if some of your Development Team Members were jealous of your SM role?  I will also add that this is where the self-organizing concept falls apart.  I was on a scrum team where my fellow Dev Team members would not provide me with the details I needed to test their work.  Our SM didn't help me either (the scrum team was more of a clique), so I had to go to the VP (next level up) to get cooperation and the VP was mad - at me, because the team was supposed to be self-organizing.  Bottom line: If  you don't have a mature group of people and management support, the team won't be successful.          Log in or register to post comments",5815
Log in to reply,5815
Messages,5891
"03:58 am May 26, 2014                             Hi All     Do we need to have 2 separate sprint planning meeting of 4 hours each or 1 meeting of 8 hours?  Who decides this ?  And what could be the factors for choosing either of them?  Thanks  ----Abhijit",5891
"05:33 am May 26, 2014                    Hi Abhijit,  in the updated Scrum Guide from 2013, there is only one Sprint Planning meeting which is 8 hours for a 4-week sprint.  The reason is that some teams, (instead of taking the PBIs into the Sprint Backlog first and breaking them down afterwards as in the previous version) take the first PBI, break it down, take the next one etc. until they think they have enough. The advantage is that they gain a deeper understanding of the work to be done, so they can make a better estimate how much they can get done.  The team decides this, because it is self organizing.          Log in or register to post comments",5891
"07:02 am May 26, 2014                    An important thing to bear in mind is the crafting of the Sprint Goal. Suppose you spent time breaking down each selected PBI before deciding on the Goal. Would that be more or less efficient than identifying a suitable goal prior to this decomposition? Either situation might be the case.           Log in or register to post comments",5891
Log in to reply,5891
Messages,5890
"04:12 pm May 24, 2014                             Hi there, in our company we have four scrum teams each with 100% PO and SM. Daily meetings are scaled: first the teams, then the POs, afterwards SOS with rotating team members and afterwards the scrum masters.  There are boards for SOS, the POs and the SMs. SM board is grouped by topics like ""Linux know how"", ""recurring tasks"", ""method know how"" and so on. I have the impression that some tasks remain open for days, if not weeks and there is no clean focus on which topics SMs should attack and and which should be delayed. All in all it feels very chaotic lately.   1. I thought about re-doing the task board as Kanban board with a limited number of work in progress items. Any experiences on this?  2. Do scrum masters even ""need"" to have their own board?  3. Should we only have cross-team topics/impediments there or should it be basically a copy of the impediment boards/lists of all teams?  4. I didn't find anything about scrum master interaction on the web. Any hints?  5. Is there something else about scrum master interaction you would like to share?  Thanks,  Flo",5890
"05:26 pm May 24, 2014                    The problem with boards like this is that the tickets are often very open ended, and there is no clear Definition of Done that can be applied to them.  They can be used, but you need very fine grained items that are demonstrably achievable within a short cycle time, and which ultimately add empirical value. Remember that if you can't formulate viable acceptance criteria, then the item doesn't belong on the board in the first place. The ordering of items can be approached from the perspective of risk mitigation.          Log in or register to post comments",5890
Log in to reply,5890
Messages,5863
"05:45 am May 2, 2014                             In certain cases, when the scope of development is large, the management is often forced to sustain multiple development teams. This scenario is very common in case of development companies undertaking outsourcing projects and activities, where disjoint or distributed teams carry out the development. In such a scenario, the management may appoint individual scrum masters for each team, and this is practice is accepted by scrum circles. However, the question revolves around the product owner. Just as you have multiple scrum masters, can you appoint more than one product owner in the scrum project?",5863
"07:55 am May 2, 2014                    Each scrum team is made up of Development team + Scrum Master + Product Owner. If you have multiple scrum teams then you will have multiple Product Owners each managing a subset of the Product Backlog. Ideally you should all be working from a single Product Backlog. You can read further on this at http://www.capgemini.com/blog/capping-it-off/2012/05/scaling-scrum           Log in or register to post comments",5863
"06:51 am May 5, 2014                    As the name Product Owner suggests, you need one Product Owner for each Product (and one Product Backlog). If your Product is developed by multiple development teams, it can happen that one person cannot do this job for all the teams at once. This is when you can think about several ""Sub"" Product Owners for each team, but you still need one person responsible for the whole product. The books of Larman and Vodde explain this in detail.          Log in or register to post comments",5863
"03:38 am May 8, 2014                    Hi,   Its best practice that one team lead by one P.O. Or best divide the project in smaller sub project and leads these small project with different P.O.   As every P.O have its own style of executing work and interaction level with client / stakeholder. Its a same thing P.O works under P.M.   Thanks,  Kapil   http://scrum-mines.blogspot.in/          Log in or register to post comments",5863
"09:54 am May 9, 2014                    > Just as you have multiple scrum masters, can you appoint more than one product owner in the scrum project?  The short answer is no, because product ownership does not scale in quite the same way as servant leadership potentially can. Multiple Development Teams, each with a Scrum Master, can draw from a single Product Backlog that must be owned by exactly one PO. Although Scrum Masters and Product Owners can work for multiple teams, only the PO has this relationship with the Product Backlog.  However, this means that if a project encompasses multiple products...each of which is represented by a discrete Product Backlog that is wholly owned by a single PO...then you can have multiple such PO's working in collaboration. Whether or not these are separate products from an end consumer point of view is immaterial. What matters is that each increment from each contributing team can be brought together into a potential release of business value.          Log in or register to post comments",5863
"05:44 am May 23, 2014                    In bigger teams / distributed teams, usually a  proxy PO concept is applied. Proxy PO works with each team to provide clarification on requirements to the team , support PO in eliciting requirements etc. However final decision on priority and planning should like with PO. However this a risky approach as delivery expectation and what product should do could be different for a PO from a Proxy PO. In such cases this might raise in a conflict. So in such situations, Proxy PO has to be a person who can mirror PO as much as possible and more of a support to team at geographical location so that their productivity is not impacted.          Log in or register to post comments",5863
"12:40 pm May 23, 2014                    The Proxy PO concept is an anti-pattern.  Yes, in a product with numerous teams, some Dev Team members will help with PBL mgmt, but none of them should hold the title of ""Proxy"" because this creates a bottleneck and more handoffs.  Ian's answer above is excellent.  If you really want to some good help on scaling, see:  http://www.ScrumCrazy.com/scaling          Log in or register to post comments",5863
Log in to reply,5863
Messages,5888
"04:08 pm May 22, 2014                             Hi all,  Just curious what you all think. If I can consistently score 100% on the practice PSM assessment, do you think I'm ready for the PSM I assessment?   Thank you in advance for any feedback provided.",5888
"05:02 pm May 22, 2014                    Hi,  the PSM assessment is significantly harder than the open assessment, and you need to have a sound working understanding of being a Scrum Master - focussing on servant leadership, coaching the team to self organisation, and developing the agile mindset in the business.  I encourage you to read a few more posts on this site before doing the assessment, as the token is valid for only one attempt.  Regards  Simon          Log in or register to post comments",5888
"02:27 am May 23, 2014                    Hi  How many times do you read Scrum Guide and understand it?  Paweł           Log in or register to post comments",5888
"12:01 pm May 23, 2014                    Ewok,  See this thread:  https://www.scrum.org/Forums/aft/264          Log in or register to post comments",5888
Log in to reply,5888
Messages,5889
"06:22 pm May 22, 2014                             Hi, I was watching the Evidence Based Management video lately and I noticed that they said that velocity isn't mandatory within Scrum. Its not even in the scrum guide.  My question is if we omit velocity, how does release and iteration planning gonna be done?",5889
"01:51 am May 23, 2014                    Velocity is a quantifiable measure, but there's nothing in Scrum which says PBI's have to be estimated numerically. T-shirt sizes could be used for example.  During Sprint Planning, a team have to be satisfied that they can meet the Sprint Goal. This can be a qualitative decision based on collective experience of how much work can be taken on, rather than numbers.          Log in or register to post comments",5889
"01:51 am May 23, 2014                    Velocity is a quantifiable measure, but there's nothing in Scrum which says PBI's have to be estimated numerically. T-shirt sizes could be used for example.  During Sprint Planning, a team have to be satisfied that they can meet the Sprint Goal. This can be a qualitative decision based on collective experience of how much work can be taken on, rather than numbers.          Log in or register to post comments",5889
"02:29 am May 23, 2014                    Hello.  You can do iterationplanning by walking through the stories until the team does not feel comfortable anymore. I always recommend not to plan iterations based on velocity, just use it as one ""verification"" to get a feeling for the iteration and the progress.  We release every sprint, so releaseplanning = iterationplanning  But there is also no releaseplanning in scrum so there is also no need for velocity to do this ""in scrum"".          Log in or register to post comments",5889
"07:22 am May 23, 2014                     Posted By Philipp Eisbacher on 23 May 2014 02:29 AM  Hello.    You can do iterationplanning by walking through the stories until the team does not feel comfortable anymore. I always recommend not to plan iterations based on velocity, just use it as one ""verification"" to get a feeling for the iteration and the progress.    We release every sprint, so releaseplanning = iterationplanning    But there is also no releaseplanning in scrum so there is also no need for velocity to do this ""in scrum"".  As the trainer said, what is not in the scrum guide doesn't mean that it is not needed. Could also mean that the focus wasn't on release management but it can still come...  However, I'm curious when you are dealing in a ""Buyer & Seller"" situation where the customer comes up with a list of PBI's how do you come up with a long term forecast?   Keep in mind that the customer can also go to your competition so if you can't give a forecast and your competitors can, then you lose the deal....   How would this go without tracking velocity?          Log in or register to post comments",5889
Log in to reply,5889
Messages,5883
"03:05 am May 19, 2014                             Hi All     Is there anything like a Scrum Backlog?? If so, what does that contain?  And as far as Sprint Backlog goes , what would be the right answer for it's contents??  1> A list of User stories for the sprint  2> A list of tasks needed for achieving the sprint goal?",5883
"06:19 am May 19, 2014                    The scrum guide does not mention a scrum backlog.   If it is sprint backlog, I would say both answers are good.          Log in or register to post comments",5883
"12:28 am May 21, 2014                    Thanks ...  But both of the above mentioned are options.. Which one to choose?          Log in or register to post comments",5883
"05:30 am May 21, 2014                    If you read the Scrum Guide, you will notice that both answers are right. If you look for the best answer, I would choose 2 because it focuses on the sprint goal and what needs to be done to achieve it. Answer 1 mentions User Stories, which are not exactly part of Scrum but a good practice to document Product Backlog Items.          Log in or register to post comments",5883
"05:33 am May 21, 2014                    Hi Ludwig  https://www.scrum.org/Portals/0/Documents/Scrum%20Guides/2013/Scrum-Gui…  I see no mention of Scrum Backlog, is there a more recent version of the Scrum guide?          Log in or register to post comments",5883
"07:01 am May 21, 2014                    Hi Michelle,  sorry I didn't make clear that I was referring to the Sprint Backlog (second question).   I am pretty sure there is no such thing as a Scrum Backlog, at least not in Scrum.          Log in or register to post comments",5883
"07:04 am May 21, 2014                    Thanks Ludwig, in that sense, I would agree with you          Log in or register to post comments",5883
Log in to reply,5883
Messages,5885
"06:18 am May 19, 2014                             Hi,  I did not pass my previous attempt, but I slowly seem to be getting there. So I am keeping my positivity and not focusing on the money going into the examinations :)  I had a few questions that needed clarification  1) What tools does the PO use?  In this there was an option of burndown and release burndown. I would choose burndown but I am not sure which other tools are available for the PO to use. Anyone has insight into this  2) Who hires the PO  In my opinion, the PO needs to be available in the beginning, so I would assume management does this hiring. But if the choice is SM or DEV, would DEV be the right choice since they are self organizing  3) For the Scrum review, can the stakeholders re-align the priorities in the PB? true/false/  This felt more of how do you interpret this question.   true - stakeholders need to priorities what they need  false - the PO only can change the PB, besides it could be possible that another technical task is more important  Glad to hear your views on this",5885
"07:23 am May 19, 2014                    For 1) Is the gnatt chart also considered a tool for the PO?          Log in or register to post comments",5885
"07:07 pm May 20, 2014                    > 1) What tools does the PO use?   The principal tool at the PO's disposal is the Product Backlog  > 2) Who hires the PO   Whoever it is that holds the PO accountable for the return on investment he or she is responsible for assuring.  > 3) For the Scrum review, can the stakeholders re-align the priorities in the PB? true/false/   > ...  > false - the PO only can change the PB  Agreed.  > ...besides it could be possible that another technical task is more important   Technical tasks are more likely to be derived when planning a Sprint Backlog.          Log in or register to post comments",5885
"04:36 am May 21, 2014                    Hi Ian,  For 1) In the scrum papers of Ken, he also mentions using charts and work breakdown structures.   assets.scrumfoundation.com/downloads/2/scrumpapers.pdf?1285932052  www.danube.com/docs/Scrum_Metrics_for_Management.pdf  There are many techniques and practices for assessing the progress and probable success of  projects. Scrum provides four simple and effective artifacts for managing and monitoring project  performance: Product Backlog, Product Burndown, Sprint Backlog and Sprint Burndown.  Building on these, we are integrating a Functional Work Breakdown Structure and a technique  for measuring Earned Business Value  For 2. There was only an option for dev and SM, in this case I can assume that if there is a conflict then the dev team can pick t up with the SM and the SM would be the one who speaks to management to discuss about a possible hire of another PO. Would this be correct?  Thanks !           Log in or register to post comments",5885
"05:31 am May 21, 2014                    What about burndown charts , that should also be a tool for the PO right          Log in or register to post comments",5885
"05:43 am May 21, 2014                    in addition, is revenue the only measure of succes? what if its for a non-profit orgnaization. Shouldnt it be business value which can be measured using revenue or not.          Log in or register to post comments",5885
"06:57 am May 21, 2014                    Yes, it is value which is the most important measure of success. Together with other measures such as customer satisfaction, employee satisfaction etc it will lead to revenue.          Log in or register to post comments",5885
"06:57 am May 21, 2014                    > For 2. There was only an option for dev and  > SM, in this case I can assume that if there is  > a conflict then the dev team can pick t up  > with the SM and the SM would be the one  > who speaks to management to discuss about  > a possible hire of another PO. Would this be correct?   Neither option would be correct for hiring a PO. However if the context of the question is one of removing an impediment, such as a breakdown in the relationship between the Development Team and the PO, then a self-organizing team may look to their Scrum Master to facilitate a resolution.  A good Scrum Master would try to resolve matters amicably by challenging the problem rather than the person, and would be careful to liaise with product stakeholders and not just management.  Generally speaking, it is inappropriate for either a Development Team or a Scrum Master to pass judgment on whether their PO should be replaced, as neither of those roles are directly accountable to stakeholders for the product.  > What about burndown charts , that should also be a tool for the PO right  Burndown charts *could* be a tool for the PO, not should, since they are not a core part of Scrum as evidenced in the Scrum Guide.  > in addition, is revenue the only measure of succes?   No, what matters is ROI or Return On Investment. ROI does not have to be revenue based, although it should always be possible to measure it empirically. The Product Owner is accountable for ROI including how it is determined and measured.          Log in or register to post comments",5885
"07:02 am May 21, 2014                    Thanks Ian, that makes more sense.          Log in or register to post comments",5885
Log in to reply,5885
Messages,5886
"01:23 am May 21, 2014                             Hi All        Can the Sprint Goal change during the course of the Sprint ?  If yes , it is whose responsibility to get that updated -- the Product Owner or the Scrum Team?  Thanks  ---Abhijit",5886
"02:25 am May 21, 2014                    No changes are made that could endanger the Sprint Goal. This is clearly stated in Scrum Guide. If the Sprint Goal becomes obsolete (that means the supporting Product Backlog Items are not needed anymore) it's a question of Sprint Cancellation.          Log in or register to post comments",5886
Log in to reply,5886
Messages,5884
"05:38 am May 19, 2014                             Hello!  I try to use Scrum for the first time. The Product Owner was ordered to write his User Stories but what I got was something like:  1. The Tool must not have any problems with special characters  a. The filename for each company has the following structure: companyname_id.xlsx  b. Name of the first Worksheet is ""Code""  - Name of the first column is: xxxx  ....  I got a 3 page long document with orders like this. My Question is now how do I transform that into UserStories?  The user doesnt want any problems with special characters.  The user wanna have a output file structure like companyname_id.xlsx  The user want that the name of the first worksheet is ""Code""  The user want that the name of the first column in the first worksheet is xxxx  Is that right?",5884
"07:31 am May 19, 2014                    Hi Tobi,  When writing it’s best to follow the so-called INVEST model. http://en.wikipedia.org/wiki/INVEST_(mnemonic)  Furthermore it’s important that each story needs to add Business Value to the customers.  Your stories looks more like “acceptance criteria” instead of user stories.   I have no context of your business but here is an example:  As wholesaler I would like my xxx sheet to be automatically generated so that it saves me time etc. etc. etc.  Acceptance Criteria:  - The Tool must not have any problems with special characters   - The filename for each company has the following structure: companyname_id.xlsx   - Name of the first Worksheet is ""Code""   - Name of the first column is: xxxx            Log in or register to post comments",5884
"08:35 am May 19, 2014                    Hi!  Thanks for your answer. I thought that Acceptance Criteria are set by the programmer not by the procuct owner.           Log in or register to post comments",5884
"11:00 am May 19, 2014                    Important to note that the User Stories practice is not part of Scrum, but is a complementary practice to Scrum.  Many teams use US to represent PBI's.  Be sure to read the part of the Scrum Guide that pertains to Product Backlog management.  Essentially, the decisions are owned by the PO, and the legwork of who documents/maintains the PBL is a collaboration between PO and Team.  Also see:  http://www.ScrumCrazy.com/userstories  (and be sure and see all the links at the bottom of the article)          Log in or register to post comments",5884
"03:46 pm May 19, 2014                    Tobi007, from what you posted, I'm curious if your designated Product Owner has had any training or instruction in writing User Stories.  It is OK if they haven't.   Remember, the goal is to seek consistent improvement, and if you start close to the bottom, you have little choice but to go up.  That said, what is critical from the Product Owner is not necessarily the format of the user story statement (although I have a preference for ""As a... I want... So that...""), but that the user story is stated from a value perspective independent of any technical solution.  An easy way to think of this is that the PO is in charge of the ""what"", and the team is in charge of the ""how"".   You need to phrase the user story in a way that allows the team to leverage their technical knowledge to come up with the solution.          Log in or register to post comments",5884
"04:20 pm May 19, 2014                    Maybe you should try to plan some workshops with your PO and some people from the dev-team, instead of having the PO writing pages on his own and then casting the pages.          Log in or register to post comments",5884
"04:24 pm May 19, 2014                    Hi Tobi,  Acceptance Criteria can be set by the entire scrum team which includes the PO.   Ultimately setting up the PBI boundaries should be a joined effort. The moment you start thinking of ""theirs"", ""us"", ""my"" etc. you're closing doors in terms of collaborating with our PO/Stakeholders.          Log in or register to post comments",5884
"07:29 pm May 20, 2014                    > The Product Owner was ordered to write his User Stories  ...  > I got a 3 page long document with orders like this...  Orders are not a great tool for communication where creative work is concerned. This is the sort of problem that does arise when people are ordered to do things instead of collaborating effectively.   Scrum is an agile framework that values collaboration highly. A Product Backlog should be understood by both the Product Owner and the Development Team, and so the whole Scrum Team should contribute towards its refinement.          Log in or register to post comments",5884
Log in to reply,5884
Messages,5882
"03:16 am May 16, 2014                             Hi,  In my company (large bank), we have some new projects which are good candidates for incremental release, but we also have some rewrite of old legacy junk.  In case of rewrite, what kind of pattern do you use to avoid Big Bang release after several quarters of work.  Yours  Olivier",5882
"05:18 am May 16, 2014                    Is the rewrite to be done from scratch, or is it a technical uplift of the existing legacy system? Also is there a legacy DB, the content or schema of which must be preserved?          Log in or register to post comments",5882
"07:49 am May 16, 2014                    Well, all the options are there, but I think mainly about rewrite from scratch and with a new DB (we will use some ETL to convert the datas)          Log in or register to post comments",5882
"08:25 am May 16, 2014                    Is it possible to rewrite components from scratch, and release them on a sprint by sprint basis? You'd need to discuss this with the PO to find out the business value of doing so, as well as finding out if it is architecturally possible. Standard GOF patterns such as bridge and adapter may be of use.           Log in or register to post comments",5882
"06:23 am May 17, 2014                    Is it possible to rewrite components from scratch, and release them on a sprint by sprint basis?   Well, it is actually my question ;-)  Sorry for not being clear enough. When I asked for patterns, I didn't have design-pattern in mind but instead organization -pattern or  project-pattern.  The business value will be hard to define, but in term of risk-reduction and knowledge acquisition, the sprint by sprint releases are very useful.  I wonder how when can avoid big-bang production release. For instance, we can release in pre-production sprint by sprint, but is there a better solution ?          Log in or register to post comments",5882
"03:45 pm May 17, 2014                    The distinction between production and pre-production environments doesn't have to be black-and-white. It may be possible to target early adopters for certain increments, or a similarly narrowed audience.  This is a Lean Startup technique which allows delivery risk to be sandboxed, while still permitting a degree of feedback and some measure of control over the accumulation of technical debt.          Log in or register to post comments",5882
Log in to reply,5882
Messages,5878
"09:35 am May 15, 2014                             A friend of mine started a web design company and he already got a project. He wants to do the project as agile as possible so he asked me to help him out but I’m a bit struggling with the project management side of it.  The project is about restyling an existing, but outdated website.   The client has a budget of 5000 euros. (not the real price of course)  If we want to do the project in an agile fashion with scrum I want to set up an end date but keep the scope variable.   What’s the best way to translate the 5000 euro budget to a potential end date? How is this normally done?",5878
"10:14 am May 15, 2014                    Has the company worked out its fixed and variable costs per sprint, and its profit margin? Price per sprint should be the basis of the calculation. Ideally the company should provide incremental investment as an option, thereby limiting financial risk to the next potential release.          Log in or register to post comments",5878
"04:39 pm May 15, 2014                     Posted By Ian Mitchell on 15 May 2014 10:14 AM  Has the company worked out its fixed and variable costs per sprint, and its profit margin? Price per sprint should be the basis of the calculation. Ideally the company should provide incremental investment as an option, thereby limiting financial risk to the next potential release.  How to calculate the price per sprint?          Log in or register to post comments",5878
Log in to reply,5878
Messages,5461
"10:31 am April 30, 2013                             I have been working several projects with Scrum method and, in some, we have taken the decision of execute Scrum sprints of dynamic length (base the Sprint length in the work inside every Sprint, and not fixed length).  For me it have some advantages:  Adapt the Sprint length to the ""real"" work charge by Sprint (always respecting the Sprint min-max duration rules).  More simple planification of Sprint (not have to ""play with"" the end of the Sprint to fix the lenght)  Easy to adapt complete functionalities in short planifications.  The main dis-advantage is that feedback to the client is sent in variable time spaces, but if they are informed and confortable with this, there are no problem.  Is this an accepted practice in the Scrum method?",5461
"12:51 pm April 30, 2013                    Do you measure the velocity of your team? And if so, how do you do this?   By 'dynamic sprint length', do you mean that there is a lot of variation in the sprint duration? So the first sprint may take 2 weeks, the second may take 3 weeks and the third may take 1 week? Or are we talking about much shorter or much longer sprints?   Is your team capable of delivering the desired functionality within your (dynamic) sprints? Or are they often done well before the end or is there a lot of unfinished work?          Log in or register to post comments",5461
"02:30 pm April 30, 2013                    Regular timeboxed delivery is one of the core disciplines of Scrum, which relies on predictable inspect and adapt cycles. This means that Sprints have to be of a fixed length. There is skill involved in negotiating a meaningful increment of value within a fixed time period, but it is an important skill.to have.  Some agile methods do away with Sprints entirely, and just have a continuous flow of delivery. That's typical of a Lean Kanban way of working, and ""Business as Usual"" changes. It sounds like you're doing project work though, in which case you'd be better off applying Scrum fully.           Log in or register to post comments",5461
"09:03 pm April 30, 2013                    As mentioned earlier, it would be difficult to measure your team's velocity with variable sprint lengths.  It also makes it more tempting to extend the length of the sprint if it looks like you took on too much work in the sprint rather than acknowledging unfinished work, taking the hit on velocity, finishing the work in the next sprint and adjusting how much work you are including in future sprints.  In my experience teams get into a rhythm with sprints, and I think this rhythm would be disrupted or never found with dynamic lengths.  Even more troubling would be if it were a team that was new to scrum coming from something more ""waterfallish"" -- I could see teams slowly increasing the length of sprints until they end up with one long sprint (waterfall).  I know you said you were obeying the min / max length but I would still worry if the team is new to scrum.          Log in or register to post comments",5461
"04:29 am May 1, 2013                    step by step  - You always can measure the team velocity just doing with a percentile number (for example, total points in sprint / finished points), so, the measurement is not a problem.  - The difference betweem sprints is really short. Spoke about 3 o 4 weeks Sprint. At least, in special moments, 5 weeks.  - The team works perfectly with this aproximation. I do not know why the dynamic lenght of the sprint would have to impact in the delivering capacity of the team.  The theory is simple: In the Sprint Planning Meeting the team (Product Owner) decides which stories include in the Sprint; later the team estimates the effort and at the end we sum all the points inside the Sprint to ""calculate"" the Sprint length.          Log in or register to post comments",5461
"06:54 am May 1, 2013                    There's a saying in project management -- ""there are three variables, resources, scope, and schedule -- you can pick two.""  In scrum your resources (team) and schedule (sprint length) are the things you're picking and your scope (amount of work) is determined by those.  What you're doing is picking resources and scope and having the schedule vary.  Is it acceptable?  Sure, if the work gets done, and the team and customer are comfortable with it.  I would still caution against extending the length of the sprint during the sprint.  If that's not the case and isn't happening, then it's not an issue.          Log in or register to post comments",5461
"03:13 am May 2, 2013                    My point is - can't we isolate the product release from the sprint duration. Let team work on a fixed duration sprint and marking backlog items as Done. The release manager or product manager can discuss and decide at what point (even during the sprint) they would like to release the next increment of the product. This is based on the assumption -  1. You have an integrated environment which should have release-able product deployed during the sprint.  2. The deployment process is automated  Changing the sprint duration is more difficult if you have multiple teams working on the same product.          Log in or register to post comments",5461
"10:39 am May 10, 2013                    Hi Ztere0,  I must admit this is actual the first time that I’ve seen a team deliberately keeping their Sprint dynamic to delight the PO. Kind of interesting though :-)  Personally I wouldn’t dare to apply this kind of change with my teams due to the following reasons:  I want the PO to think in terms of Minimum Market Features. In other words, what’s minimum needed to improve the time-to-market. When dynamic sprints are applied, I can imagine that the PO is (at first) a very happy person because all the “urgent” stories will be included in the sprint. This can lead to a long(er) sprint which implicitly means that the team will have to wait longer for feedback.   Another important thing is responsibility. The moment the development team apply dynamic sprint lengths, the team is implicitly telling the PO that they can finish all the stories because that’s the reason why we shorten or extended our length. Perhaps the PO would be less happy if the team calculated that it would take 5 weeks and didn’t delivered due to unexpected issues or worst did delivered but not according to expectations. The other way around is a bit different though. The team tells the PO that they have a fix length, so the PO should think wisely about splitting up items and prioritizing them, making them more manageable and predictable. When the team doesn’t deliver, they will at least have their feedback on the stories that are finished.  Cheers, Chee-Hong          Log in or register to post comments",5461
"07:50 am May 15, 2013                    True........Scrum sprints of varying length are a better and wiser way to execute scrum. It should depend on the type of work to be completed in that particular sprint.  http://www.agiledistributed.com/          Log in or register to post comments",5461
"10:57 pm May 15, 2013                    Hi Ztere0,  It may work for you but it is definitely not Scrum. From Scrum Guide: Sprints have consistent durations throughout a development effort. As others have said, you want to be able to forecast your development effort for the next Sprint, if you do not have a consistent sprint length then you do not have a reliable data that you can use for forecasting.  Ask yourself why you need to change the rule, are there problems you are covering up?  Keep working on it. Good luck!          Log in or register to post comments",5461
"02:18 am May 16, 2013                    Hello Joshua,  In my team perfectly can forecast the sprints. All the ""must"" that people here speak about to use fixed sprint length are based in be more ""predectible"" and to be measurable, but I know that those points are not a problem in dynamic length sprints (I do not why some people assume both points as a real truth)  In my experience I can ensure that using dynamic length you can be at least equally predictable and measurable that using fixed length.  best regards,          Log in or register to post comments",5461
"12:21 pm May 16, 2013                    Sounds more like waterfall than Scrum.  It's definitely not Scrum.          Log in or register to post comments",5461
"03:16 pm May 16, 2013                    HI,  In my experience this is usually a reaction to not having the Product Backlog in a well groomed enough state to allow for good Sprint Planning.  The cadence that you build up with having a fixed Sprint length allows the capability of having a stable velocity.The stable velocity allow the preparation of a product roadmap.  If you vary the sprint length the result is an inconsistent velocity.          Log in or register to post comments",5461
"01:34 pm May 17, 2013                    Team velocity is based on a certain timeboxed event. Why should this always have to be the end of a formal Sprint? Why can't you have an ongoing process (like kanban) but for example measure your velocity based on an agreed timebox?          Log in or register to post comments",5461
"06:28 am May 20, 2013                    @P.Ross  Within the Scrum framework the fixed Sprint length is used to provide stability and predictability. This is a key aspect of the Scrum framework.  If you don't have any Sprint Timeboxes - it is not Scrum. This is not a good or bad thing, it just is.  The lean metric that you would use to measure the unconstrained system is cycle time, and that would have more relevance than velocity.  The point is if you are doing Scrum the Sprint length is static, and deliberately changed at Sprint boundaries with the intent to improve team performance. It is not varied within the Sprint.          Log in or register to post comments",5461
"02:27 pm June 1, 2013                    Ztere0,  If it works for you, great. Let not the fact that it is not an acceptable scrum practice (which it isn't, BTW) deter you. I believe there are always special cases and special teams which need a bending of rules. At the end of the day, I presume you aren't implementing Scrum for the sake of Scrum, and also that you have sufficiently analyzed and accepted the trade-offs.  Consider a similar scrum rule: a Scrum Master should not be the Product Owner as well. But in his book, Succeeding with Agile, Mike Cohn mentions a couple of teams which broke this rule, yet were very successful with Scrum. He also says that it is not for everyone: the person playing that role has to have exceptional maturity to be able to pull it off.  Here's another one. A ""goto"" is supposedly a no-no in C programming, yet, I have seen some code which could not have been written as elegantly without using it. I wouldn't advocate using goto in C to a novice programmer. But if a master programmer uses a goto in a situation that he/she can justify, I don't see any wrong. In the same vein, I wouldn't risk dynamic lengths until I have mastered Scrum.          Log in or register to post comments",5461
"08:54 pm February 14, 2014                    We have always done an agile-scrum hybrid at the Software companies where I have worked, so I'm not commenting on Scrum as somebody who has practiced it strictly. Our hybrids have been very successful (Henry Schein Medical) and passable (recent job).  At a recent job, we discussed trying two 1-week Sprints instead of our normal 2-week Sprint.	  Cons in this thread and my Responses  The Scrum Team is letting dates slip at the end of the Sprint because they didn't get done. -->	We are not doing variable length sprints to get less done, but to get releases to Customers FASTER.  Scrum says so (or “it's not scrum” rule). -->	Some would argue that you cannot change your Sprint length during the Sprint, but are allowed to change from a 2-week Sprint cylce to a 1-week Sprint cycle at Sprint or Project boundaries (i.e., before the Sprint in question starts).  And even if it is not Scrum, I'm more concerned with it being Agile (as we already have an Agile-Scrum hybrid than it being Scrum).  Scrum says so. -->	It is a way to distinguish 2 successful methodologies, but not critical for success, since both are succeeding.  Still fits with Resources, Scope, and Schedule thinking.  Scrum relies on predictable inspect and adapt. -->	Can one inspect and adapt with variable Sprint lengths?  Yes, as long as people are flexible on the days meetings are held.  (Thursday one Sprint and Friday the next. Even strict Scrum practitioners have to be flexible about moving meetings when there are Holidays.)  Scrum relies on predictable inspect and adapt. -->	It is ironic that inspect and adapt was taken from Lean ideas and Lean Kanban allows variable length Sprints.  It would be difficult to measure your team's velocity with variable sprint lengths. -->	That's what computers and algorithms are for to making charting easier.  (In our program you just change the start and end dates of the Sprint and it works fine.)  *Might* affect the Team rhythm. -->	Besides the fact that this was an acknowledged guess (as are my responses).  There is a rhythm or synergy from getting features out their that the Customers give positive and more frequent feedback about.  PO may cram in too much to the Sprint. -->	We planned exactly which 2 or 3 Stories would be done in our 1 week Sprints, so this is not a bigger problem than our current “urgent” interruptions.  We are taking the same amount of stories and just delivering some of them sooner, so feedback and customer satisfaction should theoretically both go up compared to making them wait.          Log in or register to post comments",5461
"04:18 pm May 15, 2014                    I totally agree with Ztere0.  Dynamic Sprints are like walking the El Camino de Santiago...you don't walk the same number of kilometers every day...each journey is a different length.  You determine where you want to be and sum the points to find how long it will take.  I always stay within 30 days but I've found that if you always fix the sprint length you end up either wasting time because you finish early or you move items because you can't finish.  I recently read Scrum Shortcuts by Ilan Goldstein and he too says the length should be fixed...I just don't get it...WHY FIXED??? The velocity can still be measured by summing all sprints and deriving and average velocity. I've been working as a director, manager, scrum master, product owner, developer, and analyst for 30 years and used Agile before Agile or Scrum was invented.  I emphatically disagree that a sprint should ALWAYS be the same length. Still here, still successful.          Log in or register to post comments",5461
"04:33 pm May 15, 2014                    I always get a kick out of those that comment ""it's not Scrum"" and quote a book...the whole idea of scrum is it's a framework, not a method.  Frameworks permit flexibility to apply different steps based on the environment.  If the organization wants to see something exactly every 14 days, then do fixed length sprints.  Many, if not all of my clients have wanted to see specific completed modules and ask when can you give it to me?  It's a matter of managing sprint scope...2-4 weeks.          Log in or register to post comments",5461
Log in to reply,5461
Messages,5876
"01:43 am May 13, 2014                             Hi,   Looking for some advise on improving our dev environment.   We are a .net house and this is what we currently have.   Visual Studio, SVN, JIRA for issues, backlog and TeamCity is our CI server.   Can anyone recommend an automated testing framework that is easy to use and write the acceptance tests. We are looking at using NUnit and perhaps Zest.   Our goal would be to build in VS, which kicks off TeamCity and the acceptance tests with the results then updated in JIRA. We are partially there, it is just the acceptance testing that is missing. We are wanting to do more test driven development.   Many thanks,   Justin",5876
"06:46 am May 13, 2014                    Would it be worthwhile to use SpecFlow or similar in order to achieve BDD, and thereby subject the actual acceptance criteria to test automation?          Log in or register to post comments",5876
"07:15 am May 13, 2014                    That sounds interesting. I will look into it. My one concern is that I am hoping to write the tests myself, hence the need for ""ease of use""          Log in or register to post comments",5876
"02:38 pm May 13, 2014                    Acceptance Testing is generally done at the service or UI level.  Are your services REST?  What kind of UI do you have?  Mobile phone? Web?  PC app? other?          Log in or register to post comments",5876
"02:39 pm May 13, 2014                    >  My one concern is that I am hoping to write the tests myself, hence the need for ""ease of use""  What is your automation/coding skill set?  Any previous experience with automated testing tools?          Log in or register to post comments",5876
"02:58 pm May 13, 2014                    Majority of our UI is web but also mobile. I don't have much coding ability but from what I have seen the acceptance tests can follow the Given then when syntax. I could manage that. The proper coder can then import those tests and develop against them.          Log in or register to post comments",5876
"09:46 pm May 13, 2014                    That sounds like a reasonable strategy.  I would highly recommend you try to follow the Test Automation Pyramid strategy:    http://www.mountaingoatsoftware.com/blog/the-forgotten-layer-of-the-tes…  Some tools to look into:  Telerik  CodedUI  MSTest  Sellenium/WebDriver  Watir/WatiN  You should probably look into CodedUI as well.  Also check out Greenpepper          Log in or register to post comments",5876
"11:36 pm May 13, 2014                    Thanks a lot for the info. I hope that I am not missing something, but is the Service portion in the pyrimad essentially BDD? I say that as Mike explains the Service layer as something an application does in response to an input, would that not be considered its behavior, and so BDD?  Your reference to Telerik, are you talking about the Test Studio product?            Log in or register to post comments",5876
"11:47 pm May 13, 2014                    Another question please there is a fair amount of effort doing BDD, it obviously makes sense when developing a ""shelf"" product, but when it comes to one off custom projects, I would assume that there is a size cut off, when a project is small enough that it no longer makes sense to do proper BDD. Is there a general rule of thumb that defines what the size/effort cut off level is?          Log in or register to post comments",5876
"05:52 am May 15, 2014                    > is the Service portion in the pyrimad essentially BDD?  The acceptance criteria of user stories can be specified in terms of demonstrable service behaviors, so a service layer *might* be tested using BDD. However it could also be subject to unit testing...the use of mock objects may be appropriate for stubbing out services.          Log in or register to post comments",5876
"09:22 am May 15, 2014                    In most cases, acceptance & end to end tests are similar. We generally define the end to end test cases as the acceptance criteria. I have done similar stuff in Java:  1. Unit tests utilizing mocking frameworks: JUnit + Mockito  2. Integration tests: JUnit + services executed against a target environment. Depending on the type of integration under test, you can leverage concepts like in-memory testing. ex: H2 driver for database integration, citrusframework for JMS, Web Service, etc  3. End to end / Acceptance testing with Selenium  All the above different tests can be implemented in TDD (JUnit) or BDD (JBehave, etc) style.  Depending on the product under test, it is crucial to mix and match the different testing frameworks available.  Most of them are better suited for service layer testing, few for integration testing & rare for end-to-end testing.  It is also important to leverage the TCK provided by any product.  Test execution is part of the CI cycle (Jenkins + maven). Test results (JBehave reports are nice) available via Jenkins.  End to end tests are executed as part of post deployment step.  Not exactly what you were asking but thought of sharing the experience.  Regards,  Sukrut           Log in or register to post comments",5876
Log in to reply,5876
Messages,5877
"04:42 am May 15, 2014                             Hi everybody  I was wondering whether somebody could elaborate a bit on how to apply Scrum to an ""IT factory"" or ""IT service"". I will explain what I mean by that. Just to tell you a bit about myself: I did the PSM I assessment and I am working in the field of IT Project Management. I am interested to understand how Scrum can help me be better at my client's projects. But in this specific area I am having difficulties to understand how the concept of a ""product"" applies to an ""IT factory"" or an ""IT service"".  At my client we are trying to establish an ""IT factory"" that takes some input (data), processes it, and produces a new set of data. It's an analogy to a brick and mortar factory that takes some raw material, processes it, and creates some higher value goods that can be sold. It can also be understood as an IT service. It consists of some IT infrastructure (machines and software) that are embedded in the company's process landscape. So there are various clerks and IT specialists that need to do some work to get the factory going.  Coming back to Scrum, my problem is that I'm having a difficult time understanding how this ""IT factory"" needs to be understood as a product. Because if you don't have a product, you will not have a Product Owner who is a centerpiece of a Scrum team beside the Scrum Master and the Developers according to the Scrum Guide. What makes the situation somewhat more challenging is that there are suppliers who have some knowledge on the software side. The client himself has of course knowledge on the process side but is having a difficult time in understanding how the software will fit into the process landscape. The supplier on the other hand side is having a difficult time understanding the client's processes.  From my point of view this is a perfect situation to apply an Agile approach to resolve this chicken-and-egg problem. And I think to get started with Scrum I would just need to clearly outline the product. But what is the product in this setting? After having defined the product, who is the Product Owner given the ambivalence between client and supplier? I would be very happy to get your point of view on this. Thanks!",5877
"05:28 am May 15, 2014                    > From my point of view this is a perfect situation to apply an  > Agile approach to resolve this chicken-and-egg problem. And I  > think to get started with Scrum I would just need to clearly  > outline the product. But what is the product in this setting?  It's called an MVP, or Minimum Viable Product. To understand what makes an MVP tick, it's best to put aside the analogy of a bricks-and-mortar factory. Rather, the product in this setting is actually a series of lessons about the relationship between the organization and the market. That's what an MVP is...the minimum needed to test assumptions without wasting any effort.  In conditions of high uncertainty, there's little point in defining a product, even in outline form, if the hypotheses behind it are not subject to validation. What you need is a minimum product for testing assertions about customer wants and needs.  > After having defined the product  No, there is no ""after having defined the product"". There may come a point where you have validated a market assumption in terms of an MVP, at which point further incremental releases can be made to test additional assumptions and so maximize product value. In agile practice the definition of a product is an ongoing dialog. It's best to think in terms of incremental releases, each of which is a test that builds on an MVP or pivots to a new one, rather than a defined product.  > who is the Product Owner given the ambivalence between client  > and supplier?  The Product Owner should be someone with the authority and skills to define an MVP, to represent stakeholders and explain the emergent scope to the Development Team, to know whether or not an MVP is successful, and to maximize its value by capturing new product requirements in terms of an evolving Product Backlog. That role could be filled by either the client or the supplier or even a third party.          Log in or register to post comments",5877
Log in to reply,5877
Messages,5872
"11:26 am May 9, 2014                             Let’s say your company has 1 big product. This product is being used by thousands of other organisations/people. This product consists of many different modules. For the sake of argument, let’s say there are 10 modules.   Your company has 10 Product Managers, each of them responsible for 1 module, so in our case we have 10 Product Managers.  Now let’s say every Product Manager has create x features that they would like to see it get implemented. Note that these features are really high level, usually just a verb or some kind of buzz word. On Product Management level, they’ve gathered all the features (of every modules) and creates a prioritised backlog which is the yearly company roadmap.   Because your company wants to upfront communicate to your customers what is coming when, there is a necessity to know how many features can go into Q1, 2, 3 and 4.  Your company currently has 1 scrum team with a steady velocity.  What are the steps that needs to be taken to come up with a stable roadmap?",5872
"12:32 pm May 9, 2014                    > On Product Management level, they’ve gathered all the features (of every  > modules) and creates a prioritised backlog which is the yearly company roadmap.   >  > Because your company wants to upfront communicate to your customers  > what is coming when, there is a necessity to know how many features can  > go into Q1, 2, 3 and 4.   >  > Your company currently has 1 scrum team with a steady velocity.  > What are the steps that needs to be taken to come up with a stable roadmap?   Who are these Product Managers? It doesn't sound like they are Scrum Product Owners, because they appear to be serving a ""yearly company roadmap"" rather than customer interests. In fact they seem to be more keen on ""telling"" customers rather than listening and responding.  Roadmaps aren't stable unless requirements and market behaviors are predictable. That's rarely the case. So instead of trying to come up with a stable roadmap, it might be better to challenge the predictive and didactic behaviors being exhibited here. Rather than telling the customers what is coming up several releases ahead, promote a leaner pull system of small batches.  Customers can't be relied on to predict what they want or will purchase. Hence, in agile practice, the timely and incremental flow of value to meet demand is encouraged. If roadmaps are in force, the planning horizon should be reduced. This can be a gradual process but it nonetheless requires commitment at a strategic level.           Log in or register to post comments",5872
"07:43 pm May 9, 2014                      Who are these Product Managers? It doesn't sound like they are Scrum Product Owners, because they appear to be serving a ""yearly company roadmap"" rather than customer interests. In fact they seem to be more keen on ""telling"" customers rather than listening and responding.   RIght on the spot. 1. They aren't Product Owners. They are roadmap-driven Product Managers. They usually come up with a verb or if we're lucky an one-liner. After that it's up to the team (plus Product Owner) to translate this vague feature into relevant PBI. 2. They are indeed ""telling"" customers rather than listening and responding. The company has the feeling that they already know what customers want.   Roadmaps aren't stable unless requirements and market behaviors are predictable. That's rarely the case. So instead of trying to come up with a stable roadmap, it might be better to challenge the predictive and didactic behaviors being exhibited here. Rather than telling the customers what is coming up several releases ahead, promote a leaner pull system of small batches.   Can you give me an concrete example of a leaner pull system?  Should I see this as some sort of Roadmap Backlog with no dates? Purely prioritized items?  I've suggested this in the beginning, but the CEO's responds was ""the market is killing, so we need to be able to tell our clients what and when it is roughly coming. Doesn't need to be precise, but in terms of Q1, 2, 3, 4.   Customers can't be relied on to predict what they want or will purchase. Hence, in agile practice, the timely and incremental flow of value to meet demand is encouraged. If roadmaps are in force, the planning horizon should be reduced. This can be a gradual process but it nonetheless requires commitment at a strategic level.   I don't fully understand what you mean here. Please explain..           Log in or register to post comments",5872
"09:03 pm May 9, 2014                    > Can you give me an concrete example of a leaner pull system?   The canonical example is probably IMVU. Here is the case study: http://iacis.org/iis/2010/635-639_LV2010_1497.pdf.  I wrote an article on pull systems a couple of months ago: http://java.dzone.com/articles/pull-practice-0  > Should I see this as some sort of Roadmap Backlog with no  > dates? Purely prioritized items?   Essentially yes. Hard dates can exist in a problem domain (e.g. the start of an academic or tax year) but these should be the exception and not the rule.  > I don't fully understand what you mean here. Please explain.  Customers can't be relied on to know what they want. The further ahead you try and anticipate what they want, the greater the risk becomes of not meeting emergent requirements in a timely manner, and of work being wasted. The more long-term the roadmap tries to be, the bigger that window of exposure to risk becomes.  As you've seen, getting prioritized requirements is hard and it can involve a major cultural shift. The organization's strategy has to become one of responding to emergent needs, and minimizing the waste that comes from long term planning. Truly lean organizations are able to build MVP's that are barely sufficient to validate assumptions about what might be needed. If validated, then further work can be done...if not, then losses can be cut and the organization can pivot to a different MVP.          Log in or register to post comments",5872
"03:08 am May 10, 2014                     Essentially yes. Hard dates can exist in a problem domain (e.g. the start of an academic or tax year) but these should be the exception and not the rule.   I think for me the 2 most important questions would be:  1. What arguments can be used to convince management that we need to let go of upfront roadmap planning and start thinking of working in priorities? I know for a fact that my company is very marketing-driven. They need to set up deadlines so that their customers knows what features are  in the pipeline.  2. What arguments can be used towards our customers. Our customers uses our product (some of them as white label) to set up their own business. For them it's very important to beforehand know what is in the pipeline. Which important feature is coming out when. That's a bit of the culture of this company.           Log in or register to post comments",5872
"04:29 am May 10, 2014                    Does your company face much competition in its market? It sounds as though customers just get what they're given. Or are you mainly serving resellers, e.g. of ""white product""?  Reselling extends the feedback loop from end customers, so the response to demand and changing requirements can become attenuated. It can also buffer the risks I referred to.           Log in or register to post comments",5872
"01:57 pm May 10, 2014                     Posted By Ian Mitchell on 10 May 2014 04:29 AM  Does your company face much competition in its market? It sounds as though customers just get what they're given. Or are you mainly serving resellers, e.g. of ""white product""?   Yes, my company faces much competition in its market. I'm not proud to say that our Research & Procurement division comes up with the features they THINK the customer will want. So yes, basically we are telling the customers what they want. I've had many discussions with management regarding this way of working and it's not going to change. (no point in changing that part) So seeing that that is a given fact, we now have a backlog (which is our roadmap) that is priorities with high level features. (for the team these are epics and bigger)  Our product is being used by wholesalers/dealers and they are reselling it.            Log in or register to post comments",5872
"02:03 pm May 10, 2014                    What I've suggest now is the following:  1. We have our super high level backlog. This backlog consists of large epics, really large! Can also be seen as a project if you ask me. This backlog is actually a Kanban board.   2. The Roadmap backlog is prioritised.  3. Because its the first time we do this we dont have any historical data so its a big guessing how much can go into a quarter etc.  4. Once every 3 months Business and IT sits together where the Business place Value to the items, IT place they relative guestimate.  5. My idea is to built up historical data for next year and hopefully we can say something like... Ok the Roadmap velocity (which is of course NOT the teams velocity) is x points so we are able to take x amount of points into a quater.   Does this sounds like a good approach?          Log in or register to post comments",5872
"03:01 pm May 10, 2014                    I'd say that sounds like a *better* approach. Your super high-level Kanban board represents a portfolio view for management, and this is a strategic approach that has improved things for others in broadly similar situations. The metrics are beneficial. It could be a good first step.  What it doesn't do though is to tighten iterative-incremental feedback loops as far as possible. It sounds as though your company is a degree removed from the majority of end users of the product, because it uses resellers and wholesalers. This limits the ability of your company to receive timely feedback about market needs, so it takes a prescriptive approach instead, and attempts to formulate a roadmap for its product.  You said you want arguments you can present not only to company management but also to customers as well. I think that's an important point. Your company only represents part of the value stream because resellers are also involved. It's therefore the whole value stream that has to become leaner and more pull-driven, and not just your company.  In a competitive market, few manufacturers will stay in business for long if they think they can just tell dealers what is coming down the pipeline. They need to work with the dealers and the consumers to identify actual market needs, and to respond to those needs, in terms of quality and quantity of product, on a just-in-time basis. That's how top car manufacturers have been able to lean out their value streams and stay in business.  Failure to do this will presumably leave your company vulnerable to disruptive innovation by competitors. In other words, competitors will eventually find ways to respond to emergent requirements in leaner and more just-in-time ways, and with less waste being incurred. They'll master their value streams so that their feedback loops are tighter. Their roadmaps will be less prescriptive, and more geared towards emergence and learning about what customers need.  Perhaps if you highlight the risks that disruptive innovation can present to market-inefficient value streams, you might find an ear  that will listen.          Log in or register to post comments",5872
"08:04 am May 13, 2014                     Posted By Ian Mitchell on 10 May 2014 03:01 PM  I'd say that sounds like a *better* approach. Your super high-level Kanban board represents a portfolio view for management, and this is a strategic approach that has improved things for others in broadly similar situations. The metrics are beneficial. It could be a good first step.    What it doesn't do though is to tighten iterative-incremental feedback loops as far as possible. It sounds as though your company is a degree removed from the majority of end users of the product, because it uses resellers and wholesalers. This limits the ability of your company to receive timely feedback about market needs, so it takes a prescriptive approach instead, and attempts to formulate a roadmap for its product.    You said you want arguments you can present not only to company management but also to customers as well. I think that's an important point. Your company only represents part of the value stream because resellers are also involved. It's therefore the whole value stream that has to become leaner and more pull-driven, and not just your company.    In a competitive market, few manufacturers will stay in business for long if they think they can just tell dealers what is coming down the pipeline. They need to work with the dealers and the consumers to identify actual market needs, and to respond to those needs, in terms of quality and quantity of product, on a just-in-time basis. That's how top car manufacturers have been able to lean out their value streams and stay in business.    Failure to do this will presumably leave your company vulnerable to disruptive innovation by competitors. In other words, competitors will eventually find ways to respond to emergent requirements in leaner and more just-in-time ways, and with less waste being incurred. They'll master their value streams so that their feedback loops are tighter. Their roadmaps will be less prescriptive, and more geared towards emergence and learning about what customers need.    Perhaps if you highlight the risks that disruptive innovation can present to market-inefficient value streams, you might find an ear  that will listen.  What I have managed so far is that the management are slowly accepting that development work is equal to research and development. Therefore it will always be a unpredictable forecast. So in a way I think management has recognized that the roadmap isn’t fixed.   I understand the pull-system, but I have a bit of trouble understanding how this can be applied in our situation.  Are you suggesting that we drop the entire roadmap and purely do it “on-demand”. In other words, pull in work when there is “room”?   If yes, how can this be explained towards wholesalers, dealers, end users etc. whom are relying on “what will be developed this year”.            Log in or register to post comments",5872
"08:33 am May 13, 2014                    > Are you suggesting that we drop the entire roadmap and purely do it  > “on-demand”. In other words, pull in work when there is “room”?   In theory that's what should happen, because in order for a genuine agile transformation to succeed it must apply across the whole value stream. This requires strong executive sponsorship not only in your company but also with the wholesalers, dealers etc.  > how can this be explained towards wholesalers, dealers, end users  > etc. whom are relying on “what will be developed this year”.  By focusing on the identification and elimination of waste across the chain. The first step would be to get transparency on this before any concrete moves are taken. Once waste become visible it is easier to get buy-in for removing it. Waste includes a slow response to changing market conditions, building the wrong thing and not finding out in a timely fashion, rework, the batching of defects for future resolution, and so on.  Even so, that's a very tall order and value stream optimization remains hard to put into practice. The cultural shift is enormous and strategic. Sometimes the best you can do isn't to scrap the roadmap, but rather just to gradually shrink it. The key to this is making sure release feedback is taken seriously and factored into the roadmap as soon as possible. It then becomes clearer to stakeholders that planning outside of the feedback loop is largely wasteful, and that it is better to have a validated learning strategy instead.          Log in or register to post comments",5872
"09:27 am May 13, 2014                      In theory that's what should happen, because in order for a genuine agile transformation to succeed it must apply across the whole value stream. This requires strong executive sponsorship not only in your company but also with the wholesalers, dealers etc.   I think my company is still in the phase of being stubborn. We’ve hired a couple of Product Managers and heavily relying on them to tell us what the wholesalers, dealers and end users wants.   Our client base is extremely large and complicated. Plus we try to set up a very generic web application. If 1 feature is introduced EVERYONE will have access to this functionality. (of course this can be manually excluded for others)  Even so, that's a very tall order and value stream optimization remains hard to put into practice. The cultural shift is enormous and strategic. Sometimes the best you can do isn't to scrap the roadmap, but rather just to gradually shrink it.   Perhaps this is the best way indeed. Removing the roadmap would be too big of a step and too confrontating I guess.  The key to this is making sure release feedback is taken seriously and factored into the roadmap as soon as possible. It then becomes clearer to stakeholders that planning outside of the feedback loop is largely wasteful, and that it is better to have a validated learning strategy instead.  What I mentioned earlier? Like establishing some sort Roadmap Velocity so that we can guess how much work can be ""pulled"" in the quarter? The twist would be that every time we do a project release, feedback needs to be received          Log in or register to post comments",5872
"10:09 am May 13, 2014                    > The twist would be that every time we do a project release, feedback needs to be received  That's right, you need feedback so a course can be set and subsequently adjusted. Velocity should be understood not only in terms of speed but also direction.          Log in or register to post comments",5872
"05:54 am May 14, 2014                     Posted By Ian Mitchell on 13 May 2014 10:09 AM  > The twist would be that every time we do a project release, feedback needs to be received    That's right, you need feedback so a course can be set and subsequently adjusted. Velocity should be understood not only in terms of speed but also direction.  Thanks for your inside on setting up Agile Roadmaps.          Log in or register to post comments",5872
Log in to reply,5872
Messages,5874
"05:10 pm May 11, 2014                             I have just joined a  Scrum team, which comprises of the old team members and new team members. I was looking through the planning poker cards and the Question mark (?) has been removed and only cards with numbers 1 to 8 are used.   When I challenged this I was told by an old team member  this is how we do it, and if you cannot forecast you do not play a card.   I think that this is not correct as there is a danger of anchoring and also no discussions will take place when team members don' t fully understand whats being delivered.   My question "" is this correct? I believe all the card should be used as per the empirical process that's in place for scrum process.  Any feedback or suggestions would be greatly appreciated.  manny thanks",5874
"04:10 am May 12, 2014                    I agree. As you say there is a risk when it comes to anchoring. Everyone will have to give their input how else are we coming to consensus?          Log in or register to post comments",5874
"04:55 am May 12, 2014                    A Scrum Team can size stories however they like, and it's not unreasonable to limit the range to a subset of numbers from a planning poker set. However, it isn't reasonable to stifle discussion or to disfranchise a team member...so if the question mark card is removed, some other method for enabling discussion must be available.  Note that if backlog refinement is done regularly and well, all team members should be able to size Product Backlog Items when required to.          Log in or register to post comments",5874
"04:50 pm May 12, 2014                    Thanks for your input Gentlemen, I will raise this in the planning meeting today.  cheers          Log in or register to post comments",5874
"12:29 am May 14, 2014                     I agree with Ian. If they know their scale 1-8 and are aligned with it.  I have seen this as problem that Dev team always needs more clarity and everything written in the PBI before putting any story point for it. I would argue it with more discussion within team members during the grooming and don't spend more than 5-10 mins per PBI per session. You should groom the same PBI at-least twice before coming for the planning meeting.  Increase discussion as much as you can.  Cheers  Sanjay          Log in or register to post comments",5874
Log in to reply,5874
Messages,5875
"07:23 am May 12, 2014                             Hi,  As part of my journey to pass PSM I assessment I wanted to share some of my own thoughts.  This is unlike other assessments I have recently taken, such as Google Analytics. Whilst scrum is theory/methodology based, the assessment is based on understanding and approach to be a scrum master. I believe this is why I have seen forum posts from full time Scrum Masters studying like mad and coming up short on the pass mark twice whilst others complain that it is seems more about an understanding of English language than scrum theory. I would not disagree with either comment as having merit.  For me, like many others I have and continue to work within the management of digital/IT project delivery. Projects  get confused with stakeholder changes, many dependent suppliers with their own agendas and complex things with many parts. I don't have the perfect and whole scrum team experience, but I do apply many of the scrum practices in my work - increasingly so.  For the assessment, I read the scrum guide many times, bought a book and spent months attending a local scrum user group. I got the open assessment down to instant recognition and quick regurgitation of correct answers noting the nuances between the way the question is asked but with the same answers.  When I first took the PSM I I felt like a fish out of water as the open assessment is a small part of prep to make you think in a certain way, the full assessment wants you to think all the way!   When I absorbed the exam question content and aligned my theory study accordingly I felt less like the fish out of water. This forum among others helped rationalize my responses to the next go at assessment.  I took the assessment again on the spur of the moment at work when things were quiet because I felt in the mindset vocabulary of Scrum. Passing I note that Scrum.org had perfectly assessed and quantified my personality profile as well assessing that I am able to study theory and recall it! This is about skills with people to support the theory, not just the theory of it.",5875
"08:41 pm May 12, 2014                    John,  Congratulations on achieving the credential. And, thanks for sharing your perspective and insights on the assessment.  That said, I do hope Scrum.org Support team does take a look at the given feedback specifically, ""understanding of English language than Scrum theory"", as many of the participants have given similar feedback and there has been countless discussions on the ambiguities in the questions. Based on empirical process control, the three pillars of Scrum are transparency, inspection, and adaptation, and may be these need to be applied to the assessments as well.          Log in or register to post comments",5875
Log in to reply,5875
Messages,5871
"10:28 am May 9, 2014                             Isn't scrum supposed to be easy?  I have been on scrum/agile teams for about 8 years as a developer/architect consultant.  There have been many flavors, some successful, some not.  Along the way there has been research, training, intense debates and theoretical discussions.  Somewhere along the line I have gained a high level of confidence on what it takes to be a solid scrum/agile team, and it all comes down to simplicity.  I love the fact that we do our sprint and release planning up front, and then we get heads down, get the work done and then demo at the end of the sprint.  Easy, right?  One of the aspects that make this process easy is that in sprint planning, we COMMIT to what we will get done.  We don’t COMMIT to what we can’t get done.  And if we accidentally COMMIT to what we can’t get done, we spend the time to get it done. I have been having a problem with this lately. Less teams are willing to make the commitment, and task get moved from sprint to sprint causing a nightmare with TFS because there is no easy way that we know to move a task from sprint to sprint while keeping the metrics that we need.  There is a push to customize TFS, or move to Github in order to accommodate moving tasks and code from sprint to sprint.  If we just stick to our commitments that will solve everything, and life will be good and simple. The way I see it, the chickens are not committing to what they need, and the developers are not committing to what they can produce, and the scrum master is too eager to please all.  If we just get to a point where our sprint planning is efficient, and our commitment are real, I can get back to heads down development, and not more headaches!!!  Comments?  Am I crazy??????",5871
"12:37 pm May 9, 2014                    > Isn't scrum supposed to be easy?  No. As the Scrum Guide points out, although it is lightweight and easy to understand it is difficult to master.          Log in or register to post comments",5871
"07:36 am May 10, 2014                     I agree with Ian, it is easy and lightweight and does work, but isn't easy and lightweight to get working.  Thats the big difference, for it to be work everyone has to be singing off the same song sheet.  Its when ""say do"" turns into ""say don't do"" and commitment vs interest comes into play there are blips.  Scrum as a framework has lots of external mechanics at play, that are not included but essential.  Behaviors is critical but sadly a study in all its own right, its these variables that will affect how scrum is adopted.  Everybody is different is the take away.  Ken Blanchard sums it up nicely, not scrum but you can see what he gets at, perhaps run through this.  “There’s a difference between interest and commitment. When you’re interested in something,   you do it only when it’s convenient. When you’re committed to something, you accept no excuses; only results.”  Michael           Log in or register to post comments",5871
Log in to reply,5871
Messages,5870
"11:55 am May 6, 2014                             Generally speaking, if a customer wants a new feature added to the system then the PO needs to break up that new feature into multiple PBIs.  What advice do you have for doing this?  For example, if the new feature had a UI, would you recommend that the first PBI be to create the UI and populate it with dummy data?  Then the next couple PBI might be to work on some aspect of the backend to provide real data to that prototyped UI.",5870
"03:06 am May 7, 2014                     Posted By Dan Bolton on 06 May 2014 11:55 AM  Generally speaking, if a customer wants a new feature added to the system then the PO needs to break up that new feature into multiple PBIs.  What advice do you have for doing this?    For example, if the new feature had a UI, would you recommend that the first PBI be to create the UI and populate it with dummy data?  Then the next couple PBI might be to work on some aspect of the backend to provide real data to that prototyped UI.  Hi Dan,  Here an interesting artical by Christiaan Verwijs regarding splitting up PBI's. Especially the first part ""Horizontal vs Vertical slicing"".  Cheers, Chee-Hong          Log in or register to post comments",5870
"03:06 am May 7, 2014                    http://www.christiaanverwijs.nl/post/2013/05/17/8-useful-strategies-for…          Log in or register to post comments",5870
"04:53 am May 7, 2014                    Hi Dan,  what you describe is an anti-pattern.   The Product Owner should focus on incremental delivery of value, and dummy data does not deliver much value.  Try to find the minimal marketable feature. It should be a slice through all levels: UI, Backend, Database. It is easy to say and difficult to master.          Log in or register to post comments",5870
"05:27 am May 7, 2014                    Dan - the example you give is not a releasable feature and hence does not meet the definition of scrum. You need to either refine the PBI further or increase the sprint time to achieve your goal. You may even think of increasing the number of scrum team to achieve this but whatever you do the final outcome should be a releasable product.   the PO needs to break up that new feature into multiple PBIs The PO does not do this on his own - he along with the Development team will try and break up the new feature into multiple PBIs. This is an on-going process and keeps getting refined as more information is made available or comes to light.  What advice do you have for doing this? 1) Spend at least 10% of the sprint time to refine the PBIs  2) Take dependencies into account (both business and software) to prioritize work  3) Concentrate on the question 'what does the customer want?'   4) Try and frame the PBI into 'As a [role] I would like to [action] so that I can [outcome/result]'  Scrum is an iterative and incremental process - make the most of the flexible approach and keep refining your work.           Log in or register to post comments",5870
"05:23 pm May 7, 2014                    You should google for ""user story splitting patterns"". None of them proceed layer by layer          Log in or register to post comments",5870
"09:23 am May 9, 2014                    Hims and Ludwig are right. The PO should focus on the incremental release of actual value. When it comes to the elicitation of product backlog items, the whole team should be involved...not just the PO. Mike Cohn blogged about this latter point on Tuesday: http://www.mountaingoatsoftware.com/blog/4-reasons-to-include-developer…  The PO does have the specific responsibility of organizing the Product Backlog so that the formulation of useful and achievable Sprint Goals is facilitated during Sprint Planning.           Log in or register to post comments",5870
"10:54 am May 9, 2014                    if the new feature had a UI, would you recommend that the first PBI be to create the UI and populate it with dummy data?  Only if you badly need feedback on that UI.  The other posters have told why the answer to that is generally: ""No"". But on a few occasions, it might be: ""Yes"". It depends on where the risk is, where the biggest unknowns are; if you're not at all sure how the UI should work from the user's perspective, or whether your users will want the feature at all, you might want to create the UI first, get feedback on it (from a user panel for example) and iterate on that.  This is a bit on the outskirts of software development with Scrum. If you happen to find yourself in situations like that, I suggest you look into Lean Startup and Eric Ries' book by that title.           Log in or register to post comments",5870
Log in to reply,5870
Messages,5862
"05:12 am May 2, 2014                             I had a question regarding the output of the sprint planning meeting, would it be the sprint goal or the sprint backlog? What is considered as an output.",5862
"05:39 am May 2, 2014                    The purpose of the meeting is to provide a plan for the dev-team toward a goal. From my point of view, for the output, you need a sprint goal + a sprint backlog to have some confidence for reaching the goal.          Log in or register to post comments",5862
"08:24 am May 2, 2014                    The scrum guide states  Sprint Planning answers the following  What can be delivered in the Increment resulting from the upcoming Sprint?  How will the work needed to deliver the Increment be achieved?  The answer to the first question is Sprint Goal and the answer to the second is Sprint Backlog  The answer to Your question is Sprint Goal + Sprint Backlog           Log in or register to post comments",5862
"09:10 am May 2, 2014                    Now if I remember correctly, I did get this question in my examination and had to choose between the two. Would output mean something tangilble like a sprint backlog?          Log in or register to post comments",5862
"09:49 am May 2, 2014                    do you know the exact question - I am assuming that the question will have a clue as to which out of this two is correct.          Log in or register to post comments",5862
"01:43 pm May 2, 2014                    Hi Michelle,  Could be a long shot here on mixed backlogs?  Are we 100% sure were not confusing sprint backlog and product backlog in the question.  If the question is the following.  regarding the output of the sprint planning meeting,would it be the sprint goal or the product backlog?   What is considered as an output  From the scrum guide.  Sprint planning:  The  input  to this meeting is the Product Backlog.<----Input  After the Development Team forecasts the Product Backlog items it will deliver in the Sprint,   the Scrum Team crafts a Sprint Goal.  The Sprint Goal is an objective that will be met within the Sprint through the implementation of the Product Backlog  If it was a mixed question""pick all that apply"" A,B,C,D,E or combinations type there could have been a few choices to pick from A+B A+C B+D D+A type with red herrings using product backlog instead and Sprint backlog in the combinations.  Not having seen the question its a bit difficult to say, perhaps admin can shed some light on the actual question.           Log in or register to post comments",5862
"01:56 pm May 2, 2014                    What did admin say from the feedback from your exam, where was the weak points?  This will shed some light on the question.          Log in or register to post comments",5862
"06:59 am May 4, 2014                     Posted By Michelle on 02 May 2014 09:10 AM  Now if I remember correctly, I did get this question in my examination and had to choose between the two. Would output mean something tangilble like a sprint backlog?  On another note, it seems that a no. of questions in the paid assessments have ambiguity in terms of the answer choices, that raises question over the quality of the assessments. I do hope something is done sooner in this regard.   And, to your question, Sprint Goal as well as the sprint backlog are the tangible outputs out of the Sprint planning exercise.          Log in or register to post comments",5862
"10:07 am May 9, 2014                    > Now if I remember correctly, I did get this question in my examination and had to  > choose between the two. Would output mean something tangilble like a sprint backlog?  If I was forced to make a choice between the two, I'd be tempted to choose the Sprint Backlog on the grounds that this is a Scrum artifact, and the Sprint Goal is implicit in its formulation.          Log in or register to post comments",5862
Log in to reply,5862
Messages,5560
"03:58 am September 10, 2013                             Hi   I got confused while chatting with my friend on Most encouraged time of day to hold scrum Status Meeting  Will be it on after Lunch or early in the morning?",5560
"05:03 am September 10, 2013                    It should ideally be the first thing in the morning , but if your team is globally spread then we have to adjust the meeting when every team member is in office to join the meeting.          Log in or register to post comments",5560
"05:06 am September 10, 2013                    I think you are referring to the Daily Scrum or ""stand up"". This isn't a status meeting. It's a planning opportunity for the inspection and adaptation of the current Sprint, and it's important to handle it in that context.  Generally speaking most choose to hold it early in the morning, as it allows them to plan out the working day in the most timely fashion. However the encouraged practice is for Development Teams to decide amongst themselves when to hold their Daily Scrum. It's all part of being a self-organizing team.  New teams often look to a Scrum Master to provide advice or guidance on when to hold a stand-up. Assuming the working day starts at 9am, I generally suggest 9:15 or 9:30. This allows for individual preparation, and provides a bit of slack for people on a school run or who are stuck in traffic. Obviously you don't want people breaking their necks trying to make it in on time.          Log in or register to post comments",5560
"05:13 am September 10, 2013                    Thanks Dinesh and Micthell for your valuable comment          Log in or register to post comments",5560
"05:19 am September 10, 2013                    I agree with Ian on both points, first it is not a status meeting and second ideally it should happen as the first thing of the development day.  Cheers  Sanjay          Log in or register to post comments",5560
"06:41 am March 26, 2014                     Posted By ya_dinesh on 10 Sep 2013 05:03 AM  It should ideally be the first thing in the morning , but if your team is globally spread then we have to adjust the meeting when every team member is in office to join the meeting.  I agree.  If the Scrum Team is Local then face-to-face Daily Scrum meeting should happen first thing in the morning.  If the Scrum Team is geographically spread then usually mid day (after lunch) is suitable as it will enable entire Scrum Team to get together across multiple time zones.          Log in or register to post comments",5560
"11:52 am March 29, 2014                    Our Daily Scrum meeting is at 9:15 because then everyone is in the office and has coffee.          Log in or register to post comments",5560
"01:22 pm March 29, 2014                    Sandeep  Ian and Sanjay are quite right,  For some reason some teams assume it as ""another meeting or meeting"" even if you explain its not and its true purpose. I'm not sure where this comes from as a concept for some teams why they cant differentiate the two.  Ian rightly says should be handled with its true context.  ""It's a planning opportunity for the inspection and adaptation of the current Sprint""  It could be worth making a push with the emphasis on ""events"" as opposed to meetings, to try to separate the two.  Daily Scrum  The Daily Scrum is a 15-minute time-boxed ""event"" for the Development Team to synchronize activities and create a plan for the next 24 hours. This is done by inspecting the work since the last Daily Scrum and forecasting the work that could be done before the next one.           Log in or register to post comments",5560
Log in to reply,5560
Messages,5814
"12:54 pm March 29, 2014                             Is it possible to install a Tapatalk plugin for Scrum.org? Then it will be able to follow the Scrum.org forums with the Windows Phone Tapatalk app.",5814
Log in to reply,5814
Messages,5800
"07:07 pm March 20, 2014                             This is our first project using Scrum and Agile. I am the Program Manager of a software project.   I am being told by our Scrum Master that a process we are using is not allowable in Scrum.   The documented process is, during our 3 week sprints, when a story involving a new graphical design element is completed, a member of our UX Team reviews it to see if the HTML rendering of the design looks similar enough to the static comp of the design. If it doesn't, he documents some tweaks and the developers tweak the elements. If the tweaks the UX Team wants are greater than the few points allowed for tweaking, they go into a story and then are put in the backlog for a future sprint.   Our Scrum Master believes that this UX review cannot happen during a sprint, that UX must wait until after the sprint and then request the edits in the sprint review. He believes if he allows the current process, that he is not fulfilling his Scrum Master directive to remove impediments for the Scrum Team.   IF UX does not perform these reviews, the Scrum Team continues developing the design not as desired, and they have to perform rework in the next sprint. It also pushes out the UX timeline in the project.   It seems to me that Scrum is the enemy of the good - that it is so fragile that any flexibility to accommodate the best good of the product, will ""ruin it"".   It is growing resentment in the rest of the team. In their opinion, the Scrum Team doesn't play well in the sandbox.   Is Scrum really this rigid?",5800
"12:33 am March 21, 2014                    What does the development team think about all this?  Does the development team want their work to be as complete as possible by the end of each Sprint. If so, this almost certainly means anyone invested in the work (UX in this case) is part of the creation, right? Ideally, the team includes the UX person this can check UI fit and finish frequently and in small steps as the feature is created.  What you seem to be describing is a set of ""sign offs"" or ""gates"" that would prevent the development team from being completely done by the end of the Sprint.  Getting the feature complete without any remaining work to be done is critical to success for everyone.  It is hard to talk about things like this without real discussion, because the full context of your situation is probably not coming through in your post. There are always many sides to a story, after all.   Regardless, I encourage you to all work together in getting the feature done, with no work remaining, by the end of each Sprint.          Log in or register to post comments",5800
"03:23 am March 21, 2014                    What is your Definition of Done for these stories?  Scrum mandates that a product should be ""potentially shippable"" at the end of each Sprint. If a story is not shippable until it has been UX reviewed and tweaked, then it should not be considered as Done until that has happened.    As ElegantCoder says, the UX team should be considered part of the Scrum Team.  The UX review is not an impediment as far as the Product Owner is concerned, and by delaying the UX review until the following Sprint you would be introducing technical debt.          Log in or register to post comments",5800
"05:25 am March 21, 2014                    > Our Scrum Master believes that this UX review cannot happen during a  > sprint, that UX must wait until after the sprint and then request the  > edits in the sprint review. He believes if he allows the current  > process, that he is not fulfilling his Scrum Master directive to  > remove impediments for the Scrum Team.  Has the Scrum Master been told, or otherwise given the impression, that UX people cannot be assigned to his own team? If so then I can see why he might adopt this position. Let's examine things a bit more closely.  In the process you describe, a ""completed"" story is not actually ""Done"" until it undergoes UX review. The reviewer documents tweaks, and then the developers perform rework accordingly.  In lean and agile terms, this is waste. There shouldn't be any going back and forth between Development Team and UX Team members so developers can complete items on their own Sprint Backlog. Neil and Elegant Coder are right: in Scrum there should be a clear Definition of Done, sufficient for work to be potentially releasable. A Development Team should have all of the people and resources necessary to meet their definition, and without dependency upon other teams for achieving it. UX capabilities should be included in the Development Team if that's what Done requires.  So, if the Scrum Master believes that he can't bring UX people into the Development Team, he may conclude that the team's Definition of Done cannot address UX considerations. After all if it *did* include those considerations, his team would not actually be able to meet it under their own steam. That's why he might be trying to remove this UX ""impediment"". Perhaps it's something that impedes his team from completing sprint backlog items as per the best DoD they can genuinely achieve. I can't be sure of course, but it smells like this is the problem. The Scrum Master may perceive that the exclusion of any UX dependencies is the least-worst option available at the present time.          Log in or register to post comments",5800
"12:18 pm March 26, 2014                    The two key characteristics of 'Development team' are they are 'Self-Organizing' and 'Cross-Functional', which means the Dev team should have all the necessary skills to deliver the project. There are no sub-teams or any other role than 'Developer' in the development team, therefore the UX team should be treated as part of Development team and each member of UX team and Dev team should actually work together in a self organizing way as a one team. This means, the team should plan UX review/assessment as the work is getting 'done' instead of waiting all the way until end and then planning a review. As per Scrum Guide - 'Scrum recognizes no sub-teams in the Development Team, regardless of particular domains that need to be addressed like testing or business analysis; there are no exceptions to this rule'.          Log in or register to post comments",5800
"12:55 pm March 26, 2014                    First, thank you ElegantCoder, Neil, Ian, Pankaj, for your replies. You provided a lot of good insight for me to consider and learn from.   Yes, the UX person is on the Scrum Team. After a fifth meeting yesterday about this issue, I realized the issue isn't that Dev doesn't want the UX Scrum Team member to review/tweak, it's that they don't want her to consult with the UX lead who is not on the Scrum Team. What she provides as the UX Review Results contains edit requests from him. They want only her review results, not the non Scrum member. By the end of yesterday's meeting, the Scrum Team made the decision do a trial run of allowing this consultation during the next sprint to see if it negatively impacts the sprint.   So the meeting outcome went in my favor, good for me. But the Scrum Master is quite upset, and that bites for a number of business and interpersonal reasons. He started the meeting, which he was the administrator of, with, ""I am here with the Scrum Team's best good as my priority""(paraphrase).   The Scrum Team is 12 members of the 45 member Product Team. When they sit down at a meeting and the Scrum Master tells the non Scrum Team members that he is there with the Scrum Team's wishes as his chief goal and driving force (paraphrase, but very close), it completely turns the rest of the Product Team off to Agile and Scrum. Does this Scrum Master just have bad diplomacy or is this really how it's supposed to be?           Log in or register to post comments",5800
"01:37 pm March 26, 2014                    > The Scrum Team is 12 members of the 45 member Product Team  That needs some reconsideration. The Scrum Team alone is too big...and even then one of its members is deferring certain decisions to a non-team member. Agile practice is suffering.  I suggest refactoring these people into smaller Scrum Teams, preferably feature teams, each of which can *wholly* action the work given to them. They can draw this work from the same Product Backlog, and they should aim to integrate their deliverables each Sprint into a potentially releasable increment.  I'd be inclined to try and resolve these systemic problems before addressing any perceived interpersonal issues.          Log in or register to post comments",5800
"01:48 pm March 26, 2014                    The other team members are Sales, Marketing, Operational Readiness, Curriculum Development, Learner Experience, Solutions. Our product isn't the development of code, per se. The code is the means by which we deliver out product. The other members of the Product Team have no interest in the code development, by nature of their expertise, and they will not be managed by agile methodologies.   Question on your comment about the size of the Scrum Team. I'm curious as to why you say that. The Scrum Team is the developers, the Product Owners (2 managers of the developers), and 2 Scrum Masters, on for AX and one for UX.          Log in or register to post comments",5800
"01:51 pm March 26, 2014                    I should say, within the 12 that there are 2 Scrum Teams. I didn't explain well at all.  There is an LX and an AX scrum team.          Log in or register to post comments",5800
"03:31 am March 29, 2014                    In order to be a Scrum Team, each one of these LX, AX, or UX teams must be able to take a Product Backlog Item through to completion without impediment or dependency.  The hallmark of a ""team"" in agile practice is the ability to wholly complete the incremental delivery of work, under a process that is wholly owned by the team itself, and in accordance with a Definition of Done that is robust enough for each increment to be potentially releasable. It sounds as though this is not the case here. It seems that teams are decomposed by functional area, rather than organized by their ability to achieve cross-functional feature completion.           Log in or register to post comments",5800
Log in to reply,5800
Messages,5803
"09:09 am March 24, 2014                             In project  we have 10  functions  in  that  1st release  at agile sprint  only 8 functions are completed .  and rest of  2  are not Done ..  and at the time of second agile how we Combined previous  2 functions .",5803
"10:16 am March 24, 2014                    It appears that at the end of the first sprint you had 2 items of undone work. These items should be re-estimated and retained in the Product Backlog. Normally the Product Backlog will reduce in size accordingly, because the items are usually smaller as a result of any work on them that took place.  The Product Owner can then decide whether or not to ask the team to include these items in the next sprint. If they don't fit in with the goal for that sprint, he or she may consider it more appropriate to defer them until a later one.          Log in or register to post comments",5803
"11:00 am March 24, 2014                    This is a normal and usual case. Development team has the authority to re-negotiate the scope of the sprint with Product Owner during the Sprint execution. In your case, the development team should agree with Product Owner to de-scope these two Not-done functions and Development team then should pick this remaining two functions for the next sprint. The sprint goal for the next sprint will be crafted at the time of Sprint Planning meeting for the next sprint and will address these two outstanding functions. Product Owner will add these 2 functions back in the product backlog and Dev team will re-estimate these.            Log in or register to post comments",5803
"05:40 am March 27, 2014                    I also have a question about this case.   Those 2 cases will be re-estimated and return back to product log. So the re-estimated will happy in Sprint Planing Meeting only. Is my understanding correct?          Log in or register to post comments",5803
"03:02 am March 29, 2014                    During a Sprint Review, the work done and not done is assessed. This includes any work remaining on the Product Backlog, and so this would be a more opportune time for re-estimation than Sprint Planning.          Log in or register to post comments",5803
Log in to reply,5803
Messages,5812
"04:10 am March 28, 2014                             Morning,   Once a developer is finished with their coding and the feature is ready for UA testing, should the developer run through the UI before marking it ready for testing? Having the dev and the UATesters both testing creates waste, but sometimes the UI ""fails"" immediately and UATesters cant even perform their tests.  Thanks,   Justin",5812
"05:56 am March 28, 2014                    Hi Justin,   What’s the teams response when you mention about this issue during the retrospective?   Seems like there is a quality issue on your team, so be conscious that your developers are not cutting corners purely because they know that the stories will eventually be tested by an UA Tester.   Despite your feeling of producing waste, I would let the UA tester and developer run the test together. Wouldn’t call it waste but rather fixing issues on-the-fly.   Cheers, Chee-Hong          Log in or register to post comments",5812
"07:04 am March 28, 2014                    > Once a developer is finished with their coding and the feature is ready for UA testing,  > should the developer run through the UI before marking it ready for testing? Having  > the dev and the UATesters both testing creates waste,   No, it's waiting until development is finished before testing that creates waste, because it invites rework. Abdicating responsibility for the quality of your own code, and leaving it to someone else to check it, similarly leads to rework and waste.  If testing early (i.e. during development) reduces the need for rework, then the effort expended in doing so isn't wasted at all. Remember that in agile and lean ways of working the purpose of testing is not to find defects but rather to prevent them.          Log in or register to post comments",5812
"07:22 am March 28, 2014                    Ok, thanks for the feedback all.          Log in or register to post comments",5812
Log in to reply,5812
Messages,5804
"10:41 pm March 25, 2014                             Morning,   How different is the Open assessment compared to the PSPO 1 assessement? I understand that the PSPO is much harder, but the general advise on the forum is to do the Open assessments until you consistently get 100% and that is one of the indicators that you may be ready for the PSPO.   Is the Open assessment more in-line with the PSM one, as their are not many questions which deal with adding value?  I am consistently (last 10 attempts), getting 100% for the Open assessment, so how close am I to being ready for the PSPO? Or is there very little correlation between the two?  Thanks,   Justin",5804
"04:02 am March 26, 2014                    Hi Justin,  the open assessment is in-line with the PSM. However, many PSPO I questions are the same. In addition there are some PSPO specific questions about the PO's job, value, ROI, TCO etc.  If you attended a course, you have some material which you can drill down into. That helps as well. And, of course, you should know the Scrum Guide by heart.  Good luck!  Ludwig          Log in or register to post comments",5804
"04:12 am March 26, 2014                    Thanks for the info. Other than the suggested reading, can you recommended some short reading on the Value, ROI, TCO etc aspects?          Log in or register to post comments",5804
"05:04 am March 26, 2014                    I have only read the slides from the course and did pretty well. For the PSPO I this should be enough. The questions are not very complex, more like ""What is the PO's concern"", and the correct answer is ""ROI and TCO"" instead of ""being the interface between business and IT"".          Log in or register to post comments",5804
"05:12 am March 26, 2014                    Can you share the slides?          Log in or register to post comments",5804
"05:27 am March 26, 2014                    Hi,  A chap who was on one of my recent PSPO course suggested that this short video is a good overview of the PO role.  http://www.youtube.com/watch?v=502ILHjX9EE  Also, review the https://www.scrum.org/Courses/Professional-Scrum-Product-Owner/PSPO-Sub…  Regards  Simon          Log in or register to post comments",5804
"05:27 am March 26, 2014                    Hi,  A chap who was on one of my recent PSPO course suggested that this short video is a good overview of the PO role.  http://www.youtube.com/watch?v=502ILHjX9EE  Also, review the https://www.scrum.org/Courses/Professional-Scrum-Product-Owner/PSPO-Sub…  Regards  Simon          Log in or register to post comments",5804
"10:06 am March 26, 2014                    Open Assessment is good to start with and boost your confidence, however the questions there are too simple and not good enough to pass the exam. 10% to 20% of the exam questions will be tricky - situation based and you need strong understanding of the SCRUM concepts to ensure that you pass the exam.  You probably can secure around 50% by practicing Open Assessment but you need 85% to pass. So other than knowing the Scrum Guide line by line by heart, you can also take mock tests provided by external vendors like http://www.testtakeronline.com/ to assure you are there.           Log in or register to post comments",5804
"10:24 am March 26, 2014                    Thanks, although Test Taker does not have a PSPO mock test. Only SM. Do you know of a provider that offers a PSPO mock?          Log in or register to post comments",5804
Log in to reply,5804
Messages,5805
"05:25 am March 26, 2014                             As scrum master/coach, when are you triggered to coach teams (whom are new with scrum) to split up stories?",5805
"05:39 am March 26, 2014                    There are a number of indication:  - If a team is inconsistent in its estimate. This means that the item is to complex to render a unified estimation.  - If a item is estimated ""big"". ""Big"" in relation to the usual amount of story-point / item-point / t-shirt-sized / ... the team is able to deliver within a sprint. Rule of thumb: In a sprint a team should be able to deliver three or more items.  If we a going to multi-team scrum:  - If different teams cannot agree upon one estimate for a single PBI - assuming that the different teams had already found a common basis for joint PBI estimation. This indicate, that either the item isn't suited to be delivered by all teams (the customer feature, this PBI is addressing spans over multiple teams with very different team-profiles) and is therefore kind of pre-destined for only a small set of teams or the complexity is very different in the vertical slices.          Log in or register to post comments",5805
"05:45 am March 26, 2014                    Has anybody made the experience that you split up stories, and in sprint planning the dev team clips them together again? It seemed kind of weird to me...          Log in or register to post comments",5805
"05:59 am March 26, 2014                    Inconsistency in the estimation is something very common I guess. It’s usually a sign that the story isn’t well understood (yet). In this case I would expect differences in estimation, let the team talk discuss it and hopefully come to a consensus, estimation-wise.  Despite all of this, it still remain a best guess, because the reality is that the team have no clue in how big the story actually is.   Usually what I do is set up a threshold with my teams. We agreed that all stories bigger than 5 points is considered a “really big guess” so the team needs to split it up. It’s actually crafted in our DoD as   “Items can’t be bigger than 5 points to be included in the sprint”  The best way to motivate your team is “to make a game out of it”.   A “game show” where the team needs to split the stories up in the smallest possible way :)           Log in or register to post comments",5805
"06:13 am March 26, 2014                    Before a Development Team accept a story onto their Sprint Backlog, they must be satisfied that they can actually complete it. There's no point in a team trying to action a story if they know from the outset that it will only end up blocked. A common example is where the team do not fully own their process and will be dependent upon another team for part of the work to be done.  If a story does contain such a source of impediment, it can be worthwhile splitting the story up into component parts that the team *can* action. For example, if a story will become dependent upon another team part way through, consider splitting it into ""before"" and ""after"" stories. The ""before"" story could deliver value to the other team (so they can do their part of the work) while the ""after"" story delivers business value to the client.  This story-splitting approach allows a team to wrap impediments, and progress the work that they are actually in a position to do, when they are able to do it. However, it is not something to be done lightly as the value provided by ""before"" stories can become rather contrived. The more artificial the value being supplied to another team, the more likely it is that the associated capability needs to be brought in-house so the original story can be wholly completed.          Log in or register to post comments",5805
"07:38 am March 26, 2014                     It’s actually crafted in our DoD as    “Items can’t be bigger than 5 points to be included in the sprint”   Isn't the definition of ready a better place for this? If you accidentally include an 8 point story and it gets done except the rule that it can't be bigger than 5 points, what do you do? You can never shift it to ""done""...          Log in or register to post comments",5805
"08:33 am March 26, 2014                      Isn't the definition of ready a better place for this? If you accidentally include an 8 point story and it gets done except the rule that it can't be bigger than 5 points, what do you do? You can never shift it to ""done""...  Woops... my bad... I ment the Definition of Ready :)          Log in or register to post comments",5805
Log in to reply,5805
Messages,5728
"11:04 am January 29, 2014                             In many projects you can found a sprint 0 in which the technical infrastructure is build and perhaps the backlog entries get the state Ready.  I didn't find anything about it in the Scrum-Guide. So what is the right answer such a question come in the test?  Regards  Niels",5728
"12:50 pm January 29, 2014                    You can number Sprints however you like in Scrum. Having a Sprint 0 is no more a problem than having a Sprint 1 or even a Sprint -1.  HOWEVER:  What matters is that each sprint is timeboxed, planned, reviewed, subject to retrospection, and delivers a potentially releasable increment of value to the Product Owner. When people talk about ""Sprint Zero"" that isn't what they typically mean. Usually ""Sprint Zero"" is a euphemism for pre-sprint initialization, such as securing resources and getting a backlog in order, and in which no increment of product value is delivered at all. That isn't a genuine sprint, so for examination purposes you should NOT consider ""Sprint 0"" to be a valid Scrum construct.          Log in or register to post comments",5728
"06:48 pm February 15, 2014                    Sprint zero is a non-officual term used when starting a new team.  Getting an initial backlog in order, getting team space set up with machines for build, for automated testing, getting tooling in place, perhaps some training; a bit of actual work to verify that things work.  This is not 'official' Scrum but it is common.  We expect teams to be all ready to go after sprint zero to attack the real work.          Log in or register to post comments",5728
"03:32 pm March 24, 2014                    I agree with you guys. Technically speaking, there is no such thing like Sprint 0. This term is confused with the term “Release 0” . It makes perfect sense to talk about Release 0 as opposed to Sprint 0. For the exam, the correct answer is ""no"" there is no such thing as Sprint 0.          Log in or register to post comments",5728
Log in to reply,5728
Messages,5504
"04:33 pm June 30, 2013                             Hello All,  As I understand there are two types of questions: multiple choice, Yes/No and there is always (for each question)  only one correct answer??  Am I right??  Best Regards,  Sławek",5504
"03:42 pm July 1, 2013                    Hi Slawek  For multiple choice there will be at least one correct answer. It's possible that all of the supplied answers will be correct.          Log in or register to post comments",5504
"11:08 am July 5, 2013                    Yes that's right i believe.            Log in or register to post comments",5504
"08:38 am February 18, 2014                    Are there penalty points in multiple choice questions?  For example, There are 3 correct answers   Question:  A)Correct  B)Correct  C)Correct  D)Incorrect  The user chooses AB and D  Does the user receive 66,67% for pointing 2 correct answers  or he receives 33,33% for choosing 2 correct - 1 incorrect.          Log in or register to post comments",5504
"02:54 pm February 18, 2014                    I would be guessing but from the sounds of it you may not be ready as this is the same format the open runs.  You still have to get 85% to pass so theoretically should be hitting 100% in the open and know the framework before attempting the exam.  Open is the same format as the PSM to get you used to the type of questions, ""select all that apply"" ""which of these is false"", ""which of the following is true"" .  Practice the open exam and see how you fair with the questions, that doesn't mean to say if you can pass the open you can pass PSM as the PSM is much more broader for obvious reasons.  Michael           Log in or register to post comments",5504
"09:56 am February 19, 2014                    Hi - I do not believe that you get penalised for getting one wrong in a list of answers just no points          Log in or register to post comments",5504
"03:11 pm March 24, 2014                    Migenova,  Do not be misled; trust me you will be penalized for missing one correct answer if the question required you to select all that applies. Remember, you have 80 questions and you need to get about 68 of them correct to get to the pass mark. My experienced with Open Exam questions, has showed me that, missing one or two answers where you are asked to select all that applies will give you a score of zero in that question. Ideally, you should be aiming at getting all the required answers correct. The most important thing is to understands what the question is asking. Question such, select all that applies could as well mean all of the above.          Log in or register to post comments",5504
Log in to reply,5504
Messages,5792
"04:39 am March 18, 2014                             Hi All,  Here is a question from 'Practice Assessment: Scrum Open'   Who is required to attend the Daily Scrum?  Available options are :        A) The Development Team.        B)The Scrum team.        C)The Development Team and Scrum Master.        D)The Development Team and Product Owner.        E)The Scrum Master and Product Owner.  As per the result, correct answer is A). but I am not very convinced as Scrum Master is one of the Daily Scrum attendant along with Dev Team. Scrum Master is a facilitator and helps removing impediments to the development team including time boxing of scrum meeting.  Can anyone help me knowing what's the correct answer?  Deepak.",5792
"04:56 am March 18, 2014                    The Scrum Master is not only a facilitator, but also an agile coach who teaches the team to be self-organizing. There's no need for a Scrum Master to attend a Daily Scrum if he or she is satisfied that the team can proceed by themselves, and without the need for a facilitator to be present.  Of course, if the Scrum Master is also a member of the Development Team, then he or she would be expected to attend in that capacity.          Log in or register to post comments",5792
"02:32 pm March 24, 2014                    Deepak.  Remember, Daily Scrum is a forum where the development team update each other on what piece of task each person is working on and if at all there is something that is holding them back- ""Impediment"". Therefore, by definition and function, it is logical to conclude that it is only the development team  working on the task is required to attend the Daily Scrum. However, if the Scrum Master is also working on a task, then it would be logical for him or her to attend and provide any status. Note, this may as well work the same with the Product Owner. Otherwise, going by the key responsibilities of the Scrum Master and the self-organizing nature of the development team, Scrum Master is technically not required to attend the Daily Scrum meetings. He or She can still effectively fulfil her duty as servant of the development team without attending the Daily Scrum meetings.          Log in or register to post comments",5792
Log in to reply,5792
Messages,5799
"05:06 am March 20, 2014                             I'm just studying the scrum one weeks now I have a question is there any way to help PO and development team deliver project on time?  As we know every project have timeline and in scrum PO is responsible for managing and prioritizing the product backlog,  development team decide what can be done in this sprint. If we don't consider the overtime is there better way to help PO and development to catch the timeline? whether PO should emphasis the project progress in sprint plan meeting?",5799
"05:55 am March 20, 2014                    Hi wen peng,  I assume by delivering the project on time you mean you have a fixed scope, fixed deadline and fixed costs.  If you need to do that, Scrum is not the right tool. You may want to use the PMBOK and a PMI-certified project management professional (PMP). A predictive model works for projects which are relatively simple (e.g. for a software roll-out).  If you want to develop a product, you are probably in the complex area, where predictive models don't work. Here you need an empirical process framework like Scrum. But you have to accept that there is no ""delivering project on time"". There is only ""delivering the maximum value for the minimum cost while reducing the risk"".  Value is the PO's accountability, the SM helps the team to work productively and efficiently (costs) and the team reduces the risk by delivering a potentially shippable increment each sprint, so the risk is reduced to one sprint.  Best, Ludwig          Log in or register to post comments",5799
"06:10 am March 20, 2014                    I think you are not alone with your request concerning the possibility to combine PM and SCRUM.  Unfortunately it won't work. SCRUM got an completely different base. That's why there are lots of conflicts and problems to solve if a company tries to implement SCRUM.          Log in or register to post comments",5799
"07:26 am March 20, 2014                    > I'm just studying the scrum one weeks now I have a question is there any way to help PO  > and development team deliver project on time? As we know every project have timeline   Scrum teams use timeboxes, not timelines, and it isn't projects that are delivered...products are. This is why sprints are timeboxed and a potentially releasable increment should be available by the end of each one. The best single thing anyone can do to assist delivery is to promote this incremental release of value.  This allows the PO to achieve an early return on investment, reduce the cost of delay, and to mitigate delivery risk. So in Scrum value is to be found in delivery, not in following a predetermined timeline or schedule. Ken Schwaber summarized the Scrum position on this in the following interview yesterday: http://www.geekwire.com/2014/5-questions-ken-schwaber-co-creator-scrum/           Log in or register to post comments",5799
"11:31 pm March 20, 2014                    Thanks all. It's a wonderful place to learn scrum.          Log in or register to post comments",5799
"12:50 am March 24, 2014                    Hi Wen Peng,  The team can deliver on defined time but at the same time they can not deliver all of the defined scope. Fixed time and fixed scope does not work with Scrum. PO ensures that the highest value items is always on the higher order and remove irrelevant items, and the dev team ensures that they always deliver DONE software (according to the definition of done) every Sprint.          Log in or register to post comments",5799
Log in to reply,5799
Messages,5794
"05:57 pm March 18, 2014                             Is it possible that refinement and estimation is done by a part of the development team instead of the whole team?  And when two development teams uses one product backlog, is it possible that one team do the refinement and estimation of a few PBI’s and that the other team put these PBI’s on their Sprint Backlog?",5794
"04:04 am March 19, 2014                    Hi Franck,  why do you want a part of the development team do the refinement and estimation? Is it because they specialize in the particular technology needed for those PBIs?  The idea is that you take advantage of the cross-functional team, spread scarce skills and each team member is committed to the estimation.  If only a part of the team is involved, you loose a part of this advantage.  For the second question: If you do not know yet which team will plan a particular PBI, and you do not want to do refinement and estimation with two teams, you should at least have a common set of reference stories. Inspect and adapt: If the team is comfortable with the estimation of the other team, then it is possible.  Best, Ludwig          Log in or register to post comments",5794
"05:20 am March 19, 2014                    > is it possible that one team do the refinement and estimation of a few PBI’s  > and that the other team put these PBI’s on their Sprint Backlog?   The best qualified team should do the estimates, and in an agile way of working there are none better qualified than those who will actually do the work.  Sometimes tentative estimates have to be given for an incipient project with a candidate Product Backlog, where it is unclear which team will actually end up doing the work. If the backlog is left unsized it will not be well formed, since each item in it must be given an estimate. Who will do this estimation though?  The answer remains the same: the best qualified team should do it. In other words, the team that is most familiar with the problem domain and/or technologies involved should relatively size the backlog, and preferably refine it further. This will allow the Product Owner to order the items in advance of any team being assigned. Of course, should a different team be given the work, they will then need to estimate the backlog for themselves.          Log in or register to post comments",5794
"05:45 am March 19, 2014                    > If you do not know yet which team will plan a particular PBI, and you do not  > want to do refinement and estimation with two teams, you should at least have  > a common set of reference stories  This is a perfectly sensible option in the scenario Franck describes, where multiple teams share one Product Backlog. Unfortunately though it is prone to abuse, in that reference stories are sometimes applied to teams working on *different* Product Backlogs. In my experience, this can be a shady trick by command-and-control managers to commoditize story points for team comparison, and/or to make unreasonable predictions regarding stage-gated schedules. Estimation then no longer serves the team's purpose of incremental delivery.          Log in or register to post comments",5794
"07:39 am March 19, 2014                     In my experience, this can be a shady trick by command-and-control managers to commoditize story points for team comparison, and/or to make unreasonable predictions regarding stage-gated schedules.   Hi Ian,  I understand that this might become a problem. How would you solve this and get estimates for a Product Backlog on which two teams are working? Which one is the best qualified team? Would you track for each estimation, which team has done it, and if the other team develops the PBI, you would get a second estimate?          Log in or register to post comments",5794
"09:58 am March 19, 2014                    > How would you solve this and get estimates for a Product Backlog on which two teams are working?  The problem I'm referring to doesn't apply to multiple teams if they are working on the *same* backlog. In that situation, the estimates will relate to a single product, and it is therefore perfectly reasonable for the Product Owner - or any other stakeholder - to expect the backlog to be consistently sized. To achieve this, teams can combine their estimation sessions or use reference stories, exactly as you suggest. The books by Larman and Vodde give excellent further advice in this regard.  That said, it is of course possible for meddlesome managers to try and compare teams, even if they are working on the same product. The best response is to seek the PO's guidance on whether or not sufficient value is being delivered sprint by sprint, and to keep the control of the associated process within each Scrum Team. Remember that good PO's won't care about story points or comparing teams...they'll care about receiving actual value in the form of potentially releasable increments. It's important for a Scrum Master to put the organizational focus squarely on delivery, and away from the commoditization of any proxy measures, as this is a crucial part of enterprise agile adoption.  > Which one is the best qualified team?  In the situation I described, an unsized candidate Product Backlog will exist for which no team has yet been assigned. The best team for estimating it can actually be made up on-the-fly, by selecting people from a mix of teams who know the domain and the technologies best. These may not be the people who will form the team that will do the work, but they should be the ones in the best position to relatively size the stories and refine them further. That's the purpose of the exercise...it gives the Product Owner a backlog of the best quality currently attainable.  > Would you track for each estimation, which team has done it, and if the other team  > develops the PBI, you would get a second estimate?  I wouldn't track which team has done the initial estimation. There's no value in that information. The important thing is that the best people available gave their estimates and that's all anyone should care about.  If a different team go on to develop the PBI's then yes, they would need to re-estimate the backlog because they are the ones who will be doing the work.          Log in or register to post comments",5794
"05:07 pm March 22, 2014                    Thanks for the replies; it helps to implement Scrum in our organization.          Log in or register to post comments",5794
Log in to reply,5794
Messages,5797
"01:08 pm March 19, 2014                             I'm project managing a website build project for an organisation in the UK and we're currently in the tender process to appoint a supplier.  Have done pre-qualification questionnaires (PQQ) and are now at the initivation to tender (ITT) stage which I'm currently writing.  A sizeable percentage of suppliers that have shown an interest want to develop the site using Scrum - perfect as far as I'm concerned, you don't need to sell me on the benefits having recently passed my PSM :)  My problem is that we have a budget for development which we can't disclose to the suppliers and the tender process at the organisation I'm working for requires the bidders to specify costs by phase and give a quote accordingly.  Great if you're doing waterfall, but not if you want agile.    Our requirements are only partly defined (for 2 reasons - 1, i'm not a fan of waterfall and 2, partly defined is great for a scrum team, gives more scope to have a truly flexible product backlog).  The quote can't be per sprint, or daily rate, it needs to be an all-in quote. Bear in mind that not all requirements are fully defined.  You're beginning to see the problem aren't you ;)  Here's my question, how can I get or expect to get agile bidders to provide a quote when the tender process is set up for companies who set phases and cost per phase (even though these aren't likely to be realistic)?  Appreciate any ideas, please don't say ""change the tender process"" though - it's fixed and can't be changed.  Any help would be massively appreciated.  Thanks!  Dave",5797
"01:53 pm March 19, 2014                    Hi Dave,  first I see your situation positively, because you and your vendors agree on the way you want to collaborate.  Reacting to changes is more important than a contract, as you know. However a contract is still important.  A good practice for this situation is the following (known as agile fix bid):   You start with your partly defined Product Backlog.  Your vendors do a relative estimation for the items (where possible).  They choose one item and do all the refinement work for it. They decompose it, estimate it in hours (this compromise is needed for the following) and dollarize it.  Now they extrapolate their estimate to the whole Product Backlog and have a number for bidding.  When you set up the contract, you add two paragraphs (known as money for nothing and changes for free):  1. You (as the customer) can cancel the project at the end of any sprint for any reason. In this case, you only pay half of the remaining budget.  2. You (as the customer) can remove items from the backlog and replace them by items of the same size. You can do that at any time, as long the items are not yet in progress.  I hope you will share your experience with us.  Best, Ludwig          Log in or register to post comments",5797
"03:18 pm March 19, 2014                    We're currently exploring the same, we use to conduct most of this work internally, but as this is quite big its been put out to tender. At the first they took a very traditional waterfall approach to this, and wrote something called the ""Functional Performance Specification"", which is basically a requirements document we'd give to a company to formulate their bid. This has got pretty ugly and I've been asked to try and look at reducing it to something a bit more transparent. It currently stands at 90ish pages!   Because I work in a public sector organisation, we do have to produce a certain level of documents to meet our standardisation. Our feeling is that we'd do the bare minimum and represent out requirements as a series of ""Epics"", we'd be hoping to embed some of our software engineers into the organisation that wins the tender to provide support.   I'd be curious to hear how you get along at at finding a bidders as a lot like your organisation our tender process is pretty set in stone. Keep us updated!   Cheers,   Greg          Log in or register to post comments",5797
"03:39 pm March 19, 2014                    > Here's my question, how can I get or expect  > to get agile bidders to provide a quote when  > the tender process is set up for companies  > who set phases and cost per phase (even  > though these aren't likely to be realistic)?   I expect you'll get quotes, but they'll be from  bidders who know the fixed-bid system and how to milk it in terms of Change Requests. A supplier can double or triple their quoted commercials through CR's.  Are you aware of this, and is there enough of a budget to finance the CR's when they arise?          Log in or register to post comments",5797
"05:26 am March 20, 2014                    Thanks for your responses.   Greg touches well on the issues I'm having - I'm working in a public sector environment and tender process is set in stone. Ian - thanks for the reply, i'm more than happy with change, that's the whole idea of product backlogs so no issues with that. This is going to be a fluid project which is why I've said scope is not set in stone.  You mentioned fixed price tender - this isn't fixed price, we're expecting bidders to quote which is where my problems arise.  Let me re-phrase the issue:  1) Tender process is set in stone and can't be changed - bidders expected to provide a quote for work - this isn't a fixed price tender  2) We expect scope and requirements to change, so the specification gives some ideas as to what we want, but part of the requirement to is assist in speccing out work  3) I'm aware that whatever is quoted cannot be particularly accurate as we haven't given fixed requirements as we expect requirements to evolve. However, a waterfall supplier can simply quote £x for requirements, £x for dev, £x for testing, etc.    4) Agile works best when you can get a price per sprint, or a price for a set number of sprints - this allows scope to change in the backlog, however....  5) We CANNOT accept a tender response that quotes either £x per sprint, or £x for a total amount of sprints. The tender process means that a supplier has to break down actual costs (as in point 3 above). Chances of these being accurate are low, I'm aware of that, and budget will (probably) go out of control due to change (as Ian pointed out). However, the tender process is fixed.  Let me reiterate the example - we've got a second phase with a budget of £x for additional development.  No scope, no spec, we want to spend the money and get the best functionality we can for that money. A Waterfall supplier will pull a figure from the air, split this by phases and quote. An Agile company can't - they'd give a price per sprint.  This isn't acceptable for the tender - we need a total quote. Fixed price contract is not an option - we have to get best value on pricing as well as quality  This might be impossible to resolve (it feels like it!) but I can't be alone in this. Just about all public sector procurement follows the same rules so others must be going through the same. There's a huge risk that a waterfall supplier will be selected as no agile suppliers will be able to quote.  Looking at the bigger picture, this is a huge issue for agile in general and it feels like some organised lobbying needs doing to look at changing tender procedures.  In the meantime, i need to sort this asap.  Any more ideas?           Log in or register to post comments",5797
"06:49 am March 20, 2014                    > You mentioned fixed price tender - this isn't fixed price, we're expecting bidders to  > quote which is where my problems arise.   No, I mentioned fixed bid, not fixed price. The two are not the same, although I'm aware that the terms are sometimes used interchangeably. In fixed bid you collect the bids and choose the best contender. There's an article on the Scrum Alliance website which describes this situation:  http://www.scrumalliance.org/community/articles/2007/september/why-fixe…  In either case, the system can be played by suppliers who know perfectly well that requirements will change, and that Change Requests are an opportunity to increase the value of the project. This is often where they expect to make the *real* money.          Log in or register to post comments",5797
Log in to reply,5797
Messages,5798
"02:56 am March 20, 2014                             Hello,  I'm new in Scrum and I have some doubts about the contracts used during a scrum project. There are some king of  acceptance contract in each sprints or just one contract for all the project? And what kind of contracts do you ussualy use?  Thanks!",5798
"05:25 am March 20, 2014                    The Scrum Framework doesn't prescribe a contract model and it's fair to say that either fixed price or time & materials can be used...although it is certainly better to have an agile contract in place that provides for incremental funding. This is a big topic. I wrote an article on this subject a while back which you can use as a starting point:  http://java.dzone.com/articles/agile-manifesto-evolutionary  Also I suggest you google for the work by Gabrielle Benefield and Susan Atkinson on agile contracts.          Log in or register to post comments",5798
Log in to reply,5798
Messages,5763
"07:43 am February 24, 2014                             ""The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which aren’t. The Scrum Master helps everyone change these interactions to maximize the  value created by the Scrum Team. ""  I am sure these are all stakeholders and Management. But what type of interactions are these? Organizational, Functional? I am little confused.",5763
"08:34 am February 24, 2014                    This refers to *any* interactions between external stakeholders and the Development Team or the Product Owner. A Scrum Master has a duty to coach the wider organization in the best application of agile practice. For example:  - The Development Team must be allowed to own the process by which it delivers value, and to go about its business without interruption or impediment.  - The Product Owner must be allowed to own the Product Backlog and to prioritize it effectively for maximum return on investment.          Log in or register to post comments",5763
"01:24 pm March 19, 2014                    I have come across a video which says that Scrum Master is the one who asks questions to the Development Team during Daily Scrum. Is that true? From Scrum.org guide, I came across the information that Development Team alone is required in the Daily Scrum. Can someone clarify?          Log in or register to post comments",5763
"01:58 pm March 19, 2014                    Scrum.org is right ;)  When introducing Scrum, the Scrum Master may help the team to self-organize the daily scrum by reminding them of the questions to be answered. But the goal should be that the team can do it without the Scrum Master's help.          Log in or register to post comments",5763
Log in to reply,5763
Messages,5795
"06:21 pm March 18, 2014                             When backlog refinement and estimation is done before the Sprint Planning meeting and when the velocity of the team is known. Then what is the sense of the first part of the Sprint Planning meeting? The Sprint Backlog can be filled “automatically” as result of the velocity and the effort of the PBI’s, isn’t it?",5795
"04:14 am March 19, 2014                    Hi Franck,  unfortunately it is not that simple. Software development is a complex process and the velocity varies with many factors. Just to name a few:  - Who will be working on the Sprint Backlog?  - Has the Definition of Done changed?  - Are there any new or removed impediments?  - Are there scarce skills in the team?  - Technological and business coherence  A self-organizing team can intuitively give a good estimation based on previous velocity and the factors above. To my experience this estimation is much better than a calculated ""capacity"" based on the available man hours. The reason is that people vary in skills and velocity and there are complex social processes in a team.  Best, Ludwig          Log in or register to post comments",5795
"04:58 am March 19, 2014                    > When backlog refinement and estimation is done before the Sprint Planning  > meeting and when the velocity of the team is known. Then what is the sense  > of the first part of the Sprint Planning meeting?  I look at it this way: backlog refinement and estimation, when done regularly and conscientiously, will allow Sprint Planning to go smoothly.          Log in or register to post comments",5795
"10:47 am March 19, 2014                    ...and it's another opportunity to adapt. Furthermore it's important to ensure that there's a consensus due to prospective work for the next sprint. Sprint planning is your best chance to ensure that.          Log in or register to post comments",5795
Log in to reply,5795
Messages,5796
"06:24 pm March 18, 2014                             Our sprint contains different PBI’s and bugs without relation; the only relation is that the items are for the next release of the same product. Do we need a Sprint Goal? Can the goal be a generic statement like “Implement some new features and fix some bugs”?",5796
"04:25 am March 19, 2014                    Hi Franck,  no you do not need a Sprint Goal in this case. It won't improve anything, because the sprint goal is supposed to provide guidance and focus. For this sprint you have to live with that.  What you can improve for the next sprint:  The PO should create a vision for the product.  The PO should break down this vision into goals for releases.  The PO should select PBIs for the next sprint which bring him a step in the direction of the goal for the next release.  If he does a good job, it will be possible to craft a SMART sprint goal in the next sprint planning (specific, measurable, achievable, reasonable, timely).  Best, Ludwig          Log in or register to post comments",5796
"05:07 am March 19, 2014                    > the only relation is that the items are for the next release of the same product  This suggests that there *may* be a goal for the current sprint which has simply not been articulated. It seems that there is a clear motive for this increment to be released. This implies that someone, for some reason, made the decision to aggregate these items and make them available. Presumably there are forces at work here, and the rationale behind the selection of these items might not therefore be entirely random. Perhaps promises have been made to a certain stakeholder or group of stakeholders...in which case satisfying those interests might be the goal? Try doing some root cause analysis on this and see what comes out.          Log in or register to post comments",5796
"10:29 am March 19, 2014                    Hey Franck,  since you should aim to have a running increment with specific functionalities at the end of the sprint, you need a specific sprint goal as well.  Your proposal tu use...  > a generic statement like “Implement some new features and fix some bugs”?   ...won't be a good base to work agil. You need something precise to work with. As Ludwig wrote, your outcomes have to be measurable, among other things. Otherwise you won't be able to match goals and definitions of done.  Ask yourself e.g., how many features are the ""some"" you need to deliver at the end of the sprint?  To omit the sprint goal wouldn't be very helpful. It means you would miss out the effects of scrum. The more specific you define, the better you'll be able to identify impediments. And that means, you are able to react in a specific way.           Log in or register to post comments",5796
Log in to reply,5796
Messages,5791
"02:56 pm March 16, 2014                             The Scrum team I'm on had three developers and one QA test engineer (me). The bottleneck for our sprints has been QA testing -- to get around this bottleneck and still utilize our developers' time, we'll often have user stories that are strictly 'dev' user stories that are to be tested at a later time. My understanding is a user story should be 'potentially releasable' at the end of each sprint, and in the case just described, it would *not be 'potentially releasable' as the testing has not been completed. Getting developers to test is a no-go as they're not trained subject matter experts in the use of the software.   Am I correctly understanding the definition of 'potentially releasable'? Any insight is appreciated : )",5791
"06:45 pm March 16, 2014                    It's the end-of-sprint increment, rather than the individual stories, which must be potentially releasable. The Development Team are wholly accountable for the quality of the work they deliver...but that accountability only extends as far as their Definition of Done can take them.  A Definition of Done should not require developers to be subject matter experts, at least not in terms of understanding the product and the business. If the Product Owner wants to seek the advice of SME's before deciding if work is acceptable then it is his or her prerogative to do so. However, the PO would have to organize this in a timely fashion so incremental delivery is not put in delay.           Log in or register to post comments",5791
"05:33 am March 17, 2014                    To be clear: A no-go is to have user stories that are strictly 'dev' user stories that are to be tested at a later time.  In your described scenario, it is the Scrum Master's job to remove the impediment (bottleneck). Probably he would ask the team for ideas to solve this, and probably the solution will be getting developers to test.  In order to enable them, it is not necessary to make them SMEs. If they are not able to test it, how can they develop it? Obviously they do not know what the software is supposed to do. It is the PO's accountability to describe the PBIs clearly. If he is not able to do this, it is the Scrum Master's job to support him. The PO will probably have to talk to stakeholders. If the PO is not a SME himself, one possible option is to get a SME into the team, as the team should be cross-functional.          Log in or register to post comments",5791
"01:11 pm March 17, 2014                    I am surprised to 'Dev' user stories. As scrum does not differentiate user stories as Dev or QA. User stories are the captured requirements in a specific format to ensure Actor, feature and result expected to be captured. As part of it even acceptance criteria/test is also captured. If it has not done in that way, probably PO needs more guidance and support from scrum master here. Also, what is agreed as 'Definition of Done' in your case? Each sprint need to deliver features/userstories which are fully 'Done' as per agreed 'Definition of Done' between PO and Development. And PO decides if feature is potentially releasable or not.          Log in or register to post comments",5791
"07:08 pm March 18, 2014                    According to *our current definition of done, each user story, whether a ""dev"" or ""qa"" user story, is in a 'Done' state by the end of the sprint. For 'qa' user stories, the DOD is typically that all test cases have been passed and all bugs fixed and tested. For 'dev' user stories, that all development tasks within the user story are completed. Our Sprint DOD has been that all user stories are in a 'done' state by the end of the sprint, though it sounds like our practices need improvement.   What I understand at this point is that a user story should be one cohesive story describing a business objective. That user story contains all development and qa testing required to reach the business objective, and a 'done' state is typically that it's potentially ready for release at the end of the sprint. Let me know if I missed anything there...          Log in or register to post comments",5791
"06:44 am March 19, 2014                     Posted By golson on 18 Mar 2014 07:08 PM   What I understand at this point is that a user story should be one cohesive story describing a business objective. That user story contains all development and qa testing required to reach the business objective, and a 'done' state is typically that it's potentially ready for release at the end of the sprint. Let me know if I missed anything there...  You got it! Now you can improve. Define a definition of done for an increment, not for a sprint.  As you say, the content should include testing and bugfixing, because you need a potentially shippable increment.  This DoD helps you to decide, if a particular story is done. Basically, you can apply the definition for the increment to a story as well.  Best, Ludwig           Log in or register to post comments",5791
Log in to reply,5791
Messages,5652
"06:44 am November 27, 2013                             I got a little doubt over Product Backlog Item's estimates. I read somewhere that the DT is responsible for all the estmations but the PB items are created by the PO and Product Backlog items have the attributes of a description, order, estimate and value.  So who create the estimations for PBI:  (1) PO discussing with DT  (2) DT only   5) DT along with PO after understanding the PBI",5652
"08:46 am November 27, 2013                    None of those options. Responsibility for making estimates lies wholly with the DT but only after discussing the PBI with the PO.           Log in or register to post comments",5652
"04:42 am March 10, 2014                    In page 13 of scrum guide: ""The Development Team is responsible for all estimates. The Product Owner may influence the Development Team by helping it understand and select trade-offs, but the people who will perform the work make the final estimate.""  So I think ""2. DT only"" is correct option.          Log in or register to post comments",5652
"12:22 am March 11, 2014                    From what I understand the PBI's are given an estimation in story points during product backlog grooming and sprint planning sessions. These are just an estimate of size. The DT will then create tasks for each selected PBI and these tasks will then get time based estimates.          Log in or register to post comments",5652
"05:28 pm March 17, 2014                     Posted By Justin on 11 Mar 2014 12:22 AM  From what I understand the PBI's are given an estimation in story points during product backlog grooming and sprint planning sessions. These are just an estimate of size. The DT will then create tasks for each selected PBI and these tasks will then get time based estimates.  When estimate PBI's during the Sprint Planning the PO can't use the estimation as input to order the Product Backlog. I read that the DT can use 10% of time for refinement and estimate the Backlog.            Log in or register to post comments",5652
"05:38 pm March 17, 2014                    I have a related question.  We have two development teams and one product backlog. What’s best practice for refinement and estimate the backlog? Is it possible that team A do the refinement and estimation of a few PBI’s and that team B put these PBI’s on their Sprint Backlog?  When that’s possible than in my opinion it’s also possible that refinement and estimation is done by a part of the development team instead of the whole team. But I understand that is not recommended.          Log in or register to post comments",5652
"05:26 am March 19, 2014                     Posted By Franck van der Sluijs on 17 Mar 2014 05:28 PM   Posted By Justin on 11 Mar 2014 12:22 AM    From what I understand the PBI's are given an estimation in story points during product backlog grooming and sprint planning sessions. These are just an estimate of size. The DT will then create tasks for each selected PBI and these tasks will then get time based estimates.    When estimate PBI's during the Sprint Planning the PO can't use the estimation as input to order the Product Backlog. I read that the DT can use 10% of time for refinement and estimate the Backlog.    Correct. The backlog will be ordered in terms of value by the PO. The DT will then choose which tasks to put into the Sprint Backlog, considering the PO's priority order. The DT will try and do as many of the top items it can fit into the sprint, but can select lower priority items if they need to fill a small gap in the sprint backlog.          Log in or register to post comments",5652
Log in to reply,5652
Messages,5793
"08:30 am March 18, 2014                             Hi,  During the sprint planning meeting the team covers 2 topics:  1.	What can be done this Sprint?  2.	How will the chosen work get done?   Assuming the team has done the refinement session, so they knows what needs to be done and the items has been estimated.  According to the scrum guide:  After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a Sprint Goal. The Sprint Goal is an objective that will be met within the Sprint through the implementation of the Product Backlog, and it provides guidance to the Development Team on why it is building the Increment.  The team gives the Product Owner a forecast of what might be delivered in the sprint. But the confusion part, in topic 2:  If the Development Team determines it has too much or too little work, it may renegotiate the selected Product Backlog items with the Product Owner.  Can anybody explain why the team would craft the Sprint Goal first and then do the “second part”. (yes in our organisation our sprint planning meetings consists of 2 parts) Isn’t it more logical to set up the Sprint Goal after the second part is done? This way the team has more information about the items and can therefore provide a better forecast towards Product Owner.",5793
"08:55 am March 18, 2014                    Hi P.  The sprint goal and the forecast are two separate things.  The sprint goal is supposed to define the value the sprint is supposed to deliver. After doing the first part of sprint planning (forecast: What can be done), the team is able to estimate if the sprint goal is realistic. This sprint goal may not be changed during sprint (or else you can cancel the sprint). If you feel better with setting the sprint goal at the end of the planning, I see no problem with that, taking into account that you don't have to split the planning in two parts according to the Scrum Guide update from 2013.  The forecast is supposed to give the PO an idea how much can be accomplished of the planned work. As this is an estimation, usually the team will accomplish more or less than the forecast. However, this doesn't matter, as long as they meet the sprint goal. They can just renegotiate the forecast.  Best, Ludwig          Log in or register to post comments",5793
"09:28 am March 18, 2014                    > Isn’t it more logical to set up the Sprint Goal after the second part is done?  No, because the Sprint Goal should express the value to be delivered, and that should be decided by the end of the first part of Sprint Planning.  By the end of the second part, the Development Team should have a good idea of how much work they have actually taken on in order to achieve the agreed Sprint Goal. If there is too much or too little work then they should inform the PO of that fact. They can then replan the value to be delivered - and the work that will need to be done - so the intended goal can be satisfied.          Log in or register to post comments",5793
"09:34 am March 18, 2014                    Hi Ian,  I get your point. How do you do this if you don't split the planning? In the new Scrum Guide, the planning does not necessarily have two parts any more, it just has two subjects. In practice this means you can either pick all the stories and then create tasks for the stories as before, or you can pick the first story and create tasks for it and proceed with the next one. Would you define the sprint goal before the first story, in between or after the last one?          Log in or register to post comments",5793
"09:43 am March 18, 2014                    Hi P,  I fully understand what you mean. I get that question a lot from teams that are relatively new with scrum.   I think the most important thing to accept here (or in your case, to teach your team) is that nothing is guaranteed. Yes it may sound logical to first “workout” a couple of stories beforehand before giving a forecast/commitment, but this is nothing more than a false sense of security.   The reality is that during the sprint the team may (or may not) run into impediments and unplannable things like sudden sickness, overlooked criteria, technical difficulties etc. etc.   With all these unknown/unplannable factors, it’s way better to rely on your teams relative estimation and use this as an indicator to forecast the sprint and eventually craft the goal. Trying to get the items clear beforehand is a waterfall characteristic full of false securities and wastes which sounds logical but doesn’t work.           Log in or register to post comments",5793
"09:56 am March 18, 2014                    > How do you do this if you don't split the planning?  Good question. The revision to the Guide allows the interleaving of the two topics, much as you suggest. This potentially improves the emergence of a Sprint Goal and the planning of the work to achieve it.  Note however that the Guide predicates the second topic on ""having set the Sprint Goal and selected the Product Backlog items for the Sprint"". So there is still an element of before-and-after to the sequencing of the topics. Perhaps it begs the question: are the topics really not still Part One and Part Two after all?  Personally, I'd expect the Sprint Goal to be agreed once there were enough high-value user stories to comprise an MVP for the sprint. That's how I interpret the potential for emergence...but that is nothing more than my own take on this matter.          Log in or register to post comments",5793
"09:58 am March 18, 2014                     Posted By Ludwig on 18 Mar 2014 09:34 AM  Hi Ian,    I get your point. How do you do this if you don't split the planning? In the new Scrum Guide, the planning does not necessarily have two parts any more, it just has two subjects. In practice this means you can either pick all the stories and then create tasks for the stories as before, or you can pick the first story and create tasks for it and proceed with the next one. Would you define the sprint goal before the first story, in between or after the last one?  I would like my team to first forecast how many items they can include in the next sprint based on their average velocity. When that’s done the development team and PO come up with an awesome goal that basically sums up all the items together.   After that, I would like the team to think of a plan (usually subtasks) to meet Product Owners demand.           Log in or register to post comments",5793
Log in to reply,5793
Messages,5779
"12:27 pm March 6, 2014                             Hi,  I passed PSM 1 exam few days ago with 97%. I am silent reader of this forum and all the discussions that happen on this forum really help me get through this certification. Thanks to all you wonderfull people for providing valuable inputs to the queries posted.  Overall it took 40 minutes for me to answer all the questions and I revised all the answers for the remaining 20 minutes.  My Sources of preparation  1. Scrum Guide - Try to read multiple times and understand what is between the lines.  2. http://scrumtrainingseries.com/ - Listen to videos and answer questions during the videos.  3. Scrum Master Training Manual from Management Plaza - Available for Free on the internet - Provides more descriptive explanation of the Scrum Guide content.  4. Go through all the discussions on the Scrum.org forums regarding PSM 1 exam.  5. Take the Open assessment till you get 100% consistantly.  My suggestions for Scrum.org for improvement.  1. There is a high need for marking questions for review so that these questions can be reviewed at the end without going through all answers.  2. There is lot of scope available where the quality of e-Certificate provided can be improved. After all we are only getting an e-Certificate and the quality can definitely be improvised. This is my feedback based on the other certificates that I had seen. If you ever improve the certificate, consider issuing new certificates for people who are already holding the credential.  Thanks,  Subba.",5779
"05:46 pm March 17, 2014                    Congratulations!   Currently I’m preparing for the PSM 1 exam. I’ve already passed the open assessments a few times. Thanks for your tips!           Log in or register to post comments",5779
Log in to reply,5779
Messages,5788
"10:05 am March 13, 2014                             I have some questions about the Agility Path framework which I hope someone can answer. The reference I am using is the scrum.org Agility Guide.  Question: What is the co-ordination policy for Agility Teams regarding the Practice Backlog?  Context:  It seems that, although there can be multiple Agility Teams, there is only one Practice Backlog. This implies that each team should attend the same Sprint Review, since the Practice Backlog can be reordered and revised in that event. It further implies that the estimation of each backlog item must be a joint activity between teams. Assuming that these implications are true, is it then the case that *all* events...Planning, Weekly Scrum, Evaluation, Review, Retrospective, perhaps even the Sprint time-box itself...are shared across all teams? If not, what is the guidance regarding how Agility Teams should conduct their events independently and without compromising the integrity of the Practice Backlog?  Question: How are multi-sprint objectives managed?  Context: The Agility Guide says that it is possible for objectives to span multiple sprints. How do these relate to Sprint Goals, which may be evaluated in terms of a time-box? Who is accountable for setting these longer-range objectives? How are they evaluated, and when and by whom? Are there implications for the long-term batching of work across multiple sprints, if value cannot be released until these objectives are met?  Question: What is the policy regarding ""done""ness and debt?  Context: There is no Definition of Done for backlog items in Agility Path. However, there is an Evaluation Backlog containing ""the set of practices that need to be re-implemented based on their observed impact on the organization. The Change Team captures previously implemented practices it wants to strengthen."" Isn't Evaluation Backlog just a sink for undone work...that is to say, process debt? Why isn't there a concept of ""Done"" similar to that which has proven so invaluable in Scrum?",5788
"10:18 am March 13, 2014                    Hi Ian,  The agility guide is an additive framework, much like scrum. There has been a conscious choice within it to describe boundaries or constraints - so that each organisation mindfully implements adaptations suitable for them.  Multiple teams would scale in a similar way to scaling a Scrum Product Backlog. There would be a higher level Practice Backlog that would be decomposed in to smaller items on the Practice Backlog. It would be of benefit to have organisationally cross functional Practice teams as opposed to teams from one business area.  Long Running Objectives  Given the inherent complexity and uncertainty of organisational change, there will be objectives that will take longer than one month to achieve. There should be clear objective criteria that can be used to assess progress to the desired end state. As this is an organisational change, the progress will be continuous, enabling the business to improve the flow of value to the customer. The objective is to move the organisational mindset in to a state of continuous improvement, rather than aiming to achieve a final state.  Done   there should be clear achievement criteria, however you are never done improving.  Regards  Simon          Log in or register to post comments",5788
"11:37 am March 13, 2014                    > It would be of benefit to have organisationally cross functional  > Practice teams as opposed to teams from one business area  Please can you clarify what you mean by ""Practice Team""? Is that an Agility Team or Change Team? Or is it a Scrum Team, i.e. one of the teams that will ultimately apply the practices being rolled out?  Interestingly, it seems that Agility Teams are deliberately *not* cross-functional. Agility Path provides for separate business functions (domains) each of which can have at least one Agility Team.  > As this is an organisational change, the progress will be continuous...  This is quite different from Scrum, where the delivery of value occurs in discrete increments. Thanks for clarifying.  > there should be clear achievement criteria, however you are never done improving.   True, but it then begs the question as to whether objectives that span multiple sprints can ever be achieved...or more specifically, whether the work remaining for them can ever be summed. I'd be struggling to provide a figure for that, or a burn rate, if I knew undone work was lurking in the Evaluation Backlog.          Log in or register to post comments",5788
"01:00 pm March 13, 2014                    Hi,  My mistake, I meant Agility Team. You will need to scale these as required. They will be responsible for helping the organisation improve, and thereby create a better space for the Scrum Team.  I would disagree about the guidance on teams not being cross functionalAn Agility Team consists of a Product Owner, Change Team, and Scrum Master. The team is self-organizing and cross-functional. . The guidance regarding Domains is around the value proposition. It is the same principle that we coach in Scrum, with teams that can support the vertical slicing. I appreciate that the term Domain may confuse instead of make clear.  With the work spanning multiple sprints, I would encourage that this is treated like a very large Product Backlog Item (Epic), and decompose it down to the point where it is deliverable in a Sprint. You can size them, and in the sprint  planning decompose and then burn them down. The main highlight is that it may take several sprints to see the effect of the change programme, and the metrics being used may often be a lagging indicator. This is where using a subjective measure as an interim sanity check may be viable.  The intention of the guide is to remind people that change is difficult, needs to be structured, and that using a template/cookie cutter approach may not deliver the profound change in organisational mind-set needed. If you bury yourself in the immediate numbers you may not even see the competition passing you by.          Log in or register to post comments",5788
"05:18 am March 14, 2014                    > ...the metrics being used may often be a lagging indicator  If lagging indicators are supported then I can see the purpose in having an Evaluation Backlog. It means that work cannot be perceived as being ""done"" until subsequent sprints, and so some sort of debt register will be needed.  I think this might prove to be a bit controversial though:  1. The Evaluation Backlog could be cited as evidence that Agility Path *systematises* the incurral of waste. There's nothing in the Agility Guide which says that this backlog should be pro-actively reduced, or even challenged.  2. The use of lagging indicators means that a team cannot inspect the output of each sprint and adapt its process. There will be a delay in obtaining actionable metrics. This could also be seen as systematising waste, and as negatively impacting the process of validated learning.  Hopefully none of the above is the case, and I have got the wrong end of the stick entirely...          Log in or register to post comments",5788
"10:36 am March 17, 2014                    Hi,  There may be a lagging metric, however it should not be the only metric. There will be supporting metrics that are a combination of subjective and objective metrics.  If all your metrics for an aspect of undergoing change are lagging - then this is the dangerous situation that is described where you have waste being built in.  The backlog should be treated as a backlog, and continuously refined to ensure that it is in a healthy (refined and ordered) state - ready for work. It should not be over-refined so that effort is not wasted in refining an item that will not be done in the near future.  The Sprint output (increment) will be visible at the end of the Sprint, and all of the metrics should be reviewed. Any lagging indicators will be flagged to be monitored.  All of the Lean principles should be applied, and if there is something that you intuitively feel is the right way, then you should use your experience to guide you. The objective is to help the organisation to continually improve the ability to respond to a changing market, while improving the flow of work from idea to implementation.           Log in or register to post comments",5788
Log in to reply,5788
Messages,5789
"05:52 am March 14, 2014                             Hi !  How do you deal with the refinement sessions with your teams ?  As refinement can take up to 10% of the capacity of the Dev Team, do you make your refinement session transparent and visible as Product Backlog Items or Sprint Backlog Items or tasks in the Sprint Board ?  If yes, do you estimate theses and in which unit ?  By now, I don't have Sprint Backlog Items for refinement, but we just have tasks for it, with an estimate of a few hours, not to forget it.  I'm embarassed with have in the Sprint Backlog some tasks, estimated in hours, related to User Stories estimated in User-story Points AND some tasks (like a 2days-Spike or 1/2day refinement session) not related to any items expressed in User-Story Point.  Even if we don't make any conversion from USP to days, I don't feel comfortable with this situation.  Yours  Olivier",5789
"06:20 am March 14, 2014                    I'd be reluctant to have agile events, or ongoing best practices like backlog refinement, ride the board as tickets or as their payload. They don't represent business value to be delivered, nor are they technical tasks to be associated with any one PBI.  The deciding factor is whether you need high transparency over how team members' spend their time. Ideally you shouldn't need this kind of transparency at all, because the team should be accounting for value delivered, and not for each hour of each day that they work. However there can be rare occasions, especially in low-trust environments, where certain things must be made plainly visible to all. In these situations you can have a ""housekeeping"" placeholder in the Sprint Backlog against which Scrum Events and refinement sessions may be recorded. Keep them off the Product Backlog, as they do not represent business value and are not negotiable. The available sprint budget may need to be reduced to accommodate these items. For example, if you intend to spend 10% of Sprint time on backlog refinement, the budget available for inducting PBI's might be reduced by 10% accordingly.          Log in or register to post comments",5789
"06:02 am March 15, 2014                    Ian, thank you for your very wise and clear answer, as usual !          Log in or register to post comments",5789
Log in to reply,5789
Messages,5787
"03:23 pm March 11, 2014                             HI,  I became a certified scrum master in Jan. I am interested in getting more work experience to hopefully then apply for a position. I have looked into doing free work to also working along side an experienced Scrum master to watch as well. Does anyone have any ideas other than the ones I mentioned? thank you Jaron",5787
"09:52 pm March 11, 2014                    This thread may help:  https://www.scrum.org/Forums/aft/659           Log in or register to post comments",5787
"06:55 pm March 12, 2014                    Thank you sir very much. Jaron          Log in or register to post comments",5787
Log in to reply,5787
Messages,5784
"12:14 am March 11, 2014                             But why do most, if not all, diagrams of the scrum flow always show the ""development, 1 to 4 week build period"" section(between sprint planning and review), as an iterative cycle, with the daily scrum, being another iterative cycle which comes off that.   The only recurring event is the daily sprint so I can understand that being shown iteratively, but the 1 to 4 week build section is a straight timeline.   Like I said, small thing.",5784
"03:57 am March 11, 2014                    Hi Justin,  isn't the whole sprint also recurring? If you think of a sprint as a chain of events, starting with planning, recurring daily, and ending with review and retrospective, what happens after the retrospective? Usually the next sprint planning, so this can be thought of as a circle as well.  Best, Ludwig          Log in or register to post comments",5784
"08:29 am March 11, 2014                    Also we have the ""Agility Path"" cycle at the enterprise transformation level. It's the ability to inspect and adapt that makes these events non-linear.          Log in or register to post comments",5784
"08:40 am March 12, 2014                     Posted By Ludwig on 11 Mar 2014 03:57 AM  Hi Justin,    isn't the whole sprint also recurring? If you think of a sprint as a chain of events, starting with planning, recurring daily, and ending with review and retrospective, what happens after the retrospective? Usually the next sprint planning, so this can be thought of as a circle as well.    Best, Ludwig  Hi Ludwig,   I agree, but the planning and the retrospective are not included in the iterative section. It is only the section between these which depicted as being iterative.  These links show what I mean.   http://blogs.sas.com/hls/uploads/sdlc-scrum.png  http://thecriticalpath.info/wp-content/uploads/2011/02/mgs_scrum_wallpa…  http://www.ambysoft.com/artwork/agileLifecycleScrum.jpg  http://itintellectuals.com/wordpress/wp-content/uploads/2012/02/agile-p…  http://www.sadhanbiswas.com/myblog/wp-content/uploads/2009/06/2010/08/a…  And just to remind myself, this is a small thing.          Log in or register to post comments",5784
"10:24 am March 12, 2014                    OK, now that I have seen picture 3 and 5 I know what you mean. So your question is about the pictures.  I agree: Drawing the events outside the circle can be misleading.  Best, Ludwig          Log in or register to post comments",5784
Log in to reply,5784
Messages,5716
"02:33 pm January 20, 2014                             Hi all,  I've found a similar topic but which doesn't address my particular concern.   In fact I was wondering, if in the Definition of Done for our team, it was a good idea not to mark an item of the product/sprint backlog as done until it have been demonstrated (and approved) to the Product Owner.  Therefore, after having the code, the tests, the Acceptance Criterias fullfilled, we'll keep items In Progress until the PO will have seen the demo of these items. If he approves its state, we'll mark the item as done, otherwise still in progress if he wants us to change something.  What are the pros (if they are pros) and cons?  Thank you very much.",5716
"02:56 pm January 20, 2014                    Hi  This is how i would approach it, possibly people may have other thoughts.  If the definition of done is nailed down and water tight its not negotiable later in the sprint.  You should not have to change anything if its in accordance with your definition. If you don't do this you may never complete anything as the PO could say make change 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20........  DOD is what it is, its either done or it isn't done, but that is according to what is agreed not what fits the PO post agreement. Educate the PO on why, as you may never finish any task if the PO is having a bad day or a perfection drive, It could also impact on the team negatively and that's not a great thing.  Michael           Log in or register to post comments",5716
"01:01 am January 21, 2014                    Tasks on the Sprint Backlog are owned by the Development Team and as such it is their responsibility to determine when they are Done.   The Product Owner seeks a usable increment of value that meets the Sprint Goal. When an increment is accepted by the PO then the Product Backlog can be revised and resized, hopefully resulting in a burndown.  In other words, each Product Backlog Item is a placeholder for work that is to be ""done"" in order for an increment to be accepted. Those placeholders themselves do not get ""done"", they just appear and disappear on the Product Backlog and their scope and size may change.  Having said that, some teams do follow a convention of marking PBI's (e.g. user stories) as ""story done"".  This indicates that the PO has accepted the relevant portion of an increment as being functionally complete. Since the PO is responsible for PBI's, including their revision or retirement, only he or she can assert when these placeholders are ""done""...although the Development Team are responsible for resizing any that remain.          Log in or register to post comments",5716
"03:04 am January 21, 2014                    Thank you for your answers I'll discuss of that with my team and I'll come back if I have any more questions.          Log in or register to post comments",5716
"08:19 am January 21, 2014                    If the team is self organizing then usually there is no need to keep the items ""in progress"".  Sprint backlog items with status DONE means ""Ready to be Shipped"". Thus it's better to use this after the PO has accepted the Sprint. Although there are more intermediate statuses possible like ""Tested"", ""Ready for Demo"".   Definition of done should be decided with the Scrum team and PO.          Log in or register to post comments",5716
"01:51 pm January 21, 2014                    All,  Few more thoughts on this process..  Scrum Team collaborates and agrees on ""Definition of Done"" (PO is part of the Scrum Team).  As far as ownership of the product backlog Items are concerned,   1. Sprint Backlog Item or story with acceptance criteria is owned by the Product owner. If you are using the Visual Studio for Scrum, you would see statuses like New, Approved, Committed and Done.   The way our team uses is like this  New - When a product owner creates a story  Approved - When the story description and Acceptance Criteria is approved by the stakeholders.  Committed - When the Development Team committed to that story during Sprint Planning  Done - When PO accepts that the story is complete during Sprint Review.  While the Scrum Team are encouraged to show demos through the sprint execution, normally the PO waits until the review meeting to mark the story/backlog item as ""Done""  Tasks under the story are owned by the development team.  Development Team has the liberty to mark the items under the story as complete/done, they don’t need to wait for PO to confirm. This is important that items are marked complete as and when it is done, so that the Burndown chart makes sense.           Log in or register to post comments",5716
"05:58 am January 22, 2014                    Thanks, it is good to see that it raise the same questions to other people than us :)  @AG it sounds like a good idea especially as we are using TFS to store our stories. Thanks for that idea !          Log in or register to post comments",5716
"12:46 pm January 30, 2014                    We have used the same strategy as @AG mentions although with different tools. Eng would mark the story as completed and As a PO I would attend the sprint review meeting and make sure that most of the A/C criteria are hit. This would allow the Eng team to get the story points for velocity. I would then separately go through the A/C in more details mark the items as accepted. This could be delayed and go a few days into the next sprint.          Log in or register to post comments",5716
Log in to reply,5716
Messages,5726
"02:47 am January 29, 2014                             Hi,  I've got a question regarding my PSM-I-assessment.  I passed with 94%, but my goal was 95% (I heard that when passed with 95% I would be allowed to do a Scrum trainer assessment).  Now my question is: my result says I got 76 points of 81, but as I remember I answered 80 questions.  If it were 76 of 80, than I would have the 95% I need.  How is it that there are 81 possible points with 80 questions?  Thanks and best regards,  Stefan",5726
"02:31 am January 30, 2014                    Hi, I contacted scrum.org and they told me, that there are some possible questions in the pool that are rated 2 points, so it's possible to have more than 80 points per assesment.  Best regards,  Stefan          Log in or register to post comments",5726
Log in to reply,5726
Messages,5576
"10:01 am September 24, 2013                             Hi,  I am trying to implement Scrum for a software project, and a bug has arisen which the product owner identifies as more important than anything else, including items in the current sprint.  What would people recommend be done in this scenario?  There are about two days remaining in the current sprint, but the product owner is keen to get this bug resolved as it is holding up users of the previous software release.  Any advice greatly appreciated.",5576
"10:57 am September 24, 2013                    The team need to work on the bug, and explain to the Product Owner that the planned Sprint Goal is likely to be compromised as a result of this action. It sounds as though the PO already knows this.  Alternatively, the Product Owner has the option of terminating the Sprint now, working with the team to release the maximum value possible from the work that has been completed, and asking the team to use the remaining portion of the timebox to work on fixing the defect.  Terminating a Sprint is a drastic option. It usually makes more sense to work on the bug and revise the Sprint Backlog accordingly. The Sprint Backlog is essentially a forecast; it is understood that unplanned critical events can occur mid-sprint and that teams must accommodate them. The important thing is to make sure that the root cause of the defect is understood so that the team can adapt accordingly, and thereby make similar problems less likely to happen again. The Sprint Retrospective is a suitable inspect-and-adapt event for this purpose.  The Bradley Bug Chart goes through these scenarios:  http://www.scrumcrazy.com/One+way+to+handle+Bugs+and+Production+Support…          Log in or register to post comments",5576
"11:10 am September 24, 2013                    Given that you are near the end of your Sprint, I would suggest not terminating the Sprint as you probably achieved some value of completing some of the stories if you have been managing work in progress successfully.  Getting any value from the Sprint, is better than delivering no value.  If you read the beginning of the Sprint, and it would compromise their entire Sprint then I would advise looking into terminating it if it made sense...  Just my $.02          Log in or register to post comments",5576
"04:07 pm January 29, 2014                    I agree if the PO has raised the bug with highest priority then it needs to be fixed in the current at the risk of not completing some of the backlog items. Given that you are the tail end of your sprint you are probably working on relatively lower priority items and moving them out wont be an issue.  However a few thing ...  1) In spirit of the Scrum transparency the PO should provided enough context as to why the defect is high priority.  2) Ideally defect prioritization should be a joint effort . What worked best for me was the case when I had a weekly meeting where all the defects in the backlog were reviewed . The meeting was attended by PO, SM , tech lead, SMEs , person who filed the defect and any one else who might help clarify the priority of the defect. The meeting helps in clarify the source of the defect as well as cost benefit analysis for the PO and then a joint decision was taken when to fix it or defer it to next sprint.  3) Verify that it is really a defect. Sometimes an enhancement or even product feature is disguised as bug. Again  (2) above will help in clarifying this.  4) The effort is small enough. Most defect should not take more than few hours of dev time to fix. If its more then that probably its a missed requirement          Log in or register to post comments",5576
"01:37 am January 30, 2014                    I would suggest not terminating the Sprint as you probably achieved. If new sprint update is released then check out what is new in this. Follow Scrum roles and fix this bug first this is very important to implement Scrum for software.          Log in or register to post comments",5576
Log in to reply,5576
Messages,5571
"06:16 am September 21, 2013                             Hi All  just joined :-)  We have a real dilemma at the moment and we are having to break scrum rules. So need some input from experienced scrummers.  The product we are developing is really 2 in 1. We have an API and a browser app. The PO's don't consider the API, they only define the features. As a team we take the feature and split that into an API requirement and a FrontEnd requirement.   Our teams are NOT cross-functional. We have dedicated resources for DB / API / FE as we feel they are very specialised for our application needs.  So, in order to deliver the feature in one sprint, we would need to get all the required dev resources doing their work in time for that sprint. The problem is that we often end up with a feature that is FE heavy, but the APi needs are minimal. So if we stuck to the rules, the FE would be busy, but the API guys would be sitting around. The normal requirement would be that you create the FE and API as sub-tasks. However, this means that we cannot pull in other stories as they would never complete - the API sub would get done, but the FE sub would not.  So what we end up doing is that we split the feature into two stories - an API story and an FE story. Now we can pull in the right amount of tickets for each type of developer without the fear of not completing the whole story. What tends to happen is that the API guys prepare API tickets well ahead of the FE guys, who pick these up a sprint or two later.   This method works, but our PO's hate it as does not give them a single story encompassing the whole development stream, and we don't atually complete the feature in one sprint.  So, do we follow the purists and stick to the rules, or do we go with what works practically?  Z",5571
"07:17 am September 23, 2013                    Let's be clear about something from the outset. The problems the team is facing is a consequence of their not being cross functional. Team members are working in silos (DB/API/FE) and cannot ""go to where the work is"". As a result, each silo progresses at a different rate and their deliverables fail to synchronize at Sprint closure.  So, the right thing to do is to cross-train the team in order to remove these silos, and get them to work in a leaner and more efficient manner. However, you seem to have ruled this out as an option, which means that we must search for a reasonable alternative.  Now, you've made it clear that your current set-up is working in a practical sense. That's great, because it allows us to reduce the problem under immediate consideration to one of backlog management. That's where the pain is actually being felt...the PO's are finding API user stories on the Product Backlog which they do not value, and to which they quite reasonably object.  This means you need to get those API ""stories"" off the Product Backlog. Here are some options:  - treat API work as ""Developer Stories"" which the team manage themselves; they would plan them into Sprints themselves and reduce the available budget for User Stories accordingly.  - handle API development as development spikes with associated tasks.  Now let's consider a third option which addresses the silo issue:  - refactor the team so that the API development is handled by an separate API development team.  I'd suggest refactoring the team as a first move. You've said yourself that there are really two products in one, so it seems like a defensible direction in which to head. Product ownership for the API team would presumably be vested in the senior designers or architects. It would mean using component teams rather than feature teams, but in the absence of appropriate cross-functional team skills I suspect it might be the best option.          Log in or register to post comments",5571
"04:49 pm January 29, 2014                    From the Product backlog prioritization point of view, I would assume that the FE features are prioritized at a much  higher level then the API backlog. Usually product management would want new features delivered faster and would compromise on the API or integration resources in order to complete the FE features.   I am assuming that there is also a Middle ware layer in your FE/DB/API split ? The requirement usually is that the system behavior should be the same for FE and API requirement. If you deliver the FE and API in different  releases than there is a one issue that I have seen come  up.  There might be some requirements that are implemented as FE layer validation. I you implement the API in a different sprint some of this validation can be missed and data quality issues might  arise. From this point of view it is better to complete the API feature long with the FE layer and best way to  solve this is to have a  cross-functional team.  Have you seen this in your case ?  The more complex scenario is that you have a core product and it has integration  with some other third party system to provide some of its UI e.g BI reports. The API part of it can get complex if you dont get the buy in from the third party developers.           Log in or register to post comments",5571
"01:24 am January 30, 2014                    If you and your other team members having good grip in DB / API / FE then its will not so difficult. When you work on this keep communicate each other and discus what are you doing. A good team can make good result.          Log in or register to post comments",5571
Log in to reply,5571
Messages,5585
"05:14 am September 30, 2013                             I am currently doing the role of a scrum master. The team is using TFS to track the backlog and they break down the PBI's into multiple task's and assign the hours against each. Now, the team is achieving the sprint goal but they are not updating their task state (WIP, Done etc) and reducing the hours which are left on that. It looks like they keep on forgetting that or may be its not something worth it for them. I have to remind them at times to update that and its done then. So, I just wanted to understand what is the most effective way so that team keeps on updating tasks daily, so that everyone is updated with how much work is remaining?",5585
"05:31 am September 30, 2013                    Most standups happen around a Scrum board where it should be obvious if task states are not being updated or burndown looks poor. If you're using TFS rather than a physical board, you should have a screen nearby with this on. Then you can spend 5 minutes before the standup going round the developers and asking them if they have done their preparation.   Remember to coach the team that board updates should be pull driven and not pushed to the next state.          Log in or register to post comments",5585
"06:39 am September 30, 2013                     UrbanTurtle is a good tool which gets integrated with TFS for showing the tasks movement. It works like a scrum board.  Project it during your standup meeting.  Cheers  Sanjay          Log in or register to post comments",5585
"11:02 am October 2, 2013                    You can always rely on 3rd party tools, or you can have iterative approach, where you help others to adjust by small steps like - ask everyone to update their current work state at the end of daily stand up meeting (if doing those). Then after few weeks ask to update in the day end. And continue till you reach behavior where everyone will update their work before asked.          Log in or register to post comments",5585
"02:09 pm October 3, 2013                    Hey,  Could you comment further on this idea:  "" Remember to coach the team that board updates should be pull driven and not pushed to the next state.  Subject""  I like the term ""pull driven"" but not exactly sure what you mean.  Thanks,  TF          Log in or register to post comments",5585
"04:11 pm October 3, 2013                    ""Pull driven"" means that work flows through the system as a result of demand. At each stage in the value chain, somebody should actually want the prior output as an input and be able to use it. This stops waste accumulating.   Pushing work leads to the buildup of excess stock on hand which is wasteful.           Log in or register to post comments",5585
"12:10 pm January 29, 2014                    If your team is breaking down the stories into tasks and also estimating them that that is great. If they are also meeting the sprint goes and keeping the stakeholders happy at sprint review what more can you ask for.   I would update the tasks myself based on the daily stand-ups.  If the above paragraph is true for your team than I would calculate the number of hours needed to be burned down each day and ....          Log in or register to post comments",5585
Log in to reply,5585
Messages,5725
"11:00 pm January 28, 2014                             Hi,  Please see attachment.   My query is with option B, for this statement to be true, does this not assume that other sections of the business are also practicing Scrum and are involved in the product backlog. Example, this statement assumes that marketing has created the product launch advert to synchronize with the shippable product.   Or am I missing something?   Thanks,  Justin",5725
"11:42 pm January 28, 2014                    Where is the attachment you ask? Good question. Are there any rules which stops attachments being displayed?          Log in or register to post comments",5725
"12:22 am January 29, 2014                    It's a reasonable assumption in Scrum that other Development Teams might be using the same Product Backlog as your own team, and that they may have very different skills (such as marketing). It's also reasonable to assume that collaboration must occur with such teams in order to meet a common Definition of Done and incremental release schedule.          Log in or register to post comments",5725
Log in to reply,5725
Messages,5720
"04:54 am January 24, 2014                             After my PSM assessment there are still some unclear things. I don't fully remember the questions and answers, but that is what I want to know:  1. Which task better fits to the PO role?  - Provide Feedback  - To advise with stakeholders  => I'm sure, that both is quite important. First the PO must explain all questions and details of the PBIs to the DevTeam. Otherwise they cannot work. Second the PO represents the interests of all stakeholders, so he/she must know what they want and explain it to the team if necessary. But answering that question I must select one of them (there were also other answers that I has excluded)  2. One person makes problems in the DevTeam, who can fire that person?  - DevTeam  - Management  - s.o. else  => Here it was difficult to decide. In my opinion the DevTeam should talk about the problem and try to resolve it as a self-organizing group. If this is not possible they should try to satisfy the person to go by itself. The DevTeam has not the rights to fire a member, but the decision should come from them. The only one who is able to fire a person (or to assign it to an other team) is the management (independent on scrum). So here it is quite difficult to select the ""right"" answer. For scrum I would answer DevTeam, but this is unrealistic because of laws or working contracts.  What do you think about the upper questions?",5720
"07:39 am January 24, 2014                    1. I'd go for ""provide feedback"", on the grounds that this is most clearly of value to the rest of the Scrum Team. ""Advising stakeholders"" is less precise in terms of the value a PO would be expected to provide as a Scrum Team member. Then again, ""advising stakeholders"" could be seen to encompass the provision of feedback, so it is indeed a tricky one.  2. I think you're spot on. I cannot disagree with either your analysis or your conclusion.          Log in or register to post comments",5720
"08:31 am January 24, 2014                    Agree with Ian.  I'd add that Development Team is self-organising, but not self-managed (which would mean they can fire, recruit, pay bonuses). There's a slight difference here.          Log in or register to post comments",5720
"04:14 pm January 24, 2014                    The Managers are responsible for the boundaries of the team.  Even in the context of Scrum, you'll have some kind of managers, who are able to hire, pay and fire people if necessary.          Log in or register to post comments",5720
"07:14 am January 28, 2014                    Thank you for your answers. Especially Illya for clarifying self-organizing and self-managed.          Log in or register to post comments",5720
Log in to reply,5720
Messages,5366
"05:20 pm November 30, 2012                             I've cobbled together(from other sources) a Scrum Master job description for a client, and I'd be interested in any feedback anyone has.  This position is for an ""Experienced Scrum Master"" who would be an SM for 1-2 teams of appropriate Scrum team size.  <job description>  Essential Duties:  - Doing everything possible to ensure delighting customers  - Guiding the team and organization on how to use Agile/Scrum practices and values to delight customers  - Guiding the team on how to get the most of out self organization  - Guiding the team on self organizing to fill in the intentional gaps left in the Agile/Scrum frameworks  - Assessing the Scrum Maturity of the team and organization and coaching the team to higher levels of maturity, at a pace that is sustainable and comfortable for the team and organization  - Removing impediments or guiding the team to remove impediments by finding the right personnel to remove the impediment.  - Building a trusting and safe environment where problems can be raised without fear of blame, retribution, or being judged, with an emphasis of healing and problem solving.  - Facilitating getting the work done without coercion, assigning, or dictating the work.  - Facilitating discussion, decision making, and conflict resolution  - Assisting with internal and external communication, improving transparency, and radiating information  - Supporting and educating the Product Owner, especially with respect to grooming and maintaining the product backlog.  - Providing all support to the team using a servant leadership style whenever possible, and leading by example  Required Skills/Experience  - First level Scrum Master certification (CSM, PSM I)  - Experience playing the Scrum Master role for at least one year for a software development team that was diligently applying Scrum principles, practices, and theory.  - Good skills and knowledge of servant leadership, facilitation, situational awareness, conflict resolution, continual improvement, empowerment, and increasing transparency  - Knowledge of numerous well documented patterns and techniques for filling in the intentional gaps left in the Scrum approach(example: numerous Burndown techniques, numerous Retrospective formats, handling bugs, etc)  Preferred Skills/Experience (Any of these is a plus)  - Second level Scrum Master certification (CSP, PSM II)  - Experience playing the Scrum Master role for at least two years for a software development team that was diligently applying Scrum principles, practices, and theory.  - Knowledge of other Agile approaches: XP, Kanban, Crystal, FDD, etc  - Knowledge and/or experience with widely successful Agile techniques: User Stories, ATDD, TDD, Continuous Integration, Continuous Testing, Pairing, Automated Testing, Agile Games  - Applicable knowledge of the technologies used by the team  - Experience applying a wide variety of well documented patterns and techniques for filling in the intentional gaps left in the Scrum approach(example: numerous Burndown techniques, numerous Retrospective formats, handling bugs,etc)  - Previous experience as a team lead  - Excellent communication and mentoring skills  </end job description>  Some other things you(the job poster) might want to fill in:  - Required education level  - Required software product development experience (I don't recommend picking a particular development role -- just general software development experience)  - Any other things that you feel are important to your project, company, or team culture",5366
"12:41 pm December 1, 2012                    Hi Charles  I'm not sure about the first two lines on Essential Duties which mention ""delighting customers"". To mention this twice at top-level seems to imply that the ScrumMaster is going to be in a heavily customer-facing role. Maybe I'm too European (we often forget customer satisfaction is everyone's responsibility) but it does make me wonder about Product Ownership in this job, and how effective I can expect it to be.   ""...to fill in the intentional gaps left in the Agile/Scrum frameworks"" seems a bit jarring; it might be better just to say ""to fully realise the potential of Agile/Scrum frameworks"".  Asking for experience leading a team ""that was diligently applying Scrum principles, practices, and theory"" is of dubious value. It isn't the team that's being hired, it's the ScrumMaster. Moreover, that ScrumMaster will be looking for a new job for a reason. Don't rule out someone with endless experience of ropey projects in which their position may have been compromised, but who has developed a critical understanding of what the various shortcomings were and what it would take to remedy them. That would surely be better than hiring someone who reads the job description and who glibly reckons they can tick all boxes about an A-1 job being done.          Log in or register to post comments",5366
"01:48 pm December 1, 2012                    Excellent feedback, Ian.  I was so tunnel visioned that I couldn't see your excellent points...  Re: delighting customers.  Point taken.  What if I re-worded it to... ?  Strongly serving the Product Owner and Development Team in their quest to do everything possible to delight customers   Re: diligently applying Scrum principles  Excellent point, and I think you are right, of dubious value. I will remove that language.  Re:  intentional gaps left in the Agile/Scrum frameworks  This one I have to stick with, because I think it's a point missed by many people in the biz.  Plus, I'd like the interviewee to come prepared to answer questions around it -- and I mention some examples down below so it's not like they'll totally be shocked by the questions.  In short, this is a personal viewpoint of mine that I feel very strongly about.  I coach a lot of new teams, and I feel like too many new teams focus on changing the Scrum framework when instead they should be focusing on how to work *within* the framework to optimize their Scrum implementation and delivery abilities.  I don't feel like we as an industry stress the ""intentional gaps"" thing enough.  Plus, I want an SM to know several techniques for fulfilling those gaps so that they can coach the team towards a better fulfillment of those gaps.  I would certainly be open to re-wording this one to achieve the same effect.   I'm going to evolve this description on a wiki page on my web site.  Here is the link:  http://www.scrumcrazy.com/Towards+a+Good+Scrum+Master+Job+Description           Log in or register to post comments",5366
"01:50 pm December 1, 2012                    P.S.  I've bolded and did strikethroughs for the most recent edits.  I'll try to continue doing that as I get feedback.  Ian, thanks for your great feedback.          Log in or register to post comments",5366
"01:51 pm December 1, 2012                    (The bold and strikethroughs are on my wiki page linked above)  Sorry for the zillion posts but there is a bug in the forum software that doesn't allow me to edit my posts.  I've reported the bug to Scrum.org.          Log in or register to post comments",5366
"09:01 am June 7, 2013                    Is there any formal course available to qualify as scrum master?  ___________  http://www.agiledistributed.com/           Log in or register to post comments",5366
"06:28 pm June 7, 2013                    Not sure I understand your question.  Is this what you're looking for?  http://www.scrum.org/Courses/Professional-Scrum-Master          Log in or register to post comments",5366
"07:41 pm January 15, 2014                    As a follow up, I've made some more updates, so for the most up to date copy of the job description, see here:  http://www.scrumcrazy.com/Towards+a+Good+Scrum+Master+Job+Description          Log in or register to post comments",5366
"06:46 am January 28, 2014                    Hello Charles,   Thank you so much for writing this up.  It's excellent!    Cheers,   -Andrew          Log in or register to post comments",5366
Log in to reply,5366
Messages,5718
"05:01 am January 22, 2014                             Hi,   We are a small custom development house and we are starting to go the scrum route. I know that there is no link or correlation to hours and story points, so how do I quote? I have to give customers an upfront quote for a project and the only way to do that (that I know of) is based on the number of hours we will spend.   So do I still ask the team for estimated hours for each backlog item, and use those for the quote, and then ask for story points as well? What is the best way to handle this?   Thanks,",5718
"05:15 am January 22, 2014                    Hi Justin,  welcome to the forum.  Scrum does not solve the problem that you cannot give a good estimation for the development of a complex product.  But a good practice to develop this estimation is based on inspect and adapt.  1. Estimate the backlog in story points  2. Do the first sprint  3. Measure how many story points you have accomplished  4. Do an extrapolation for the remaining backlog (first approximation)  5. Repeat 2-4. The approximations will get better, which reflects the experience you are gaining.  Usually the backlog will change over time. Items will be added, removed, described more clearly etc. This will be reflected in the estimations as well.   So you cannot give an upfront estimation, but those you can give will be brutally honest.  If you need an upfront estimation, you will have to do it the usual, non-agile way, including all the well-known risks and uncertainties.  Best, Ludwig           Log in or register to post comments",5718
"05:53 am January 22, 2014                    Justin,   Having implemented Scrum for deliver to customer within on consultancy I can definitely feel your pain. On the one hand you need to be able to give your customer an estimate and on the other, as Ludwig implies, any estimate that you give is pure fiction. The reality is that this is a contractual discussion rather than a philosophical one.    Part of this is how you present it and the other is 'the way that things are done' for you customers. It is ultimately a training issue on both sides and you need to figure out how to sell agile delivery. As to estimates: If you have a team of 4 and your daily rate is $500 per person then your rate for a two week sprint is $20,000. You may be able to reduce that as you can now calculate on having 4 folks off the bench at once, but that's for your business guys to figure out.    Now that we know that this team is 20k per sprint we can go to the customer and say:      ""We think that this work that you want us to do is about 6 Sprints worth of work. As this early in the process this estimate has a very large margin of error I would recommend that we budget for 10 sprints. This would be a total of 200k. If you want to set that as the limit we can work towards that.     Now we plan to provide Working Software at the end of every Sprint so if we have met the requirements before the end of the 10 sprints then you only pay for what you use. Indeed we are so confident that you will like not only this way of working, but also the output, that we will allow you to cancel with only one Sprints notice.""    This is a shared risk model that gives the customer warm and fuzzes that they are not locked into the whole 200k but are instead only committing to 40k up front and adding 20k blocks of time as they see the value that is being delivered. You may want to manipulate this based on the quality of your teams, the work delivered and the customers perception of value.  To start to achieve this, and make no mistake it will take tome to change not only your internal processes but your customers as well, you will need to focus on changing the contracts that you enter into. Look at some of the available 'agile contracts' and work with your lawyers, accountants and contract writers to bring them around.  Its hard but I have seen it done and work well.          Log in or register to post comments",5718
"06:11 am January 22, 2014                    Luwig and Martin are right, and I concur that you should try for a more agile contractual model based on incremental funding. Here's the sweetener for your client: they will no longer be held hostage to the Change Request mechanism, as changes in scope can be accommodated.   That's on top of the opportunity to benefit from an early and incremental return on investment, plus the ongoing reduction of risk and limitation of exposure by capping potential losses to a window of one sprint.          Log in or register to post comments",5718
"06:24 am January 22, 2014                    NB you might want to google for the work done by Gabrielle Benefield and Susan Atkinson on agile contractual frameworks. A couple of years ago I wrote an article on this subject:  https://sites.google.com/site/wicmitchell/home/from-the-agile-manifesto…           Log in or register to post comments",5718
"06:04 am January 25, 2014                    Thanks for the feedback and information guys, Could this be a place to use the Minimum Viable Product?          Log in or register to post comments",5718
"08:19 am January 25, 2014                    The term Minimum Viable Product (MVP) can be used in at least two contexts. Let's consider what are perhaps the two main ones.  Firstly, MVP can be seen as the sum of all mandatory (""must have"") items in a MoSCoWed requirements set. If this is the sense in which you are referring to MVP, then there can be business risks in applying an agile contractual model. The danger is that if you agree to deliver a Sprint Backlog that consists entirely of mandatory items, you risk not meeting the associated Sprint Goal. In other words a Development Team, by accepting such a backlog, could be setting the sprint (and therefore the project, which is being funded sprint by sprint) up to fail. There may be insufficient flex to recover should the team's estimates prove unrealistic. The general guidance with MoSCoWed requirements is not to exceed 60% ""must haves"" in a time-box. This clearly has implications if using an agile contract to deliver MVP in this sense of the term.  However, the term MVP can also be used in a leaner sense. Here, an MVP is the minimum needed to establish the market viability of a product. That MVP could consist of wireframes, manual processes, and a great deal of smoke and mirrors. Only if the MVP proves viable will further investment be made in product development...a process known as ""validated learning"". This is a more agile definition and use of MVP, and it is one that is well suited for incremental funding.          Log in or register to post comments",5718
Log in to reply,5718
Messages,5712
"01:19 pm January 18, 2014                             After end of every sprint there should be potentially releasable increment.  But for big projects release sprint might be crucial before final release .  More work and evolution is required for release sprint and it should include one more round of testing.  For Example,dream project of Airbus Dreamliner taken a hit due to battery issue .It might would have been possible each n every component was tested but adding one more round of testin can save issues and brand image later..",5712
"03:25 pm January 18, 2014                    > for big projects release sprint might be crucial before final release  If a ""release sprint"" is crucial, then by definition any previous sprints cannot have yielded a potentially releasable increment, and the rules of Scrum are not being applied. The rationale you describe has a greater affinity with non-agile frameworks such as SAFe.  > adding one more round of testin can save issues and brand image later.  If that is true then technical debt has been incurred. It is likely that the Definition of Done was inadequate prior to that round of testing, and therefore it should be challenged and improved.           Log in or register to post comments",5712
"08:09 am January 19, 2014                    Are there any automated test? I would also be afraid to release a mission critical software continuously without any automated tests :-)          Log in or register to post comments",5712
"11:18 am January 21, 2014                    I can see Samridh's point: when developing independent new increments over several sprints, but only releasing them together at the end of a 'project', you would like to test the whole project, right?   Does anyone have experience with 'saving' increments for a bigger release? Or would this strategy be contrary to Scrum and therefore not be used at any time?           Log in or register to post comments",5712
"09:40 pm January 22, 2014                    > Does anyone have experience with 'saving'   > increments for a bigger release?   This is quite typical of ""waterscrumfall"" and it is regrettably very common. There will be very few releases...perhaps just one at the end of a project. This is often a symptom of trying to apply Scrum within a stage-gated organizational culture, where Scrum is applied to software development but not to integration testing or delivery.  > Or would this strategy be contrary to Scrum   > and therefore not be used at any time?   It's contrary to Scrum because Sprints would not result in increments that are potentially shippable. The Definition of Done is correspondingly far too constrained, and fails to address the full journey into production. Inspection and adaptation is compromised, both at the product level (wthich is not released in a timely enough manner to provide incremental feedback) and also at the process level, in that Scrum Teams are constrained by the rules of a dysfunctional organization, and cannot change its non-incremental approach to delivery.          Log in or register to post comments",5712
"06:15 am January 23, 2014                        >>Does anyone have experience with 'saving' increments for a bigger release? Or would this strategy be contrary to Scrum and therefore not be used at any time?   It is very common and often required by marketing teams to roll up many increments into a larger public release. This is perfectly acceptable in Scrum as long as your increment is available for your Stakeholders to access to provide you with feedback. You need to be able to inspect and adapt every cycle and Scrum does require, although not explicitly stated, that your software be released.   Released however means many things to many companies. Worst case only your Product Owner has access to the new increment. I would then recommend that your PO takes that increment and actively solicits feedback from as many people as possible to make sure that you are building the right thing. That means all you stakeholders: Managers, Coders, Testers, Sales, Marketing, Users and anyone else that interacts with that software.   It is not contrary to Scrum to do what is best for your business. Just be careful and mindful that it would be contrary to Scrum if only the Scrum Team (Development Team + Product Owner + Scrum Master) saw the increment Sprint on Sprint.           Log in or register to post comments",5712
"12:52 am January 24, 2014                    In Scrum each Sprint should result in a potentially releasable increment. However the target consumers of that release may indeed vary.   For example it's fair and reasonable to limit a given release to a certain market segment. This might be done in order to sandbox a new Minimum Viable Product before general release is sanctioned.          Log in or register to post comments",5712
Log in to reply,5712
Messages,5715
"08:40 am January 20, 2014                             Hello,   I am completely new to scrum I am wondering if  scrum is the way to go for small to mid-sized website projects? Is it possible to achieve in a small company without compromising the budget?  Best Regards,  Bart",5715
"09:59 am January 20, 2014                    Hi Bart,  How many team members are there including the Product Owner and the Scrum Master?          Log in or register to post comments",5715
"10:04 am January 20, 2014                    Scrum does not help if team does not practice Scrum and if any of the team member is not versed with Scrum practices. The size of project does not matter but size of team does matters to Scrum as Scrum suggests a team with 3-9 members.   By the way it's not clear to me what's a mid or small size project in this case.          Log in or register to post comments",5715
"11:04 am January 20, 2014                    I'd say that the first thing to consider is the quality of product ownership. Without a good PO who can manage and account for the Product Backlog, a Scrum project will struggle regardless of its size or the problem domain.  You should also examine the motives for using Scrum. Be aware that (for example):  - Scrum isn't meant for delivering an end product more quickly. Rather, it can be used to de-risk projects by providing incremental returns on investment.  - Scrum isn't meant for bailing out ""death-march"" projects that are already hosed. It's more likely to bring about their failure in a controlled manner.          Log in or register to post comments",5715
"03:37 am January 21, 2014                    Hello,   Currently we aren't using scrum but I am searching for a way to control the project flow better and especially the scope/budget. Currently a team exists out of a designer, a usability expert, two developers and a project manager.   I guess the team is too small to implement scrum? Should it work if a team gets a productowner as extra member?   Best regards,  Bart          Log in or register to post comments",5715
"03:56 am January 21, 2014                    > I am searching for a way to control the project  > flow better and especially the scope/budget.  That's an illustration of why product ownership is so important. A PO should exert pull on the backlog of work and be the final authority regarding business value and ROI.  Note that a PO isn't an ""extra"" member of a Scrum Team; this is a key role. You can operate a Scrum Team with as few as three people. The Scrum Guide is a good place to look for further information.           Log in or register to post comments",5715
"08:33 am January 21, 2014                    The team size is just fine.  Project manager can be replaced by Product Owner as Scrum does not have a role project manager. Transition PM to PO takes time.  The other team members should see the benefit of using Scrum practices and apply it in that project. The whole team, stakeholder should invest time reading this Scrum Guide and support the PO.            Log in or register to post comments",5715
"08:25 pm January 21, 2014                    This size is good enough for scrum.  I would assume building a website to be  a highly interactive project so the sprint size probably will need to be small. But as other have pointed out you will need a scrum master rather than a Project manager.          Log in or register to post comments",5715
"05:17 am January 23, 2014                    Thanks for all the replies!  I will take this info with me in my quest to set up scrum in the company!          Log in or register to post comments",5715
Log in to reply,5715
Messages,5644
"03:18 am November 19, 2013                             Is increase the feeling of being accountable a benefit of a self-organizing team?",5644
"06:00 am November 19, 2013                    Let's work through this.  Suppose you are a member of a team that self-organizes and which is in control of its own process. Who else, other than your team, would then be accountable for the way it works? Do you think it is a good or bad thing if team members feel so accountable?           Log in or register to post comments",5644
"09:59 am December 12, 2013                    in scrum, team is responsible for every thing, not the individuals.          Log in or register to post comments",5644
"05:36 pm December 15, 2013                    No doubt, it is a benefit that team feels more accountable.          Log in or register to post comments",5644
"06:37 am December 18, 2013                    I agree, it is a benefit          Log in or register to post comments",5644
"05:02 am January 23, 2014                    As a Scrum master, how would you increase the feeling of accountability in the team? What kind of excercise is there or what kind of questions could I raise during the Retrospective to make the team aware that they are in control? Are there any ideas on how to develop the sense of control over own processes?           Log in or register to post comments",5644
Log in to reply,5644
Messages,5710
"06:33 pm January 16, 2014                             I'm wondering if anyone has used Scrum to rollout a new software application that has come into their business.  This new software is a 3rd party app. it will need LOTS of setup, configuration, and tweaking before it can be rolled out to the masses.  I think Scrum would fit nice into a project like this...just wondering is anyone has used Scrum for a project like this?  -Tom",5710
"01:23 am January 17, 2014                    The configuration and rollout of pre-built software is one of the many responsibilities of IT Operations. Sometimes frameworks like ITIL are used for this. When transitioning to an agile way of working a Kanban system is perhaps the most popular choice.  Scrum can certainly be used though. It all really depends on whether or not you can secure clear product ownership. For many areas within Ops - such as network support - this is very difficult, and the usual approach is for a helpdesk to triage tickets into a second level support Kanban. The rollout of software often has to be treated in a similar way because of the increased support calls that result from this journey into service.  However, the configuration of a software product is one of those areas that can be expected to show clear product ownership, and it is one in which Scrum should be applied. In your case, there will presumably be a stakeholder who knows what the configuration should be and who can articulate those requirements into clear Sprint Goals and potential releases. Find that Product Owner and you have found your way to start applying Scrum.          Log in or register to post comments",5710
"09:34 pm January 22, 2014                    Scrum can certainly be used for rolling out packaged software. You will need multiple scrum teams depending on the size of the project. Obvious things that come to mind are business process, integrations, data migration etc.  For business process will  probably need a separate scrum team to map out the current business processes / people / tools as well as the final business processes ( as defined by the new application) . This will probably be more critical if the package software forms the core business application for your company.  You might also ask the vendor if they have used agile to roll out the packaged software to their other customers. In that case they should have a fair bit of IP built up around epics, user stories, estimates etc. This can form your starting point instead of having to start from scratch. As Ian has pointed out you will need to a product owner(s) / subject matter expert / business analyst from the customer side as well some product experts from the software vendors professional services team.    Once the configuration / development is complete you will need to use the IT frameworks like ITIL that Ian mentions for operations to actually roll out the application. Of course some of it like capacity planning, This will vary depending upon weather the application is a cloud based or on premise application          Log in or register to post comments",5710
Log in to reply,5710
Messages,5714
"05:57 am January 20, 2014                             Hi All,   I have started using Scrum recently and I would like to get some clarity on the following:  I understand the concept of a story (please correct me if I'm wrong), it really relates to a feature for the end user. For example, a client that withdraws money at the ATM. Now, in a software development, say, I want to do some modification to improve the performance of my backend. This would include:  1. Review some code  2. Edit/create documentation  3. Create the tests associated  4. Prepare a release  5. review  6. Release  etc.  My question is: In the example above, knowing that I might not complete the entirety of the tasks within 1 sprint, should I use a Task/subtask model or an epic/story/tasks model?  Thanks in advance for your clarification!",5714
"06:32 am January 20, 2014                    Hi pascal,  welcome to the forum.  The idea of Scrum is delivering small pieces of value each sprint.   This helps you to gather feedback, improve transparency, inspect and adapt.  If you cannot complete a story within one sprint, it is a good practice to split it. This is a part of Backlog Refinement.  But be careful to split it into pieces of value. This means, if you only review some code in the first sprint, you might ask yourself: What value do I get from this?  Usually you would try to choose a small piece for which you can do all the tasks above including the release. This is often not easy, and it may even happen that you don't find a way to split the story like this and have to split it by tasks, but try to work with the team to find a way.  Best, Ludwig          Log in or register to post comments",5714
"06:35 am January 20, 2014                    Sorry, to answer your question: A good practice is the epic/story/tasks model, where each story can be done in one sprint.          Log in or register to post comments",5714
"08:01 am January 20, 2014                    > knowing that I might not complete the entirety   > of the tasks within 1 sprint, should I use a   > Task/subtask model or an epic/story/tasks model?   The important thing is to have a Sprint Goal. Product Backlog Items should be selected, and tasks planned, in accordance with that Goal. Scrum is agnostic about the form PBI's take, but one convention is to have epics which are broken down into user stories, and which can then be inducted into a Sprint Backlog.  The Product Backlog, including any epics and stories on it, is owned and managed by the Product Owner. Tasks that are planned for those PBI's inducted into the current Sprint Backlog are owned and managed by the Development Team.          Log in or register to post comments",5714
"09:35 am January 20, 2014                    Thank you all very much for your quick, clear and helpful replies!           Log in or register to post comments",5714
"09:57 am January 20, 2014                    A story should be independent, negotiable, valuable, estimable, small and testable (INVEST) .   In this case I think you should find out the acceptance criteria that can also help you how to decompose the given story in more then one Sprint.          Log in or register to post comments",5714
"08:41 pm January 21, 2014                     Ideally all your stories should reflect the INVEST property and also have a definition of done. In most cases your 1 and 3 would be part of definition of done. 2. could also be, but some projects I have worked on have also done this in subsequent sprints ( in case you have a shared tech writer). 4, 5, 6 again would depend on how frequently you release the code to production. I have worked in scrum project where this was done for every sprint ( in case of a small scrum team) and also on projects where (more then 15 scrum teams) the release activities were done after a series of development sprints.          Log in or register to post comments",5714
Log in to reply,5714
Messages,5706
"08:34 am January 14, 2014                             Hi Guys,  I know that Product Backlog should contains user stories and is managed by Product Owner, while that Sprint Backlog the responsible is the Team.  1) This image is really a Product Backlog?  http://epf.eclipse.org/wikis/scrum/Scrum/workproducts/resources/product…  2) This image is really a Sprint Backlog?  https://www.scrum.org/portals/0/Images/Sprint-Backlog.png  Thanks for your response  Regards",5706
"08:40 am January 14, 2014                    >>This image is really a Product Backlog? http://epf.eclipse.org/wikis/scrum/Scrum/workproducts/resources/product…   This looks like a reasonable example of a product backlog. I have no idea if it is a good well formed backlog however. I would need to see the detail that is on each of the PBI's. for that.      >>This image is really a Sprint Backlog?  https://www.scrum.org/portals/0/Images/Sprint-Backlog.png   I would say no. It is a visual representation of the contents of a Sprint Backlog and not one itself. Think of the Sprint Backlog as those PBI's that you have agreed with the PO to attempt with a plan to complete them. So it is simply one or more PBI's broken down into a plan.   The most common form of a Sprint backlog is a bunch of tasks under each PBI.  Did that help?          Log in or register to post comments",5706
"08:54 am January 14, 2014                    Hi nsanzana,   1) This image is really a Product Backlog?    http://epf.eclipse.org/wikis/scrum/Scrum/workproducts/resources/product…   There is no rule in SCRUM forbidding this to be a product backlog. It is ordered and estimated, so the team should be able to work with it.   2) This image is really a Sprint Backlog?    https://www.scrum.org/portals/0/Images/Sprint-Backlog.png   This is a symbol picture of a sprint backlog. Of course a real sprint backlog needs content inside the rectangles: At least Descriptions and estimates for the PBIs and descriptions for the tasks.  Best, Ludwig          Log in or register to post comments",5706
"03:35 pm January 14, 2014                    >This image is really a Product Backlog?  It would be...apart from the ""By"" attribute. This appears to show individual ownership of PBIs or their estimates. If either case is true, then that's not a Scrum Product Backlog. In Scrum the PBIs should be owned by the Product Owner, while the Development Team should be collectively responsible for estimates.  > This image is really a Sprint Backlog?  No. It looks like a schematic of a task board. The two states on the left (PBI and ToDo) may represent a valid  Sprint Backlog if populating them is the output of Sprint Planning, and if they are regularly updated.           Log in or register to post comments",5706
"07:33 am January 15, 2014                    I like to oversimplify it to help those who are still new to Scrum as such :  Product Backlog: list of things that needs to be done to make the product come into existence  Sprint Backlog: list of things that needs to be done in the current Sprint, which includes selected Product Backlog items           Log in or register to post comments",5706
"07:51 am January 18, 2014                    Incidentally, a couple of years ago David Starr and Ryan Cromwell discussed exactly that taskboard image in the context of what should constitute a Sprint Backlog. You can read about it here:  https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…           Log in or register to post comments",5706
Log in to reply,5706
Messages,5709
"09:05 pm January 15, 2014                             HI,  If development team is geographically located at Europe,India and Australia as in case of my project .  Daily scrum is not effective as it should be .  As a solution we ask team members to email their update and then we go through the items.  If someone has better option then please let me know.",5709
"09:40 pm January 15, 2014                    I have had similar problems in the past, and I have to say that unless your teams have an unusually high commitment to the project and dont mind getting onto a Skype conference call at strange times in the night, then you are probably doing the best you can.  A possibility might be basing a message thread on network 54 allowing all who are involved, and registered, the chance to see what each team is doing, and comment, which would be good transparency, but may also dissolve into other pointless sideline discussions           Log in or register to post comments",5709
"10:36 pm January 15, 2014                    The point of a Daily Scrum is to ensure that team members spend face-to-face planning time each day with a collaborative focus on the Sprint Goal. If team members are distributed, then everything needs to be thrown at maximizing the quality of the communication channels.   Video conferencing is the best option because it carries at least some if the non-verbals. Audio is a poor second choice and if this is all you have it should be of excellent quality.  Charles has a good list of resources on distributed, offshore, and multisite scrum available here: http://www.scrumcrazy.com/My+Preferred+Agile%2C+Scrum%2C+and+XP+Resourc…  One other option us to change the session format to ""walking the board"". Each task on the team board, which should be electronic so all can see it, is considered in turn. The team collectively determine what needs to be done, and by whom, in order to progress it. This is a delivery-centric approach used in Kanban. The disadvantage is that some focus on the Sprint Goal is lost. However, the approach can be used with reasonable success even over low bandwidth communication channels.          Log in or register to post comments",5709
"01:19 am January 17, 2014                    How about the time zone differences which are not overlapping?          Log in or register to post comments",5709
"03:15 am January 17, 2014                    A Development Team are expected to self-organize a suitable time at which all members can attend the Daily Scrum. This expectation applies regardless of whatever time zones they may be in.  If a distributed team cannot do this then a Daily Scrum cannot be held and they will not be doing Scrum. They can exchange emails. However that will not be a Daily Scrum because the participants will not be engaging with each other in the same 15 minute time box.          Log in or register to post comments",5709
"12:48 pm January 17, 2014                    I had an issue with time zones on a previous project.  We did our best to find 15 minutes that worked for everyone - usually early morning for the US (folks often took the call form home, which was fine).  For longer meetings, like sprint planning, we rotated who was ""inconvenienced"" - ie. early morning for the US on time, late night for the US next time, etc. We planned the days/times  ahead and kept rotation going, so people who met really late their time knew they would be meeting at a more convenient time next time. It was announced way ahead (so people could make arrangements for their personal life, and very fair, so everyone was on board with it, and it worked well.          Log in or register to post comments",5709
Log in to reply,5709
Messages,5711
"12:44 am January 17, 2014                             What are the levels of membership in the scrum forums?  I've noticed new member and basic member, what is the criterion for the levels?  Can anyone aid on this matter.",5711
Log in to reply,5711
Messages,5705
"01:29 pm January 13, 2014                             Hello Guys,  I'm thinking to do my pay in the next hours, however I want to do the exam the other week. This is possible? and how many days I have to do it once paid?  Thanks  Regards",5705
"05:16 pm January 14, 2014                    PSM1 is a two week timer on the password you get.  Michael           Log in or register to post comments",5705
"10:50 am January 15, 2014                    Hi Suman,  I suggest ordering your PSM I attempt a day or so in advance before you are ready, because it may take one business day to process the order.  Also, Michael is correct. Your password will have a 14 day window of usage from when it is sent to you.  Daniel          Log in or register to post comments",5705
Log in to reply,5705
Messages,5700
"09:03 am January 12, 2014                             Hello:  I am posting about a topic I have yet to come across in discussion.  My honest experience is that co-location of a Scrum team has often been painful because of the forced relationship of the team.  And forgive me for being brutally honest, but being asked to squeeze 7 people into a space intended for 2 presents a non-joyful experience for an introvert.  Here's the picture:  One big 7' table.  6 people squeezed to fit on the table, each with about 3' of space of which a good part of it is littered with network and power cables from each device to extension cords.  The floor space is a maze of cables and wires which you have to navigate to even sit.  That's just the physical logistics.  Add to that a mix of contractors and FTEs whom have never worked together before.  Spice it up with some not so great history between the FTEs.  Then, and this is the tipping point for me who is an introvert and for whom idle chatter is a source of a anxiety, you're at a table where endless chatter and bantering goes on, often not about our tasks at hand and often without respect for the other people at the table.  The manifestation of this is seen with team members having to constantly wear headphones, which is so unpleasant as a matter of daily course  How do you address this as a scrum master when you're expected to facilitate this team's evolution into high performance?  Yes, I'm speaking from both the perspective as an analyst on one team and the Scrummaster of another.  In both scenarios I have experienced this problem.  Thanks so much, in advance, for an insightful conversation.  Deb",5700
"02:24 pm January 12, 2014                    > How do you address this as a scrum master   > when you're expected to facilitate this team's  > evolution into high performance?  Let's try to assess the matter objectively.  - How ""forced"" is this team relationship, and who is doing the forcing?   - To what extent are the ""team"" self-organizing themselves and their environment in the manner you describe?   - What is their delivery record currently like?           Log in or register to post comments",5700
"03:05 am January 15, 2014                    Hi Deb,  Since I work in an entirely different background compared to the ""usual"" Scrum Master, my thoughts are that the very first thing I would be working to solve is the physical enviroment.  Your description of the cables, tight space and work table being insufficient alarms me, and in my usual field of work ( aircraft restoration believe it or not) it would be completely unaceptable. The physical risk from tripping, dragging equipment off the table and general unpleasntness of having to work in such a tight enviroment are issues that will be affecting the performance of each individual, and the team as a whole. This is a health and safety problem, and since you are a ""servant manager"" I would think it falls in your field of influence? That would be the first step.  Dave           Log in or register to post comments",5700
Log in to reply,5700
Messages,5708
"11:05 pm January 14, 2014                             Hi guys,  I must recognize that I have a little fear about PSM I exam, because each day I'm seeing more people writting and sharing their experiences (not passing the PSM I exam with a lot of experience, even several persons with years of experience in Scrum world).  I'm getting 100% in Open Assessments, but really I'm not sure if I'm getting the max score by knowledge or because I finished learning of memory ...  Already I saw this topic and I read all articles / videos:  https://www.scrum.org/Forums/aft/264  Note: Scum guide also was read by me in my native language and english too.  My company have an agreement with a great library / books source where I found the following book:  Software in 30 Days: How Agile Managers Beat the Odds, Delight Their Customers, and Leave Competitors In the Dust  by Ken Schwaber and Jeff Sutherland  John Wiley & Sons © 2012 (194 pages)   I think that by the year may be no will be updated at current Scrum Guide.  I don't have experience in Scrum for the same reason I'm trying to study very hard in order to get my PSM I exam and try to find future experiences here, for the same reason I'm trying to get extra resources / materials in order to prepare correctly my exam.  Really appreciate your feedback.  Regards",5708
"12:26 am January 15, 2014                    > I'm getting 100% in Open Assessments, but   > really I'm not sure if I'm getting the max score   > by knowledge or because I finished learning of memory  Each question in the PSM Open Assessment carries an explanation of why an available answer is right or wrong. I'd suggest going through the assessment again, and if you have any doubts at all about any of the explanations given, or why one answer is better than another, ask about them on this forum.           Log in or register to post comments",5708
Log in to reply,5708
Messages,5701
"12:23 pm January 12, 2014                             Hello  I'm reading Scrum Guide and says that Product Backlog is dynamic,  because never is complete and is changing when new requirements/elements must be added to met the objective.   As you know the customers all of the time are trying to add new features in order to met with the expected result and the environment conditions, so in this point my question is:  What is the best practice for try to avoid big changes that could to impact in project scope or in the project finish? Even knowing that sometimes the end customers thinks that the change is simple,  but all of the times this 'little changes' could be big if requires modifications at other elements previously complete ...  Really appreciate your feedback  Regards",5701
"02:41 pm January 12, 2014                    > What is the best practice for try to avoid big   > changes that could to impact in project scope  > or in the project finish?   Scrum practice is to have a Product Owner who is the final arbiter on product value and the content of the Product Backlog. This is an important role, and involves liaising with customers and other stakeholders, and being accountable to them for the Return On Investment.           Log in or register to post comments",5701
"02:21 am January 14, 2014                     In addition to what Ian said, it depends on the type of project/organization e.g. if you are working for a service based organization and your company working on the fixed-price model then PO has to make a call between original scope vs new feature by doing the cost benefit analysis. He should not keep building a product which no one wants but he cannot keep adding new requirements into the backlog at the expense of vendor company to keep his/her users happy. That's why PO is a really tough role to play in critical situation.  Cheers  Sanjay          Log in or register to post comments",5701
"05:11 am January 14, 2014                    Hi Sanjay,  you are right, the Product Backlog is never complete, same as the product. This means there is no such thing as a project scope or a project end, because SCRUM is not a project management methodology. The idea of product development with SCRUM is rather made for real products, think of facebook, google or ebay. They are never ""complete"", even if it may happen that a product is discontinued for whatever reason.  You may look at changes as oportunities to make the product better rather than risks for your project or threats for your existing product in which you invested a lot of work.  Best, Ludwig          Log in or register to post comments",5701
"08:36 am January 14, 2014                    Thanks a lot for your responses guys          Log in or register to post comments",5701
Log in to reply,5701
Messages,5704
"05:37 am January 13, 2014                             Hi,  We're in the process of adopting Scrum in our group, and we're hitting an issue with on-going testing of our software. I'd appreciate any advice or thoughts that anyone has.  The group I'm in develops compilers, and one of our on-going activities is testing - all the developers take part in it. As programmers will know, compilers have dozens of different switches and modes to control language settings, optimizations, etc., and we have *zillions* of test cases (commercial, in-house, regressions). Basically, to do a full test run that runs all our tests with a good range of options takes many weeks. We also find that, as testing progresses, we find all sorts of ""gotchas"" - badly configured tests, obscure regressions, newly-discovered bugs, etc., so on-going maintenance is needed.  When we started with Scrum, we had a bunch of unchecked results and our first test-related story was along the lines of ""Check the following sets of results, and log defects as required."" Seemed sensible (it was a clearly defined task, we could define ""Done"", we could estimate the time it would take), but it didn't really work for several reasons:  1) Sometimes a single regression can mean that several test runs are invalid - you end up with lots of failures and the only solution is to throw away those results. In the old days, we'd stop the testing, fix the bug right there and then, then start testing again. Our belief now is that we should log the bug in our bug tracking system and carry on as best we can for the remainder of the sprint- we shouldn't be diverted into fixing the bug, even though our instincts tell us otherwise. The bug should be prioritized and dealt with in the normal way (probably next sprint).  2) It can be very difficult to say, in advance, which results should be checked, and since we generate results all the time, there's always the risk that a recent set of results needs looked at straightaway. But our current method of saying in advance which results we'll check means this isn't possible – results generated during the current sprint will be checked in the next sprint.  So I'm trying to work out how to write a story that gives us freedom to look at whatever looks most important *during the sprint*, and also gives us freedom to log *and fix* bugs if they're really holding us up (although I expect that to be unusual). I wondered about:  -              “Spend <X> hours on testing activities, whatever that may be”          ---- The Definition of Done is that the requisite hours are logged. But I know this is wrong. Unfortunately, it represents what we actually do, and what the team want to continue doing.  -              “Ensure testing is on-going and productive”           ---- Very vague. No DoD. No way to estimate story points or hours  So neither of those are really ""Scrum"". And I know what you'll say:  - ""Better engineering practices to ensure that no regressions are introduced and tests are written properly!""  - ""Come up with a way to run regression testing  within a sprint! If you can’t do that, you’re not producing shippable software!""  They’re fine ideas, and we have ongoing process improvement activities that will help in the longer term, but it's just not going to happen right now. Testing will always be hard and a bit unpredictable.  So, any ideas for how we deal with this testing issue in Scrum? Anyone faced this sort of thing before?  Thanks,  Kenny",5704
"08:51 am January 13, 2014                    > In the old days, we'd stop the testing, fix the   > bug right there and then, then start testing again  Yep, and the moment you stop doing that you start incurring technical debt. Why did you stop? Are these tests all manual QA tests, rather than automated unit or BDD tests? Is that how your situation became unmanageable, and is that why regression testing takes weeks rather than minutes?  If so, I'd suggest getting some TDD unit tests in place, gradually paying off some of the technical debt and improving code coverage sprint by sprint.            Log in or register to post comments",5704
"11:43 am January 13, 2014                    Kenny,  Let's dig deeper for a minute and try to tease apart the rest of the needed context to be able to help you.  Think of this as you presenting a symptom or two to a doctor, and we as doctors need to run some further labs in order to diagnose accurately so we can suggest treatment.  Just realize that diagnosing accurately over the internet is a bit risky, regardless of however well intentioned we are.  :-)  1.  Are these tests you speak of fully automated?  2.  Are tests for new code/functionality fully automated?  3.  Does your team apply the Automated Testing Pyramid approach?  http://www.mountaingoatsoftware.com/blog/the-forgotten-layer-of-the-tes…  4.  How often is your software released?  5.  Is releasing your software with these bugs acceptable to the PO?  If so, why?   If not, why not?  6.  What is your role at your company?  What is your Scrum role?          Log in or register to post comments",5704
Log in to reply,5704
Messages,5699
"01:40 pm January 10, 2014                             Hello guys  1 - What we can do if our PO has decided leave company in the middle of project?   2 - What is the advice / rule in Scrum?   Thanks  Regards",5699
"01:49 pm January 10, 2014                    Did the PO work for the client or the supplier? Are these the same or separate organizations?          Log in or register to post comments",5699
"12:57 am January 13, 2014                     I don't think Scrum advice anything on it, this is a typical resource management issue. There are multiple options - your best bet would be to have a team member (BA) do the PO job till the organization find out a new PO for your team. Someone who owns the product or whose money is getting invested into the product should be the PO.  Cheers  Sanjay          Log in or register to post comments",5699
"01:51 am January 13, 2014                    > I don't think Scrum advice anything on it  There's no specific advice, but by definition the Product Owner owns the product. This means that if the PO leaves an organization the product can, in theory, be expected to make the journey too. Of course this depends upon whether or not the PO is an entrepreneur, and not just a hired representative of stakeholder interests.           Log in or register to post comments",5699
Log in to reply,5699
Messages,5686
"11:53 pm January 3, 2014                             We all know Sprint Planning meeting is having two parts - What & How.  Inputs to Sprint Planning are  Refined User Stories in product backlog,  History of Team Velocity, Team Size, Vacations and Holidays.   Since Sprint is time boxed, we can calculate net capacity (Net available hours).     Developers tend to give higher estimates while creating tasks for user stories. We know developers updates the hours such that all estimated time consumed even if it takes less time and they spend time on the tasks other than task relevant to User Stories.  If we do simple math Sum of Tasks hours <=  Available hours, we will be taking less number of user stories in sprint backlog, because bottom of the heart we know if you ask developers to estimate tasks, it will be always more than 200%.  If anyone asks question, he can give n number of reasons.   Since development team is  self-organized and cross functional, hence we rely on team for better task estimation.  Sometimes discussion around task estimation becomes unhealthy.  How do we address  this as a scrum master ?    Options  1)	Should we hold moving user stories to sprint backlog till tasks are re-estimated and do capacity match again ?   2)	Should we move user stories based on the team velocity history. (We don’t co-relate user story point with sum of tasks hours created for that user story) ?  3)	Should we more user stories than the outcome of math i.e. Sum of Tasks hours <=  Available hours ?  4)	Have a discussion meeting to understand why each task will take that amount of team, though this is against the principal of scrum ?  5)	Should we inform discipline managers ?  As per scrum, it is only development team however in reality organization is having discipline model and scrum team is kind of a virtual team.  6)	Suggest Certified Scrum Developer training for development team.  What options you will be following in this scenario.  Any thoughts ?",5686
"01:33 am January 4, 2014                    Scrum Team members are not accountants. Scrum is about delivering increments of value in the form of working product. It is not about delivering story points or hours, and a Development Teaam should not be held accountable in any way for the delivery of points or hours.  Estimates are only made to facilitate discussions about how much work can be taken on and how much work is likely to remain in a Sprint or Product Backlog.   So, if a team knows that development capacity is likely to be reduced by a certain percentage during a Sprint, proportionally less estimated work can be taken on in Sprint Planning. That's as complicated as the arithmetic needs to get.  A good Development Team will look at the size and shape of their Sprint Backlog in the round, and will use summed sizes merely as a guide. If any estimates turn out to have been substantially incorrect, the sizing method can be inspected and adapted in the Sprint Retrospective.          Log in or register to post comments",5686
"11:49 am January 5, 2014                    Suggesting the team to attend the Professional Scrum Developer course doesn't sound to be a bad option. We have several public Professional Scrum Developer courses running around Asia this year.          Log in or register to post comments",5686
"01:21 pm January 10, 2014                    Collaborative environment is a key to the Scrum success.  Product owner, Scrum Master and Development Team should work together and there should be a mutual respect. Of course it takes time if you and or your team are new to Scrum.  Here are my thoughts -   ""Developers tend to give higher estimates while creating tasks for user stories. We know developers updates the hours such that all estimated time consumed even if it takes less time and they spend time on the tasks other than task relevant to User Stories""  1. You are making generalized statement about the developers, which is not true in most scenarios. Also you have perception about the developer task estimation that they always quote more hours. The perception should change. If we want others to change, the change should come from us first.  2. Even though the Scrum Master can’t tell who should work on what and how it should be done, (Since Development Team is self-organized and cross functional) but he can guide the team if the task is irrelevant to the user story. Scrum Master can point out if the task is not targeted towards the acceptance criteria (AC) defined for the user story. All the tasks should be relevant to the AC. If the developer is working on a task completely irrelevant to the Sprint Goal or AC of a user story, then it is Scrum Master’s responsibility to re-iterate the same and make sure the team focuses on the AC and Sprint Goal.  3. If you feel that the development team is not committing enough (like story/task estimations are always high, you should try discuss this point during Sprint Retrospective meeting on how to improve team’s Velocity. Teach the team on Sprint estimation, Story sizing and relative size estimation, etc., May be development team has environment challenges so the estimates go high. Consider Xtreme programming techniques like Continuous integration, TDD, pair programming etc., Have your lead developer or Architect be a mentor to the developers and help them perform better.   4.  If the development team is spending 10% of their time towards product backlog grooming, they should have better understanding over the story/task estimation during sprint planning.  Inspect & Adapt    Scrum ON..           Log in or register to post comments",5686
"10:43 pm January 12, 2014                    Scrum developer training may definitely helps the team in other aspects, but not in this context , that is conflict among team to estimate.  I suppose its very clear and not unresolvable issue. Team can see the and think about the rational over the argument, it's easy to percept why this takes this much time. If team members are not coming to  an agreeable estimation even with valid reasons, then there is other problem in the team, Figure out that issue and resolve.   If scrum master motivate the team and understand each team members motivation factor, its easy to get  unity, collaboration  and collectiveness in the teams decisions. in Sprint planning meeting part-2, there is a chance to get the reasons behind the  odd man out estimation. It may not be scrum practice but we can employ any  good technique in getting consensus over estimation  just like the best development engineering practices .          Log in or register to post comments",5686
Log in to reply,5686
Messages,5702
"12:28 pm January 12, 2014                             Hello again,  Suppose that my company uses Scrum framework for develop different complex products and our Product Owner needs go for vacation (3 weeks) in the middle of project (the vacations cannot be cancelled because include ticket flights):  1) Scrum allow that assign some Proxy resource in order to reeplace it during their absence?  2) If #1 is Yes, The person to replace it could be a team member of the Development Team?  Thank you  Regards",5702
"02:34 pm January 12, 2014                    If you have 1 month sprints, and if the PO is available for Sprint Planning before going on vacation for 3 weeks and is also available for the Review and Retrospective upon his or her return, you may not need a proxy.  Otherwise, yes a proxy could be found from within the Development Team. Note that this proxy would require the authority to negotiate a Sprint Backlog and also to potentially release an increment.   The PO's absence could therefore be an opportunity to pay off any outstanding technical debt.          Log in or register to post comments",5702
Log in to reply,5702
Messages,5646
"12:28 pm November 19, 2013                             Hi  I'm having some trouble figuring out how to handle validation using user stories. I've come up with the following approach but I'm not sure if it is correct.  Is the following a valid user story?   As a Comptroller  I want to prevent a customer from being disabled when it has unpaid invoices  So I can ensure that the customer pays their invoices  If not, how would I ensure that this is properly tracked?  Thanks",5646
"01:06 pm November 19, 2013                    As an administrator who disables customer accounts,   I would like to be prevented from disabling a customer account if the account has unpaid invoices  so that customers have a chance to pay their invoices.  Acceptance Criteria: display a message to the administrator with information about why the account cannot be disabled.          Log in or register to post comments",5646
"01:07 pm November 19, 2013                    Thanks          Log in or register to post comments",5646
"02:51 pm November 19, 2013                    Perhaps this can be written as a specific acceptance criterion for a more general user story, e.g.  Given a customer account  Where at least one invoice is unpaid  Then the account will be enabled          Log in or register to post comments",5646
Log in to reply,5646
Messages,5638
"03:46 pm November 15, 2013                             Hello,  I am looking for tips how to put QA back in the Sprint. At the moment the ""support and maintenance"" team is the QA team. The Development Team does TDD and little bit BDD as acceptance test. But the ""support and maintenance"" team does too much testing.  I have the book ""Agile Testing"", but I am still at the beginning. What can I do to get the ""Definition of Ready"" and ""Definition of Done"" in a useful state and used by the people? What else can I do?  (We have a coach, books, videos, trainings, a scrum master .... they work with scrum over 5 years now ...)  Regards,  Sandra",5638
"02:17 am November 16, 2013                    > What can I do to get the ""Definition of Ready""  > and ""Definition of Done"" in a useful state and  > used by the people?  Have you addressed the Definition of Done in a Sprint Retrospective yet? Improving the DoD is one of its outputs, and it should involve the entire Scrum Team.          Log in or register to post comments",5638
"02:22 am November 16, 2013                    > What else can I do?  Check that the Definition of Done is one that the team can actually meet. If they don't own their process, and can't take backlog items through to completion without external dependency or impediment, the DoD will be of little value.          Log in or register to post comments",5638
"03:22 am November 16, 2013                    It would be great to have some more information about DoD. I do not know how it could look like at all. For example ""All tests are green"" can be anything.          Log in or register to post comments",5638
"04:12 pm November 16, 2013                    an example:  - every new piece of code has to be tested by unit test  - test coverage has to be above 75%  - every commit has to have a comment not shorter than 12 characters with the number of US or bug  - no compilation warnings  - no critical issues reported by static code analysis  - no failed regression (old) tests          Log in or register to post comments",5638
"04:20 pm November 16, 2013                    Thanks a lot. That is a great start. :-)          Log in or register to post comments",5638
"07:01 am November 19, 2013                    A Definition of Done should be good enough that the resulting increment is potentially releasable. However, many teams do not initially own their process, and a DoD of such quality is not possible. These teams may separate ""story done"" from ""sprint done"" and ""release done"". This allows technical debt to be controlled, or at least made visible, until such time as a single release-ready DoD can be applied to each and every Sprint.  Here's an example of an organizational DoD. Remember: this isn't an example of what a good DoD should look like, since it contains anti-patterns...a good DoD should not separate ""story done"" from ""sprint done"" from ""release done"". It is an illustration of an intermediate set of definitions that may be used during a controlled agile transformation before CI/CD is in effect:  -- STORY DONE --  •	Code functionally working, checked in and builds  •	Code is traceable to requirements (check in is linked to a work item, e.g. by ID)  •	Unit tests written and all unit tests in the test suite passing  •	Regression tests passing   •	Scrum team tests automated  •	Scrum tester testing completed and passing with tests scripts and evidence produced  •	Technical debt register updated (as a story in the backlog)  •	Approved by Product Owner (Points awarded at demo)  Optional:  •	Code and unit tests peer reviewed  - review on check in with a check in comment “Reviewed by…”  -- SPRINT DONE --  •	Code conforms to organizational development standards  •	Infrastructure components used appropriately  •	Code deployed to a production equivalent integration environment  •	Code deployed to Product Owner review area  •	Code merged to main line  •	Code coverage >= 75%   •	New services registered in service repository  Optional:  •	Database transactions analysed for efficiency    •	Master database scripts produced from Athena  •	Automated confidence tests for deployments  -- RELEASE DONE --  •	Master database scripts produced  •	Database transactions analysed for efficiency   •	Zero critical or high outstanding defects  •	Performance & Volume tested  •	Security tested  •	Supporting documentation completed  •	User permissions set up  •	Wiki page with links to: Trouble shooting guide, functional spec, High Level Design, user stories, documentation of any non-standard patterns/tools used, location of project code           Log in or register to post comments",5638
Log in to reply,5638
Messages,5635
"10:10 am November 15, 2013                             In my scrum team, we as a lot of other teams use grooming session to prepare the stories for the coming next sprints. Unfortunately  recently it seems that some people thought we are doing something very wrong and illegal.  Grooming is defined by Justice in the Netherlands as digital child luring.  A groomer is someone presenting him or herself as a nice guy or popular girl  trying  to get contact young girl on social media. The final goal is to persuade the girls to cybersex.  Well this kind of grooming is forbidden by the law...  So to be clear we as scrum teams we do not want to act illegal, and we want all our stakeholders to understand that we are only doing legal things. We decided to think of another name for our preparation actions and still be legal  We inspected and adapted several other names ( preparation, detailing...) but finally we choose for Zooming ( zooming in to a topic until it is enough to poker and done in one sprint.)  It this something other teams can use. Would it be an idea to change grooming in the scrum guide or add some alternatives?  PLease let me know",5635
"10:13 am November 15, 2013                    The word ""grooming"" was replaced by ""refining"" in the latest sacrum Guide.  It does have a different meaning in the English language. Hopefully this will make more  sense to the team.          Log in or register to post comments",5635
"10:36 am November 15, 2013                    Approx 9:50 in this video by Jeff & Ken they briefly explain why this was changed in the Scrum Guide.  https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…          Log in or register to post comments",5635
"03:18 pm November 18, 2013                    I groom my cat and my beard. Nothing illegal about that, although my wife claims I do both way too seldom. I groom the backlog with my team and they want to do that more often too. Nothing illegal about that either. It's just a word, let's not get crazy about the word just because some ... use it in an objectionable context. Nevertheless, since July it is ""backlog refinement"" in the Scrum Guide. One thing troubles me though - can I still ""groom"" my cat or should I ""refine"" it?          Log in or register to post comments",5635
"06:36 am November 19, 2013                    Tomek's got it right. If he gets jailed for grooming his cat or his beard, I'll send him oranges. Until then, I for one am not going to fret about whether it's ""backlog grooming"" or ""backlog refinement"" in a team's calendar.          Log in or register to post comments",5635
Log in to reply,5635
Messages,5642
"06:23 am November 18, 2013                             how do you measure your full company's agility?I am working in a telecommunications company and we are looking ways to measure and follow up the company's agility on the enterprise level, not only for technical departments, but on every domain.",5642
"06:45 am November 18, 2013                    Agility Path is a metrics-driven approach for transitioning to scale:  http://www.agility-path.com/  There's a new Agility Guide PDF on the site which provides an overview of the framework.          Log in or register to post comments",5642
Log in to reply,5642
Messages,5639
"07:13 am November 16, 2013                             Hi all,  we've spent 12 sprints with planning poker and story points based on complexity. Our new scrum consultant said, that complexity as a measured variable/unit is still too time related and that people are still thinking in effort and time for implementation.  I think that he's right, since we used to determine the story points per day/person during our sprint planning to determine the amount of story points to pick. This is probably not the ""spirit of scrum"" ...  Our scrum consultant suggested to not consider story points in planning at all, but to ask the team after introduction of each story if they think that they can do it within the sprint. As far as I got him, story points are only used by the product owner in order to update the release plan with the teams velocity. And they're probably used by the scrum master in order to see performance changes.  What I liked about the consultant's suggestion is that they recommended to have three 30 minute estimation meetings during a two week sprint where you estimate the whole backlog each time. With this method people will probably be forced to deal with all items all the time. This will probably raise the awareness for and the quality of all backlog items.  The consultant recommended using magic estimation. We should compare the user stories relative too each other by guessing/estimating/measuring/imagining the number/amount of problems that the story solves for the customer. As an example he said that a nail solves less problems for a customer than a hammer which solves less than an electric drill.  I wasn't really able to transfer the idea of this measured variable/unit to the dev team, probably because I wasn't completely convinced either. They asked why they should determine the amount of use for the customer. This should be the po's job, they said.  I found some other suggestions online which recommend using t-shirt sizes or the level of understanding for a story. Our management (which introduced scrum and promotes it) said that level of understanding isn't enough, since you could also understand something that solves a lot of problems.  My questions:  1. Did I get the whole idea right?  2. Which measured variable/unit can be used for estimation?  3. How do I transfer that idea to the team?  4. Are there any other things that I overlook here?  Thanks in advance,  Flo",5639
"07:47 am November 16, 2013                    moved to https://www.scrum.org/Forums/aft/539  please delete  Sorry,  Flo          Log in or register to post comments",5639
Log in to reply,5639
Messages,5637
"03:28 pm November 15, 2013                             Hello,  there are some cultures like German and French, where they have two types of ""you"".  A formal ""you"" and a non formal ""you"". I am looking for experience with this formal ""you"" culture.  I have the feeling that this formal culture creates a distance between the people.  This is enhanced with formal clothes.   Imagine you would talk with your team members always in a formal way ...  Regards,  Sandra",5637
"02:57 am November 16, 2013                    Scrum emphasises ease of collaboration over more constrained behaviors that limit co-operation. Formality in clothing or modes of address are unhelpful if they reinforce inappropriate power relationships. That isn't always the case though; if everyone uses equivalent formalities the field may be leveled. Or to put it another way: si tout le monde est ""vous"", pas de probleme.  In Scrum terms, I reckon it is better to focus on good etiquette than formality. Debrette's says that ""good etiquette"" is behavior that puts people at their ease...and much depends on context and audience. That's as true in agile ways of working as anywhere else.          Log in or register to post comments",5637
"03:24 am November 16, 2013                    At the moment there is an atmosphere like this: ""someone else did something wrong"", ""Team XY does not their work"", ""bugs are new requirements"", ...  I think ""feeling at their ease"" is some of the most basic when you start with Scrum. How can you request people to ask for feedback and to give feedback, when there is a distance?          Log in or register to post comments",5637
Log in to reply,5637
Messages,5633
"05:36 am November 15, 2013                             Lets count reasons, why we love it?",5633
"05:37 am November 15, 2013                    I ll start from this article.  http://www.webinse.com/blog/why-we-love-scrum/          Log in or register to post comments",5633
"07:06 am November 15, 2013                    Al Shalloway has taken a critical view of Scrum, and these days actively promotes SAFe. However, he has published this blog post stating the reasons...or as he puts it, ""setting the record straight""...for why he loves Scrum. It's worth reading:  http://www.netobjectives.com/blogs/setting-record-straight-i-love-scrum           Log in or register to post comments",5633
"03:40 pm November 15, 2013                    I love it because ... it is agile and I can use the agile practices and agile values and principles. I love it because it focus on the value for the customer. And it also, when done right, makes fun. I would love to work in an environment where people love to be. That would be nice. I hope I will find this some day ... in the future.          Log in or register to post comments",5633
Log in to reply,5633
Messages,5634
"09:24 am November 15, 2013                             Have I got this wrong?  Transparency is one of the 3 pillars of Scrum.   But does that mean you cannot accentuate the positive?  Does accentuating the positive indirectly mean you are obscuring the negatives?  As a ScrumMaster I advised my team, not to be bashful about their achievements when it came to the next sprint review. I did this in good faith at the time, but now I am wondering if I was wrong.   Did I inadvertently advise them not to be transparent?  Shahine  Mail@Shahine.co.uk",5634
"10:02 am November 15, 2013                    It is incorrect to accentuate the positive if, in so doing, the negative becomes obscured.  There is a particular danger for teams at an intermediate level of agile maturity. If they accentuate the positive to the exclusion of possible bad news, they are likely to end up providing ""vanity metrics"". The figures will be accurate, but they will be selected because they look good. This type of data is not very useful for making further improvements.           Log in or register to post comments",5634
"02:30 pm November 15, 2013                    Thanks Ian.  I kind of knew what the answer was going to be, and I really like the phrase ""Vanity Metrics"".    Looks like more humble pie for me at the next gathering.  Cheers           Log in or register to post comments",5634
Log in to reply,5634
Messages,5636
"11:51 am November 15, 2013                             Hi, All,  I was conducting my first PSM I assessment today and a serious issue occurred, the testing site was down.   I think I was answering my 61st question, and clicked ""Next"", and my Google Chrome showed ""The operation timed out"". I still had almost 35 minutes left. Well, first thing I did was to open a new tab on Chrome and search something on Google to make sure my Internet connection was fine. Yes, the Internet was fine and I had tried to access many other websites and all of them were working.   So I went back to the assessment page and hit the reload button on my browser. Well, the result stayed the same, The operation timed out and only the ""question"" part of the page. After few times of reload, the page somehow worked, but didn't last long. Eventually, the time ran out and I failed the assessment.  After I got the result page, I went to the Open Assessment page and it was the same. In about 30 minutes later, the Open Assessment page was back to live again.   I have sent an email to address the support team this issue. Hopefully I could get a new password to access the assessment again.   Has anyone had this issue before? What would you do if you were me?  Elvis",5636
"12:17 pm November 15, 2013                    Dear all,  Just got the email from support team and it was the technical issue of the site. They sent me a new password to access the assessment again.  They also informed me some information regarding accessing the test (quote from the email):  ====================================================================================  1. Please try to ensure a secure internet connection is present before beginning your next assessment session  2. Please try your attempt from a home or personal computer, as your employer/organization may have elevated privacy or firewall settings that are conflicting with your assessment session  3. We recommend either Firefox or Google Chrome as being the most reliable internet browsers for running our assessments (and Internet Explorer specifically as typically proving to be less reliable).  ====================================================================================  Be sure your environment meets above recommendations.  Scrum on!  Elvis          Log in or register to post comments",5636
Log in to reply,5636
Messages,5630
"10:05 am November 13, 2013                             Hi all,  I'm relatively new to the forum and Scrum as whole so hi everyone!  I've just recently started getting into Scrum and have received my password for the exam today so am getting a little nervous as to whether I'm fully prepared or not.  I've done an e-Learning ScrumMaster course, have read up on the Scrum.org Scrum Guide and am passing the Open Assessment with 95+%.  I've also done some independent studying on Burndown Charts and Scrum of Scrums.  Is there anything else that I'd need to cover?  Any help that you guys can give me would be greatly appreciated!",5630
"10:09 am November 13, 2013                    I would suggest you to train the Open Assessment until you can do ti 100% with the closed eyes.  Also would recommend read Scrum Guide many many times until you could remember the certain phrases. Try to picky - believe me, EVERY single word in Scrum Guide has deep meaning. That could save you additional points on the exam.          Log in or register to post comments",5630
"10:14 am November 13, 2013                    I second both of Ilya's comments. You should know the Scrum Guide inside out, and be aware that it has deep meaning. In other words you should know not only *what* it says, but also *why* it says it.  Also, you should consistently be able to nail the Open Assessment with 100%. For each question, you should not only be able to determine *which* answer is the best, but also *why* the others are either wrong or not as good.          Log in or register to post comments",5630
"04:00 am November 14, 2013                    We also have a main thread on this subject here:  https://www.scrum.org/Forums/aft/264  Ian, I like your comment about understanding the answers -- it would be cool if you could post it on the above thread.  Thanks for all of your contributions to the board -- I've been watching them and it is clear you are a very careful and thoughtful Scrum practitioner.          Log in or register to post comments",5630
"07:02 am November 14, 2013                    Took the test today and passed with 89%!  Thanks all for your help, it's much appreciated.  Virtual beers on me! :)          Log in or register to post comments",5630
"10:43 am November 14, 2013                    Agree with the comments above.   One additional thing -- I would extend the advice to the PSD Open Assessment as well. Also, if there are incorrect answers that are related to a concept, be familiar with that as well.          Log in or register to post comments",5630
Log in to reply,5630
Messages,5383
"07:22 am January 3, 2013                             Hello Team! I wrote an article with six steps I used to pass on PSM I certification test.  Now I am sharing them with you: http://getscrum.com/2013/01/01/how-to-pass-professional-scrum-master-i-…   I hope you enjoy!  Peace and Hugs  Eduardo Sucena  GetScrum.com",5383
"11:44 am November 8, 2013                    HI, Can you send me the other reference books you used for the preps  leaving the Scrum Guide ( which is available on the site ). I have gone through the Guide multiple times and have been associated with Scrum team for over a year.  I am preparing to give the PSM 1 certification. Any inputs/material from your side would be helpful.          Log in or register to post comments",5383
"02:48 pm November 11, 2013                    Sounds great! Unfurtunately, I cannot apply the learnings in my project as it is not an Scrum project. What I do is that I try to imagine what should I do in some cases or how I can explain Scrum to my current team, if we were turning the project into a Scrum project =P  As Shubhadip said, can you tell us any reference book you have read in order to prepare yourself for the exam? Also, did you attend any course related to the Exam?  Thanks Eduardo.          Log in or register to post comments",5383
"04:31 pm November 13, 2013                    Whew, Eduardo, the title of your message here got me scared, but the content is great. The assessments are created to help people assess their knowledge, and -as you indicate- much knowledge in Scrum can only come from doing it.  I recently wrote and published an essentials book, ""Scrum -  A Pocket Guide"". Those who read it, confirmed that it helps grasping the mindset of Scrum better. More information at http://ullizee.wordpress.com/2013/09/19/a-smart-travel-companion-to-scr…  I also think that Lyssa Adkins' book ""Coaching Agile Teams"" is a must for Scrum Masters, see http://ullizee.wordpress.com/2013/01/06/take-it-to-the-team/          Log in or register to post comments",5383
"03:58 am November 14, 2013                    We also have a main thread on this subject here:  https://www.scrum.org/Forums/aft/264          Log in or register to post comments",5383
Log in to reply,5383
Messages,5626
"02:53 pm November 8, 2013                             I learnt about Scrum and work in a Scrum Team.  Scrum: A sprint cannot be extended, but cancelled.  But what about business environment where unplanned   projects request the team to stop the current sprint  and work first on this unplanned project?  For example the internal IT of a company who did  something new and need as soon as possible the  new software for this.  There are business environments where this can happen.  I think it would be wrong to cancel a sprint. Instead I suggest  that the sprint will be freezed. (Using proper methods to do this).  And when the team start to work again on this Sprint  they unfreeze the Sprint (with proper methods).  Of course this should be an exception. And only  when this unplanned project has a very very very  high priority that there is no other solution.  What do you think about this?  Regards,  Sandra",5626
"07:07 pm November 8, 2013                    How often does this happen?  Scrum is structured, and is good for plannable work. After multiple sprints of the same duration, the team develops a kind of tempo, and begins to develop at a less variable velocity. Pausing sprints would disrupt this.  In addition, if the team stops and works on something else for a few weeks, when they come back to the work they'll have forgotten many details, and you're better off doing sprint planning again anyway.  Cancelling the sprint can also be seen as somewhat of a dramatic event, which provides additional visibility of the impact of these ""we need this now"" requests.   An alternative, and I don't know if this is possible in your situation, is to complete the sprint and begin on the new unplanned project in the next sprint. This way you don't change your requirements mid-sprint, but business is still able to set priorities. You could keep sprints short (2 weeks) to account for this.          Log in or register to post comments",5626
"08:19 pm November 8, 2013                    SandraU,   Per the Scrum Guide, here is what is seen on canceling a Sprint:   When a Sprint is cancelled, any completed and “Done” Product Backlog items are reviewed. If part of the work is potentially releasable, the Product Owner typically accepts it. All incomplete Product Backlog Items are re-estimated and put back on the Product Backlog. The work done on them depreciates quickly and must be frequently re-estimated.  Sprint cancellations consume resources, since everyone has to regroup in another Sprint Planning to start another Sprint. Sprint cancellations are often traumatic to the Scrum Team, and are very uncommon.  .  .  .  It appears that what you're trying to achieve would still work with a canceled Sprint. I would think that ""freezing"" items would indicate that you simply put the unfinished work back to a backlog and address it later (""unfreeze""). The team should meet to get an indication of whether something can be accepted by the Product Owner.   Once ready to go back, the team starts with Sprint Planning.   I agree with you that one should consider whether this is high priority, or there are other reasons to go down this path.   I also agree with @Robert where there are some questions one can ask, but I would consider shortening the sprint length to minimize the risk.          Log in or register to post comments",5626
"04:00 am November 9, 2013                    Hello,  I am new in the team. I do not know how often it happens. I will ask.  The Sprint is already two weeks long.  So one question is: what is the difference between: cancelling and freezing.  Cancelling is some kind of bad experience for the team. Maybe we need  a different term or at least a different attitude to this?  I will look what they are doing when something like this happens  and how they feel about it.   Regards,  Sandra          Log in or register to post comments",5626
"10:35 am November 9, 2013                    Sandra, cancelling being a bad experience is kind of the point... being interrupted from your development and being told to do something else IS bad, and it negatively affects the progress of the team.  The people who are responsible for this abrupt change in priorities need to be aware of its negative impact. The team shouldn't be masking this and pretending that it's good. One of the goals of scrum is to protect the team from changing requirements DURING a sprint. The business can change the priority of the product backlog as much as they want, however they want. But once a sprint starts, the sprint backlog is owned by the team and can only be changed with their agreement.  IMO, you shouldn't be thinking about changing the attitude of the team, but rather the attitude of the people who ""need"" the team to drop everything now and start doing something else.          Log in or register to post comments",5626
"10:45 am November 9, 2013                    Hello Robert,  yes, I like the idea that the Team is protected by the Scrum Master.  (I did not find this in the Scrum Guide 2013, it was in the Scrum Guide 2010?)  I learnt that there is theory and practice.  Truth is that something there are things happen, that happens.  This interruption cannot be avoided, because of change of market.  I do fully understand this. My concern is how we can reduce the impact to the team,  and make them hopefully still smiling.  Maybe from business point of view, they could give some kind of warning ahead:  Maybe we will get an unplanned project in x weeks. Then the team could maybe  make a shorter sprint to be ready?           Log in or register to post comments",5626
"11:06 am November 9, 2013                    I also work in an environment where interruptions are something unavoidable. Basically, critical live production problems will take priority over regular development. We try to shield the team by having other people do this work but sometimes their involvement is necessary. So yes, practice is very different than theory. But by talking about theory we try to work towards an ideal situation, and make transparent the things that are keeping us from that ideal.  The team should not be (overly) discouraged at a sprint cancellation from external sources. The narrative is ""folks, we need to cancel the sprint because so and so has asked/directed that we drop everything because this new thing is really important and they need our help"".  As you say, if business can give warning it would help greatly. And X weeks = 2 since your sprints are 2 weeks. My recommendation would be to try to integrate these interruptions into the scrum process. I.e. have stories or PBIs prepared for them and do them as a standard sprint.  Looking at the scrum guide...  For the Product Owner to succeed, the entire organization must respect his or her decisions. The   Product Owner’s decisions are visible in the content and ordering of the Product Backlog. No   one is allowed to tell the Development Team to work from a different set of requirements, and   the Development Team isn’t allowed to act on what anyone else says  In your context, this means that these interruptions should flow through the Product Owner. If business needs the team to work on something else, they should inform the PO who would then prepare stories or Product Backlog Items for the next sprint.  You're right, I couldn't find anything specific about how the Scrum Master protects the team from external influence, specifically management. It seems like a glaring omission.          Log in or register to post comments",5626
"10:06 am November 11, 2013                    > But what about business environment where unplanned  > projects request the team to stop the current sprint   > and work first on this unplanned project?   Scrum is an empirical approach based upon transparency and a regular cadence of inspection and adaptation. Scrum Teams and their stakeholders are expected to commit to that framework. Freezing sprints compromises all three of these legs upon which Scrum stands. When a sprint is frozen, the window of transparency is shuttered and the cycle of inspection and adaptation is no longer in effect.  The right thing to do in the situation you describe is not to freeze a sprint, or even to cancel it. The problem you have indicated is one of scope and prioritization, which makes it a Product Ownership issue. You need to identify the Product Owner in this situation as the role seems to be rather vague. Then the new work should be added to the team's Product Backlog so they can handle it within the context of Scrum and ongoing iterative delivery.  It would appear that you have a ""hidden"" Product Owner somewhere...the authority who has determined that this other work trumps the product you are working on. This is the person who *really* determines priorities and who is responsible for return on investment. Your current PO would appear to be a proxy for this authority. I recommend clarifying product ownership with the stakeholders involved, and establish the position that the team needs to keep sprinting.          Log in or register to post comments",5626
"03:19 pm November 13, 2013                    Ok,  Scrum is for the ideal situation. But this situation is not ideal.  So it cannot be handeld with Scrum. Usually adapting Scrum  is a very bad idea ...  So I change to say it is some kind of ""fire in the house-situation"".  A situation that should not be there, but cannot be avoided in practice.  (Fire is not an ideal situation, and hopefully people go out of the building).  Regards,  Sandra           Log in or register to post comments",5626
Log in to reply,5626
Messages,5627
"10:31 pm November 8, 2013                             Dear all,  I’m currently facing with the following Scrum “problem”.   During the end of each Sprint, the Scrum team holds a Sprint Review with PO and stakeholders. In Scrum usually after the Sprint Review, there will be a clear view of which items have been accepted and which haven’t. The incomplete items gets back to the backlog.   We’re a company that constantly work on a large and complex web application. This means that once a story is done, it isn’t completely done because manuals needs to be created and wholesalers needs to be informed etc. In other words, there is a whole different process starting after development.   Because of this, the PO wants the stories that are done during the Sprint (demonstrated and approved) to be pushed into some kind of “acceptance environment” where a team of Product Managers can assess the changes, write the manuals, inform clients, do more testing etc.   This approach somehow doesn’t feel very agile because at the end it isn’t a potential shippable product. Technical it’s shippable but not business-wise…   How do deal with this kind of problems?",5627
"10:55 pm November 8, 2013                    Hi P. Ross,   Allow me to share some of my thoughts....   I think this really gets into the Definition of Done (DoD) and what the PO considers the shippable increment. Also remember, the person responsible for maximizing ROI and delivering business value is the PO.   E.g. ""Ready to ship to Product Managers, within the Company""  This may be a blessing in disguise and a nice way to reduce any external dependencies.   That said, however, there are still some questions --   A) Are the Product Managers, Manual writers, those engaging with the Clients part of the Review?   B) Is this an internal product or an external one?  C) Are there a lot of bugs discovered on further testing?   Does the Dev Team feel they can do more? If it makes sense, it may be worth asking the rest of the team whether we can take on more (e.g. writing manuals), or adding some other members on the Dev team.   The DoD may also evolve, accordingly.   I think the ""problem"" isn't really a challenge, but an opportunity to reflect and improve wherever possible. Hope some of this helps -- I would also be curious to see how others respond, or are in a similar situation.            Log in or register to post comments",5627
"11:05 pm November 8, 2013                    There are two options.  Option 1 - Include writing manuals, informing clients into the Sprint  This option is the preferred one as the information especially increment changes is fresh and can be done efficiently. It is important these people are part of the team as they play key role in delivery and also doing some testing.  Obviously there are some problems that you are encountering using this approach. Alternate solutions can be considered based on the actual problems. It would help if you can specify them.  Some obvious issues that I am thinking you are facing could be as follows:  * The Product Managers will involve only in part time in the sprint  * The rest of the development team may not much to do of the sprint backlog while this activity is being done.  * The testing done typically do not require changes by the development team.  For the above issues, I would suggest the following option.  Option - Create a small second scrum team, Business stream, with people responsible for the final tasks.  * Product backlog item from first team is Done once it is approved by PO and moved to Acceptance testing.   * Product backlog 'Done' by first team becomes Sprint backlog for the Business stream.  * Sprint for the Business stream could be a shorter duration compared to the first team.  * Sprint goal would still be the same for both teams.  There could be some issues coming up with this approach but using typical inspect/adapt scrum practices, I am sure these could be addressed.  As mentioned earlier, further alternate solutions can be considered if you can highlight the actual problems encountered if using the first option.          Log in or register to post comments",5627
"02:01 pm November 9, 2013                      That said, however, there are still some questions --     A) Are the Product Managers, Manual writers, those engaging with the Clients part of the Review?     B) Is this an internal product or an external one?    C) Are there a lot of bugs discovered on further testing?    Does the Dev Team feel they can do more? If it makes sense, it may be worth asking the rest of the team whether we can take on more (e.g. writing manuals), or adding some other members on the Dev team.    A) Yes  B) Both, our product are used by ourselves and by our clients.  C) Yes, our product is so big, complex and has questionable design choices that when you introduce a feature, somewhere else (can) break. Despite that the Development team is continuously improving themselves. Unit testing, pair programming and CI are subjects that will be introduce shortly.  And no the Development team is not capable in writing these functional manuals. Our Product Managers are hired and skilled to write these manuals.    I guess the big question is: what would you do if stories never gets completely approved during the Sprint Review. There are various (and in my opinion) valid reasons such as:   1) what the Development team built is still error-prone. Its not the fault of the current Development team but bad legacy coding.  2) software is for external usage so the manual needs to be created before launching it.  3) software is for external usage so clients needs to be notified.       4) what we usually hear from PO is that the Sprint Review is too short to do a good User Acceptance Testing.             Log in or register to post comments",5627
"02:32 pm November 9, 2013                    Stories are approved based on the Definition of Done and the Acceptance Criteria. So reasons 2 and 3 that you list are not reasons for not approving a story in the Sprint Review unless they are listed in DoD or Acceptance Criteria.  This is potentially shippable software. But you still need to do more work (but outside of the team) to deploy it. I agree with Ganesh, another scrum team for the process after development would be good. But really, for the dev team, that shouldn't matter, because they're Done. If you're getting a lot of bugs reported by the Product Managers after you've handed them the stories that's indicative of a Quality problem within the team (or possibly a requirements problem).  As for 1, your stories needs to pass all of the Acceptance Criteria. If that means they have to fix the legacy code, well that's technical debt that you need to pay when developing the story. If the things that are error-prone are outside of the story's acceptance criteria then the story should still be accepted (and another story/bug created to fix those errors based on priority). But the dev team should have enough test coverage that they are sure the stuff they build is error free as much as possible.  For 4, there's nothing to stop the PO from inspecting the stories during development, and arguably the earlier you get input from those close to the Customer the better. Also, I can see how a Sprint Review may not be enough for full User Acceptance Testing. In our organization, after the story is Done and has been approved in the review it is given to the customer for UAT. At that point, it is still potentially shippable, in that our team is confident enough in it that they would deploy it to production whether or not the customer actually does any UAT testing. (This is not to say that there are no bugs, just that our dev team has completed and inspected their work to a reasonable degree and is not aware of any bugs).          Log in or register to post comments",5627
"11:11 am November 11, 2013                    > Because of this, the PO wants the stories that are done during the Sprint  > (demonstrated and approved) to be pushed into some kind of “acceptance  > environment” where a team of Product Managers can assess the changes,  > write the manuals, inform clients, do more testing etc.   > This approach somehow doesn’t feel very agile because at the end it isn’t  > a potential shippable product.   <devils_advocacy>  This is interesting because in the narrowest and strictest of Scrum terms you don't have a problem. The Product Owner is asking the Development Team for a ""push"" to acceptance testing. This has become the Development Team's horizon of shippability...incremental delivery to a higher level of staged deployment. That's the limit of the release. It's a push-to-test model, not a release into production. The Definition of Done is correspondingly constrained, and it's likely that technical debt will be incurred until there is eventually a release into live. But since the PO determines product value, and seems to believe that deployment to a staging environment is useful and provides good value, can you really say that the position taken is wrong?  </devils_advocacy>  Scrum is agnostic about whether or not ""Done"" has to mean a delivery into production. This is to allow for complex situations where it is considered pragmatic to have multiple Definitions of Done at various points in the value stream. In your situation, your current level of Done might be appropriate for a sprint, but may be supplemented with a Definition of ""Release Done"" that provides for manuals and SIT testing.  In Scrum it is possible to have Definitions of Done that are comparatively weak and far removed from production, since every team has to start somewhere and process ownership may initially be limited. What matters is that, at any given point, a DoD is clearly defined and its ""quality"" continually challenged and improved. Good quality means reducing batch sizes and enqueued work, so that value does not depreciate before entering production. What was once ""push to test"" should (eventually) become ""pull from live"". These improvements often happen only gradually, and are one of the outputs of a Sprint Retrospective. So if I was you, I'd have a word with the PO about whether he or she is really ""satisfied"" about what Done means.          Log in or register to post comments",5627
"05:51 pm November 11, 2013                    Hi P.Ross  It would be the best to have clearly defined acceptance criteria for every US and PO who speaks with one voice. But it sounds that in your case it might be hard to achieve. Instead of fight with it, try to tailor.  You mentioned that the teams provide the fully finished US and then someone else gives a feedback if it's really done. You can assume that the US was the initial part of functionality then the feedback is the additional requirement for another US (or bug) and put it to the backlog. The same way you deal with the huge functionality divided into several USs. For example if you need to provide the web interface to a data base, you can create the first US with UI via console then the next one via webpage.  Let us know your choice and how it works.           Log in or register to post comments",5627
Log in to reply,5627
Messages,5599
"09:55 pm October 16, 2013                             hello guys i have a doubt, whto is responsable by the burndownchart: Scrum Master, Product Owner or Dev Team ?",5599
"11:00 pm October 16, 2013                     I believe this has been asked couple of time. My comment would be - Dev team is responsible for updating the remaining work and the burndown chart should be generated out of it, so the responsibility lies with Dev team.  Cheers  Sanjay           Log in or register to post comments",5599
"11:45 am October 17, 2013                    thx Sanjay Saini.          Log in or register to post comments",5599
"11:25 am November 4, 2013                    I'd say the answer depends on which burndown you're talking about. For example:  Sprint Burndown : Development Team    Release Burndown : Product Owner           Log in or register to post comments",5599
"07:53 am November 6, 2013                    Hi Derek,   i'am newbie in scrum, then can you explain the difference between both?          Log in or register to post comments",5599
"03:24 am November 9, 2013                    While a Sprint the Development Team works on several Product Backlog Items (PBIs) which were picked-up before in the Sprint Planning Meeting from Product Backlog. Inside of a PBI the development Team usually defines some Tasks which are required to finish this PBI, bring it to ""done"". Now, when the Development Teams finishes a task, then the work-left for the Sprint is smaller than before. With an Sprint Brundown Chart (Example: http://commons.wikimedia.org/wiki/File:Burndown_Chart_of_Agilo_for_Scru…) this can be visualized and make transparent.  On the other side the Product Owner has to observe the whole Product Backlog with all PBIs, and so the work-left, independent of the current Sprint. So how is here the Progress over the project duration? How much work-left for the project? With the help of the Release Burndown Chart can be the left-effort over all Sprints be visualized.          Log in or register to post comments",5599
Log in to reply,5599
Messages,5621
"07:32 am November 2, 2013                             Hi all,  I am currently working in an organisation currently which has an evolved waterfall method and shared resource utilisation nailed down so well that they now have actually quite a successful track record with delivery in this.  Many years of investment and planning and automation of management process has led to a machine that is actually quite smooth in terms of requirements to delivery planning.  We have been given a directive to try to be more Agile, the reason for which is unclear but trying to keep things short - we are where we are.  They want to Pilot and Agile Scrum project. Replace a legacy desktop application to Web based open source tech (Java, MySQL etc)  Setup  Business: A huge number of departments, SME's in each, not technical, who run various applications.  If they want change, they contact a Requirements who then produce a requirements document.    I have had a Product Owner assigned from the business who knows the current system and business process. He will be completely new in both technique and delivery.  Risk.  Technical:  They have silos of teams in terms of physical location (but same building) and technical area.  Architecture, Technical/Data Analysts, ETL, Java and Test. Currently produce estimates based on completed documents by the previous team, driving the design process through.  No one seems to have a problem with it.  Everything is dependency linked, Architecture do their docs, Data and ETL plug their bits in, docs get approved and then Test quotes on all of it.  My Team:  100% dedicated team (normally its 30%), all sitting together size of 7 comprising:  2 Java devs, 1 external to be placed with scrum experience and mentor the internal  1 Data Analyst - modelling and implementing tables/procs etc for Dev  1 ETL  - inputs from external systems and outputs to..  1 Reports  1 Scrum Master - External  1 Product Owner - business  2 week Sprints, pure Scrum method.  This project is full of risk:  Tech: New techs to implement, JBOSS, MySQL, GIT, Jenkins, Eggplant etc that allow for Cont Int, Regression test tools people have never used, reporting tools and bolt ons that are all new and little to no experience  Skills: Silo development means responsibilities and job profiles are traditionally so defined that people automatically revert to what their bit is before moving on  Business: Lack of vision, and lack of experience in IT change/Prod Own process.  Culture:  Potentially going to result in current process being implemented every 2 weeks, with some technical additions to support the regression area. Is this a bad thing?  Project Scope  1. Deliver a replacement solution  2. Build capability within the department for delivering in Agile - use internals to learn  I have to be pragmatic with the people I have, the skills I have and the people working is going to be a massive challenge for all, I have people who hopefully are open to working in a different way, but I need some advice as to practical things and arguments I can provide to people to stop them arguing the 'I can't do this until so and so finishes his bit etc'.  My argument so far is, there is always work you can help with, it may not be DB or ETL stuff but you can do other things.  Example of an argument.  I went to see ETL.  They said they work off mapping documents DA's produce after looking at the relationships.  Hence they say they cannot quote or do anything until they have that document.    I have already made it clear that their current 'job spec' doesn't fit Agile - they will do more/different stuff and must be willing (they say yes but do they mean it, we shall see), but does anyone have any practical advice/experience they can share that can assist with this cultural move that will help me accelerate the mindset shift?",5621
"04:11 pm November 2, 2013                    Rob,  What is your role? What is your background?  What is your experience in Scrum?  If someone put a gun to your head and said, ""How long do you think the re-write will take?  You have 60 seconds to give me your best guess"", what would you say, knowing that your life would be ended if you did not answer?  Note that you don't have to be accurate  -- no one will shoot you if you're wrong -- but you have to give them your best guess in 60 seconds-- otherwise they will shoot you.  I have to say, if what they're currently doing is so successful, I question why they want to change.  ""Be more Agile"" is kind of a ""false"" adoption goal, and could set your pilot project up for complete failure.  Seems like your org really needs some coaching because ""be more Agile"" is not a good place to start really. We need to get deeper into their business goals and current situation.          Log in or register to post comments",5621
"06:45 pm November 2, 2013                     My role is setting up the team and ensuring the goals mentioned are achieved (deliver the replacement and build experience of tools and delivery in the team).  Basically I am a Technical PM.  I am a recent Scrum Master, but don't have much experience.   I am only responsible for delivery - not strategy - this direction is coming from rather high up and the organisation wants to have options for more than one method of delivery.  I agree that it would have been good to know they why's, but i'm afraid I don't.  So we are where we are.  As for the rewrite, this has been attempted a couple of times before, but failed, for different reasons.  I know one of the attempts took over 1 year and wasn't delivered.  This was done as more DSDM as far as I understand, but everyone had left so there is little history.  It was attempted nearly 10 yrs ago.  Their idea was to pick from one of many projects and to try to develop it in Agile.  I don't think this is particularly new, some may get consultancies in and run it with key personnel shadowing it, they have tried that before but it failed because they didnt have the right balance of resources retaining the knowledge or buy in.  This attempt is to get them not just watching but doing.  The resources chosen have been selected because they think they possess the right characteristics, they just don't have the experience.  That is why I am getting externals in who DO have experience to coach, but some people will have to learn on the job.  I have a lot of the risks down but am looking to find others who have experienced similar situations and how they managed.  Thanks          Log in or register to post comments",5621
"05:14 am November 3, 2013                    > We have been given a directive to try to be more Agile...  Well, at least you seem to have executive sponsorship for this agile transformation. There'll be cultural and technical barriers to overcome, but the political ones are apparently mitigated. Is this quite true though?  Where does the directive come from? Does it come from senior management, or a departmental middle manager? Assuming it comes from the top, if your company is very large you can expect layers of middle management and vested interests to deal with. You can expect people who will *not* be on board with the directive, and who could be rooting for the transformation to fail so they can continue ""as normal"". Moreover, since the business case for this transformation is unclear, who can really blame them?  These twists in the political landscape will have to be navigated, and it may fall to *you* to establish a direct line to the seniors, and to connect the transformation strategy with its operational implementation. As a first action, you must find out *why* this agile transition has become a strategic goal, and the problems it is meant to solve. If you don't know the answer yourself, you can hardly explain it to others. Assuming you can get this clarification, your next action should be to agree an actual transformation strategy so that this goal can be achieved.  > I need some advice as to practical things and arguments I can provide to people to stop them  > arguing the 'I can't do this until so and so finishes his bit etc'  My advice is DON'T stop them from doing that, at least not to begin with. An agile transformation strategy usually needs to be done in baby steps. There are exceptions such as Jeff Sutherland's Shock Therapy approach, but most organizations don't have the appetite for much 'shock'. They are too risk-averse, and are reluctant to substantially change an operating model that is in flight.  The first step in a managed agile transformation strategy - the strategy you need to agree with the executive sponsors - should be to build transparency. Transparency always comes first. Don't try and change or improve the process until you get good transparency in place, and the stakeholders can see what is going on and where improvements can be made.  So don't try and squash people who say ''I can't do this until so and so finishes his bit etc'. On the contrary, that's exactly the sort of information you need to expose. An agile team should own its process, and if it doesn't, you need to show it. In fact this is often a good way to get buy-in at an early stage of agile adoption, because people often think in terms of blame and are not yet ready to work collaboratively. If you set up a Kanban or task board, and position it as a tool for that transparency, team members will be able to say ""look, it's not my fault, it's that useless lot over there!"". And guess what? Each team will be able to do this, and then the executive sponsors will be able to see that teams do *not* in fact own their processes as they had assumed. Furthermore, each team can then be coached to question the work they are taking on board when they aren't in a position to finish it, and what they can do to induct work in such a way that impediments are unlikely to happen. These are the questions that encourage change, and it is a seed from which more useful inspection and adaptation patterns can grow.           Log in or register to post comments",5621
"03:38 pm November 8, 2013                    Chaps - many thanks for your views, I think we are covered from support from management, its more of a cultural thing with the technical guys that will need some coaching - I like that advice regarding 'let it happen its all part of it', I think there is only so much you can prepare for - it will be interesting to see how their empowerment will translate into action!  Rob          Log in or register to post comments",5621
Log in to reply,5621
Messages,5622
"09:23 am November 3, 2013                             Hi,  A size of US is relative. It only informs which UStories have the same size, which ones are bigger, which ones are smaller.  But no information how many times other UStories are bigger or smaller. It explains why we can use t-shirt sizes for an estimation.  But when it comes to a planning we count sizes, sum them up, compare to the current velocity, finally pick out. Hence when we have the velocity 4 points and US1, US2, US3 with their sizes 4, 2, 2 respectively, we will take either US1 or US2 with US3. So there is assumption US1 is 2 times bigger then US2 or US3.  is there a contradiction or inconsistency?  BR,  Bartek",5622
"09:56 pm November 3, 2013                    Hello Bartek,   Allow me to share some of my understanding....   In the example you are offering, to some degree, yes we can say 1 item is twice as large as the other. However, this is comparing fewer items. There is neither contradiction nor inconsistency with just these few items.   It also depends on how the time sizes items.   Another team may say --   Small = 1  Medium = 5  Large = 8  Now, when it comes to planning and the team is forecasting a numerical value of 4, let's consider your example.   User Story 1 = 1  User Story 2 = 5  User Story 3 = 5  In addition......   User Story 4 = 1  User Story 5 = 1  User Story 6 = 8  What do you think the Dev Team will pull during Planning?  (we can all figure this out, but its just to think about something else.)  .  .  .  On another note, I would like to bring awareness to other ways of sizing such as Fibonacci --   http://en.wikipedia.org/wiki/Fibonacci_number  If you notice, as things get larger, there isn't a clear way of telling what is ""twice"" or ""thrice"" as large as the other, etc. This is not to suggest your Dev Team should be using this.  Question:   Is the Dev Team using just 3 sizes right now? How many Sprints have elapsed?           Log in or register to post comments",5622
"02:25 pm November 4, 2013                    > is there a contradiction or inconsistency?   Not really, because (like T-shirt sizes) story points are estimates. They are numeric, which makes them more precise, but it doesn't make them any more accurate.          Log in or register to post comments",5622
"10:55 am November 7, 2013                    [code]<caveat>I am also fairly new to Scrum</caveat>[/code]  Story pointing can be a useful way for a Scrum Team to make the amount of effort represented in a Product Backlog transparent and to estimate the amount of effort will be required to complete a Product Backlog Item.  It can also be a valuable trust builder between the Product Owner and development team; as the team estimates effort more and more accurately, the product owner can communicate more accurately to Stakeholders what work can get done and when.  As Ian said, estimating effort is about accuracy not precision, grouping on a dart board is less important than getting nearer and nearer to the bull's eye.          Log in or register to post comments",5622
Log in to reply,5622
Messages,5624
"04:10 pm November 4, 2013                             Greetings,  I am member of a a deployment team at a software company that uses the scrum process for software development.  At the end of each sprint, code from multiple developers are merged into a qa environment and then manual testing is done by product reps.  Once the testing has been completed and approval is given, the developers then cut a build / package and release to our deployment team.    Unfortunately we are usually scheduled to install or upgrade the packages at our customers test environments the same or next day we are actually given the build.  The product owner is usually the product manager of the product and they have promised a certain feature/fix to the customer by a certain date.  This causes a problem as the development team doesn't test the packages they give the deployment team, and the deployment team is not given any time to test the packages. It is not too uncommon for the packages that we receive not to actually install or upgrade without issues, or if it does actually get installed or upgraded successfully, the product has issues as the deployment package doesn't contain all the changes merged into the qa environment.  The deployment and now support team will spend hours troubleshooting problems just to end up getting development involved.  The development team in turn is not too happy as they have already started working on the next sprint, and don't have time to work with the deployment or support team.  This is very frustrating to say the least. This topic has been brought up numerous times with product owners, but we are told that there is no time available in the sprint process to test deployment packages.  From our standpoint, build automation processes should be used so testing can be done with the actual deployment packages.  This would solve problems with finding deployment packages that are not working, and actual test the end product the customer would be getting.  Unfortunately, I have been told this is not possible due to our limited testing capabilities.  We are just looking for any guidance/experience that others have had in our shoes of being in the deployment team.  It seems as though the scrum process puts little emphasis in testing the actual product in its packaged state.  I am not sure of this is a flaw of the scrum process in general or if it just a symptom of the way that it is currently being implemented here.    Sincerely,  Kimberly",5624
"05:44 am November 5, 2013                    >  I am not sure of this is a flaw of the scrum process in general or if  > it just a symptom of the way that it is currently being implemented here.  It's a flaw in the way it's being implemented. Here's the problem:  - In order to be considered Done, the increment must be deployed into a particular environment  - This criterion is not reflected in the Development Team's Definition of Done  - The responsibility for correct deployment lies with a separate Deployment Team  - Hence, in this implementation, the Development Team do not own their process. They are unable to take a Sprint Backlog through to completion so that the intended Definition of Done is satisfied.  > This is very frustrating to say the least. This topic has been brought  > up numerous times with product owners, but we are told that there  > is no time available in the sprint process to test deployment packages  Who is telling you that? The Product Owners? The length of a Sprint is jointly determined by all members of a Scrum Team, not just PO's. If there isn't enough time in the Sprint to satisfy a Definition of Done of suitable quality, then either time (length of sprint), scope (work done in sprint), or cost (developers allocated) must vary.  >It seems as though the scrum process puts little emphasis in testing  > the actual product in its packaged state  Scrum puts the emphasis firmly on delivering potentially releasable increments of value. In Scrum, it is considered important that each increment be deployed into production so that a return on investment can be earned, and so that real-world feedback can be elicited. Failure to do this will result in technical debt being incurred. This is what the ""deployment"" team are currently struggling with. They are trying to pay off technical debt that is arising from the shortfall between the Development Team's process and the Definition of Done that is actually needed.          Log in or register to post comments",5624
"08:49 pm November 6, 2013                    I am with you Kimberly. Throwing incompletely baked work over the fence to the other team is definitely not how we work with Scrum. You need to discuss this in their retrospectives. Have you ever attended their Sprint Retrospectives and raise this issue?          Log in or register to post comments",5624
Log in to reply,5624
Messages,5620
"03:59 pm November 1, 2013                             Hello All.   I am new to the forum, so my apologies up front for not doing research.   I am desperately looking for a template/sample document which is used during a Sprint Review.   The document should talk about the user stories covered in the Sprint review, any user stories that were not completed (if any) and then a sign off from the client about approval.   I am not able to find anything like this. Just hoping that someone can provide some guidance. My email is jskaran@msn.com. Please contact me if possible.",5620
"03:35 am November 4, 2013                    Wow. Why would you want this? Scrum does NOT require such a document, and   If you do some digging into xUnifiedProcess, I'm sure you'll find the document you're looking for.          Log in or register to post comments",5620
"08:11 am November 4, 2013                    Like Fredrik said. Scrum does not require this. Ask your customer why they require it. This is an opportunity for you to coach your customer about value driven development.          Log in or register to post comments",5620
"12:44 pm November 4, 2013                    If the Development Team is a third party contractor, and incremental funding is in effect, it is plausible that some type of sign-off will be needed in order to release further funds. However, this should *not* be on the basis of user stories completed. It should be on the basis of the client having received an actual working increment.  If this template is just a sprint summary, one that captures metrics and preserves findings for the team's own reference, then that's a different matter. In that case it hardly matters what the ""template"" is...just go ahead and put together your own. Nobody needs to sign that off.  If the template is intended to convey metrics to parties *outside* of the team, then that is a different matter again. You just need a dashboard report...or better still, a chart on an information radiator. Again, nobody needs to sign that off.          Log in or register to post comments",5620
Log in to reply,5620
Messages,5618
"07:58 am October 29, 2013                             I would appreciate, if some one could please answer , whether it is correct to say that the development team conforms to the Definition of Done in a scrum methodology.",5618
"08:27 am October 29, 2013                    It would be more correct to say that the work actioned by a Development Team must conform with the team's Definition of Done in order for the associated increment to be considered release-ready.          Log in or register to post comments",5618
"08:29 am October 29, 2013                    DoD is created by a collaborative effort of the Scrum Team including the Development Team. Scrum Team owns the DoD          Log in or register to post comments",5618
"08:32 am October 29, 2013                    The quote from the Scrum Guide:  ""Although this varies significantly per Scrum Team, members must have a shared understanding of what it means for work to be complete, to ensure transparency. This is the definition of “Done” for the Scrum Team and is used to assess when work is complete on the product Increment""          Log in or register to post comments",5618
"08:59 am October 29, 2013                    > Scrum Team owns the DoD  I agree, but we need to be careful here. When forming a Definition of Done, the Scrum Guide says a team must consider the ""conventions, standards, or guidelines of the development organization"". Also, ""If there are multiple Scrum Teams working on the system or product release, the developer teams on all of the Scrum Teams must mutually define the definition of 'Done'.""  I interpret this as follows. A Scrum Team will wholly own its Definition of Done, but that does not obviate its duty of care towards the organizational attainment of consistent release quality.          Log in or register to post comments",5618
"11:36 pm October 29, 2013                    The Definition of Done evolves as the team evolves in its Scrum journey. In other words as a team matures it can introduce more stringent criteria into its Definition of Done.  For eg. A Build verification test might become mandatory once a team has a well defined environment to execute the tests. Then the DoD can be extended to include this test as well.  In humorous terms if a team completes a feature which meets the team's DoD it can go on a vacation provided the PO comes along          Log in or register to post comments",5618
"12:28 am November 2, 2013                    Thanks All,  From the discussion above , I interpret Scrum team conforms the Definition of Done          Log in or register to post comments",5618
Log in to reply,5618
Messages,5617
"06:30 am October 29, 2013                             If we have multiple scrum teams working on the same product backlog, Can we start multiple sprints simultaneously",5617
"08:24 am October 29, 2013                    Certainly, but each team will need to agree on a common Definition of Done for the release they are contributing to.   A Scrum of Scrums is a suitable forum for release-level collaboration between multiple teams working on the same product.          Log in or register to post comments",5617
"11:48 pm October 29, 2013                    This is quite common when we have to follow Distributed scrum. Multiple scrum teams can be spread across the world even though Scrum doesn't advocate this setup.  If that is the case the binding factor is the Continuous Integration that the multiple teams must follow.  My team has a robust Configuration Management process which ensures that everyone in any team is always looking at the latest revision of any artifact.  A scrum of scrums is usually the textbook approach that is recommended but recent studies show that a Scrum of Scrums is quite unnecessary and serves no additional purpose.  If there are issues to be sorted out then Scrum team members should reach out across teams immediately and this should be facilitated by the Scrum Masters of the respective teams.  Scrum of Scrums are unwieldy and ineffective and can never provide timely remedies to anything. At best they are forums for erstwhile managers to flex their muscles and go against the philosophy of transparency since only one person from each team usually participates and information loss is possible.  Secondly in a proper Scrum environment all members are equal and Scrum of Scrums creates a forum where the first among equals always attend it.  Scrum of Scrums are best avoided. Instead use a good collaboration tool and a good configuration management system which ensures transparency across teams and enables good communication.           Log in or register to post comments",5617
"02:50 pm October 30, 2013                    > A scrum of scrums is usually the textbook approach that is recommended but recent studies show that a Scrum of Scrums is quite unnecessary and serves no additional purpose.   Can you please point me to these recent studies?  I've personally seen SoS be quite effective.  The ones I've seen be ineffective were poorly executed.  Charles          Log in or register to post comments",5617
"07:34 pm October 30, 2013                    It wasn't so much a case of poor execution as being a case of redundancy. Atleast that was the case in my experience. Most of the issues need not have waited for the Scrum of Scrums and we noticed that not having the Scrum of Scrums really didn't hamper anything.  >>>Can you please point me to these recent studies?   Yes I can if the Scrum trainer and coach whose training I attended and who mentioned this agrees to my pointing out the sources.  >>>I've personally seen SoS be quite effective. The ones I've seen be ineffective were poorly executed.   Can you please point me to any published case studies? I'm still learning Scrum and I would love to have the facts. Having all these opposing camps with different viewpoints can get quite irritating.           Log in or register to post comments",5617
"11:46 pm October 30, 2013                    Here is an excerpt from an excellent book, based on the numerous and decades of experiences of the author (as good a case study as you'll get on this topic probably):  http://bit.ly/Hg48GT  Most people make the common mistake of making SM's the focus of a SoS, when it should be Dev Team member reps instead.  That book above is the very best book on Scaling Scrum that I've ever seen, best by far.  (Companion book is of the same quality)          Log in or register to post comments",5617
"06:43 am October 31, 2013                    The first time I set up a Scrum of Scrums I messed it up. The problem was I didn't make the remit clear, and I didn't make a good job of getting executive sponsorship first. I fudged two quite separate concerns:  - The need for Scrum teams to co-operate so a release is successful  - The desire of Scrum teams to have a common forum for sharing tips, issues, and lessons learned  This lack of clarity was a problem, and the lack of sponsorship killed it. Attendance fizzled out even though I had resorted to bribing attendees with cookies. I ended up running a series of ""best practice"" workshops instead. It was all a bit of a shame. A good opportunity to establish a viable SoS was missed.  On the other hand, at my present client we have 2 SoS meetings a week:  - One is a 15 minute standup (Friday) that addresses release matters...what teams have done and are doing to contribute to the release; any impediments they have; and any impediments (or work) they are likely to be putting another team's way. I'd call that the ""real"" SoS. I expect it will be held more often as the client gains agile maturity.   - A one hour meeting (Tuesday) for sharing issues/concerns etc. I'd just call that a Scrum forum.  Unfortunately both are called ""Scrum of Scrums"". This did cause some confusion among attendees, but it has settled down now, and rather than unpick the matter I'm just letting it be. Both sessions are working and stable. Interestingly, the value is such that no cookies are needed for attendance, despite the fact that there has been no executive sponsorship in this case either.          Log in or register to post comments",5617
"11:50 am October 31, 2013                    Excellent anecdotes, Ian!  You have inspired me to share a couple as well!  One product where there only two teams, and it was a brownfield app, I recommended that they not even do a SoS.  I suggested instead that each team send a visitor or two to the other team's Daily Scrum every day.  It also helped, though definitely not ideal, that the SM and PO for both teams were the same.  I'd much prefer SM's and PO's only have one team.  Anyway, the practice seemed to work very well.  I should also mention that these teams did sometimes utilize the ""after party pattern"", as described below, so that members from the *other* team could participate and share cross team knowledge that was needed.  http://www.scrumcrazy.com/SP-Daily+Scrum+Pattern+-+The+After+Party  Another product, green field, 6 teams, all teams brand new to Scrum.  We essentially followed Larman's advice linked above, as well as Cohn's advice about having a 2 part SoS -- a 15 minute standup, followed by an optional 30-45 minute, sit down, working session.  Note well that the focus is on cross team issues, NOT status or ""yesterday our team did X"", etc.  More info here:  http://bit.ly/19eZnYz  In the beginning, with all of the unknowns, and being green to Scrum, I required them to send 2 dev team members(Dev teams were average size of about 5) to a *daily* SoS, that happened after the morning team DS's occurred.  SM's and PO's were invited as optional, but they didn't participate in the standup portion (except for 1 SM, who acted as facilitator only).  In the beginning, the daily SoS seemed very useful and helpful, but once some of the typical green field/bootsrapping obstacles were removed, it didn't seem as fruitful, and I knew this.  I knew it would get very old in a hurry, so I purposefully let it get to a point where numerous teams were complaining about having to go every day, and send 2 members, etc.  At that point, I sent all teams an email and said, (paraphrasing) ""I've heard your complaints.  Anyone with an opinion or interest in this topic, come to the SoS tomorrow and we'll discuss in the after party""  Then, I essentially mentored them through a mini retro on the SoS.  I first reminded them of all of the purposes of the SoS, and that there is no hard and fast rules on Sos's because they're not part of the Scrum framework.  I did remind them of some proven practices, like making the Dev Team members the focus of the SoS, and focusing on team coordination issues.  I then asked them to do some plusses and deltas about the current SoS.  I then facilitated them to some new decisions that reflected what they think would be a productive SoS.  They created about 7 new SoS working agreements, as well as a couple of new ""After Party"" working agreements.  The net effect was that they cut the SoS down to 2 days a week, and down to a minimum of 1 Dev Team member (but no max).  I then suggested, and they agreed, to try this for 2 sprints and then retrospect on it again.  They retrospected 2 sprints later and made only a couple of minor tweaks, and from then on out, they owned the SoS, and they made very good use of it.  Note that this product group also had CoP's, so much of the deep knowledge sharing happened there.  The SoS was much more about organizational obstacles, cross team dependencies, and adapting the product DoD(which occured more often due to the green field dev).  In my professional opinion as a Scrum Coach, it was VERY effective.           Log in or register to post comments",5617
"01:21 pm October 31, 2013                    Sushilkumar -  You absolutely should start the Sprint for multiple teams working the same backlog at the same time. If the teams are co-located (or at least can get physically together on the first day of the Sprint), I have all teams in the same room planning their Sprint Backlogs at the same time. That way, when one team wants to select a Product Backlog Item, the other teams are right there to resolve conflicts. Likewise, when one team needs a special skill resident on another team, they are right there to discuss the tasks. Any planning issues can be resolved right on the spot. (By the way, any Release planning that you might need to do is best handled in a similar environment.)  The other posters are right about Scrum of Scrums; the initial planning on the first day is only the start an you need regular coordination to update all the team's plans based on what is really happening.  You didn't ask but I would also have all teams at a common Sprint Review and also Sprint Retrospective. That way, they can update the Product Backlog, Definition of Done, and other engineering practices together. They are all working on one product so they need to work together, even though they are broken up into smaller teams.  Scrum on!           Log in or register to post comments",5617
"01:56 pm October 31, 2013                    +1000 to Mark's comments.  I should also mention this disclaimer that I have on my web site, on the page where I have my favorite Agile resources:  Warning: Scaling Scrum is not for people or orgs new to Scrum. The first focus should be on doing ""single team Scrum"". After that, when scaling, we strongly recommend getting Scrum Coaching help. The resources below, while all excellent, are dangerous in the hands of people new to Scrum. We realize this is a self serving statement since we provide coaching services, but we honestly believe it based on our own experiences of having to rescue companies from poor performing implementations. It costs much much less to get started on the right foot than to rescue an organization.  http://www.ScrumCrazy.com/resources           Log in or register to post comments",5617
"05:38 am November 1, 2013                    Thanks for the info.   My team does not have much experience scaling Scrum and we have the added constraint of our Scrum teams being distributed across the globe.  I will try and make a mention at our next SoS or retrospective but it has become the defacto std in our team only to have SMs and the PO and some other line managers hence it is not very effective. Some of the SMs are not even knowledgeable about Scrum and have been made SMs just because in their previous incarnation they were leads or architects.  It became obvious to me that we really were not having an effective SoS but the PO is the former SW Dev Manager and none of us have it in us to question his wrong interpretation of Scrum.  Add to this the fact that we have no Scrum coach.  I totally agree with your point that it is easier to learn things the right way at the very beginning.           Log in or register to post comments",5617
Log in to reply,5617
Messages,5316
"09:22 am August 26, 2012                             Chad Albrecht, PST, has posted Is Branching a Dysfunction (http://blog.chadalbrecht.com/post/2012/04/29/Is-Branching-a-Dysfunction…).  Do you agree?  Is the signal branching or something more involved?",5316
"12:22 am August 27, 2012                    Hi Ryan,  your link doesn't work for me. Try this one instead: <a href=""http://blog.chadalbrecht.com/post/2012/04/29/Is-Branching-a-Dysfunction…"">http://blog.chadalbrecht.com/post/2012/04/29/Is-Branching-a-Dysfunction…;.  I think that Branching is not a dysfunction in itself. On the contrary, with large products and a magnitude of teams I believe it to be essential. One customer of me has for example 10 teams, all of which only work with the ""Mainline"" on a really complex product (hardware involved, four architecture layers, several clients and so on). No branching. It's a hell of chaos, nothing ever being in a ""Done"" state and having never a shippable increment. This customer needs a huge pile of luck and a ""stabilization phase"" ranging from 3 to 6 weeks to allow the tests passing green at least once.  As with every tool, it depends on how you use it. With the above customer for example, we are building up a branching infrastructure, that is intended to create shippable increments every day. This works as follows: Every team has it's own branch. Once a feature is ""implemented"", the team merges it with the development-branch, which gets the most recent version from the mainline every day. If the feature works there (and the corresponding tests are green), it must be merged with the regression system (which is the mainline). Only what can be found there (and working of course!) is considered ""Done"" and allowed for the Sprint Review. If something fails on that system, it is reverted to the last working version.   It's not yet established in this way, but we believe the merging effort to be smaller than today. Besides, we will finally be doing Scrum - I don't believe you are doing Scrum if you don't deliver a product increment.          Log in or register to post comments",5316
"12:23 am August 27, 2012                    Shame on me: Here is the correct link: <a href=""http://blog.chadalbrecht.com/post/2012/04/29/Is-Branching-a-Dysfunction…"">http://blog.chadalbrecht.com/post/2012/04/29/Is-Branching-a-Dysfunction…;  By the way: I can't edit my post here.          Log in or register to post comments",5316
"07:21 am August 27, 2012                    Dominik,  I was in the same place as you for a few years.  What finally swung me to the belief that that branching is dysfunctional is being able to compare the behavior on large sets (10+) of Scrum teams.  What you will likely find is the “hell of chaos” you feel ongoing is amplified when the teams begin the merge.  You branch to create isolation, when you have isolation people behave as if they don’t have to collaborate with other teams.  In this isolation and individual Scrum Team can work independently for a few days and all is good.  Then when the merge begins the teams find that all that progress (and yes it’s a lot) comes to a screeching halt as they try to realign with the other team’s knowledge and assumptions.  My first experiments involved working with the teams to do more frequent forward integrations.  This helps a little.  The main problem is that if everyone is doing the same, there is no visibility into work not in the mainline, thus leading to the “big merge” scenario we all know.  The other problem is that the behavior is really hard to maintain.  Teams feel that they can “get more done” if they delay the merge just a little longer.  For many teams, this happens very slowly, a half-day here another day there, until they are waiting a week to do a forward integration.   Once this happens, many teams catch it in a retrospective and commit to more frequent forward integrations.   After a couple of these cycles, the team gets frustrated and looks for other “easier” solutions.  Where they all have ended up is working in the mainline.  After seeing this behavior repeatedly, I wondered “Can a large set of teams work successfully in the mainline together?”  What I found was “Yes!”  Using the “product is always shippable” idea borrowed from Continuous Delivery, I have found that much of the frustration and waste goes away.  I detailed this in my blog post.  http://blog.chadalbrecht.com/post.aspx?id=a719f1cf-c211-4b22-89b0-c3106…  I’d be curious to see where your teams end up.  Good Luck!           Log in or register to post comments",5316
"09:04 pm August 27, 2012                    Chad,  I liked your article  Having been a Sr. Java consultant in the biz for 13 years(observing many contexts) before I did the Scrum Coaching thing, I would contend, in an Agile implementation, that branching is definitely a dysfunction.  I can't speak for non-Agile implementations, but my guess is that it is dysfunctional too, for some of the reasons non-Agile approaches are!  Having said that, do you find that well structured feature teams will tend to focus (though not exclusively) on a slice of the product/knowledge in order to protect themselves from a large amount of ""knowledge merging"" ??  I mean, they almost always have to integrate at some point, but do you find them trying to minimize the integrations to avoid even the ""knowledge merging"" ?  For instance, assuming a retail web site.  One team focuses on product search.  One team focuses on product display.  One team focuses on cart and check out.  One team focuses on related/companion products.  One team focuses on account profiles.  Do you see this happen too?           Log in or register to post comments",5316
"01:42 am August 28, 2012                    I do agree with Chad - branching is a dysfunction.  A friend and former colleague of mine Paul Hammant coined the concept of branching by abstraction.  http://paulhammant.com/blog/branch_by_abstraction.html  Instead of using sources branches you should be branching with abstractions. This is when all the good coding practices come in play like Design Patterns, OCP, DIP, IoC, ... Build the branches into your application and make them easy to change by configuration or other approaches.  Very powerful concept.          Log in or register to post comments",5316
"08:08 pm August 28, 2012                    Charles,  Good distinction between Agile vs. non-Agile teams on branching.  I think if your requirements truly do not change and you can use Design By Contract, then branching may not be dysfunctional.   Yes, I have seen many teams try to ""specialize.""  While this creates domain experts and short term productivity, it also creates knowledge silos and mid to long-term risk.  What I advise as a coach is that teams think of themselves as ""feature teams.""  That is, they may work on any area of the code as long as it pertains to the ""feature"" they are currently implementing.  This gives every team a more holistic view of the entire code base.  More progressive teams seem to latch onto and embrace it, while more traditional teams seem to shy away.  I have not found a good technique for getting more traditional teams to embrace this other than mixing more progressive team members into the team.  Thoughts?          Log in or register to post comments",5316
"08:11 pm August 28, 2012                    Ralph,  I love Hammant's BBA ideas!  They work very well in a single branch, multi-team environment!          Log in or register to post comments",5316
"02:03 pm August 30, 2012                    I don't think branching is inherently dysfunctional.  I do think the greater the time and distance from the shipping line of code the greater the smell.  The longer any effort goes without verifying assumptions both with customers and with the rest of the team, the greater the dysfunction.  In that way, branching might be thought of as a slippery slope.  I'd present Git, Github, Forks and Pull Requests as example #1 of how branching can support a very productive collaboration effort.  I don't discount Chad's insights though.  I've heard similar statements and seen branching be as much and more painful than the original symptoms it was meant to alleviate.  Together with feature toggles, well factored code, and branch by abstraction, I think moderately lived branches can be a useful tool.  Ralph,   This is the first I've read of Branch by Abstraction and I love the ideas as well.  While the techniques aren't new, I do like how he's explicitly describing them as an alternative to branching.  With that in mind, I might be getting closer to considering branching a dysfunction (shared branches that is).          Log in or register to post comments",5316
"04:16 pm August 30, 2012                    > Git, Github, Forks and Pull Requests as example #1 of how branching can support a very productive collaboration effort.   They can in the right context.  I see a lot of teams using Git (or more specifically, DVCS) in a situation that doesn't require it.  A small team that is entirely co-located, and doesn't have a ton of DVCS experience doesn't need DVCS, in my view.  CVCS(centralized, like SVN) is probably the better choice in that situation.  I've actually seen this happen.  The team in question just used Git because they assumed it was the ""next Subversion"", when in reality, it is a different solution for a different problem space.          Log in or register to post comments",5316
"04:17 pm August 30, 2012                    I guess I should also add that the team in question had a zillion problems learning how to use the DVCS with all of its pushing/pulling/local/remote repository concepts.  In my view, they had selected a tool with much more complexity than they needed.  Come to think of It, I saw this happen with 2 different teams.          Log in or register to post comments",5316
"04:31 pm October 30, 2013                    Found a good relevant link, from an Agile Manifesto author himself:  http://martinfowler.com/bliki/FeatureBranch.html  Comments/feedback welcome.          Log in or register to post comments",5316
"06:05 am October 31, 2013                    Team members sharing a codebase don't always collaborate when making changes. If they did then merging those changes would be unnecessary.  Version control systems, by their very nature, will partially compensate for dysfunctions around team collaboration. This doesn't make them a bad thing, but it can easily lead to their misuse. Time and again I've seen DVCS used as a crutch to offset poor agile discipline. Branching is merely an illustration of this problem in extremis. Perhaps at this level a bad smell does indeed become an anti-pattern.           Log in or register to post comments",5316
Log in to reply,5316
Messages,5615
"07:35 pm October 28, 2013                             SCRUM assessment has non intuitive way to revisit previous questions like no question number in front of actual questions.   Is it pretty much same with actual exam or is it better / intuitive user experience to revisit answered questions.   I answer some questions with a revisit note and I like to know how revisit UX is presented ?  My concern is not waste too much time in discovering how it works at the time of taking an exam.",5615
"11:58 pm October 28, 2013                    You can revisit all the questions but there wasn't any way to go back to any specific question. Maybe there's a way, I didn't spend too much time researching the UI          Log in or register to post comments",5615
"04:59 pm October 29, 2013                    Can someone from scrum.org shade light on the process of revisiting questions in actual exam ?           Log in or register to post comments",5615
"08:56 am October 30, 2013                    Hello Amit and Puabhu, our current testing system is not ideal in that you cannot go to specific questions. We're aware of that and in the process of transitioning to a new platform.  Also, in terms of results feedback, Scrum.org does not provide specific questions you got wrong. We provide sections to improve, in hopes that you do learn and improve, and also, we want to protect the integrity of the test.  If you have more questions, please email support@scrum.org.  Hope this helps! Patricia          Log in or register to post comments",5615
Log in to reply,5615
Messages,5610
"09:00 am October 25, 2013                             Hi everyone,  I am working in a telecommunications company which has been experiencing Scrum and Agile for demand management for 3 years. Now we are trying to set up a Agile studio and tryind the expand Agile and Scrum practices to the other business domains like customer care operations , corporate direct sales teams and some HR related areas like HR recruitment department.  can any of you share your experience about these areas of Agile and Scrum adoption?",5610
"09:43 am October 25, 2013                    > we are trying to set up a Agile studio and tryind the expand Agile and  > Scrum practices to the other business domains  In a Scrum ""studio"" agile practices will be constrained to a particular area of the organization. If those practices are rolled out to other domains you will have engaged in an enterprise agile transition. That's more than the studio model provides for...although having a good studio can be a useful intermediate step in achieving such a transformation.  Anyhow, even the studio model requires at least *some* change in other parts of the enterprise. At the very least, all of the studio's clients must agree to use Scrum. If that is unacceptable then those clients must look elsewhere for work to be done. By ""clients"" we are of course normally talking about Business and its allied functions within the organization.  Now, the ""other"" business functions you have referred to are Customer Care, Sales, and HR. These are not normally clients of a studio. Furthermore, your use of the word ""other"" implies that the rest of Business has already accepted agile practice. If that is the case then it *sounds* as though you already have a studio in place, or something very like one.  To extend the transformation, what you need to do at this stage is to incorporate those ""other"" business functions into Release Planning. For example, Customer Care have to know what releases are coming up because they will need to have personnel resourced and trained in order to support those changes. Similarly, Sales will need to know when releases are likely to be made so they can time their marketing initiatives around that. HR will need to be notified because new releases often mean changes in how people are resourced, trained, and used.  I'd therefore recommend using Release Planning as the root from which a wider agile transformation can grow. Be aware that Release Planning might have to be quite predictive to begin with, because other organizational functions will not be used to handling emergent change. Even so, it is a starting point and it a good platform for further improvement.          Log in or register to post comments",5610
"03:39 am October 27, 2013                    I think a logical first step would be to check what the level of Scrum knowledge is in the other business units. Try to roll out an awareness campaign if the knowledge level is low and then depending on support from the C level you can try to organize a training program where people from the various business units can get trained on the basics of Scrum if this hasn't happened already.  Take a look at some of the case studies Ken Schwaber has outlined in ""Software in 30 days"". That too might give you a fair idea about how to rollout Scrum across Sales, Marketing and other functional areas of the business.          Log in or register to post comments",5610
"04:52 am October 30, 2013                    thank you for your informative answers, ı already read the book Software in 30 days and we are woring with an Engagement Manager , supported bu consultancy.by expanding Agile and scrum practices ı mean that we want to change the way of working for a sales team or  a hr recrruitment team .  for example with Hr recruitment team we decided to use Scrumban model, mixture of Scrum and Kanban. we formulated a Kanban board , we planned daily meetings, we adreesed a Prodduct owner, team and s Scrum master. By experiencing this new model of working we will thame implement this new model for the other suitable areas.  For customer care operations and sales teams we are trying to build up models using principles of Agile and Scrum.we are preparing a Training session and content for the audience of these groups internally in the company  so ıf you have these kind of cases and experiences ı will be greatfull to hear and to share the practices with my colleagues.          Log in or register to post comments",5610
Log in to reply,5610
Messages,5601
"02:11 am October 17, 2013                             We have two teams working on the same project. Some developers work on the project 100%, some less. This changes in every sprint. E.g. last sprint Joe worked on our project with 80% capacity, this sprint he's 50%. So far we've been sticking to using hourly-based estimation, but some devs would like to switch to storypoint. First of all we don't have storypoints but rather rigid requirements (more background, see this post https://www.scrum.org/Forums/aft/458). Secondly, how do we calculate velocity if the team is always changing?",5601
"04:52 am October 17, 2013                    It's the work on the backlog that should change, not team membership. You need a stable team in order to inspect and adapt, and for meaningful metrics to be elicited and compared Sprint by Sprint. What you have described - rigid requirements and an unstable team - is an inversion of this way of working.           Log in or register to post comments",5601
"06:02 am October 17, 2013                    BTW I would observe that requirements are *not* in fact rigidly defined in your organization. The evidence is the fluctuation in team membership. The implication is that team composition is being interfered with in order to support variable work elsewhere.  I'd suggest that this work be put on the team backlog in the first instance, then the team can self-organize themselves in order to handle it. I'd expect this to expose weaknesses in Product Ownership...it usually does.           Log in or register to post comments",5601
"09:12 am October 17, 2013                    Ian,  Good points, as always. Reasons for the fluctuation in team membership vary. Some team members are assigned to two projects 50-50%, except on the weeks they are on-duty (one week at the time), in which case their capacity might vary between 0 and 50% depending on the number of cases they get from production. Other members might be suddenly asked to do some urgent investigation. Again, given the environment we work in, I'm wondering if using storypoints not only doesn't give us any benefit but actually hampers our ability to estimate and follow progress.          Log in or register to post comments",5601
"10:05 am October 17, 2013                    > given the environment we work in, I'm wondering if using  > storypoints not only doesn't give us any benefit but actually  > hampers our ability to estimate and follow progress.  It's not that story points impede your ability to estimate, but rather that any estimates would be of limited value due to inconsistencies in team membership. Estimates are made, after all, by a team for themselves. Change the team and what use are their estimates now? Who are they for?  In this situation - and assuming I had absolutely no control over team stability - I'd consider writing very small backlog items to improve liquidity, and just count stories done. Time onto backlog, time actioned, and time completed are recorded for each story. This way estimates are taken out of the equation...it is the actuals that are being tracked. In effect each backlog item is tentatively sized as 1. This also reduces the chances of impediment as I said earlier, and usually improves analysis. The metrics would show the impact of unstable membership on throughput and cycle times. Martin Fowler has written about the story counting approach: http://martinfowler.com/bliki/StoryCounting.html          Log in or register to post comments",5601
"01:46 am October 18, 2013                    Currently the process something like this. The dev team is asked for time-based estimate for a feature. (The way the feature is defined is usually somewhat lacking for reasonable estimation, but that's another story.) We, the senior devs and architects, break the feature down to subfeatures (usually something like DB changes, BL changes, service changes, UI changes), and give those an estimate and the total tells us how long it will take to finish the feature. The management then (I suppose) adds buffers for management etc. and markup. This will be the fixed-price bid. Now, when we start to work on the feature, we create Product Backlog Items for each subfeature that we had on the initial estimation (we use TFS). We then break the PBI's down to tasks and add an original estimate of how long it will take to finish that particular task. The sum of all tasks under one PBI ought to be the same as that of the original subfeature. This isn't always true since we have now broken the problem down further and have a better understanding of the work to be done. If this happens, we notify the management. At the end of each day we update the remaining and finished hours on each task. (We don't touch the original estimate.) Management can generate a real-time reports on our progress. They use this to track progress, how well we are keeping to the original estimates, and also resourcing.  What some devs in our teams want is to use storypoints instead of man-days in the original estimation (of sufeatures). The tasks would still be tracked based on hours. I don't quite see how that would improve the accuracy of our estimation.          Log in or register to post comments",5601
"04:13 pm October 18, 2013                    Hi Rubio,   Allow me to share some of my thoughts....   I don't think using Story points will get you better estimates based on your current setup. Playing Devil's Advocate, consider this question --   Assuming you'll always have the same people, Sprint after Sprint, will your estimations be 100% accurate and satisfy management....?  (I do think story points will help in other areas, though. Won't address just yet.)  .  .  .  Remember -- its an estimate only, and one is making a forecast during Spring Planning.   Velocity tends to be a misused and misunderstood concept. This term was actually removed from the Scrum Guide a few editions ago.   (This doesn't mean you should take this away, or there isn't a benefit to this.)  Here's what I would consider --   A) At the Sprint Planning, figure out who's available, and for what duration?   -- This could be vacation, company holidays, moving to another project, etc.   B) Allow the Dev Team to pull in items after this discussion  C) Ensure the PO is aware of this and adjust any forecasts or communicate with the Management  -- The SM could raise the moving of people about as a loss of productivity, etc. to the Management, if it is so.]  -- There's already been plenty of discussion on moving people about and I would agree -- try to get a stable team, otherwise every Sprint change, one can even debate that's its no longer the same team and historical data may not have the same value.  C) At the Retrospective, discuss how they did  Some key items --   1) Ensure people aren't moving mid-Sprint, UNLESS it was agreed upon during Sprint Planning.   D) Consider reducing the Sprint length!   E.g. What would be the impact of having  a 2-week dev cycle where a developer is there only 1 week, as compared to a 1-week dev cycle, where we know a developer isn't going to be there in its entirety?  .  .  .  Lastly -- try to think of it this way --   Velocity is the outcome of something; It isn't ""calculated.""   Tomorrow's weather is just a forecast. However, tomorrow or day after, we will have known the outcome of the skies, etc. We may have tools to measure, but its only there to measure an outcome.  I think in the earlier post, you considered not capturing velocity. This is also worth considering. I would have the SM how this is beneficial to the Scrum Team, and those outside.   (Perhaps capture, but decide who it is shared with, etc. can also be a consideration.)  Hope some of this helps.          Log in or register to post comments",5601
"01:52 am October 22, 2013                    Thanks Nitin,  First of all, we're not looking for 100% accuracy. If we did, we'd call them facts. Estimates always have a degree of uncertainty, hence the name. What we are looking for is to minimize the uncertainty.  As for the points you are making, point A we do already. Not sure what you mean in point B. PO and SMs decide what to put in the sprint backlog after discussing priority and focus with PMs. This is how I think it should be. Point C is also obvious. Point D, sprint length we haven't discussed. It might have a positive effect on the changing capacity issue. However, I already think the Scrum rituals take way too much time compared to the benefit they give.  The motivation to use storypoints for estimation, as opposed to hours or days, is to improve estimation accuracy. For the planning and monitoring done by the management we have to produce time-based reports, how much time we have used (evidence so far), and how long it will take to finish (estimate). So we _have_ to convert storypoints into units of time. Period, no discussion. Even if using storypoints would increase the accuracy of our estimates, given these constraints I don't see how it would be possible, or worth the effort.          Log in or register to post comments",5601
"09:18 am October 22, 2013                    > We, the senior devs and architects, break the feature down to  > subfeatures (usually something like DB changes, BL changes, service  > changes, UI changes), and give those an estimate and the total tells  > us how long it will take to finish the feature. The management then   > (I suppose) adds buffers for management etc. and markup. This will   > be the fixed-price bid.  That isn't Scrum, because (as Ken schwaber has put it) the only purpose of a team's estimates is so they can get their arms around how much they reckon they can do.  What you have described is, however, pretty much in line with what happens in the Scaled Agile Framework (SAFe). In that approach it is considered quite reasonable for a team's estimates to be used in a predictive manner, even to the point of being able to bid for work as you describe. This is, to say the least, a highly controversial matter.  > For the planning and monitoring done by the management we have to   > produce time-based reports, how much time we have used (evidence so   > far), and how long it will take to finish (estimate). So we _have_   > to convert storypoints into units of time. Period, no discussion.   > Even if using storypoints would increase the accuracy of our   > estimates, given these constraints I don't see how it would be   > possible, or worth the effort.  Darned right, and it wouldn't be worth the effort...at least not from the team's point of view. The problem is that the team has lost ownership of its estimates. It is now management who are driving the estimation exercise with a view to measuring and monitoring teams. Frankly that is not what estimates are for in an agile way of working.          Log in or register to post comments",5601
"04:35 pm October 24, 2013                    Hi @Rubio.   I apologize for the late response. Also, some of the writings may be obvious, but I tend to write more broadly at times since there are a lot people reading, which may benefit.   Allow me to elaborate on a few points --   B) The Dev Team should be ""pulling"" rather than having the work ""pushed"" out to them. This is subtle, but quite powerful at the same time. The Scrum Master can facilitate as needed.   D) Things typically get adjusted with the Sprint events. i.e.   Sprint Planning - 8 hours for a month long Sprint, and depending on the cycle.   Daily Scrum -- Same time, same place, 15min timebox.   Sprint Review -- 4 Hours for a month long Sprint, and shorter for a smaller dev cycle  Sprint Retrospective -- 3 Hours for a month long Sprint and shorter for a smaller dev cycle  Shortening the Sprint length is just an idea. I would check with the team what makes sense. If its not best for all, you can ignore it.   For your last point, I echo Ian's sentiments. What I have seen with some teams (middle ground) is that having a range of hours, mapped to Story points seemed to have satisfied some people. E.g. 1 point is about 5 hours or less, 5 points is 25 -- 30 hours, etc. This still isn't what you may be looking for, but may be a little closer.   We are better at comparisons, rather than estimates, so I would continue to see what works as a relative measure. This continues to be a challenge for a lot of organizations, including some teams I am working with.          Log in or register to post comments",5601
"08:37 am October 29, 2013                     That isn't Scrum, because (as Ken schwaber has put it) the only purpose of a team's estimates is so they can get their arms around how much they reckon they can do.   My point exactly.   What you have described is, however, pretty much in line with what happens in the Scaled Agile Framework (SAFe). In that approach it is considered quite reasonable for a team's estimates to be used in a predictive manner, even to the point of being able to bid for work as you describe. This is, to say the least, a highly controversial matter.   I'll take a closer look at SAFe. Thanks.          Log in or register to post comments",5601
"08:40 am October 29, 2013                     We are better at comparisons, rather than estimates.  Excellent point. Thanks.  PS. I'm starting to like this forum. People are knowledgeable and civil, unlike some other forums.          Log in or register to post comments",5601
"10:20 pm October 29, 2013                    PS. I'm starting to like this forum. People are knowledgeable and civil, unlike some other forums. Yes! My thoughts exactly.          Log in or register to post comments",5601
Log in to reply,5601
Messages,5614
"04:57 pm October 28, 2013                             I am working with a group within my organization that is trying to find ways to continue to make agile visible within our organization.  One of the topics we have come upon is promoting agile up the chain and how would we envision this.  Not to anchor anyone's discussion or feedback, but we have thought to give sub-titles to individuals like Jedi, Sensei, Ninja etc.. and each level has a certain number of criteria that would have to be met to reach that level.  Does anyone out there have something they have put into place within their organizations that is working well for you?  Can you elaborate on what you've done and why it's working?  If you have tried this and it didn't work, what do you think caused it not to work?  what would you have done differently.  Thank you in advance for the feedback and advice!",5614
"05:24 pm October 28, 2013                    Do you have any executive sponsorship for agile transformation, so you can work down the chain as well as up? Sponsorship is vital for long-term success.  At some point agile teams working at an operational level will have to connect to the organizational strategy, which is where sponsorship plays a part. One other thing you can do to help is to establish a Scrum of Scrums. As the representative body of all Scrum teams, the SoS would effectively manage a portfolio of assets and would collaborate on making successful releases.          Log in or register to post comments",5614
Log in to reply,5614
Messages,5445
"03:08 pm March 29, 2013                             I recently posted on this forum about ""hardening sprints"", a controversial feature of the Scaled Agile Framework (SAFe). Here's another one for consideration...the recognition of so-called ""stretch goals"". I have mixed feelings about them.   On the one hand they are innocuous enough. Stretch goals are no different from ""nice-to-have"" requirements. They may or may not get delivered and build a measure of contingency into a timebox which can be put to productive use. They are also eminently tradeable for higher priority work...such as the operational support duties that plague so many ""project"" teams in the real world.  On the other hand, Scrum says nothing about them, or indeed about budgeting contingency in any form. A team forecasts what it reckons it can do, and if it finishes early then more work can be brought forward out of the Product Backlog. The team members shouldn't be pushed beyond their comfort level...and seen in that light, ""stretch goals"" are anathema.  For me, the one thing I definitely don't like is the term itself. I see it as pointy-haired corporate speak of the worst order. Talking about ""stretch goals"" turns the timeboxed delivery of Minimum Viable Product into the hallmark of a mediocre team that can't be stretched, when it is actually the defining characteristic of a truly agile one.  Opinions?",5445
"11:33 am March 31, 2013                    Is the ""stretch goal"" concept a part of SAFe?  Do you have a reference/link for that?          Log in or register to post comments",5445
"12:38 pm March 31, 2013                    Hi Charles  Here you go:  http://scaledagileframework.com/objectives/           Log in or register to post comments",5445
"03:12 pm March 31, 2013                    Ignoring SAFe because it's not that important of a topic for me...  Scrum doesn't really say much about ""stretch goals"", but you rightly point out that it can be a serious dysfunction.  OTOH, if the dev team decides that they want to make stretch goals, I could see how that might possibly have value, and probably sometimes turns into a dysfunction and sometimes not.  I definitely strongly discourage ""optional requirements"" if they are contained in a single PBI.  If they are in separate PBI's, then I guess I'm ok with -- because that just means that they are ordered just like any other PBI.  One can certainly question the wisdom of said approach, though.  I've coached Shu level teams that wanted stretch goals -- but it was usually a short lived phenomenon, probably in part due to me discouraging that behavior and showing how it doesn't make sense (especially optional requirements within a PBI).  :-)          Log in or register to post comments",5445
"07:14 pm March 31, 2013                    I agree with Charles on this.  I would simply let the team get them to forecast based on what they feel they can realistically achieve based on their current velocity.    Adding in stretch goals may encourage them to reduce quality to get more done or set them up for disappointment.  I will encourage the team to try do better than before and get more done without compromising quality.  As a team starts getting to grips with the subject domain, each other it is expected to see improvement in their ability to deliver; be transparent about this.  Always have groomed requirements ready for the case where the team is able to take on more work.          Log in or register to post comments",5445
"07:48 pm March 31, 2013                    Always have groomed requirements ready for the case where the team is able to take on more work.  I encourage this too, but I just make sure the groomed requirements/PBI's do not appear anywhere where they could be confused for stretch goals.  In our courses, we say to have 2 sprints worth of stuff beyond the current stuff well groomed anyway.  I usually work with Shu level teams who never get to that in the short time frames I'm with them, but certainly 1/2 a sprint's worth in case new work is needed.          Log in or register to post comments",5445
"12:43 am April 1, 2013                    I feel that the term ""stretch goal"" may be coined by resource managers who wanted to get maximum out of their resource or by the scrum teams which are apprehensive in saying that they have some undone work in the sprint.  If anything is just ""nice to have"" and is at the lowest priority and team is not fully committed/forecasting to those items which means those items can wait till next sprint so no need of keeping the stretch goals. There are chances that team members picking up the stretch items while compromising the quality of forecasted items. Team should take whatever they are comfortable with, no over-commitment.          Log in or register to post comments",5445
"08:02 am April 12, 2013                    Personally I hate the term.  It was mentioned when our teams started with Scrum and something that strongly disagreed with and managed to get the PO to not mention it to the team. If the team finishes all the stories for a sprint, with good results then why should the reward be 'You should stretch yourself to do more in the next sprint"".  If the team is doing things right then velocity will increase in a sensible fashion without sacrificing either quality or making them endanger their sustainable pace.  I feel it encourages working longer rather than working smarter, and will backfire in the long term.  I would rather concentrate on what there is inside a team that is holding back acceleration rather than forcing the team to ""try"" and complete more work than they think is doable. This is sometimes harder to find, and may be even more difficult to solve, but will ultimately provide better payback.          Log in or register to post comments",5445
"10:46 am September 4, 2013                    I personally hate the term ""stretch-goal"".  I'm in the middle of reading The Clean Coder, and Uncle Bob quotes Yoda a few times.  ""Do or do not.  There is no try"".  A stretch goal is to ""try"".  We either commit to the stories on a sprint, or we don't.  If we find ourselves with spare capacity (perhaps because something was easier than we thought), then we will either speak with the Product Owner about taking the next item from the backlog, or working on our own engineering tools to improve future sprints.    Adding a stretch goal supposes that the top item from the backlog won't change through the sprint, or suggests that we could really have taken on more; tried harder!           Log in or register to post comments",5445
Log in to reply,5445
Messages,5550
"04:20 pm September 3, 2013                              We are implementing Scrum in my company and I am the Testing Lead.  I do not  see any information regarding how much test documentation is typically done  for Scrum.  Do most companies develop test cases or is Ad Hoc testing always used?  Is  there information regarding testing documentation available on this site?  Please let me know.  Thanks,  Eileen",5550
"09:00 pm September 3, 2013                    Hi Eileen  Scrum is a framework and is not prescriptive about how testing is done. However, it is clear that there is no separate tester role.  In practice, most Scrum Development Teams aim to do Test Driven Development, whether in terms of unit tests, BDD tests, or both.  The requirements for acceptance testing are normally included in the Definition of Done, although specific acceptance criteria for each requirement are often negotiated between the Development Team and the Product Owner as well.          Log in or register to post comments",5550
"09:02 pm September 3, 2013                    Scrum does not define how much test documentation is required. It is up to the team to decide how/what testing is done. It can be part of the definition of done. Testing standards could also be imposed by the organization rather than the team.  Going from personal experience rather than scrum theory: in my teams, our QA members decided on the test cases used. As Product Owner, I used the acceptance criteria in the stories to determine if it was done or not and trusted QA to cover outlier cases. Since then we added to the Definition of Dona: all JUnit tests must pass and test cases documented and passed in spira (a QA tool).   Note that scrum does not recognize QA or Testing Lead as being separate or different from the dev team. This is important because everyone must recognize it's not done until it's releaseable. The reality of our organization is that we have separate dev and QA roles, but the coders now recognize that it's not enough for them to just complete coding, they have to ensure there is enough time, and information, for the new functionality to be tested. Not that they always accomplish that...  Scrum guide states:  ""Each Increment is additive to all prior Increments and thoroughly tested, ensuring that all   Increments work together.  As Scrum Teams mature, it is expected that their definitions of “Done” will expand to include   more stringent criteria for higher quality. Any one product or system should have a definition of   “Done” that is a standard for any work done on it.""          Log in or register to post comments",5550
Log in to reply,5550
Messages,5549
"01:03 am September 3, 2013                             Keywords such as “Agile” and “Scrum” return zero results on most of the MOOCs. These can be a great medium to spread the word and increase awareness. One could attend a MOOC and then take the Assessments if they desire.  We do have multiple sources for independent videos and trainings.   A quick mash-up of available content by a “body/org” would be useful for starters.  --Bhuvan.",5549
Log in to reply,5549
Messages,5545
"03:16 pm August 29, 2013                             During a particular Sprint, if there is a support required for the product (a critical defect for example) that is already in Production, how does the Sprint Goal that was already set gets impacted. My understanding was that the Product Owner adds that defect to the current Sprint and requests Developers to get it fixed. But it would really nice how the Sprint Backlog that was planned for that specific Sprint gets adjusted?",5545
"03:20 pm August 29, 2013                     Posted By Senthil on 29 Aug 2013 03:16 PM  During a particular Sprint, if there is a support required for the product (a critical defect for example) that is already in Production, how does the Sprint Goal that was already set gets impacted. My understanding was that the Product Owner adds that defect to the current Sprint and requests Developers to get it fixed. But it would really nice to know how the Sprint Backlog that was planned for that specific Sprint gets adjusted?           Log in or register to post comments",5545
"10:46 pm August 29, 2013                    The PO can ask the Development Team to action unplanned work, but it is up to them whether or not to add it to the Sprint Backlog, and therefore to the current Sprint. The PO can't add anything to the current Sprint without their agreement. The Development Team wholly own their Sprint Backlog.  The Development Team must explain the likely impact of unplanned work on the Sprint Goal. It's quite plausible that it will mean the Goal will not be met. The important thing is to make sure the PO is appraised of the risks so he or she can make informed decisions.          Log in or register to post comments",5545
"02:03 pm August 30, 2013                    Thanks for the response Ian! That helps.          Log in or register to post comments",5545
"04:28 pm August 30, 2013                    In our Scrum.org courses, we teach the following re: bugs found in already delivered functionality:  Fix the bug if it is critical or easily fixed. Otherwise, put the new bug into the Product Backlog to be ordered and fixed in an upcoming Sprint.  I coach something fairly consistent with the above, along these lines:  http://www.ScrumCrazy.com/bugs          Log in or register to post comments",5545
"01:29 am August 31, 2013                    Hi Charles  What you say about the scrum.org course surprises me a bit.  If the teaching is to action bugs if they are critical or easily fixed, or otherwise add them to the Product Backlog, that means the Quality of Service of work items is permitted to vary. I'd have said that's a Lean Kanban philosophy, but not a Scrum one.  In essence, it amounts to having a ""fast track lane"" on the Scrum board - the sort of QoS variation that is found in most ""Scrumban"" implementations.  Please note: I'm not suggesting that this teaching is bad or wrong. I'm just surprised to learn it's expressly supported.          Log in or register to post comments",5545
Log in to reply,5545
Messages,5540
"09:12 am August 19, 2013                             Hi,     Is increase in creativity also a benefit of self-organization to the Development Team?     Thank you.",5540
"10:23 am August 19, 2013                    Potentially yes. However, any cited ""increase in creativity"" would have to be substantiated...preferably with metrics that show the ""increase"". Can you suggest a means of doing this?          Log in or register to post comments",5540
"09:44 am August 30, 2013                    Out of Office till Monday, September 2nd.  --  Nicht im B?ro bis Montag, 2. September.           Log in or register to post comments",5540
Log in to reply,5540
Messages,5547
"06:45 am August 30, 2013                             In the recent topic ""Method Wars: Scrum vs. SAFe"", there was some discussion about a Scrum-compliant alternative to the Scaled Agile Framework (SAFe). Charles Bradley made this comment:  ""I will concede that Agility Path is later to the market, and more enigmatic so far.""  I'll second that! I've subscribed to Agility Path and have been underwhelmed by the content made available to date...or, if you prefer, overwhelmed by that sense of continuing enigma. I hardly need to point out that a video and a slideshare of multivariate data on a spider chart isn't going to compete in the boardroom with SAFe.  I can see no reason to exclude the scrum.org community from the development of Agility Path, even if it is only to discuss what we see of Agility Path as it emerges and evolves.  The longest journey begins with the smallest step, so on that basis...can scrum.org please create a forum for the discussion of Agility Path? If not, can scrum.org explain its position on this matter?",5547
Log in to reply,5547
Messages,5541
"07:49 am August 23, 2013                             Hi  I'm studying SCRUM for imolement thin in my Company.  I got this doubt because I did not find this definition in the Scrum Guide. I think this task has to be done in the Release Planning, but I'm not realy sure about this.  Can anyone help me?  Thank you.",5541
"12:38 pm August 24, 2013                    Hi Leandro  The simple answer is that the number of sprints before a release is defined in the Sprint Review. The Scrum Guide identifies the following as a suitable item for Review:  ""Review of the timeline, budget, potential capabilities, and marketplace for the next anticipated release of the product""  Please note : In Scrum, each Sprint must result in an increment of functionality that is potentially releasable at the discretion of the Product Owner. There may or may not be a cadence to those releases, and so the number of sprints before an actual release may or may not be constant.  There are other frameworks (such as SAFe) that seek to establish a release cadence, but that isn't part of the Scrum philosophy.          Log in or register to post comments",5541
"05:21 pm August 25, 2013                    Thanks for the reply Ian!!          Log in or register to post comments",5541
Log in to reply,5541
Messages,5515
"11:21 am July 18, 2013                             Our product depends on a third party piece of software and want to periodically update the software to the latest version so that performance enhancements and bug fixes are addressed.    We know we need to set aside some time for someone to upgrade the software and run regressions and track any integration issues.  How would you guys scrum this?   Do we need to dig into the changelist of the dependency and pinpoint reasons for the upgrade?  Can we simply do it as a constraint?  DoD?",5515
"04:10 am July 19, 2013                    The third party software is not developed by your team. It's a dependency that your team has. This puts it at a higher level than your team's Scrum process. Things like this are generally best handled by larger scale frameworks such as SAFe or DAD.  To be more specific, it's the sort of thing you need to integrate within an agile Release Train. The features and enhancements provided by each upgrade need to be understood, along with the risks, and included in your Product Roadmap. The upgrade dates then feed into the Release Train, which is your plan for incremental delivery.          Log in or register to post comments",5515
"07:06 am July 19, 2013                    Dependencies like this has the potential of breaking many things. We usually do a spike in a sprint where one or more team members update the 3rd party software, run regression tests and verify that everything is working as expected. For the next sprint we know enough to decide whether to proceed or to roll back to the old version. this applies to the IDE and 3rd party components. Test automation is key to avoid a lot of manual testing and to make sure that you can ship after each sprint. Also, since this is high risk we do this as early as possible for a new release.          Log in or register to post comments",5515
"12:39 pm July 19, 2013                    Fredrik, that's exactly what we were thinking of doing.  The thing that makes me unsure about it is how we should represent it in our product backlog.  We use user stories and sometimes it's not apparent if an update will provide direct value to the customer.  Is this more of the technical wishlist item sort of work or can we somehow write this as a story?          Log in or register to post comments",5515
"05:50 am July 20, 2013                    It doesn't really belong on the Product Backlog unless it provides new features that the PO values. It's a technical dependency in your release train, one which the Development Team are in charge of, and it brings with it the need to assess the upgrade risks.  Fredrik has described a way of managing those risks by a Development Team within a Sprint. Since the team wholly own their Sprint Backlog, they can include whatever requirements they want within it, including technically focused ones for spiking in the way Fredrik suggests.          Log in or register to post comments",5515
"09:55 am July 20, 2013                    > Things like this are generally best handled by larger scale frameworks such as SAFe or DAD.   I completely disagree with this statement.  IMO, SAFe and DAD are not really Agile at all, but that's not really on topic with the poster's question.  I will add that I'm much more in favor of the scaling ideas from Cohn, Schwaber, and Larman/Vodde.  One way to think about 3rd party component(or service) upgrades is that they *are* requirements in the sense that they are outside your system.  A requirement on a system usually occurs at the boundary of a system.  Most people understand front end requirements, but back end requirements(when connecting to 3rd party systems) are also requirements, especially when the thing your interfacing with is outside the control of your company.  With 3rd party components, I think you have to ask yourself... Where's the business value in upgrading to the new version?  Business value in these situations usually comes down to either a) taking advantage of new features and bug fixes that *your system will **actually** take advantage of/use* or b) there is business value in making sure you are working with a fully supported version of the 3rd party component (but that doesn't mean you have to do every upgrade that comes out -- only ones that are required to get you off of an unsupported version and onto a supported one)  So, Randy, I ask you -- does a) or b) even apply in your situation?  If not, what would happen if you did NOT do the upgrade?           Log in or register to post comments",5515
"04:40 am August 25, 2013                    > IMO, SAFe and DAD are not really Agile at all...  SAFe and DAD are like the UK rail network. They are utterly broken and pretend to be something they are not, but thousands may use the creaking infrastructure for part of their journey.          Log in or register to post comments",5515
Log in to reply,5515
Messages,5539
"08:51 am August 19, 2013                             Hi,   During Sprint Retrospective, is it correct to discuss methods of communication, the way sprint planning is being done and the definition of done?   Thank you.",5539
"10:17 am August 19, 2013                    Yes on all three counts. Each one of these things is an aspect of how a team has implemented Scrum, and is therefore a valid topic for inspection in a Sprint Retrospective.          Log in or register to post comments",5539
"10:25 am August 19, 2013                    Thank you Ian.          Log in or register to post comments",5539
Log in to reply,5539
Messages,5537
"05:00 pm August 16, 2013                             Hi All,  Scenario:   Story X is committed to the Sprint. Developer A has 8 hours capacity per day. There are no other Stories (for the sake of this example). She says that the Story X should be enough work for her for the day.  However, Developer A has created a task for the day called ""Investigate issue and determine next steps = 4 hours"". She believes that after completing the 4 hour task she will have more info to complete the rest of Story X for the day. She'll create tasks then.  At the beginning of the scrum only 4 hours is committed by this resource.  Is this OK?  Can she not create assumptions and other tasks in rough estimate? e.g. SURELY there are development tasks and unit test tasks after the 4 hour analysis?  I am hesitant to let a team member start the day off with only 4 hours committed.  Any thoughts?",5537
"09:40 am August 17, 2013                    The situation you describe would be OK if it represented a team consensus on what was plannable. However, you seem to be describing a situation where one developer alone has attempted to plan tasks for a story. That would not be acceptable.   The planning of tasks, whether it be done in Sprint Planning or following a daily Scrum, must be a joint team activity.  I suspect that if this happened, the team might well be able to plan enough for the day ahead, even if only in ""rough estimate"" as you suggest.          Log in or register to post comments",5537
"10:33 pm August 17, 2013                    What value do you get out of these other assumption based ""Tasks"" with  estimates applied?  On Fri, Aug 16, 2013 at 5:00 PM, <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5537
Log in to reply,5537
Messages,5536
"10:11 am August 16, 2013                             Hi,  1. Who creates the Product Backlog estimates?   2. Is it the Product Owner who determines how many product backlog itrms the Dev Team should select for a sprint?  3. Who is responsible for removing new team member in a team, if necessary?   4. Do items in the Product Backlog tend to be smaller than the items in the Sprint Backlog?   Thank you.",5536
"11:36 am August 16, 2013                    1. Who creates the Product Backlog estimates?  The people doing the work: The Development team which includes all those involved in getting the work Done. 2. Is it the Product Owner who determines how many product backlog itrms the Dev Team should select for a sprint? It is a collaboration between the Product owner and the Dev team.  The Dev team is best capable of forecasting the quantity of work.  Sharing this with the PO will influence the grouping of work the Product Owner feels will best maximize the time.  Consider it a friendly, mutually beneficial negotiation with the best interests of customers, Scrum Team, stakeholders, etc. in mind. 3. Who is responsible for removing new team member in a team, if necessary? While we'd hope the Development team is capable of accomplishing this goal, the many maturities of team's and realities of chosen management structures often put this in other's hands.  Be conscious of the impacts and choose appropriately. 4. Do items in the Product Backlog tend to be smaller than the items in the Sprint Backlog?   Quite the opposite.  As Product Backlog Items (PBIs) get closer to the sprint they become more well known, decomposed and, finally, during Sprint planning and the Sprint turned into a plan of execution.  You might think of it as an ever narrowing filter of understanding until the day the work is completed.          Log in or register to post comments",5536
"07:25 pm August 16, 2013                    Thank you Ryan!          Log in or register to post comments",5536
Log in to reply,5536
Messages,5534
"08:55 pm August 13, 2013                             Is it correct to say that a project manager is a stakeholder in Scrum? Because, there isn't a role to it.",5534
"02:26 am August 14, 2013                    A project manager is a stakeholder in so far as the project management function is refactored across the 3 roles of Scrum Master, Product Owner, and Development Team, and an existing PM would be expected to facilitate this.          Log in or register to post comments",5534
Log in to reply,5534
Messages,5526
"05:31 am August 5, 2013                             Hi all  It's pretty well understood that limiting Work In Progress (WIP) is a good thing. Ideally WIP should be limited to one item in progress at a time. This minimizes inventory-on-hand (waste) and...in theory at least...gets value out of the door more quickly.  This principle of Single Piece Flow (SPF) is central to Lean Kanban ways of working, especially in a manufacturing context. In a software context however, WIP tends to be higher. It is often limited to one item per developer, such as by allowing each developer only one avatar to place on an item, and it can be reduced further if pair-programming is in use. As such, software teams might not often achieve SPF but the value of limiting WIP as far as possible is still understood.  There are however problems in interpreting limited WIP in Scrum. This is because a Scrum board will often take the form of a task board...not a Kanban board. In other words, the work being limited by Scrum teams is not always a user story or similar requirement. It is often a task.  Task-limited WIP allows developers to progress tasks from any user story in any order. They could potentially do one task from one story, then a task from another, then a task from a third. In effect, three or more stories - perhaps even the entire Sprint Backlog of stories - can be in progress before so much as one story is completed.  None of this breaks Scrum rules. There's nothing to stop a team, in Sprint Planning, from organizing the Sprint backlog into any number of tasks which can be progressed in any order they choose, and from delivering all of the user stories in one go at the end of the Sprint.  The Sprint Goal can of course be met by this approach, and there should still be a nice task burndown to show the associated technical risks being managed. The problem is that it defers approval of each user story to the end of the Sprint (i.e. the Sprint Review), when it is best practice to get continual sign-off by a Product Owner throughout a Sprint. This allows the business risks of deliver to be managed well, and not just the technical risks.  I'd like other people's thoughts about this. Is it important to limit WIP in terms of user stories rather than tasks, so we can get early inspection and approval from a PO? Or does this approach to limiting WIP amount to Lean-Kanban by the back door?",5526
"05:50 am August 5, 2013                    Hello, Ian  Great question. Really glad that you've brought this topic to the forum.   I'm using WIP with all my Scrum teams. You're right saying that in Scrum we have a task board rather than a Kanban one.  It's definitely needed to limit Story In Progress (SIP), not tasks to shorten the lead time and maximize the probability of finishing all the Stories in a Sprint and achieving the Sprint Goal.  Nothing prevents a Development Team from starting all the tasks from different stories all at once. Scrum says nothing about that. The Sprint is a black box, a container. I tried both approaches and limitng SIP works in practice.   I call it a ScrumBan. In fact, the owner of the term Corey Ladas calls it ScrumBan Level1.  The formula is simple:  ScrumBan = Scrum + Kanban  I use Scrum as a strategic tool and Kanban as tactic one.           Log in or register to post comments",5526
"02:36 am August 13, 2013                    WIP, task board, burndowns are not defined by scrum but are useful practices.  I agree that a developer should only work on one task at a time but the team should also work on as few stories as possible. If they can swarm on one story to get that to done in the beginning of the sprint, that's ideal, but how to organize the work is up to the team. During the daily standup the team should organize/replan to maximize chance of meeting the sprint goal. For example team members should take on tasks from started stories until these are all finished, instead of working on a new task from a new story. I think the new questions in the updated scrum guide emphasize this, i.e. ""what am I going to do to help the team meet the sprint goal"" instead of ""what am I going to work on today"", which could be interpreted as taking on any task of choice.   I also prefer to let the burndown show completed stories and not tasks. As you say you may have 90% of all tasks done but not a single story done, in which case the burndown will show false progress.          Log in or register to post comments",5526
"07:52 am August 13, 2013                    Frederic,  It's 'ideal' if developers can swarm on one story and complete tasks on that story so it can be considered 'Done' before looking into other stories. However, our team typically runs into a problem where the same code artifact has to be touched on by multiple developers to achieve this. We frequently encounter code merge issues(We use .git/gerrit for source control) and spend more time resolving the code conflicts. This is a waste. Therefore, we are only following this to the extent possible that this issue doesn't surface. However, we ensure that as soon as a task for an 'in progress' story is free of such dependencies, it is picked up before any other random task.  This should be a fairly common issue and wondering how other teams handle this.   And I agree, any burndown using stories is more accurate.          Log in or register to post comments",5526
Log in to reply,5526
Messages,5532
"08:47 am August 11, 2013                             Hello,   for the PSM1 assesment, how many questions must be answered within that 60 minutes ?  Best regards  Sascha",5532
"08:05 am August 12, 2013                    Hello Sascha. The PSM I assessment consists of 80 multiple choice questions. Thank you and enjoy your day.  Joe (Scrum.org)          Log in or register to post comments",5532
Log in to reply,5532
Messages,5531
"04:10 pm August 9, 2013                             Scrum Friends,  I have a question related to the 'Product Backlog Management' section under 'Product Owner' section of the Scrum Guide(Page 5). The guide mentions that Product Backlog Management' includes                          ""Optimizing the value of the work the Development Team performs"".  How does this relate to the opening statement 'The Product Owner is responsible for maximizing the value of the product and the work of the Development Team.""  While I understand how the Product Owner maximizes the value of the product by clearly expressing Product Backlog Items and ordering them based on value, I feel that the statement ""Optimizing the value of the work the Development Team performs"" is redundant - I think I am obviously missing something as it is included in the guide for a reason.  Does anyone have insight or a different interpretation on this?  Thanks,  Dinesh",5531
"01:41 pm August 11, 2013                    I think there is a subtle difference, in so far as maximizing and optimizing aren't quite the same thing. Optimization is more about the value stream (think about what gets challenged in a Sprint Retrospective) while maximizing value is more about the product (think about what is assessed in a Sprint Review).          Log in or register to post comments",5531
Log in to reply,5531
Messages,5529
"11:21 am August 8, 2013                             Having sat the PSM1 course and performed the short, free assessment numerous times with great success, I was feeling confident about sitting the PSM1 exam. I sat it and failed it with a score of 81% (pass mark 85% required). A bit frustrated but fair enough. When I emailed Scrum.org to ask for my answers so I could review and learn from what I did wrong I was told that it was their policy NOT to provide answers to questions. Very strange. How is it that one is supposed to learn from their mistakes if not shown where one went wrong? I have sat more exams and assessments in my life than I care to remember and I have never, ever known an assessment centre not let you see your results! Scrum.org did however provide me with apparent ""areas"" in which I should revise but these essentially mean nothing helpful whatsoever. At the end of the day, you never get to know which questions you got right and which questions you got wrong. I have since re-sat the exam and passed but I certainly would NOT recommend Scrum.org as a centre for learning or discussion.",5529
"04:18 pm August 9, 2013                    Hello RMDonovan and thanks again for your feedback.  We do not give out exact assessment questions and answers to protect the integrity of our test.  The unfortunate reality is that some folks do and will post our info on different websites - that is why we manually go through and provide areas for our students to improve. We see that you have since retaken the PSM I assessment and passed. Congratulations!    Joe (Scrum.org)          Log in or register to post comments",5529
Log in to reply,5529
Messages,5527
"09:11 am August 7, 2013                             Friends,  I'm currently working on a CRM project and after a few stages the customer wants to make a new approach to optimization of time, where he first proposed raising the As-Is process and then set together, in other words, in the same meeting the To-Be process, business requirement and functional solution.  Honestly, I see it as a parallel extremely risky and not as an empirical approach and as far as I know about Scrum, it assumes that we have a Product Backlog defined.  I would like to know the opinions and suggestions of friends?  Big Hug,  Joao Carlos A. Lima",5527
"08:00 am August 9, 2013                    Hi Joao,  First I have a question: Is your customers organisation executing a SCRUM project or do you want to fit SCRUM techniques into a non agile project?  When the organisation is executing SCRUM then my opnion is that the new approach your customer comes up with is not so problematic. As long as your Product Owner (which is the customer I assume) describes what he wants so it can be added to the Product Backlog. Discussing about how the current processes work to me is of a minor interest, als long as he   gives the information of the requirements. So al the talks about requirements must lead to Product Backlog Items. To accomplish that you can use an interview technique that fits the best for the situation at your customers.   Are you working with user stories?  Grtz,  Wouter           Log in or register to post comments",5527
Log in to reply,5527
Messages,5528
"10:14 am August 8, 2013                             http://www.glocomms.com/vacancies/2013/08/07/scrum-master-dusseldorf-mu…",5528
Log in to reply,5528
Messages,5512
"06:56 pm July 13, 2013                              Hi all,  I’m curious how Spikes are normally integrated with Scrum.  Let’s say you have a new development team which consist of external highly skilled developers. None of them has ever worked in your organisation/project so when it comes to knowledge of legacy systems, coding standards, used frameworks, libraries, tooling etc. it’s all new.   Now imagine it’s Monday and the team are gathered for their first SPM where the PO does his normal routine which is explained in high level what (s)he wants. At this point 10 User Stories has been explained and the team fully understands what the PO (functionally) wants.   Now comes the problem. Knowing what the PO wants doesn’t automatically means that the team knows how it’s going to be implemented. As I said the development team consist of new developer consultants so there is currently no technical context yet. So SPM 1 just ended and the team starts SPM 2. I can imagine at this point, during the meeting, all developers will be like “I have no idea which tasks are needed to implement this item, because I don’t know what can and cannot be used within this organisation. To be it even more difficult, the project isn’t really a demarcated project, its actually a maintenance/ new feature project. So it’s mainly fixing and improving features in existing MULTIPLE large systems, which makes the scope extremely wide. Due to this, every User Story has its complexity as in it can be in different systems.  Now I’ve heard that Spike is a good solution is clear up uncertainties, but how does this work? Let’s say the first 10 User Stories has the highest priority.  1)	Do you create a ‘Spike Story’ for every User Story? As I said, every User Story can be a fix/improvement in different systems. (lots of uncertainties)   2)	Is it common to take both the ‘Spike Story’ and its actual User Story in the Sprint so that if the Spike is finish, the team can estimate and work on the User Story?  3)	Should Spike Stories be estimated?  4)	Or is it like the first Sprint the team stuff it full with Spike Stories so that in the 2nd Sprint they can come up with a couple of estimations and start implementing it? While at the same time working in Spikes for the next Sprint?  How is Spike normally integrated with Scrum?   Cheers, Pablo",5512
"05:26 am July 15, 2013                    To reach Sprint Planning 2, the team must have had enough confidence (in Sprint Planning 1) to commit to a Sprint Goal, and to have estimated (e.g. relatively sized) each requirement. In other words, they must have expressed reasonable confidence in their ability to deliver a potentially releasable increment, even though the technical context is unknown to them.  Assuming that's all the case, then so far so good.  Now you have a choice. I'd agree that the authoring of spike stories is reasonable, as long as they are kept off the Product Backlog. The team would have to introduce them directly into their own Sprint Backlog since they are part of their own plan for delivery, and do not (in themselves) represent product value. However, this is a controversial practice and some authorities do not recognize this type of story as a valid construct at all.  Another option is (in Sprint Planning 2) to identify ""spike tasks"", each of which will anchor the other tasks for that story into an appropriate technical context. That's probably a more defensible choice. Task identification is generally accepted as being entirely at the development team's discretion.           Log in or register to post comments",5512
"01:20 am July 16, 2013                    Hello Pablo  I doubt on the estimation done by team in SPM 1 if they don't know how to implement the story. I can understand there can be some %age of uncertainties. Assuming this is a new project/product and all team members are new, I don't mind doing spikes in first sprint for getting the estimation for future sprints however it should come from the team not PO. As a PO I would put a story for the required feature and if team feels that they need a spike before start working on that feature then PO should create a spike. It doesn't make sense to have the spike and actual feature  in the same sprint. For spike I generally put in the acceptance criteria -   Create/update PBIs for feature X  Put estimation for all PBIs related to feature X  Cheers  Sanjay          Log in or register to post comments",5512
"12:49 am July 18, 2013                    A Spike is a timebox for the Dev Team to get enough knowledge for estimating a story. The value for the product owner is, that he can then do his release planning, which would otherwise not be possible. During a Spike, the Dev Team can create a functional prototype, even neglecting the DoD - but it has to throw it away afterwards. It's just for learning, not for creating product value.  I usually do not have Spikes with experienced teams. With unexperienced teams they do have some value, especially in contexts where Agility is not yet fully understood and the wish for precise estimates is high.  Usually, the Product Owner does not carry around Spikes in his Backlog. Only when during the Sprint preparation meeting the Team can't estimate something and asks for a Spike, he might negotiate the timebox, take it on the backlog, and only keep it there to the next Sprint Planning meeting.  While this is a controversial practice, I have seen situations where this tool was benefitial. Just make sure the Scrum rules aren't broken!          Log in or register to post comments",5512
"03:30 pm July 18, 2013                    Hi Dominik,  Thanks for your response.  A question regarding the following:  A Spike is a timebox for the Dev Team to get enough knowledge for estimating a story.  Lets say that the project have 20 stories and the team isn't confident enough to estimate any of them due to the lack of domain knowledge and the framework, libraries, tools used within the organisation. As i said, the developers are All external (experience) consultants.  What would you advise when it comes to using Spikes? Do a Spike for every story? Is it common to do a Spike Story first and than immediately after that the actual story wothin the same sprint?  Or do they always need to be seperated?           Log in or register to post comments",5512
"12:48 pm August 6, 2013                    We have had cases where experienced developers only needed 1 or 2 days to learn something.  From there, they were able to jump right into the feature story.  All within the timebox of our sprint.  My only point is that one should not constrain spikes and stories to separate sprints.  There are real world cases where it simply makes sense.          Log in or register to post comments",5512
Log in to reply,5512
Messages,5511
"04:30 pm July 12, 2013                             Hi,  I notice the following problems in Scrum teams and i'm wondering how a Scrum Master can assist in these situations:  During estimation at Sprint Planning Meeting part 1:  - Yes we know what the customer functionally wants and the PBI is clear, but we have no idea how complex this item is because we have no knowledge what needs to be done (code) to meet the functional requirements...  During estimation at Sprint Planning Meeting part 2:  - We have no idea what kind of sub-tasks are required to meet this PBI. We can name up a couple tasks but in general no idea...  During stand up: (a developer has been working on a task for several days)  - I'm currently working on task x of PBI y but i have no idea when its finished because its a grey area for me (also for the rest of the team members) im currently doing trail and error...",5511
"05:40 pm July 12, 2013                    #1 - Designate a fixed amount of time to have team member(s) investigate and report back to the team.  aka a Spike  http://www.solutionsiq.com/resources/glossary/?Tag=Spike  #2 - Then at the very least you can have a single task ""Implement Story"".  Scrum doesnt require you to breakup PBI's into tasks.  It only says that the team should have an idea on how they will go about delivering the value described in the PBI.    If you have Test/Documentation in your DoD then you can add ""test"" and ""document"" tasks also.  #3 - Suggest that instead of saying ""I have no idea when it'll be done"" that the develop use ""For the next workday, I will be doing X,Y, and Z to move this PBI towards done""  You are doing grooming (estimations and PBI breakdowns) during the sprint planning meeting.  You should consider moving that work to short grooming sessions performed during the sprint instead.  This will allow your devs and PO time to get more information about the business and technical domain related to the story if not enough is known.    In my experience planning meetings go more smoothly when the team isnt doing PBI effort estimates during the planning meeting.          Log in or register to post comments",5511
"05:51 pm July 12, 2013                    Some possible answers:  1.  Estimation problems in SPM part 1  a.  Good backlog grooming.  See:  http://www.scrumcrazy.com/Why+do+Product+Backlog+Grooming%3F#Three%20Ki…  (also be sure to see the related article links around backlog grooming at the bottom) (some people call ""backlog grooming ""backlog refinement"" -- they are the same thing)  b.  Encourage the team to retrospect on this obstacle and maybe do a root cause analysis on why this happened.  There is possibly something your team could do better next time.  2.  Uncertainty around tasks in SPM part 2  a.  Good backlog grooming.  See 1a above.  b.  Or, do a ""spike task"" or tasks.  Essentially, create a task to remove the uncertainty around what the tasks should be.  They way I usually coach this, there is the ""spike task"" which has some sort of estimate , and there there is a ""big bucket placeholder follow on task"" which also has a rough estimate -- usually larger, but not always.    Then, the purpose of the spike task is simply to remove the uncertainty.  Once the spike task is complete, the person or people who completed can propose a set of ""follow on tasks"" to the Dev team, that will replace the placeholder tasks.  The ""follow on tasks"" need not add up to the original estimate for the place holder -- remember... we're Agile and we're allowed to update estimates whenever there is material new information.  Make sure that all of the tasks are estimated so that you can track the ""remaining work daily""(burndown, etc) as per the Scrum Guide.  c.  Encourage the team to retrospect on this obstacle and maybe do a root cause analysis on why this happened.  There is possibly something your team could do better next time.  3.  Uncertainty in Daily Scrum   a.  Encourage the team member to ask for help or get a ""second pair of eyes"" looking at the challenge.  b.  If the gray area is technical, these kinds of things happen, but they should be rare.  If a second or third pair of eyes doesn't cure it, then just have them estimate the amount of work remaining (which may be a guess at this point) and keep truckin.  The Dev Team should probably decided on how much more time they want to spend on the issue before pursuing an alternative path.  c.  If the gray area is because the team doesn't understand the acceptance criteria, then consider doing User Stories.  See:  http://www.scrumcrazy.com/User+Story+Basics+-+What+is+a+User+Story%3F  d.  Encourage the team to retrospect on this obstacle and maybe do a root cause analysis on why this happened.  There is possibly something your team could do better next time.           Log in or register to post comments",5511
"05:57 pm July 12, 2013                    Thanks for the question, P.  I added my answer to 2b above to my ""Sprint Tasking Tips"" article(now tip#32).  Thought you might be interested in that article too:  http://www.scrumcrazy.com/Sprint+Tasking+Tips  Best of luck, and hope we helped!          Log in or register to post comments",5511
"08:04 pm July 12, 2013                    Hi Charles,  I have a follow up question regarding point 1: estimation problems during SPM1  First of all the root cause is that the department has been working in silo's for any years and eventually all the developers left without any transferknowledge. The software has grown in the last 5 years and many (external) developers have been working on it without applying any best practises. (documentation, coding standards, testing etc)  So now we have a brand new (also external) team working on a project. The developers are skilled professionals, but what i have heard, its hard for them to come up with an estimation. There is just no domain and legacy knowledge available...  Can you explain to me how a grooming session would help? Im affraid that it would be a not effective grooming session because the domain & legacy knowledge just isnt there.  Should i be looking at Spikes instead? If yes, how do you implement a Spike?   Is it 1 Spike for all or for each PBI the team creates a Spike to tackle the uncertainties.           Log in or register to post comments",5511
"05:45 am July 15, 2013                    In the situation you describe backlog grooming sessions become even more important. They give a team a heads-up on the work that is left to be done, in terms of its business value, priority, dependencies, and overall complexity. I can see that a new team would benefit from multiple such sessions.  The key thing is to get the stories relatively sized. This skill is a function of three things - business knowledge, general development experience, and an understanding of the technical domain. *Any one* of those is enough to produce an estimate. You've already got developers with good general experience, and may well have good product ownership or other business representation. That's two. I'd say the team is good to go and I'd coach them accordingly.          Log in or register to post comments",5511
"06:52 pm July 17, 2013                     Can you explain to me how a grooming session would help? Im affraid that it would be a not effective grooming session because the domain & legacy knowledge just isnt there.   One of the outcomes of a grooming session could be that the Dev Team has figured out that they have a lack of knowledge or basic understanding around a future PBI's technical implementation.  It is perfectly acceptable for the Dev Team to then add tasks to the Sprint Backlog for the *current* sprint to do investigation.  The theory here is that time can be spent to remove the uncertainty and lack of knowldedge *before* the story is taken into a sprint.  See Tip#8 here:  http://www.scrumcrazy.com/Tips+for+Effective+Backlog+Grooming          Log in or register to post comments",5511
"12:20 pm August 6, 2013                    I disagree with your statement unless you bring it into a real context.  Re: your statement,  ""b. If the gray area is technical, these kinds of things happen, but they should be rare.""  I disagree to some extent.  Technical gray areas will abound, until *all* silos are broken down.  And even then there are other drivers; company wants new tools, new languages are required, people come and go, etc.  I work in the mobile computing industry and stuff changes, all the time.  It is a very dynamica environment.  It literally breeds ""technical gray areas"".           Log in or register to post comments",5511
Log in to reply,5511
Messages,5450
"05:42 pm April 12, 2013                             Hi,    As a scrum master, I worked with a growing developpment team from 7 to 15 people. We had discussions about making 2 smaller teams. But the developpment team didn't want to split even if I let them self-organize. I proposed them to try for 2 or 3 sprint and merge again if it isn't better, but they didn't want to try.    I remember some readings of Mike Cohn about the CDE leading change method  (Container, Difference, Exchange). As a scrum master, according to CDE, I could change the container by asking the team to split. But can I force the developpment team? It doesn't sound good.     I encountered another situation of this kind with the scrum meeting. I let the team try different schedules for the Scrum meeting and adapt it at retrospective. But during many months, they decided to do it at 5:00 PM. I saw this schedule wasn't efficient and I tried to convince them but they didn't change. After few sprints, I decided to change the scrum meeting schedule to 9:30 AM and explained why.     I don't know if I was right. It looks like a command and control behavior.    I think if I could return to the past, I propose to the developpment team to choose a schedule between 8:00 and 10:30 AM.    What do you think?",5450
"12:12 pm April 13, 2013                    I think I'd have forced a split when the team hit 8 or 9 people. I've never known a development team to function efficiently above that size, and as a ScrumMaster I'd fear for the successful application of the Scrum method.  I don't think I would have done anything about when they hold the daily Scrum. Teams can hold a standup at midnight for all I care, if that's what they reckon works best.          Log in or register to post comments",5450
"08:02 pm April 14, 2013                    Split Team   Assuring the team is following the Scrum framework is part of the Scrum Master's responsibility.  For that reason, I believe it would technically be acceptable.     Daily Scrum Time   Why do you feel 5pm is inefficient?  Why does the team disagree?  Is it really the time that is problematic?  In both cases, I think you'll be in a better place if you can come to an understanding of why these things are potentially better.  Both changes are not guaranteed to be better and should be considered an experiment like any other change.          Log in or register to post comments",5450
"08:41 pm April 14, 2013                    The team is before any other definition, a part of an organization. The scrum method allow then to self organize, but they are still emplyees and I don't get why they could disagree in split, when this decision comes from the management. If you are not their boss, as a Scrum Master you should have some force to ensure the split happens.          Log in or register to post comments",5450
"04:56 am April 15, 2013                    Thank you all for your visions. It help me to think differently.           Log in or register to post comments",5450
"12:29 pm April 17, 2013                    Split  The first thing I'd do is to try to understand why they don't want to split. Maybe it's something easily fixed? I'd also collect stats on efficiency if at all possible and show the team that the large scrum team size affects efficiency - if that is the case. If the team has strong, valid arguments against splitting AND efficiency is not affected maybe for that particular team splitting isn't necessary.  Daily Scrum Time  Does the time work for the Scrum team? If so, that's all that should matter. It's the Scrum Master's job to ensure that the daily scrum occurs and that the 3 questions are asked, but that's it. The Scum Master doesn't have to attend and shouldn't set the time of the meeting.          Log in or register to post comments",5450
"02:50 pm April 17, 2013                    I'm not going to add much here I'm afraid, except to agree with others.  Splitting the team is something that you can take into hand as a Scrum master. Of course you are going to need management support here.  For the stand-up it's for the team to see what's best. What a Scrum Master needs to ensure is that it happens, We have teams with strange times (and I'm glad I don't need to be there too often, only when dropping in on other other teams to see how they hold their meetings) but it works for them in a way that forcing what i would think is a good time wouldn't.  If they are not holding the stand-ups - then you need to do something.          Log in or register to post comments",5450
"03:54 pm April 17, 2013                    So, you've 'allowed' them to self-organize, but you are not happy that they actually do so if it means they don't do what you want them to?  Why was the expansion anyhow? Did the team decide on it?  Have a conversation, understand their reasons, help them figure out good and bad effects of splitting, help them figure where it might help them, don't draw conclusions on their behalf. Help them implement their own solution (not yours) and inspect & adapt and see how they can improve.  Daily Scrum is their meeting. What's wrong with the team having it at the time they want to?  Be careful in thinking you know better that the collective brains of 15 people.          Log in or register to post comments",5450
"08:06 am April 18, 2013                    If you resort to command and control in this case, don't you think you'll only create resistance within the team? After all, you're dealing with experts. They know their job, and don't like to be told what to do :)  In general, I would say that a team has to self-organize as much as possible. Also in this case. A Scrum Master is not a manager, but more of a servant leader. If you feel the team is making a wrong decision, all you can do is ask critical questions to try to convince them. If they can't be convinced, the best approach would be to let them experiment. If the experiment fails (flow breaks down, velocity decreases, etc), this is good input for a retrospective. Chances are that the team will eventually go in the right direction. Or maybe it turns out that it was actually the right decision.  Yes, this can be a costly experiment. But I strongly believe that in order to create high performing teams, you have to let the team make mistakes and learn from them. As a Scrum Master, you are responsible for facilitating this learning process by asking critical questions at the right time.          Log in or register to post comments",5450
"11:14 am July 10, 2013                    Oups. I didn't saw the last answers. I'm not sure you are still there but thank you all for these.  Daily Scrum : The issue with daily Scrum is that at the morning many team members didn't remembered what they told at the daily meeting of the day before. I agree with Ken Schwaber when he say in the ""Agile Project Management With Scrum"" book : ""The daily scrum is best held first thing in the day so that the first thing team members do on arriving at work is think of what they did the day before what they plan to do today"".  As many of you said, I agree the Scrum Master has to convince. He is only an advisor. But when the Scrum Team has to be very efficient in short time, it can be hard to see a team convinced that it is right :  - doing sprint planning meeting too quickly without really making a true plan  - doing Daily scrum at 17 PM  - auto-organising as component teams instead of features team on a multi-teams project  - not keeping the the sprint backlog up to date  Sure, they will probably learn from these mistakes but it could be too late. I think, if the development team is sure to be right, it can stand on his position even if the Scrum Master is very persuasive.           Log in or register to post comments",5450
"12:08 pm July 10, 2013                    > Daily Scrum : The issue with daily Scrum is that at the morning many team members didn't remembered what they told at the daily meeting of the day before.  If they dont remember what they said they would work, what do they end up doing for the work day?  Surely, they are doing *something* right?          Log in or register to post comments",5450
"06:50 pm August 5, 2013                    Hello. I'm new here. But what if they during the daily scrum meeting said what they have done that day, and then explain what they are planning on doing tomorrow, if they are holding the meeting at 5PM? Just a thought.          Log in or register to post comments",5450
Log in to reply,5450
Messages,5525
"12:59 pm August 1, 2013                             I'm an adult leader in a Boy Scout troop (in the USA) with 6 months of Scrum under my belt (and 2 years of Kanban before that).  We're supposed to be boy-lead and have numerous events to plan for and execute.  I've been frustrated lately when I see the boys unfocused in their personal advancement activities at summer camp, plus the difficulties they  have doing weekly activities (instructional training, game, song, looking forward to next events), plus the issues with adults trying to help plan larger activities.  Last week at camp I tried pitching a basic flavor of Scrum at them to help them be more productive.  They didn't all jump in and say ""yes"", but they didn't say no either.  I've seen Kanban applied to family chores and such, but has anyone ever developed a simplified version of Scrum that boys 13-17 could implement (with adult guidance)?  Yes, I know Jeff Sutherland will say that if you're not following all the Scrum practices, you're not doing Scrum, but could we do ""Scrum for Kids""???  My thoughts on adapting to the activities we have in Scouting:  * Daily Scrum meetings become weekly meetings to check progress (the boy-leaders currently meet 30 minutes before the full Troop meeting to check progress and develop more details for activities in the month)  *  Retrospective meetings would happen at the start of the existing monthly boy-leader planning meetings.  * Sprint Review, Sprint Planning and Backlog Grooming meetings would follow in the same monthly meeting.  They'd have to be very condensed.  * The adult leaders would help with the Retrospective, especially the Kaizen?  Problems/Questions:  * Boy-lead means (to us) that the boys set their priorities, so who acts as the Product Owner?  * Boys don't exactly have that ""focus gene"" turned on much yet, so how to keep them focused while keeping it fun?  I would love to hear any thoughts or experiences others may have had with using Scrum methods with teens!  Please email me if you have additional info that might not fit here?  Thanks,  Stew",5525
"01:52 pm August 1, 2013                    I think Kanban might be better suited since your BSA environment pretty much has the tasks figured out (training, games, songs, and other activities).  You're just looking to be able to prioritize these activities and execute them efficiently.           Log in or register to post comments",5525
"02:45 pm August 1, 2013                    Randy,  Thanks for the quick reply!    I actually tried very basic Kanban with them last year, but didn't follow up on it.  But you might be right for the ""known activities.""  I was thinking about Scrum primarily to help us accomplish the bigger activities that require planning, such as a major fundraising event (like we have this weekend) or an Eagle project or the annual planning and general follow-up.  I was looking to Scrum to provide  a little more discipline in the planning and review, as well as only looking at the vague details for the events that are farther in the future.  I was also hoping to get a bit more commitment to the tasks, that ""team energy"" that Scrum demands, which I think is reinforced when you achieve the increased productivity via the focused efforts.  Has anyone tried teaching Scrum to teenagers?  I'd love to hear your thoughts.  Thanks again,  Stew          Log in or register to post comments",5525
"01:16 am August 2, 2013                    It's been done for Girl Scouts. See:  http://www.projectsatwork.com/blog/Dave-Prior/6390/          Log in or register to post comments",5525
"07:22 am August 2, 2013                    More Kanban, no Scrum?  Okay, I can take a hint!  :-)  Thanks Ian!          Log in or register to post comments",5525
"12:38 pm August 5, 2013                    I know they use Scrum at schools in The Netherlands:  http://eduscrum.nl/en  I'm not sure if it is of any help. If you want to talk to the people supporting this, let me know.  Regards,  Joris          Log in or register to post comments",5525
Log in to reply,5525
Messages,5452
"10:10 pm April 17, 2013                             Is the spring goal defined before / during / after the spring planning meeting.  who defines the goal - product owner, dev team, scrum master?  trying to pass exam tonight.  not sure of this question.  thanks.",5452
"10:11 pm April 17, 2013                    you can tell i am a little exhausted tonight.  ""sprint"" not ""spring"", ""planning"" not ""plannning"".  :)          Log in or register to post comments",5452
"05:48 am April 18, 2013                    JBeek, this is pretty clearly laid out in the Scrum Guide.  See the section about Sprint Planning.  You should definitely read the Scrum Guide a few times before taking the real exam.          Log in or register to post comments",5452
"04:13 am July 5, 2013                    I read it a couple of times, but it is not clear to me too.          Log in or register to post comments",5452
"05:45 am July 5, 2013                    Hi Thomas,  If you refer to the guide, it's made clear that the Sprint Goal is set during the first part of the Sprint Planning.  Not before as the development forecasts for the PBIs are necessary to establish it, and not after as it is the guiding input for the Sprint. Hope it clarifies the point.          Log in or register to post comments",5452
"03:51 pm August 3, 2013                    Sprint Planning Meeting - Part One:   ""After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a Sprint Goal.""          Log in or register to post comments",5452
Log in to reply,5452
Messages,5524
"04:28 am July 31, 2013                             I would like to follow a SCRUM course in The Netherlands as soon as possible, and get myself certified. Which training bureau would you recommend and why?? (i.e. Computrain, Cibit, Twice, Prowareness,....)  Thanks in advance, Luc",5524
"05:34 am July 31, 2013                    Hi Luc,  What kind of training would you like to follow (PSF, PSD, PSM or PSPO)?  FYI: I'm planning to give a PSD for Java training in The Netherlands somewhere end of November.  Regards,  Joris          Log in or register to post comments",5524
"02:49 am August 1, 2013                    Hi Luc,  I also forget to mention: If you just want to get certified, try the open assessment at http://www.scrum.org/Assessments/Open-Assessments  If you feel confident, you can buy a voucher to take the certification exam.   Although you're very welcome to follow a training of course (from which you'll learn a lot more), which includes also a voucher for a certification exam.  Regards,  Joris          Log in or register to post comments",5524
Log in to reply,5524
Messages,5522
"02:21 am July 25, 2013                             Hi all,  A short introduction  I work as a technical writer at a company with quite a few development teams (I believe the current count is 16). All these teams work with Scrum. Because of this, the releases are done on an almost daily basis. Until recently, the writers were part of the teams, but the documentation team grew along with the company and we became our own scrum team. This means we have our own sprint, but keep the release dates of the functionalities in mind to make sure we don't become the impediment (it's a challenge). We also have our own scrum board and process, as well as a definition of done.   So my questions are:  Do others work this way?   And, if so, how exactly do you integrate documentation into the release cycles of all the teams?   Then translation:  How is translation integrated into your process?   Is it part of your definition of done?  Thank you in advance for your replies.  Gina Ketelaars",5522
"05:00 am July 25, 2013                    Hi Gina  There are 3 roles in Scrum - Product Owner, Scrum Master, and Development Team. There is no express recognition of a Technical Writer role, or for that matter other common roles such as Business Analyst or Tester, and there are no role specializations within the Development Team - there are only developers.  The way a Scrum Team handles documentation is therefore up to them. There might be a Product Backlog Item for producing documentation, for example, and the Development Team would bring it into a Sprint Backlog and work on it at some point. Alternatively the production of documentation might be included in the Definition of Done, if that documentation is needed for each increment to be considered potentially releasable.  At an enterprise scale this model can become attenuated, as there are many roles and specializations. The situation you describe is a common one and the approach you have adopted (i.e. create a Scrum Team in which the ""developers"" are in fact tech writers) is sensible.  What you seem to need now is an enterprise view of Release Planning, and particularly of the ""Release Train"" in which the inputs of different teams (including tech writer teams) are brought together to create a Release. Frameworks such as SAFe, DAD, and DSDM have things to offer in this regard. If you haven't already done so, I suggest you take look at them for ideas. This is a significant topic in contemporary agile practice.           Log in or register to post comments",5522
"01:57 am July 26, 2013                    Thanks Ian!  I have never heard of a release train or the frameworks you are talking about, so I will definitely do some research.           Log in or register to post comments",5522
"01:26 am July 30, 2013                     Posted By Gina on 25 Jul 2013 02:21 AM  Hi all,    A short introduction    I work as a technical writer at a company with quite a few development teams (I believe the current count is 16). All these teams work with Scrum. Because of this, the releases are done on an almost daily basis. Until recently, the writers were part of the teams, but the documentation team grew along with the company and we became our own scrum team. This means we have our own sprint, but keep the release dates of the functionalities in mind to make sure we don't become the impediment (it's a challenge). We also have our own scrum board and process, as well as a definition of done.     So my questions are:    Do others work this way?     And, if so, how exactly do you integrate documentation into the release cycles of all the teams?     Then translation:    How is translation integrated into your process?     Is it part of your definition of done?    Thank you in advance for your replies.    Gina Ketelaars  Hi Gina,  Is there any specific reason why the documentation team needs to be its own team instead of having each documentation team members embedded with the engineers?           Log in or register to post comments",5522
"03:01 am July 30, 2013                    Hi Joshua,  We used to work with writers embedded in the teams, but the set up was such that one writer had to cater to three, four, sometimes five teams. It became unworkable. Plus during holidays or when someone fell ill, there were huge issues to solve. Of course, capacity is still something we struggle with, but at least now we can divide the work better and become each other's safety net.            Log in or register to post comments",5522
"10:15 pm July 30, 2013                    Hi Gina,  Why does it become unworkable? Did you discuss it with the engineers during retrospectives?          Log in or register to post comments",5522
"02:12 am July 31, 2013                    We did. But being part of three to five teams and thus three to five retros, groomings (usually this one was twice a week), plannings and daily stand ups, was taking away too much time. Not attending these meetings, or just a few, resulted in not entirely being part of the teams. Plus, it is difficult to fully be a part of three teams anyway. We couldn't commit.   Now, with our own team, we can attend our own meetings and talk to the SMEs in our own time, outside of meetings. That bit works very well. Now the integration of the rest of our process...          Log in or register to post comments",5522
Log in to reply,5522
Messages,5309
"05:58 am August 10, 2012                             Hi all,  A new member is joining our development team in a few weeks and I am thinking about the best way to introduce/train him. He'll need to get familiar with the code base and the overall development process.   Do you advocate pair programming (we're currently not using this)  and what other methods have you used to get new members up to speed?  I'd be grateful if you would share your experiences.  Thanks  Fredrik",5309
"08:03 am August 10, 2012                    We use mentors, mostly.   The mentor (a senior developer), assigns bugs for a few weeks and makes themselves available for questions / coaching.  When comfortable enough with the code, some pair programming is used, although it's mostly assigned programming by the senior developer.  This type of relationship can go on for a while (a couple of months) and then depending on the confidence and skills of the new person, they're ready to go on their own.          Log in or register to post comments",5309
"11:27 am August 10, 2012                    Hi Fredrik,  Can you please elaborate how is the current development process?          Log in or register to post comments",5309
"05:48 pm August 10, 2012                    Knowledge transfer via pair programming is the most efficient way ( read system documents if any is also recommended but not efficient when it comes to large scale enterprise application). However, Seniors should be aware of the importance of this and have the willing to share their knowledge and time with new team members, otherwise his velocity will not increase, he can't creates any value or it will takes him too much time to deliver something.   If the team is self organized it's important to have the team lead or the agile coach enforcing  theses practices ( not all the persons can collaborate together or love pair programming or even like interacting with people luck of soft skills or task oriented persons).  Typical situation : talented programmer with many years of experience pair with senior developer in the company ( not necessary talented or have many years of experience). This latter, may not share his knowledge openly for job security purpose or for competition between members etc. that's why a person with enough authority will enable and enforce theses practices .   Bassem Hamdi          Log in or register to post comments",5309
"12:27 am August 12, 2012                    @Joshua. We have an iterative process with sprints but are currently doing more of iterative waterfall than ""pure scrum"". fetures/stories are usually implemented by 1 or 2 developers and there's a lack of collaboration between members. Team does not self-organize but are expected to be told what do etc. I want to guide the team in this direction and avoid that the new member adapt our current process and get the collaboration/self-organizing/self-managing going.          Log in or register to post comments",5309
"07:45 am August 12, 2012                    Hi Fredrik,  It looks like the team needs coaching more than anything else. Pair programming works only if the team is very committed to the work and already self-organize. I have seen Junior team members are able to get up to speed when we involve them in Sprint Planning and let them self-organize during development. Yes, they will ask a few questions and some times they will only take tasks that they think is easy for them but it's worth it because after a few Sprints they are able to get up to speed.   Are you taking the Scrum Master role for this team?          Log in or register to post comments",5309
"11:27 pm August 12, 2012                    Hi Joshua,  Yes I am taking on the SM role for the team and indeed they do need coaching/guidance. We're having a company-wide Scrum training in a couple of weeks that I hope will kick this off, but they will of course need continuous coaching.  Why is it that pair-programming only works with very committed and self-organizing people?          Log in or register to post comments",5309
"12:32 am August 13, 2012                    Hi Fredrik,  Good to hear that the company is taking a Scrum training. Someone who is not motivated and under command and control will do pair programming just for the sake of it. It may become unproductive in the end.          Log in or register to post comments",5309
"12:33 am August 13, 2012                    Thanks all for sharing your thoughts and experiences.          Log in or register to post comments",5309
"02:21 am August 13, 2012                    No worries. The first thing you want is they understand the values of Agile first. Forget about the mechanics if they don't understand the values first. Once the team understand the values, you may get more than you expect.   All the best.          Log in or register to post comments",5309
"08:44 am May 24, 2013                    I think allocating each new joinee with a mentor is the best way.  http://www.agiledistributed.com/           Log in or register to post comments",5309
Log in to reply,5309
Messages,5325
"08:53 am September 14, 2012                             I had an interesting talk over lunch with a guy developing for nuclear power plants. He likes to introduce Scrum or at least some elements. The big question he has: Are there already known examples of Software for systems under safety restrictions (nuclear power plants, medical devices, observation devices, ...) developed with Scrum? Do you have any links, documents?",5325
"05:52 pm September 19, 2012                    I've used Scrum in 2005 in a software project creating forensic software. Since, it possibly could harm a person by sending the wrong person to prison it had to be FDA compliant.   This was in 2005 when FDA was still more waterfall driven, nevertheless we had been able to be agile and to comply to all the laws. In early 2006 the FDA actually changed some laws and made it easier to be agile. They realized that software development is a different beast then mass producing medication.            Log in or register to post comments",5325
"03:16 pm September 23, 2012                    Siemens medical does a lot of Scrum, the FBI does, the department of defense (USA) does and at least one manufacturer of security devices in Germany does. You should be able to find some documents with Google. There is even a yearly conference in Germany on that: http://www.scrummed.de/          Log in or register to post comments",5325
"09:55 am October 9, 2012                    RJ> I've used Scrum in 2005 in a software project creating forensic  RJ> software. Since, it possibly could harm a person by sending  RJ> the wrong person to prison it had to be FDA compliant.  Good morning, Ralph.  I'd be interested in knowing who it was that said the software had to be FDA compliant because it could send the wrong person to prison.  In 22 years working in medical devices this is the first I've heard of the FDA getting involved in that sort of thing.  What are the relevant regulations?  I should read up on it...  Eric Poole  www.rkt-tech.com           Log in or register to post comments",5325
"10:33 am October 17, 2012                    Hi Eric,  the software was used to validate genetic sequencers, hybridizer and amplifiers and other devices.  In order for a laboratory to be allowed to submit DNA sequencing results to court it has to be validated. Validated means that it can reliable reproduce the correct result. Often a drop of blood only provides enough material for on sequencing run the result better be right as this could send a person to prison.  The validation is a lengthy time intense process and the software we developed guided the laboratory with step by step instructions. (here the link to the software: http://marketing.appliedbiosystems.com/mk/get/VALID_MS_0607_LANDING?iso… )  The FDA gets involved whenever a 'device' could put a human being at risk - this rule applied in this case as well. One of the regulations I can remember was CFR21 Part 11.  HTH  Ralph          Log in or register to post comments",5325
"11:37 am October 17, 2012                    Good morning, Ralph.  21 CFR 11 is the regulation that deals with electronic record-keeping and electronic signatures.  It'd be a real stretch that the FDA would apply it to what you were doing, but it wouldn't be the first time FDA has applied the regulations in hard-to-understand ways :-\.  I can certainly see why your activities need to be validated and run correctly the first time, to conform to the rules of evidence, just don't see why the FDA would necessarily get involved.           Log in or register to post comments",5325
"08:43 am May 24, 2013                    Software development for those fields is still in the waterfall model.   http://www.agiledistributed.com/          Log in or register to post comments",5325
Log in to reply,5325
Messages,5333
"03:34 am September 28, 2012                             Hi, all I have been a tester for 13 years with vast experience in all aspects of testing and automation. Having always had a passion for agile and lived through numerous agile transitions, I recently took and passed the PSM I exam. However despite apply for numerous scrum master roles, I have yet to get an interview.   If anyway has any advice on getting a role, then I would love to hear any comments, I have also attached my linked in profile   http://www.linkedin.com/in/chrisandrews10",5333
"07:20 am September 28, 2012                    Hey Andrec,  Have you tried outside of UK? Have you tried Europe?          Log in or register to post comments",5333
"08:55 am September 28, 2012                    Hi, no not really, is there a higher demand then?  Would taking and passing the PSM II help?          Log in or register to post comments",5333
"02:06 am September 29, 2012                    Hi Peter,  have you ever worked on a 'real' agile team? I am asking as it is mostly about experience. Having a CSM or PSM certificate is good it doesn't really tell how well this person is able to apply Scrum in the real world.  When I am involved in hiring a Scrum Master I want to hear about the war stories, successes, huge failures and what was learned from those.   Have you considered about being a Dev Team member as an agile tester helping the team to use ATDD, TDD, ... and take on the role as Scrum Master as well? A Dev Team member can also be the Scrum Master.           Log in or register to post comments",5333
"04:13 am September 29, 2012                    Yeah I have been testing software for 13 years and worked on several agile teams and transistions. I have also advided management on best approaches to agile and helped dev teams create unit tests and adapt BDD and TDD, helped the business start creating a groomed product backlog and how to create user stories. Been working on the teams as you suggested and now feel ready to take the next step.          Log in or register to post comments",5333
"05:10 am September 29, 2012                    Did you tell this during your interviews? Technical Excellence is one of the most paramount elements in agile software development and you seem to be good at it. I would try to sell my Agile Coaching skills rather then being Scrum Master - a good Agile Coach automatically is a good Scrum Master.          Log in or register to post comments",5333
"03:24 am September 30, 2012                    Thats the trouble, I have not had any interviews as yet, but only been applying since last week. I performed the scrum master role at my current company for a few weeks when the project manager left, but this was then taken over by the BA.   The trouble I currently see is that a lot of the roles advertised are closely linked to a PM role, which as I come from a QA background could be the problem why I am not getting any interviews or feedback on cv applications.          Log in or register to post comments",5333
"08:31 pm October 1, 2012                    This really is one of the major struggles of Scrum.  I hate to call it marketing, but at this point that's what it is.  There is a widely held perception that the Scrum Master is this world's director of activities.  The Team, Development Team, and other terms for the doers has never really elevated itself above programmers in the minds of most.    Here is what I might do if in your shoes:  Consider looking for organizations that either call themselves Agile or are looking to adopt Scrum.  Apply using your experience as a tester and as you talk with this organization, try to shape the role as a tester/Scrum Master.  That might be tester & SM or tester on Team A while SM on Team B.  Whatever.  Gain a good few years of practical resume building Scrum Master roles even if it's part time.   Start presenting in your region on the role of Scrum Master and how your experiences have led you to your understanding.  Look for organizations that are considering Scrum or Agile and want to seed teams.  Invite them to your presentations and Day of Agile/Scrum events (organize one!)  This would be an opportunity to act as Teacher and Evangelist.  Two very important traits of a Scrum Master.  Hope that helps.  Good luck.          Log in or register to post comments",5333
"04:25 am October 2, 2012                    Thanks for the advice Ryan, I have just been told a of a role that is a QA autoamtion/Scrum Master role ,which would sit very well with my skillset, so will apply for that one.   Good idea about the Day of Agile/Scrum events, will have a look at this as well, thanks again.          Log in or register to post comments",5333
"08:29 am May 24, 2013                    Try being a development member first and then you'll have better chances of being a scrum master  http://www.agiledistributed.com/           Log in or register to post comments",5333
Log in to reply,5333
Messages,5473
"10:16 am May 16, 2013                             I'm working with a highly distributed team that struggles with backlog decomposition; breaking down big things.  Much of this comes from not understanding the business and that's being resolved through industry training, etc.  I'm curious, though. Are there retrospective or training activities that you've found helpful in learning how to decompose that might work well for a distributed team?  Something that works well in a collocated scenario that might be modified.  I understand all of the problems with distributed teams and that this causes problems.  I'm not interested in that particular discussion being repeated.",5473
"05:34 am May 17, 2013                    Hi Ryan  First let's consider why big PBI's are a problem. Usually it's because they cause uneven flow rate, the delayed delivery of value, and stand a higher risk of becoming impeded than smaller ones. You can therefore try to get the team to think in terms of where a work item is likely to become blocked (e.g. by needing something from another team or stakeholder), and encourage them to author smaller items that ""wrap"" these blockages. Sometimes a user story can be phrased in terms of delivering value to those other stakeholders or teams.  Another option is to play hardball and adopt one point = 1 work item. I've used this in the past to encourage the authoring of smaller PBI's, It becomes better the more of them there are, because any residual sizing discrepancies tend to average out over the course of a Sprint.          Log in or register to post comments",5473
"05:33 am May 18, 2013                    Yes ""Agile Distributed- http://www.agiledistributed.com/  "" helps organizing distributed teams co ordinate work efficiently          Log in or register to post comments",5473
"12:34 am May 20, 2013                    Thanks Ian, do you have any **activities** that you find useful in teaching teams how to do what you're suggesting that might work for distributed teams?  I have plenty of experience working through these challenges with collocated teams, but again - this isn't one of those situations.          Log in or register to post comments",5473
"12:35 am May 20, 2013                    Alice - were should I look on this website for activities.  Thanks.          Log in or register to post comments",5473
"08:23 am May 20, 2013                    Hi Ryan  Unfortunately not, though I'd be strongly disposed towards using Google Docs as the basis for a distributed approach. There's an article on Pragmatic Agilist which I think is a good starting point:  http://pagilista.blogspot.co.uk/2012/08/how-to-do-project-cost-and-time…          Log in or register to post comments",5473
"10:37 pm May 22, 2013                    Thanks Ian.  Certainly has some good ideas.          Log in or register to post comments",5473
"02:00 am May 23, 2013                    Hello Ryan  It is good that you have started with the industry/domain training to team. Another thing I would like to add is that - as a standard, teams should spend at-least 10% of their sprint time in grooming for future sprints which may be more for your team, are you giving your team enough time for grooming and understanding the backlog? Also human brain understand the visual things earlier as compared to the textual so I would recommend to use mock-ups, HTML screens for your user stories.  Also don't get frustrated and communicate with your team as much as you can.  Cheers  Sanjay          Log in or register to post comments",5473
Log in to reply,5473
Messages,5448
"01:51 am April 10, 2013                             Although many teams use user stories to plan out the increments of software they are working towards, the scrum guide does not specifically say anything about user stories.  If a team were not to utilize user stories, what alternatives would they have?  Are there any other viable alternatives to user stories?",5448
"11:26 am April 10, 2013                    I remember that up until about 4 years ago it was common for Use Cases to be included in a product backlog. These would map to one or more scenarios that would be treated much as tasks are today...a scenario would be given to a particular developer to work on.  I think the industry moved away from this partly because of the overhead involved in defining use cases and scenarios and partly because they weren't very good placeholders for a future conversation. They were treated as specifications or part-specifications. Although they could and were used in iterative-incremental processes such as RUP, I can't say they are particularly agile. In my experience Use Cases can lead a team deeper into the weeds of specification where they become absolute devils to estimate.  The other common way of representing requirements is as a Prioritised Requirements List. This is a hierarchical breakdown of requirements (possibly just in free text) which can roughly correspond to user stories, features, and epics. Spreadsheets have been used to capture scope this way for many years, often by organising it in terms of Must-have, Should-have, and Could-have requirements. Simple prioritised lists can certainly be used to constitute a Product Backlog as long as each entry can be given an estimate.          Log in or register to post comments",5448
"08:20 am April 18, 2013                    Why don't you want to use user stories?  Like you say; Scrum does not say anything about which approach to use about populating the backlog. As long as there is one, there is a shared understanding in the Scrum Team on what the items mean and the list is prioritised.  The reason why user stories are a good idea, is because they focus on functionality and on business value. It's easier for a product owner to sort the backlog if items are not technical. And to extend Ian's answer; user stories are a lot easier to order than a use case. And a lot easier to write with a PO.  In my teams, we actually tend to use a fairly ad-hoc approach. We make use of user stories as much as possible. Some tasks are very hard to describe in terms of user stories, so we also add more or less 'technical tasks' to a backlog if absolutely necessary. But we make sure that the PO understands what they mean. For smaller projects, we often don't even write (formal) user stories. We just identify logical chunks that we need to and write them down on a card (like 'Order a product' or 'Search for product'). As long as they are vertical instead of horizontal slices (e.g. every chunk has to represent a stand-alone piece of functionality).  In general, all other approaches will work if there is shared understanding in the team and the PO can priorise them. It's not about the processes and the tools, it's about humans and interactions :)          Log in or register to post comments",5448
"09:20 am May 10, 2013                    Some examples would be:  1) User Stories – simple format, easy to understand, drives conversations  2) Use Cases – formal syntax, more difficult to understand  3) Gherkin – “Specification by Example”  To be honest, I've never seen a team applying Scrum and NOT using User Stories, so perhaps it would be interesting to find out the reason why User Stories is not a preference?          Log in or register to post comments",5448
"05:59 pm May 21, 2013                    Thanks for the very helpful posts.  To update, i picked up the book ""User Stories Applied"" by Mike Cohn and it's answered my questions about user stories.  I'd highly recommend it for anyone who's struggling with building out their product backlog.  http://www.amazon.com/User-Stories-Applied-Software-Development/dp/0321…          Log in or register to post comments",5448
Log in to reply,5448
Messages,5470
"07:05 am May 12, 2013                             Dear Agile fans,  I would like to share with you guys a small ""research"" that I've been working on couple week ago. Wanted to publish it earlier, but couldn't find the right time due to work etc.   The subject is about Relative Complexity Theory and how the teams guestimation will eventually autocorrect itself after x Sprints.   I must say, after I wrote this I go into the Sprint Planning Meetings with a totally different mindset.   http://relativecomplexitytheory.blogspot.nl/2013/05/relative-complexity…  Hope it makes any sense! :D",5470
"05:34 am May 18, 2013                    Excellent post..... Good work on the research.  http://www.agiledistributed.com/          Log in or register to post comments",5470
"03:29 am May 19, 2013                    Thanks Alice :-)          Log in or register to post comments",5470
Log in to reply,5470
Messages,5467
"05:31 am May 10, 2013                             Hi all  Page 14 of the Scrum Guide says:  ""The Development Team modifies Sprint Backlog throughout the Sprint, and the Sprint Backlog emerges during the Sprint""...""As new work is required, the Development Team adds it to the Sprint Backlog. As work is  performed or completed, the estimated remaining work is updated.""  Perhaps there are at least two ways to interpret this:  1) the estimates (e.g. story points) for all remaining work should be updated during the Sprint, even for those stories that have already been estimated.  2) only the new work being brought in is estimated. The estimates for the work already planned in will not be changed. The calculation of remaining work will be based on these figures.  The advantage of (1) is that the estimated points reflect the truth as it is currently understood. Therefore if they are written on the story cards on a Scrum board, the information radiator will be telling the truth. By the end of the Sprint they will be very close to the actuals. The disadvantage is that better estimation (and therefore analysis) during planning is potentially discouraged, since the team know they can always change the estimates as they go along.  The advantage of (2) is that there is a clear inspect/adapt opportunity at the end of the Sprint to improve estimation (and analysis) during planning for the next Sprint. The disadvantage is that the board is less honest, because it will be showing story point estimates that do not best reflect the truth as it is currently understood.  Many teams adopt a compromise approach whereby tasks are broken out for each user story, and only the estimates (often in hours) are updated. By the end of the Sprint the task estimates will effectively be actuals. However the story points themselves will not be amended.  What are your opinions on the best way to update estimates during a Sprint?",5467
"08:46 am May 10, 2013                    Hi Ian,  This is how I've interpreted the following part:  The Development Team modifies Sprint Backlog throughout the Sprint, and the Sprint Backlog emerges during the Sprint""...""As new work is required, the Development Team adds it to the Sprint Backlog. As work is performed or completed, the estimated remaining work is updated.  -	As new work is required = extra tasks for a specific User Story that is needed to complete the User Story.  -	As work is performed or completed, the estimated remaining work is updated = when tasks are performed or completed, modify it to which you think it is correct.  Usually in my teams we attend to guestimate User Story relative from each other by using the Fibonacci numbers and subtasks by hours or sometimes nothing.  I’m my opinion it doesn’t really matter whether you use time, complexity, t-shirt sizing or even nothing, in the end it’s all about completing the stories that the team had forecasted. I’ve seen teams without any indication doing extremely well and teams using time, complexity etc. fail miserably.   Cheers, Chee-Hong           Log in or register to post comments",5467
"10:36 am May 10, 2013                    Wearing my Coach's hat I need to answer your questions by asking more questions (don't you just hate that?):  1. What will the team gain by updating story points in the middle of a sprint?       User Stories are measured in relatively abstract terms:  points, t-shirt sizes, ideal team days, etc.  Any ""truth"" in the measure is a reflection of the team's long-term performance (velocity) not day-to-day progress.  In my experience, revising user story estimates after the sprint adds no value to the process and can introduce confusion when planning the next sprint.  I'll agree with Chee-Hong that ""as new work is required"" refers to the tasks needed to realize User Stories.  These tasks are measured in hours (a measure of ""work"").  The work estimates (hours remaining) are updated daily for/during the daily stand-up, so when new work (a new task) is added it is estimated.  This is not a compromise:  it's Scrum.  2.  Do I understand correctly that the ""new work"" you are adding to a sprint reflects new user stories?       If that's the case I have only one comment:  User Stories are measured in more abstract terms:  points, t-shirt sizes, ideal team days, etc.  Any ""truth"" in the measure is a reflection of the team's long-term performance (velocity) not day-to-day progress.  In my experience, revising user story estimates after the sprint adds no value to the process and can introduce confusion when planning the next sprint.  We don't add stories to a sprint in progress.          Log in or register to post comments",5467
"11:01 am May 10, 2013                    The cool thing about relative estimation is that it will autocorrect itself when you apply it within an iterative process.  A couple months ago I did I small research on relative estimations and it’s quite interesting to see what happens with initial estimations and how that affects the planning.  After my research I go into the Sprint Planning Meetings with a whole other intention :D  http://relativecomplexitytheory.blogspot.nl/2013/05/relative-complexity…           Log in or register to post comments",5467
"07:40 am May 15, 2013                    But who is responsible for updating the estimates during a sprint?  http://www.agiledistributed.com/          Log in or register to post comments",5467
"06:27 pm May 16, 2013                    Ian, responding to your original question.  Btw, thank you for all of your contributions to the forums -- I find your posts to be very informed and informative too.  Scrum and the Scrum Guide does not really speak directly ""on point"" on this subject, so you know what that means...  ;-)          Log in or register to post comments",5467
Log in to reply,5467
Messages,5456
"11:01 pm April 27, 2013                             who is best to manage product backlog burndown charts including tracking?  Product owner?  who is best to manage sprint backlog burndown charts including tracking?  Dev team?  since scrum master is a management position but doesn't manage team then can the scrum master ""track"" each burndown chart for the team to manage?",5456
"02:22 am April 28, 2013                    <html xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:w=""urn:schemas-microsoft-com:office:word"" xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml"" xmlns=""http://www.w3.org/TR/REC-html40"">  <head>  <meta http-equiv=""Content-Type"" content=""text/html; charset=us-ascii"">  <meta name=""Generator"" content=""Microsoft Word 14 (filtered medium)"">  <style><!--/* Font Definitions */@font-face	{font-family:Calibri;	panose-1:2 15 5 2 2 2 4 3 2 4;}@font-face	{font-family:Tahoma;	panose-1:2 11 6 4 3 5 4 4 2 4;}/* Style Definitions */p.MsoNormal, li.MsoNormal, div.MsoNormal	{margin:0cm;	margin-bottom:.0001pt;	font-size:11.0pt;	font-family:""Calibri"",""sans-serif"";	mso-fareast-language:EN-US;}a:link, span.MsoHyperlink	{mso-style-priority:99;	color:blue;	text-decoration:underline;}a:visited, span.MsoHyperlinkFollowed	{mso-style-priority:99;	color:purple;	text-decoration:underline;}span.E-mailStijl17	{mso-style-type:personal-compose;	font-family:""Arial"",""sans-serif"";}.MsoChpDefault	{mso-style-type:export-only;	font-family:""Calibri"",""sans-serif"";	mso-fareast-language:EN-US;}@page WordSection1	{size:612.0pt 792.0pt;	margin:70.85pt 70.85pt 70.85pt 70.85pt;}div.WordSection1	{page:WordSection1;}--></style>  </head>  <body lang=""NL"" link=""blue"" vlink=""purple"">  <div class=""WordSection1"">  <p class=""MsoNormal"" style=""text-autospace:none""><span style=""font-size:10.0pt;font-family:""Arial"",""sans-serif"""">Ik ben afwezig tot maandag 6 mei. Voor dringende aangelegenheden kunt u contact opnemen met de receptie (+31 318 581600). De receptioniste kan u   doorverwijzen naar een collega.  Met vriendelijke groet,  Sjoerd-Jaap Westra  +31.6.1095 0457  ____________________________________________________  I am out of the office until Monday the 6th of May. For urgent matters please contact our receptionist (+31 318 581600). The receptionist can forward you to the right person.  Kind regards,  Sjoerd-Jaap Westra  +31.6.1095 0457</span><span style=""font-size:8.5pt;font-family:""Tahoma"",""sans-serif""""><o:p></o:p></span></p>  </div>  </body>  </html>          Log in or register to post comments",5456
"03:27 am April 28, 2013                    A burndown chart should be an information radiator, like a scrum board. It might even be pinned on the board.  Since it's a team responsibility to keep information radiators up to date, it follows that it's a team responsibility to update a burndown. The person who does it should be the first  person who sees it needs doing.          Log in or register to post comments",5456
"04:58 pm April 28, 2013                    Agreed that it is the dev team's responsibility to update the chart. The main purpose of the chart is to help the team (everyone) make aware how much work (in terms of effort) is remaining. Each dev team member can take turn to update the chart.          Log in or register to post comments",5456
"08:58 am May 10, 2013                    The theory state that each member of the Development Team can update the Burndown Chart because the team is self-organised.  But in real life I guess it’s usually the Scrum Master or the tool that you’re using that does the update for you. And I think it’s perfectly fine, because that way the team can fully focus on the stories and not doing (what some developers calls) “project administrative” tasks.            Log in or register to post comments",5456
"03:32 pm May 12, 2013                    I feel the urge to advise you to be careful with assuming that it's okay for the Scrum Master to track the sprint burndown. I have several experiences suggesting that it makes it harder for the team to take ownership of their own progress. As a Scrum Master on a team that has just started, I usually take up that task initially. My intent however, is to hand it over to the dev team as soon as possible. It's their progress, not mine.          Log in or register to post comments",5456
"04:14 pm May 12, 2013                    Usually when a project starts, I tell the team (so that it’s clear) that my role is purely to facilitate, not managing and that we’re 1 team joint with a common goal. As Scrum Master I  believe there are enough way to create ownership within a team. My experience with Burndown Charts is that it can sometimes be time-consuming. Especially when you’re in a large team where a lot of WIP is going on. I do believe that the Burndown Chart can creates some kind of “team feeling” and I always recommend to show the Burndown after every Daily Scrum, because developers like seeing the line going down which is great! So I agree partly with you Paul.  What I don’t agree is when you said “it’s their progress, not mine”. As Scrum Master within a  team (that shares a common goal) the progress is every bit as yours as it is of the team.  I’m just saying that I’ve seen a lot of teams where the SM updates the Burndown Chart and I believe there’s no problem with that. In my opinion the SM is as much of a team member as the developers. Of course, when the Development team can optimal self-organized themselves and do everything that would be great, but for a lot of teams that’s not the case yet.            Log in or register to post comments",5456
"02:39 am May 15, 2013                    ""It's their progress not mine""  might be a bit harsh to say. Off course I'd be invested in the development team making progress, and I'd do whatever I can so that they can excel. Still, at the end of the day, it's their progress, not mine. Can I step in sometimes to model some of the skills required to be successful, sure. Think about it, how likely is it that the development team will self-organise and take responsibility for their progress as a team if someone else is tracking their progress for them? Have you considered working on not having a large team, and limiting WIP as a Scrum Master?   Regards, Paul          Log in or register to post comments",5456
"07:26 am May 15, 2013                    Each member of the development team is responsible in managing the burndown chart  http://www.agiledistributed.com/           Log in or register to post comments",5456
"07:15 pm May 15, 2013                    +1 to Paul's answers.  Just because a lot of teams have the SM update the burndown doesn't mean it's right or correct to do so.   From the Scrum Guide:  The Development Team tracks this total work remaining at least for every Daily Scrum.  The Development Team tracks these sums daily and projects the likelihood of achieving the  Sprint Goal. By tracking the remaining work throughout the Sprint, the Development Team can  manage its progress.          Log in or register to post comments",5456
Log in to reply,5456
Messages,5368
"07:07 am December 5, 2012                             I passed PSM 1 exam last week and got the soft copy of the certificate. I wonder weather I would be getting a Hard copy of the same.  Many thanks,  Nishanth",5368
"02:13 pm May 13, 2013                    I have been told that I will receive the hard copy. I am still waiting for it but it has only been 2 weeks          Log in or register to post comments",5368
"04:18 pm May 13, 2013                    Hi Nina,  Hard copy certificates are not provided to those who pass Scrum.org assessments as of current, however, soft copies are provided via email to those who receive a passing score.  Daniel          Log in or register to post comments",5368
Log in to reply,5368
Messages,5463
"06:31 am May 2, 2013                             Hi All,  Just would like to know the best and great Scrum master certification among the options available in market. I am interested to do Scrum Master certification and want to pick the one which have best reputation in software world.  Thanks  Vikas Gupta",5463
"04:02 am May 3, 2013                    I have Scrum Master certifications from the Scrum Alliance and scrum.org. I'm not aware of any other SM certifications, though I haven't really looked.  What I can tell you is that most employers and clients couldn't care less about them, reputation-wise. You should take a certification as part of your own personal development. Build your own reputation based on the knowledge and experience you get. Don't take a certification thinking that reputation comes with it.          Log in or register to post comments",5463
"08:46 am May 7, 2013                    Do PSM I and PSM II classify as scrum certifications?          Log in or register to post comments",5463
"12:12 am May 9, 2013                    Thanks Ian Mitchell & Alice Menezes.          Log in or register to post comments",5463
"09:24 am May 10, 2013                    I've seen great Scrum Master without any certifications and bad Scrum Master with all the ""right"" certifications.   A certification doesn't examine the actual quality that is needed for a Scrum Master.          Log in or register to post comments",5463
Log in to reply,5463
Messages,5457
"11:04 pm April 27, 2013                             I have a dev team member that is causing problems with the rest of the team and needs to be removed.  should I as the scrum master who is a management position for removing impediments remove the individual?  or should the dev team who is self managing remove the individual?",5457
"12:05 am April 28, 2013                    I would imagine the Scrum Master (SM) to be a Servant Leader, having no authority over the Dev Team.   Is the SM managing people or something else?  Perhaps not the answer you were looking for and one can define ""management"" in differing ways.  Let's also hear from others...          Log in or register to post comments",5457
"03:16 am April 28, 2013                    It is becoming less common these days for Scrum Masters to be line managers with hiring & firing authority.  I think that's a good thing because it avoids conflicts of interest like this.  I recently read  Esther Derby using an expression like ""coaching someone off the team"". Since a Scrum Master is a team coach, that might be one way forward, though I admit it sounds a bit cynical.          Log in or register to post comments",5457
"10:40 am April 29, 2013                    Upon reaching the conclusion that the team member must go, I believe the Scrum Master should not be left to face this alone. It seems the proper place for Scrum Master, as servant/master, to discuss with the Product Owner and Development Team (away from the individual) the issues that are becoming problems and also discuss with the individual (away from the team) what's going well, what needs to be improved, and how to approach that improvement. The Scrum Master may also assist in fostering that improvement, through moderating discussions between the member and the team.   As the conclusion emerges, the Scrum Master would then discuss the situation with his/her own supervisor, as the reasons for removal may involve the team member's job performance. The actual removal should be handled by those with authority over the team member's job and task assignments.          Log in or register to post comments",5457
"09:15 am May 10, 2013                    I agree with John and to add up on his argument:  When a Scrum Master takes on the responsibility and remove the member from the team it will somehow affect the team dynamic. Let’s say if this kind of problem occurs again, the team will automatically look at the Scrum Master for guidance. In this case I believe the  Scrum Master should act as a mediator between the team members and/or supervisors.           Log in or register to post comments",5457
Log in to reply,5457
Messages,5466
"02:43 pm May 9, 2013                             Hi,  Let me start by saying it's normally not my style to try and get support through public channels.  But alas, I cannot blame myself for not trying.  I did pass my PSM1 exam on 20th July 2012.  On 24th April alerted support via the web form, that my name had disappeard from the official list of certificate holders:  https://www.scrum.org/Assessments/Certification-Lists?AssessmentName=PS…  Not having received any reply, I tried again on 1st May 2013.  As I still have not received a reply or an update in the list of certificate holders, I try this forum now.  Could you please investigate and add me to the list again?  Not sure if the ""missing badge"" and empty list of assessments in my profile has the same reason.  Many thanks.  Best regards, Scrum on,   Dominik",5466
"06:17 am May 10, 2013                    Thanks for sorting this out so quickly, all solved now :)          Log in or register to post comments",5466
Log in to reply,5466
Messages,5462
"07:28 am May 1, 2013                             The Scrum Guide lists the Product Backlog and the Sprint Backlog as its two Scrum artifacts. The Definition of Done is not an artifact. I was wondering if anyone has thought about that?  Other parts of the Scrum Guide say: ""Scrum users must frequently inspect scrum artifacts .."". The Definition of Done is also a subject of continuous inspection. Apparently it shares properties with the Scrum artifacts especially its need for transparency.  I assume that the Scrum Guide is a result of inspection itself. Would you be willing to consider the Definition of Done as an artifact? Why am I asking you?  In my daily practice I noticed that occasionally Items of the Product Backlog are in fact requirements. In the Sprint Planning Items wander from the Product Backlog to the Sprint Backlog. According to https://www.scrum.org/Resources/Scrum-Glossary/Definition-of-Done the Sprint Planning Meeting is also the occasion to inspect the Definition of Done:   ""During the Sprint Planning meeting, the Scrum Team develops or reconfirms its DoD, which enables the Development Team to know how much work to select for a given Sprint.""   That statement confirms the close relationship of the Definition of Done with the Scrum artifacts. I assume that the authors of the Scrum Guide have been considering this too. What made them decide against the thought that  the DoD is not a Scrum artifact?",5462
"03:03 am May 2, 2013                    I don't think there is any artifact called DoD, it is an umbrella process which must be followed for ensuring that all sprint backlog items are ship-able.  Also I have seen teams using a DoD checklist in excel format and sharing it daily within team and PO for making sure that everyone is on same page w.r.t. sprint status for each PBI          Log in or register to post comments",5462
"03:49 am May 3, 2013                    In the Scrum Guide, the Definition of Done is placed at a peer level to the Scrum Team, Scrum Events, and Scrum Artifacts. It isn't classed as an artifact itself, presumably because it isn't part of the product value stream in the same way that backlogs and increments are. It's a more fundamental part of the process.          Log in or register to post comments",5462
"03:05 am May 4, 2013                    Thanks Sanjay and Ian for joining me in this discussion.   @Sanjay, an excel sheet actually is an artifact, right? I mean to say that we might have on a converting mind track.  @Ian, I understand that you seek a distinction in the nature of the DoD compared with both artifacts. I agree that the DoD has an on-going nature where each item of the artifacts have an incidental ""definition of done"" themselves.  I came to this issue because I noticed that occasionally Items of the artifacts move to the DoD. In rare occasions even back, for instance with BDD. This is mostly done by the Scrum Development Team, who is responsible for the DoD. (Source: Developer Open Assessment).   I have a desire to check my perception of the Scrum definition. If I follow Ian correctly then I could argue that each  Backlog Item needs a ""micro DoD"" section that extends the DoD.   I wonder how Ken and Jeff think about this. Does anyone know how to ask them for their guidance.           Log in or register to post comments",5462
"08:44 am May 7, 2013                    What is the process to form a DoD..??          Log in or register to post comments",5462
"10:44 am May 7, 2013                    Hi Alice  I don't think there's a defined process, but I suggest:  1) Review Acceptance Criteria:    a) Gather the Acceptance Criteria for work completed so far    b)) Look for common criteria that can be abstracted out and applied across work in general    c) Use these common criteria as the basis for a Definition of Done  2) Assess Technical Debt    a) Identify any rework that needs to be done    b) Identify the reasons why it wasn't done properly the first time    c) Identify what measures can be put in place to stop similar rework from occurring    d) Add these measures to the Definition of Done (DoD)  3) Continually update the DoD    a) In each Sprint Review, identify which (if any) work was rejected or which caused rework to be done, then    b) In each Sprint Retrospective, challenge the DoD for relevance and completeness           Log in or register to post comments",5462
"01:31 pm May 8, 2013                    Good question Alice. That's a very useful checklist Ian. Thanks.  If we add ""measures"" to a DoD, would that violate its nature? A measure supports a process. The Scrum Guide defines the DoD asa shared understanding of what it means for work to be complete.  An elegant and open way of defining the DoD for it does reveal its significance but does not prescribe its manifestation.    I assume that you suggest to use the results of the measures, rather than the measures themselves. Could you please clarify Ian.          Log in or register to post comments",5462
"04:25 am May 9, 2013                    The DoD can be written in any form, or not written at all. As you point out it is a shared understanding. If it is written down, I'd suggest using the same format as acceptance criteria (Given...where...then). So in a retrospective a team would challenge those criteria and rewrite them as necessary. It is rather prescriptive but arguably conforms to the principle of least surprise, and the terms can be refactored from the DoD to a/c or vice-versa as scope clarifies.  All but the most mature teams will need a DoD that is documented in some form. A summary of the criteria can be written on an index card and placed above the ""done"" column on a Scrum board as a reminder.          Log in or register to post comments",5462
Log in to reply,5462
Messages,5459
"12:47 pm April 28, 2013                             Just passed PSM I.  It can take time for certificate.  I have an interview for scrum master this Tuesday 8am EST.  Is there a way I can get the certificate tomorrow, Monday or some other proof like on the website to show during the interview?  thanks.",5459
"11:08 am April 29, 2013                    All set, John. The certificate has been sent out to you. If you should have any issues you can contact me (Joe) at support@scrum.org. Congrats on your achievement and best of luck on your interview. Have a good day!          Log in or register to post comments",5459
"05:43 am May 2, 2013                    Jbeek, Congrats for passing PSM I exam.  Could you please share your contact details and I have some queries w.r.t PSM I preparation and will contact you separately.   Awaiting your reply. Thanks  Krishna          Log in or register to post comments",5459
"08:41 am May 2, 2013                    John Beek  146 Spyglass Drive, Blue Bell, PA 19422  610 270 3904  You have it already in my profile. can you update the website in the  next 2 hours before my interview?  Thanks.  John  On Thu, May 2, 2013 at 5:43 AM,  <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5459
"05:22 am May 3, 2013                    Thanks John for your prompt reply.  I did check your profile but I could not able to find any contact details hence I have requested earlier.  I will get in touch with you soon  Best,  Krishna          Log in or register to post comments",5459
Log in to reply,5459
Messages,5454
"02:43 am April 26, 2013                             Hi,  Just would like to know how much technical competent a scrum master should be to play his/her role. Deep technical knowledge and architect skills are must for scrum master?  My view is that the Scrum master must have the good grasp on the scrum processes/rules and their application with good people management skills. It is nice to have a deep and good grasp in technical front for scrum master.  Please guide me if i am wrong.  Thanks  Vikas Gupta",5454
"07:45 am April 26, 2013                    Vikas,  IMO and IME, an SM having technical knowledge can be a great asset, so long as the SM doesn't use that technical knowledge to harm the Dev Team's ability to self organize.  It is very easy for a SM with technical background to ""stomp on"" the DT's self organizational abilities.  Having said that, while the main skills of an SM are probably Scrum knowledge and Servant Leadership, just about any other extra knowledge/experience (Expert facilitation knowledge, Domain knowledge, Company knowledge, Technical knowledge, Project/Product knowledge, teaching knowledge, coaching knowledge) can be highly useful, so long as they don't interfere with Scrum or Servant Leadership/Self Organization.  The value that the ""extra knowledge"" brings to a particular team will obviously depend on the needs of that team/org.  So, long story short, while technical knowledge in an SM might an asset, there are drawbacks to that knowledge, and there are other areas of knowledge that might actually be more important for a given team or org.  Does that help?          Log in or register to post comments",5454
"10:19 am April 26, 2013                    For what it's worth, I just blogged on the SM / Servant Leadership issue today:  ""Scrum Master: Servant Leadership in Practice""  http://agile.dzone.com/articles/scrum-master-servant?mz=123873-agile           Log in or register to post comments",5454
"11:46 pm April 28, 2013                    Charles,  Thank you very much for the answer. It really helped me.  Thanks  Vikas          Log in or register to post comments",5454
"11:49 pm April 28, 2013                    Thanks Ian, doubt clearing blog relly helpful.  Vikas          Log in or register to post comments",5454
"09:59 pm April 30, 2013                    I've seen success with SMs with and without deep technical knowledge.  I think it depends on the larger team.  How much deep knowledge is there on the rest of the team?  If a lot, then the SM can focus on the scrum leadership, and leave more architecture, technical knowledge to others.  I've also been in other situations where the SM was also the most technically knowledgeable, as well.  It is much more work for an SM to have to cover both.  I think the perfect world is where the team has deep knowledge, the SM also goes deep, so can pick up wherever needed, but can also fall back when other sprint, scrum related issues crop up that need to be dealt with to keep the team from being impeded.          Log in or register to post comments",5454
"02:57 am May 2, 2013                    I would say it is nice to have a technical SM but he should not be too technical and should not get involved in day-to-day coding activities.   SM should be very much deep into processes and tools to be used in Scrum.          Log in or register to post comments",5454
"06:17 am May 2, 2013                    Thanks Sanjay.          Log in or register to post comments",5454
"08:41 am May 2, 2013                    I am out of the office until Monday, May 13th.  Please direct any questions to Perica Zivkovic  Mark C. Newman  PDS Americas LLC  1177 West Loop South, Suite 525  Houston, TX 77027   <mailto:mark.newman@pds.nl&gt; mark.newman@pds.nl  Mobile: +1 713 540-8236  Skype: mark-c-newman            Log in or register to post comments",5454
Log in to reply,5454
Messages,5449
"10:20 am April 10, 2013                             Hello,  In what extreme situations the development team still has to find his own solutions (not the scrum master solution)? All situations? or is there a limit? if yes which one?",5449
"10:31 am April 10, 2013                    My opinion is that in every situation, the Scrum Master should be thinking 'Is this something the team can handle themselves?' and would then have to weigh the benefit of having the team gain more confidence and ownership (by solving their own problem) against the cost of time taken away from their Sprint Goal (distraction). Consulting the Dev Team for a better measurement on this ROI is a good idea.  There is no set limit, but the preference is certainly for the team to develop the skills needed to solve their own problems.          Log in or register to post comments",5449
"11:50 am April 10, 2013                    The simple answer is that a team should be self-organising enough to find its own solutions to operational problems. The role of the Scrum Master, in that regard, is to remove any impediments that stop the team from doing so.  Beyond such operational considerations, the Scrum Master can (and should) coach the team in the correct application of Scrum.  But as Don says there is no set limit. It can be difficult to determine whether or not a particular problem is an operational matter for the team to negotiate, an operational impediment for the Scrum Master to remove, or the result of incorrect or inefficient agile practice which the Scrum Master needs to address.  But in all honesty, it's pointless to try and determine this boundary. A Scrum Master should lead by example, which means taking a broad view of what constitutes impediments or potential problems, and doing whatever needs to be done to resolve or avoid them.            Log in or register to post comments",5449
"11:54 am April 10, 2013                    Thank you but I need examples.  What do you do if as a scrum master you have 50 people to organize in scrum teams?          Log in or register to post comments",5449
"02:59 pm April 10, 2013                    Someone I respect explained it like this to me:  1.  If the challenge is one internal to the Scrum or Dev Team , then let the Scrum or Dev team(whichever one applies) decide how to handle it.  2.  If the challenge is one that is ""unsafe"" for the Scrum or Dev Team to handle by itself, then the Scrum Master should handle it either directly(teaching, mentoring, or removing the impediment personally) or indirectly(facilitation, coaching, employing others on the team and in the org to help with removal).           Log in or register to post comments",5449
"03:00 pm April 10, 2013                    So Inoxys... What do you do if as a scrum master you have 50 people to organize in scrum teams?  Does this sound like something safe for the team to handle themselves, or not?          Log in or register to post comments",5449
"03:41 pm April 10, 2013                    I should be tempted to ask the 50 people to form development teams by themself. With only 2 rules : form functionnal teams and no more than 9 people by team.          Log in or register to post comments",5449
"06:01 pm April 10, 2013                    By ""functional"" teams I'm assuming you mean ""cross functional"".  Good advice.  By 9 people, I'm assuming you mean 9 Development Team members per team.  You might also have to figure out who will be SM's and PO's.  You might also think about telling them that there needs to be at least 3 Development Team members per team.  As to your proposed solution... Let's assume your advice is good in some scenarios.  What about possible scenarios where letting the people form their own teams themselves might be bad advice?  Can you think of those scenarios?          Log in or register to post comments",5449
"05:40 am April 12, 2013                    Sure, there is also the PO and SM.   By letting the people do without advice, we could get component teams or/and 20 people teams and many problems. The Scrum Master should let people make their own experience and hope they will adapt organization in the retrospectives ? in ""joint"" retrospectives (Scrum Guide is so light about multi-team organization) ?          Log in or register to post comments",5449
"09:13 am April 12, 2013                    What if the people have never been to Scrum Training?  What if the people have been doing Scrum well for 3 years?  What if management won't let the people self organize because that would completely disrupt a current business initiative?  What if management won't let the people self organize because that would completely disrupt the current pay structure and that's not a chance the org is willing to take?  What if the 50 people are distributed in 12 different time zones?  What if the org says that only requirements analysts can be product owners, and that the product management team is just too busy to be involved?           Log in or register to post comments",5449
"09:26 am April 12, 2013                    What do you mean with these questions? Do you mean there is no answer to my case?  I have another scenario. A real scenario. The developpment team I work with as a Scrum Master has grown during years from 7 to 15 people. We had discussions about making 2 smaller teams. But the developpment team doesn't want to split even if I let them self-organize themself. Should I let them as these?          Log in or register to post comments",5449
"10:43 am April 12, 2013                    Inoxys, given your level of knowledge, and given that we're on a public forum, I didn't feel right in taking the ""teach/mentor"" stance.  I felt better taking the ""coaching/facilitating"" stance.  So, to be direct, I'm trying to coach you into a thoughtful answer that I believe is close to correct.  In short, I'm trying to teach you to fish, rather than give you the fish.  I'm going to ignore your new scenario for a minute, because I think that's just going to cloud the issue -- it's a completely different scenario, with different context.  I'd recommend you start a new thread for that one.  You were on the right track with the team ""self organizing into component teams"" or ""20 people"" etc.  Let me help you along a little further.  Let's assume that there are times, given the limited context you've given here, when letting that large group of people self organize into teams is likely a good idea, and times when it's likely a bad idea.  So, you tell me...and based on the questions I asked above in several posts... What are the scenarios when it is likely good to let them self org into times?  AND what are the scenarios when it is likely bad to let them self org into teams?          Log in or register to post comments",5449
"11:20 am April 12, 2013                    Ok, I understood. Thank you for this clarification and your time Charles.  What if the people have never been to Scrum Training? They can auto-organize without any advices  What if the people have been doing Scrum well for 3 years? They can auto-organize without any advices  What if management won't let the people self organize because that would completely disrupt a current business initiative? They can't self organize at this time  What if management won't let the people self organize because that would completely disrupt the current pay structure and that's not a chance the org is willing to take? They can't self organize at this time  What if the 50 people are distributed in 12 different time zones? They can self organize  What if the org says that only requirements analysts can be product owners, and that the product management team is just too busy to be involved? They can self organize          Log in or register to post comments",5449
"11:29 am April 12, 2013                    If I understood you correctly, in your opinion, letting 50 people who have never been to Scrum training(and thus have almost zero Scrum knowledge) self organize into Scrum teams, without any advice, is likely going to be a good outcome.  Did I understand that correctly?          Log in or register to post comments",5449
"12:05 pm April 12, 2013                    Oups! no. I made a mistake reading the first question: I forgot the word ""never"" :)  So if they have almost zero knowledge, they need advices.           Log in or register to post comments",5449
"12:48 pm April 12, 2013                    So given all of our previous discussion, and understanding your views, what's a good way to summarize your view in this scenario?  Can you boil it down to 2-4 sentences?  Think about ""safety"", ""organizational boundaries"", ""Scrum knowledge and experience"", the Scrum Master's role, etc....          Log in or register to post comments",5449
"01:49 pm April 12, 2013                    I can ask people to self organize if they have a good knowledge and experience of scrum. If not, I have to teach them before. The management and HR have also to be ok with letting people self-organize. If not despite my advices, I have to help people to find a way to use Scrum and respect enterprise rules.          Log in or register to post comments",5449
"01:58 pm April 12, 2013                    That sounds like a pretty good answer to me.    I might go softer on this advice:  > If not, I have to teach them before.  Maybe more like, I should try and teach them some relevant concepts before.  Remember that you might also be working in an environment where the org is completely fine with the teams re-organizing(inspecting and adapting) themselves for the first few sprints.. but of course, constant re-organizing can be a dysfunction, too.          Log in or register to post comments",5449
"01:59 pm April 12, 2013                    Anyway, I hope this helps.  I'm not the ""chief oracle of Scrum"" by any means, but I hope this helped you.  Has it helped?          Log in or register to post comments",5449
"05:12 pm April 12, 2013                    Sure, you helped me. Thank you. Do you think I could have make a shorter answer? The PSM II assessment field for answer is about only two or three lines. Is it a ""guide"" for very short answers? For this kind of questions, it seems to be hard to be short.          Log in or register to post comments",5449
"08:40 am April 24, 2013                    Why always use ""quotes""? The text can be in Bold  when you say things like ""chief oracle of scrum"", i alwys think of austin power/dr evil  in who overuses the ""quotes"" .  When you put in in ""quotes"" I assume they are not meant to be literal.  at least... that is my interpretation.  (and that is causes me to loose exactly to loose one point in the open assesment (question about ""management"" )            Log in or register to post comments",5449
"09:23 am April 29, 2013                    The team should be fervent enough to figure out its own solutions. However in case that cannot happen, the scrum master should be ready to step in if and when required.   http://www.agiledistributed.com/          Log in or register to post comments",5449
"09:24 am April 29, 2013                    The team should be fervent enough to figure out its own solutions. However in case that cannot happen, the scrum master should be ready to step in if and when required.   http://www.agiledistributed.com/            Log in or register to post comments",5449
"09:25 am April 29, 2013                    The team should be fervent enough to figure out its own solutions. However in case that cannot happen, the scrum master should be ready to step in if and when required.   http://www.agiledistributed.com/            Log in or register to post comments",5449
Log in to reply,5449
Messages,5446
"11:12 am April 2, 2013                             Hi,  I recently passed the certification for the PSM I. I'm currently looking for a job and was a business analyst in my previous role.I see most of the job openings ask for scrum knowledge and experience.What would be the next step for me to build on PSM I knowledge?  Thanks  vandana koul.",5446
"12:23 pm April 2, 2013                    Probably to continue as a BA, but on an Agile project. A true Scrum project won't have a separate BA role but a more general Agile project could allow progression to something like a Scrum Master position. I once appointed a BA as a Scrum Master because she was the person who, in the field, actually did most to facilitate things and remove team impediments.  Occasionally there are job openings for so-called Scrum Master positions where you also have to be a BA. In my experience, most of these are for new projects where the hiring of a BA has been overlooked, Product Ownership is unidentified or weak, and an Agile PM of some sort is expected to get things going, such as by creating a candidate Product Backlog.          Log in or register to post comments",5446
"09:01 am April 18, 2013                    Yes.....he's right. A business analyst's post is good but move on to <a href= ""http://www.agiledistributed.com/"">agile methodology</a>. The transition maybe difficult, but its worth it.          Log in or register to post comments",5446
"05:12 am April 25, 2013                    Hello Vandana,  I'm soon planning to prepare PSM - One  exam and could you please share what materials which you had used to pass the exam ?  Thanks in Advance  Krishna          Log in or register to post comments",5446
"08:46 am April 29, 2013                    Web gate international provides some good material for PSM  http://www.agiledistributed.com/           Log in or register to post comments",5446
Log in to reply,5446
Messages,5453
"06:47 am April 18, 2013                             How much technical knowledge does the PO have to have? One of my colleagues claims, that the PO must have a deep technical knowledge, and has to be able to architect the solution for the teem. As far as I remember from my training, the PO requires domain knowledge, so if you write an accounting software, the PO must understand accounting, but not IT. The PO is the guy who says What, but it is the development team who says How it will be implemented.  What do you think?",5453
"11:14 am April 18, 2013                    The Product Owner is the person who is responsible for prioritising the backlog (based on business value, hopefully), negotiating with stakeholders and working with the team to manage the items on the backlog. The Product Owner owns the product backlog. Those are his or her tasks.  There's nothing wrong with a PO that has deep technical knowledge. But there's certainly nothing wrong with a PO that has no such knowledge. In any case, a PO does need to have an understanding of the business value of the items on the backlog and be able to make informed decisions. If technology has an impact on these decisions, then it is up to the team to educate the PO where necessary to allow him or her to make decisions.  Requiring deep technical knowledge from your PO, or even asking him/her to solely architect the solution, seems to me like mixing up roles and responsibilities. The Development Team is responsible for translating the backlog into working software. This includes architecture. If a PO wants to be involved there, I don't see an immediate problem. As long as the PO remains focussed on his / her own responsibilites before anything else.          Log in or register to post comments",5453
"01:35 pm April 18, 2013                    I totally agree. I just want to convince my friend, and there is always a chance that I misunderstand something. This is why I asked here.          Log in or register to post comments",5453
"01:55 pm April 18, 2013                    A Product Owner should care about the release of value. If they need a ""deep technical knowledge"" to do that, and to manage the release of value in a timely way, then so be it. But that's not usually the case.   Your colleague may have had prior experience on a rather unusual project (such as an internal one for paying back inherited technical debt)  which has shaped his or her thinking.          Log in or register to post comments",5453
Log in to reply,5453
Messages,5451
"01:03 pm April 13, 2013                             Hello,  I'm a software engineering student. I'm now finishing my end of degree project, which develops around the idea of the development of a software using Scrum instead RUP, which is the methodology commonly used for developments in my university. Because of this I need to make sure that everything is really consistent because teachers don't look very friendly to non-RUP stuff. So, I've got a question:   My report includes information about the Sprint burndown, predictions, tests, user stories and meetings, including the Sprint retrospective meeting. I'm now done with the full development, and so I need no more Sprints. Should I then hold a retrospective meeting?   On the one hand I don't see it makes too much sense, since as far as I understand, this meeting is used to extract conclusions from the Sprint mistakes and define actions to be taken in order to improve the become of the upcoming Sprint, but on the other hand maybe that last retrospective meeting could be used to put together the things I've learned during this development and how I'll apply them in the future.  Any opinions/solid replies on this, please?  Thanks,  Jorge.",5451
"02:56 pm April 13, 2013                    I side with this opinion:  ""that last retrospective meeting could be used to put together the things I've learned during this development and how I'll apply them in the future. ""  There is always a ""next sprint"" -- it just may not be on this product/project.  Why not use it to celebrate and reflect on how you might do things differently in a future product/project?          Log in or register to post comments",5451
"03:28 pm April 13, 2013                    Yeah that's what I thought at the beginning. But things that in this project were very heavy (like GUI development for example, in this case), and because of that had high estimations, may be very easy or less important in upcoming projects in completely different environments. This may drive me to overestimate graphic tasks in projects in which I think it's necessary but it's actually not, leading to obviously undesired wastes of time. So, why would I want to take into account facts from this project in future projects which may be absolutely different from this?           Log in or register to post comments",5451
"03:31 pm April 13, 2013                    Are you saying you can predict the future?  If so, then you should not be in college.  You should be in Las Vegas.  :-)  You cannot predict today what will benefit you in the future.  I seriously doubt a couple of hours in a retro is going to ruin your life.  Maybe you should consider questions like, ""If I had to start this project all over again, same project, what are the 3 biggest things I would do differently?""  Surely there is value there for you in the future.          Log in or register to post comments",5451
"03:50 pm April 13, 2013                    So, I should say like 'okay, let's keep this experience for similar developments, but don't mix it in other places because it may drive to mistakes'. Looks reasonable I guess, although feels strange, I thought the experience wouldn't depend pretty much on the developed project.  Thanks.          Log in or register to post comments",5451
"05:09 pm April 13, 2013                    A retrospective is more about looking at the process than the product. I'd expect a final retrospective to continue coming up with lessons about the way Scrum is applied, and with a focus on the potential improvement of future projects.          Log in or register to post comments",5451
"06:40 pm April 13, 2013                    > okay, let's keep this experience for similar developments, but don't mix it in other places because it may drive to mistakes  You don't need to say anything like that.  Just facilitate, and see what lessons your team learns or chooses to reflect upon.  Don't just look back 1 sprint, look back over all of the sprints.  Encourage your team to think about what they would do better.  Maybe you don't see this because you're a student, but I can tell you, every experience I have in sw dev shapes every other future experience.  The experiences may be directly applicable, indirectly applicable, or non applicable, and I think people will use common sense to decide what is what.    Also, don't forget to celebrate!!  All's well that ends.  :-)          Log in or register to post comments",5451
Log in to reply,5451
Messages,5307
"07:38 am August 9, 2012                             Hi,    Can give me list for recommended book list for the first PSM Assessment?    Thanks.",5307
"08:53 am August 9, 2012                    Hi Pablo,  The Scrum Guide is the most current and best starting place. Beyond that, Ken's ""Agile Project Management with Scrum"" is quite popular, but Scrum has changed quite a bit since it was published.  Alex          Log in or register to post comments",5307
"09:32 am August 9, 2012                    As Alex said..THE SCRUM GUIDE is the no.1 resource. Follow Ken's blog (http://kenschwaber.wordpress.com/) and the discussion forum in this site.  All The Best !!          Log in or register to post comments",5307
"10:47 am August 9, 2012                    Agile Project Management is a great book, but is not in conform with the last version of Scrum Guide, I thins that is good to read but is analising with the changes out the new Scrum Guide,   []'s          Log in or register to post comments",5307
"01:15 pm August 9, 2012                    I personally like   http://www.amazon.com/Scrum-Trenches-Enterprise-Software-Development/dp…  http://www.amazon.com/Succeeding-Agile-Software-Development-Using/dp/03…  http://www.amazon.com/Coaching-Agile-Teams-ScrumMasters-Addison-Wesley/…  Guess this are great books in general to get going with using Scrum in order to create better products in a given time frame.  As for the assessment, it is the Scrum Guide and the Scrum Open assessment.  Finally, a PSM training is a very good resource.  Good Luck,  Ralph          Log in or register to post comments",5307
"09:09 pm August 9, 2012                     Posted By Ralph Jocham on 09 Aug 2012 01:15 PM  I personally like     http://www.amazon.com/Scrum-Trenches-Enterprise-Software-Development/dp…    http://www.amazon.com/Succeeding-Agile-Software-Development-Using/dp/03…    http://www.amazon.com/Coaching-Agile-Teams-ScrumMasters-Addison-Wesley/…    Guess this are great books in general to get going with using Scrum in order to create better products in a given time frame.    As for the assessment, it is the Scrum Guide and the Scrum Open assessment.    Finally, a PSM training is a very good resource.    Good Luck,    Ralph  I agree with Ralph that PSM training is a very good resource. I have found that most Agile books is very opiniated and doesn't really conform with Scrum Guide. It took me quite some time to realize this.          Log in or register to post comments",5307
"11:02 pm August 9, 2012                    Hi Pablo,  While the Scrum Guide gives the rules, I think that the stories in Ken's ""Agile Project Management with Scrum"" is still very helpful to learn the mindset. It will help you understand it rather than just learning about the rules.  When I think about my own journey to understand Scrum better, I have read a lot,  and while this has been useful, many key insights have been when talking to others. Thinking about problems and real life situations, sharing experiences and ways of thinking.  If you have someone to work with/discuss with, check out these study questions I prepared for people that wants a structured way to work through many aspects of Scrum: http://www.cedur.se/scrum-skills-series.html  Good luck!  Henrik           Log in or register to post comments",5307
"11:32 pm August 9, 2012                    Hi,  I wanted to give a comprehensive list of books, articles and presentations about Scrum or in general about Agile concepts which will help to develop Scrum and Agile knowledge. This list is not for only PSMI but actually it is for people who want to know more about Scrum as a first goal rather than only getting the certificate. List is based on my personal taste and experience so it does not claim to be the most valuable set or whatever but for sure it will help much!  Lists are alphabetically ordered.  Books:  A Practical Guide to Distributed Scrum  Agile and Iterative Development A Manager's Guide  Agile Project Management with Scrum (Ken Schwaber 2004)  Agile Software Development (Alister Cockburn)  Agile Software Development -Cooperative Game 2nd Edition  Agile Estimating And Planning  Pragmatic Agile Coaching  Pragmatic Agile in a Flash  Scrum And Xp From The Trenches  The Agile Samurai  Articles-Presentations (can be found on the net mostly):  Evolving Agile (Scott Ambler)  Essential Scrum (Tobias Mayer)  Distributed Scrum Primer  Do Better Scrum  Grooming The Product Backlog  How Self-organizing Groups Re-frame Conflict  Lean and Agile Development in a Large Company  Product Owners Manual  The Role Of The Manager In Scrum  Scrum Handbook (Jeff Sutherland)  The Scrum Primer  Self Organizing Agile Teams Grounded Theory (Thesis)           Log in or register to post comments",5307
"12:09 pm August 11, 2012                    If you want some hints about how to prepare for the assessment, you can also throw a look at this Blog: http://scrumorakel.de/blog/index.php?/archives/30-How-to-prepare-for-th…          Log in or register to post comments",5307
"12:38 pm August 12, 2012                    I'd add one very recent book for the list: Software in 30 days by Ken S.& Jeff S.           Log in or register to post comments",5307
"06:49 am August 20, 2012                    I recently have red ""The Scrum Field Guide"" by Mitch Lacey:  Very useful.          Log in or register to post comments",5307
"01:01 pm April 12, 2013                    For a scrum overview have a look at http://www.freescrumebook.com          Log in or register to post comments",5307
Log in to reply,5307
Messages,5440
"07:00 am March 25, 2013                             Hello,  Many applications contain a list of Known Issues nowadays.  Does the scrum theory allow that an increment contains known issues?  Is this a product owner decision (balancing value & risk) or a Development Team decision (quality guidelines & DoD)?  Thanks in advance  Sjoerd-Jaap Westra",5440
"07:35 am March 25, 2013                    Scrum allows it up to a point, because the principle is to deliver early and often rather than to wait for perfection.  Here's the sense in which it is acceptable: If the Product Owner makes the decision, then you must ask if he has effectively renegotiated the User Story and/or its Acceptance Criteria during the sprint. If that is the case then the story can be revised and completed as normal.  However, if this is not the case, then technical debt will be incurred and it will need remedy before it becomes too expensive to pay off. Any compromising of the Definition of Done is likely to incur technical debt...regardless of whether or not the PO gives his approval.  I'd argue that Scrum doesn't allow technical debt to be incurred, though it is understood that it does happen. This is one of the reasons why Definitions of Done need challenging and improving (e.g. in Retrospectives).          Log in or register to post comments",5440
"09:12 am March 25, 2013                     Does the scrum theory allow that an increment contains known issues? Yes, though it doesn't encourage known issues either.  Scrum does not require that the increment be perfect, only that it be useable and potentially releasable.  Is this a product owner decision (balancing value & risk) or a Development Team decision (quality guidelines & DoD)?  Scrum does not speak specifically to this point.  So, IMO, and staying true to the Scrum framework/principles, the PO decides whether and when the increment is released, and orders the product backlog.  As such, the decision to release with a known issue is made by the PO.  In addition, and also IMO, the dev team can fix the known issue any time they want, though they should make this decision and work highly visible.  For more on that view, see the Dev Team Improvement Backlog here:  http://www.scrumcrazy.com/Scrum+Strategy+-+The+Dev+Team+Improvement+Bac…          Log in or register to post comments",5440
"09:16 am March 25, 2013                    I'd argue that Scrum doesn't allow technical debt to be incurred I'd argue that Scrum doesn't say anything about technical debt, other than the increment must be useable and potentially releasable, both of which are subjective opinions of the PO and users/stakeholders.  I'd say it's rather easy to be doing Scrum correctly and incur a lot of technical debt.  I'd also say that it's rather easy to be doing Scrum correctly and incur very little technical debt.  Scrum specifically provides the DoD to help prevent technical debt, but the team can certainly create an unhealthy DoD that allows for loads of technical debt.  Scrum doesn't really speak a lot on technical practices.          Log in or register to post comments",5440
"11:42 am March 25, 2013                    Hi Charles  > I'd argue that Scrum doesn't allow technical debt to be incurred  ...  > Scrum doesn't really speak a lot on technical practices.  Yes you are right. I was thinking of the Scrum Primer (the de facto Scrum Alliance position) which is somewhat more critical than the Scrum Guide, referring to technical debt as ""undone work"".          Log in or register to post comments",5440
"11:58 am March 25, 2013                    I agree with Charles and would also like to add that technical debt can be perfectly acceptable when e.g. trying to meet a deadline. Just make it highly visible and pay it back as soon as possible.          Log in or register to post comments",5440
"05:23 pm March 25, 2013                    the Scrum Primer (the de facto Scrum Alliance position)  I think the Agile Atlas is the new de facto Scrum Alliance position:            Log in or register to post comments",5440
"05:26 pm March 25, 2013                    Agile Atlas link:  http://agileatlas.org/  (See ""Core Scrum"", which is their equivalent of The Scrum Guide)  One point of interesting note -- the agile atlas view of Scrum from the Scrum Alliance has ""come around"" to be much closer to the Scrum Guide, including incorporating things like ""forecast"" instead of ""commit"", etc., ""The Development Team"" instead of ""The Team"", etc.          Log in or register to post comments",5440
"05:26 pm March 25, 2013                    referring to technical debt as ""undone work"". The ""Undone Work"" pattern is also still the recommended practice(when the bad practice of undone work exists!) for Scrum.org.  We use it in our PSM class.  The term ""Undone Work"" was described in a previous Scrum Guide optional strategy. In 2011, the ""Undone Work"" strategy was removed from the Scrum Guide. The removal of ""Undone work"" is briefly alluded to here:  <snip from:  https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl… >  ""...Unfortunately, some organizations use releases to compensate for bad development practices. A usableIncrement is one with no “undone” work associated with it at the end of a Sprint. If teams are unable to create truly usable Increments, the remaining work (testing, documentation, user acceptance, etc.) are done as part of the release process - sometimes referred to as the stabilization phase. In this case, the release plan codifies the acceptance of the poor development practices, and makes it incredibly difficult for a Product Owner to effectively plan when a release will happen....""  </snip>  You can access and read about the Undone Work pattern in the 2010 Scrum Guide here:  http://www.scrumcrazy.com/2010+Scrum+Guide           Log in or register to post comments",5440
"05:30 pm March 25, 2013                    technical debt can be perfectly acceptable when e.g. trying to meet a deadline. Just make it highly visible and pay it back as soon as possible.  This is ""perfectly acceptable"" so long as it is not repeated often, and so long as the debt is payed back quickly.  Often times, though, it becomes a  really bad habit and is repeated often, and never paid back.  Watch out for non Scrum Team members who pressure the Development Team to repeatedly do the Undone Work thing -- it can very easily become a dysfunction that leads to massive technical debt.          Log in or register to post comments",5440
"05:31 pm March 25, 2013                     Watch out for non Scrum Team members who pressure the Development Team (I've also seen Dev Teams do this to themselves, to meet perceived ""important deadlines"")          Log in or register to post comments",5440
"03:25 am March 26, 2013                     I don't think there is anything called ""Known Issues"" in Scrum. They are just missing features and are of low priority for PO.  Whenever a PO accepts a user story with so called ""known issues"" it means he is agreeing that the product can be released without those features.          Log in or register to post comments",5440
"09:37 pm March 27, 2013                    I would agree Sanjay.   SCRUM does not have anything called known issues as increment. These are nothing but technical debts. I think it would be team highlighting the problem and PO approving to get this done ASAP not delaying any further to spill onto upcoming sprints.          Log in or register to post comments",5440
"12:30 pm April 12, 2013                    Hi guys.  So whether a known issue is allowable or not should be decided on a case by case basis by the product owner and team dependent on whether it is an issue of technical or user focussed quality.  In simple terms, within Scrum. The Product Owner is trusted to know what is acceptable for the business and user. The dev team are trusted to know what is acceptable from a technical perspective.  Therefore although Scrum encourages quality delivered after each sprint, if there are any remaining issues it is up to the Product Owner to decide if the business and user should live with it and the product is still shippable.  It is up to the dev team to decide if the product is technically still shippable. Also any issues are seen as an impediment to be dealt with later (as soon as possible)  Of course as you know this is not the ideal situation and we should strive for perfection :)          Log in or register to post comments",5440
Log in to reply,5440
Messages,5441
"05:28 pm March 25, 2013                             Hi all,  I need some input on the best time to coach the team. What I should address directly and what, if anything,  I should wait with and let the team figure our themselves.   For example,   A story that does not meet the DoD is accepted by the PO.   Team decides to demo stuff that is not done in sprint review  During standups it's clear that some tasks drag on for days without much progress, noone in the team asks why  Would you step in right away and coach/train the team or wait until later?  thanks  Fredrik",5441
"05:36 pm March 25, 2013                    Good questions, Fredrik.    What is the Scrum Maturity of the team?  The org?  The coach?  What is the org's tolerance for change?  The team's?  Is your only role on the team as Scrum Coach, or do you wear many hats?  Is it the only team you're coaching at the moment?  How long have you been coaching them?  It's very hard to try and give good advice on your question ""over the internet,"" without the full context to go on.  We can try, but I suggest you hook us up with more context!           Log in or register to post comments",5441
"03:06 am March 26, 2013                    Hi Charles,  Some context.  One team that has been using Scrum for about a year and I have acted as the SM for all that time. No dedicated scrum coach has ever been brought in. Entire organisation has been to Scrum training. Most team members been working together for many years. Big tolerance for change I would say. I act as both dev. manager and scrum master and occasionally as a team member, which is not ideal.          Log in or register to post comments",5441
"03:19 am March 26, 2013                     Scrum master's role is to ensure that team follows the Scrum process and one of the critical attribute of process is transparency. At-least for the first two items (DoD and undone work in sprint review) are candidate for transparency issue. As a scrum master you should ask the team that ""Did we meet the DoD, is everyone agree on it Or do you guys want to change the DoD"". Re: the 3rd item on dragging off of tasks, you can wait for some more time, there will be some undone work at the end of sprint and then you should coach/ask team on what could have been done better to avoid the undone work.  In both cases your role is to initiate and facilitate the discussion, team has to discuss and come out with the decision.  Also your organization has gone thru the Scrum training about one year back so this may be time to get refresh their Scrum knowledge          Log in or register to post comments",5441
"09:34 pm March 27, 2013                    Going by scrum first objective - inspect and adapt - I would say SM didn't play appropriately on either of the examples.   DoD defined and PO accepted though it didn't meet all criteria - so either DoD was not proper or PO is biased. So knowledge should be provided more on clear DoD definition(tangible ones) and PO to accept only when all met.  If one use case is done then only team should go for demo during review - otherwise t would bring in more questions from the attendee on the expectations/requirements.  Some task is not being done and getting dragged for days - it should have been reported during daily scrum and SM should have picked that up and would have taken necessary steps to ""remove the imp endings"".  I would say we should try to follow the rules at the best possible way when we practice scrum, however in real life its very difficult. It goes back to the same - SRUM rule is easy to understand but very hard to practice.           Log in or register to post comments",5441
"11:25 pm March 27, 2013                    Fredrik,   Thanks for the extra context.  I will try to help, but remember, this is like doing surgery over the phone -- a bit dangerous.  Would you step in right away and coach/train the team or wait until later?   A story that does not meet the DoD is accepted by the PO.  Team decides to demo stuff that is not done in sprint review  During standups it's clear that some tasks drag on for days without much progress, noone in the team asks why  The first thing I usually consider is:  What should my coaching stance be?  See more on that here:  http://www.agilecoachinginstitute.com/wp-content/uploads/2011/08/Agile-…  What level is this team at?  Shu, Ha, or Ri?  (You can google that for more context)  If they are at Shu, then I might act a little stronger(Teaching, Mentoring stance) to ensure Scrum is followed.  If they are at Ha or Ri, then I'm going to take a very laid back approach(Coaching/Facilitating stance) towards coaching the team into better decisions -- usually by asking powerful and socratic questions.  The next thing that I like to consider is ""What the is the team's/org's sustainable pace in terms of accepting and adapting to change in their scrum implementation?""  Then, if there are multiple challenges, I mentally or physically make a list, ordering from highest ROI to lowest ROI (value in terms of advantage to the company, over the political and real investment of effecting the change).  Think of it as a ""Scrum Master's"" (or Coach's) backlog.  You will also notice, as SM, that the Scrum Team probably has it's own ""list"" of things it things to be done.  Anytime you can get synnergy between something on the SM list and the Scrum Team list, then that should immediately and dramatically increase the ROI of enacting that change.  When in doubt, let the Scrum team try to remove that challenge themselves.  You can help and facilitate, but let them try first.  I also consider strongly what will happen if I try ensure that Scrum and principles are followed, and whether team members might try to ""go over my head"" in order to not have to follow Scrum.  I will often share the top 2-3 things on my ""coach's"" backlog with the person who is likely to be contacted by team members, and try to make sure that this person will back me up.  I don't want to get fired for trying to do the right thing!  Keeping all of that in mind, it's time to ensure that Scrum is followed, albeit in a ""servant leader"" way.  There might be a fair amount of resistance because it sounds like you, as the Scrum Master, have not been ensuring that Scrum is being followed for up to a year.  As such, it may be wise to take a slow and cautious approach, maybe tackling one item at a time.  As an aside, when a person of authority is playing a Scrum role, or someone is playing more than one role, I always counsel them to make a lot of clarifying statements like ""As the Scrum Master, my view is xxx"" and/or ""If I put my Dev Manager hat on, I think yyy"" and/or ""Speaking as a Dev Team member, I feel like we should zzz""  I encourage those people to play those roles clearly.  So, for instance, you might exert authority as a Dev Manager, but you should almost never exert authority as a SM -- because the SM is a servant leader.  Hopefully you're also a servant leader Dev Manager, but you may be in an environment where that is not possible.  So, with my extra context, I ask you...  a) What do you think is the Scrum challenge that is happening on the team that has the biggest ROI right now?  b) How do you think you should approach that first challenge?  c) What do you think the Scrum Team would say is the biggest ROI Scrum(or non-Scrum) challenge right now?  Have you asked them something like that?           Log in or register to post comments",5441
"07:44 am April 2, 2013                    Charles,  Thanks for your reply, I find your tips very valuable.  The questions is really when I as a SM should step in. When to wait for the team to figure things out themselves as a self-organizing, self-managing team and when to step in directly. Often I feel that the ""do nothing"" approach work the best. When the team can figure things out themselves that usually leads to more long lasting improvements compared to when I step in and direct the team. My examples are fictitious but still relevant I think. For example, during the standup I should not be required to participate (as the SM) but the team should be able to hold these meetings themselves.          Log in or register to post comments",5441
"11:37 am April 2, 2013                    Hi Fredrik  As an SM you can't tell a team how to do their job. Your role is to make sure the Scrum process is understood and applied, to facilitate Scrum events, and to remove as many impediments as possible. It isn't the SM's job to direct a team operationally.  However, the examples you give are all impediments to the Scrum process being followed, so if I was you I'd step in. My line of tack would be ""this is the problem...so then team, what do you think you should do about it?""          Log in or register to post comments",5441
"07:29 pm April 11, 2013                     However, the examples you give are all impediments to the Scrum process being followed, so if I was you I'd step in. My line of tack would be ""this is the problem...so then team, what do you think you should do about it?""   ++1!  Agreed!  Also some related answers to these kinds of questions here:  http://www.scrum.org/Forums/aft/326          Log in or register to post comments",5441
Log in to reply,5441
Messages,5447
"10:27 am April 9, 2013                             I failed to pass my PSM II assessment and the feedback is very poor. I would like to talk about a few questions that I probably failed to answer. Is it possible to talk about it here?  I also would like to know if I can make very short sentences to essay questions. I'm not a native english speaker. I loose many time to translate questions and find correct words for my answers. If it's possible, someone can give me an example of short answer?  Thanks",5447
"11:11 am April 9, 2013                    This is a good point. I'm a native English speaker but I went right down to the wire answering the PSM II questions.  I reckon:  - it *should* be OK to write very brief sentences  - you may need more of them to represent or contrast points  - bullet points like this might help  Then again, the PSM II answers are positioned as being ""essay style"". So whereas most examiners will try and find marks in submitted factual material, and won't be particular about the format, I do wonder if that is entirely the case here.          Log in or register to post comments",5447
"08:48 am April 10, 2013                    Thank you Ian.  And do you think I can post few tricky questions of the PSM II assessment to talk about it here. It could help me to make progress or be more confident. Or is it forbidden?          Log in or register to post comments",5447
"09:49 am April 10, 2013                    Hi Abelle,  Thank you for your question. We discourage the posting of specific Scrum.org assessment questions on the forums, however, we absolutely encourage having discussions about the topics which are addressed in our assessments. We suggest starting a new forum thread to begin a conversation about the broader topic of which you'd like to gain a further understanding.  Best,  Daniel          Log in or register to post comments",5447
Log in to reply,5447
Messages,5442
"10:02 am March 26, 2013                             Hello Scrum Community,   Can someone give me an idea of how many of the following items typically exist on a medium and large organization scrum board during a sprint.  I realize that these numbers will vary, but I was hoping to get an idea of the minimum and maximum number of the following card types.  - Story Cards  - Task Cards  Additionally, which team members (dev, design, content, ux) are there typically task cards for?  Am I missing any?  Thanks for your help!",5442
"11:16 am March 26, 2013                    Story Cards  The only guidance I believe you can or should accept from outside your own team is ""more than 1 story card"".  The size of a card does not translate in any way between teams.  The reason I can am willing to give the guidance of ""more than 1"" is simply the risk of nothing will be Done as more is learned about the Product backlog item during the Sprint.  In all cases, Done means shippable should the Product Owner believe enough value is accumulated to release to customers.  Task Cards  It sounds like you're using task cards as your plan to accomplish the sprint's goal(s).  In this case, I imagine you'll want these for everything necessary for your Story Cards/Product Backlog Items to be fully Done.  Again, Done means shippable should the Product Owner believe enough value has been accumulated to release to customers.          Log in or register to post comments",5442
"12:33 pm March 26, 2013                    Hi Josh  The number of cards in the Sprint backlog can't be generalised at all, because it's up to the team how much they are prepared to commit to. What can be said is that it is usually best to have lots of cards with low estimates in the Sprint backlog, because that is likely to improve velocity. A small number of high-estimate cards is more likely to sit in progress for a while, increasing the risk of value not being delivered in a timely manner.  It is a bit easier to generalise about the number of cards that would be in progress. Ideally only one story card will be in progress at any one time (though it could have multiple task cards). This is known as single piece flow and it is - theoretically - the most efficient way of working. It minimises the amount of work you have in hand at any one time while  potentially increasing velocity. In practice, most teams have to back away from single piece flow because it isn't practical to have everyone swarming on the same story...even with separate tasks they could be falling over each other. What can be said is that the number of cards in progress should not exceed the number of team members, because each member should not be trying to work on more than one thing at a time. Scrum recommends a team size of between three and seven members, so you can take the arithmetic from there. Just remember that you want the number (the Work In Progress or WIP limit) to be as low as you can reasonably get it.  Scrum does not differentiate between dev, design, content, and UX people. They are all simply team members, and they are expected to be sufficiently cross-trained so as to be able to action the next item from their Sprint backlog, regardless of what the requirement is for.           Log in or register to post comments",5442
"09:25 pm March 27, 2013                    Hi -   I feel story card is more like a use case while task card is the task/activities. As per scrum norm - task card should not be more than 1 man-day worth of effort. We should break story into so many task cards that can be achieved in a single day.  Based on the story card/use case, you can not have any min and/or max # within a sprint. It could be one WIP story card to 1 story point or more in one sprint while definitely there would be (# team member * no of ideal days) of task cards (again ideally).  On the task cards responsible for - it should be the team, cross-skilled, cross-functional team members who should own it.          Log in or register to post comments",5442
"08:28 am April 1, 2013                    Hello,  Depending on your internal workflow, we find advantages in using both - in particular Story-type cards. During our sprint planning sessions, we create these user workflows or stories to guide our QA resources during testing - in particular front end user testing.             Log in or register to post comments",5442
Log in to reply,5442
Messages,5444
"05:18 pm March 28, 2013                             Hi -   Is there a process in place to suggest blog feeds/posts to be included in the Scrum.org Community blog feed?    Thanks in advance.  Derek",5444
"12:21 pm March 29, 2013                    Hi Derek,  Thank you for your note. We would love hear your suggestions for great content to include in the Community Blogfeed. You can use the Feedback flyout to submit them.  Best,  Daniel          Log in or register to post comments",5444
"05:45 pm March 29, 2013                    Great - thanks!          Log in or register to post comments",5444
Log in to reply,5444
Messages,5386
"09:51 am January 4, 2013                             Hi all,  Nice to see the new Developer Open Assessment on the site. May I suggest that you provide some recommended reading or links to other material that that is worth studying before taking the test. The only recommended reading I could find was to review the Scrum Guide but that does not (intentionally) say anything about engineering practices so it cannot be used alone.   Fredrik",5386
"10:53 am January 4, 2013                    Hi Fredrik,      Thank you for your message. Work is underway to publish a Book of Knowledge list for the Developer Open and general Scrum Developer knowledge on Scrum.org. An announcement will be made via our twitter feed within the next week or so.      Best,      Daniel             Log in or register to post comments",5386
Log in to reply,5386
Messages,5380
"08:55 am December 16, 2012                             Business success is no longer just about producing products, selling goods and fulfilling current client needs. It’s about reacting to global trends, new client demands and expanding technology in the fastest and most proficient way possible. One thing is definite: change no longer happens periodically. It’s continuous, constant and unrelenting.  No one understands the changing landscape of business better than Formula One’s CEO Bernie Ecclestone. An Agile Leader who’s received the ultimate reward for Leading Innovative Change through his organisations success; 1.75 billion enthralled loyal fans in 19 countries, a testament to this.  visit www.scrumsolutions.co.za to read the full article.",5380
Log in to reply,5380
Messages,5379
"08:51 am December 16, 2012                             Business success is no longer just about producing products, selling goods and fulfilling current client needs. It’s about reacting to global trends, new client demands and expanding technology in the fastest and most proficient way possible. One thing is definite: change no longer happens periodically. It’s continuous, constant and unrelenting.  No one understands the changing landscape of business better than Formula One’s CEO Bernie Ecclestone. An Agile Leader who’s received the ultimate reward for Leading Innovative Change through his organisations success; 1.75 billion enthralled loyal fans in 19 countries, a testament to this.  visit www.scrumsolutions.co.za to read the full article.",5379
Log in to reply,5379
Messages,5329
"07:58 am September 24, 2012                             One of the assesment questions is about the reasoning behind choosing longer sprint length. I'm not going to post the question here in its entirety for obvious reasons, but I'll try to word it another way.  The question ask about a *cardinal reason* to choose said longer sprint length over a fourteen days sprint, because the amount of work is too much to be divided into units smaller than two weeks.  I do not understand the wording here. AFAIK Sprint's length should be choosen in accordance to:  a) acceptable planning horizon  b) time needed to produce increment of perceivable value  c) deployment overhead in some environments (i.e. embedded systems)  d) perceivable risk  e) not exceeding 1 month timebox.  but the question ask that divide of work is not possible for a sprint shorter than two weeks and whether it could be a good reason.  My answer would be No, because I'd try harder to decompose the PBI, but is it a right answer? What's your opinion on this?",5329
"10:30 pm November 5, 2012                    Agree with your answer ""No"". Size of PBI shouldn't be a factor for choosing Sprint more than 2 weeks durations.  Within software development I have never found it very difficult to decompose PBI's to a size of a couple of days. So no reason to extend Sprints for that reason. PBI's of more than 2 weeks also are a high risk even for one month Sprints.  Reality in other industries might prove me wrong however ;-)          Log in or register to post comments",5329
"01:49 pm November 11, 2012                    Well, Scrum is about delivering potentially shippable Increments. So Sprint length is best chosen to serve that purpose. How long can a team work in the splendid isolation of a Sprint container without delivering something to the market, at least show something to stakeholders.  And the, with regards to PBI size, Scrum has no more rules than that one PBI should be do-able in one Sprint. For shorter Sprint that puts the max size lower, that's all. In general it is better that a team can do more PBIs in one Sprint.          Log in or register to post comments",5329
"08:43 am December 13, 2012                    If it really IS impossible to break one (or even most) of the PBIs down to a size that fits a 2 week sprint, then there really is no other choice than to choose longer sprint length.  I agree that it is quite uncommen that this is the case, but I can easily imagine situations where this IS the case, for instance:  The company has QA policies that require this and that to be performed on any piece of code being released, or  The product has certain facets, that require expert knowledge to test, or  The software needs to be tested against ""live"" integration points that are not readily available  Each of the above points would warrant an extension of the Definition of Done for the team, and each of them might make it impossible to get even a single PBI done in a 2 week sprint.  I know the above points should be addressed, for instance as impediments, but solving them might be something that takes a logn time, depending on the company.  My point is: It may not be, that too much functionality has been lumped into one PBI, it may just as well be the Definition of Done, that prevents a sprint of 2 weeks or less.  Just my 5 cents :-)  Kindest regards, Mikkel          Log in or register to post comments",5329
Log in to reply,5329
Messages,5372
"12:55 pm December 9, 2012                             Hey folks,  If you get a chance to take the PSF or PSD classes from @ElegantCoder or @RHundhausen, by all means do so. These guys are awesome instructors. Loved both courses and really cemented my understanding of scrum. Thanks also to all the other participants in the class. What great discussions!",5372
"08:31 am December 13, 2012                    I fully agree!  It was like being taught to play the guitar by Mark Knopfler :-)          Log in or register to post comments",5372
Log in to reply,5372
Messages,5371
"12:47 pm December 9, 2012                             Hey there,  I just passed the PSM I assessment (again), but I incorrectly answered several questions. Is there any chance that I could find out which, so that I can adapt?  Cheers,  Jack Cantwell",5371
"01:28 am December 10, 2012                    Hi Jack,   normally you should see your right and wrong answers on the final page of the assessment (at least, if there were wrong answers). Unfortunately this information does not help you until the next time you take the assessment.   Best regards,   Peter          Log in or register to post comments",5371
"01:37 am December 10, 2012                    Hm...I don't plan to take it again, since I passed. I definitely don't recall seeing the right/wrong answers. That occurred with the Open Assessment, but not in the official one. Would really like to know what I'm misunderstanding from Scrum.org's perspective.  Cheers          Log in or register to post comments",5371
"02:12 am December 10, 2012                    Maybe one of the scrum.org officials will contact you and provide you with the information.   Good luck!  Peter          Log in or register to post comments",5371
"02:25 am December 10, 2012                    UNSUBSCRIBE    _____    Van: ScrumForum@scrum.org [mailto:ScrumForum@scrum.org]   Verzonden: maandag 10 december 2012 7:38  Aan: richard.j.maat@gmail.com  Onderwerp: RE: In keeping with inspection, transparency and adaptation...  [00000231:00000800]           Log in or register to post comments",5371
"08:29 am December 13, 2012                    Hi Jack,  I experienced the same as you did: No indication of what answers were right or wrong.  Kindest regards,  Mikkel          Log in or register to post comments",5371
Log in to reply,5371
Messages,5364
"08:54 am November 30, 2012                             Hi everybody,   I would like to discuss one thing from the PSD material, where the use of TDD is being said to lead to a better performance of the overall development process.   I am a bit sceptical about that because I think that it *might* speed up development, but not necessarily will. I think that TDD is first and most importantly about quality. I want to have the security of being able to refactor when necessary, I want to have my different types of tests for their specific purpose, but I am not really thinking about development performance.   What is your opinion and practical experience?   Thanks and best regards,   Peter",5364
"05:32 am December 2, 2012                    Hi Peter, you raised a couple of very interesting points here.  I will try to address them separately.    >> I think that it *might* speed up development, but not necessarily will.   I agree. One reason for that might be that TDD is a way of working which doesn't fit every project/human.   In my experience it takes quite a long time and practice to fully grasp the idea of TDD. I started writing ""tests after"" 8 years ago, then 2 years later I wrote some tests first after being introduced to TDD, but still wouldn't call myself a TDD practitioner at that time. I started reading more books on OOP and TDD and practicing a lot and I think I get the idea now of driving/designing a system outside in (Some call it ATDD).  At this stage I would certainly say that TDD speeds up development.    >> I think that TDD is first and most importantly about quality.   I agree. Additionally it gives you more focus on what you are doing, defect reduction (quality again?) and faster feature time to market (cycle time).  I would even say: TDD + Scrum = effectiveness to the max    >> I want to have the security of being able to refactor when necessary,   Definetely a benefit of TDD.    >> I want to have my different types of tests for their specific purpose,     >> but I am not really thinking about development performance.   Isn't Improving Quality (which TDD gives you) the only way to speed up your development?  BTW: I think that is the idea behind the Software Craftmanship movement:   ""Only Quality lets you go faster""  http://manifesto.softwarecraftsmanship.org/           Log in or register to post comments",5364
"03:50 pm December 4, 2012                    Hi Peter,   thanks for your valuable input and the interesting points that you made.   > I agree. One reason for that might be that TDD is a way of working which doesn't fit every project/human.  In my experience it takes quite a long time and practice to fully grasp the idea of TDD.   That is my impression also. In every team that I supported (using Scrum or not) that wanted to do come more to a TDD style of development it took quite some time to get the approach into the developer's bones.  > I would even say: TDD + Scrum = effectiveness to the max  This is a very nice way of putting it - especially since it emphasizes that you can do either one without the other, but combined you gain the most of it.   > Isn't Improving Quality (which TDD gives you) the only way to speed up your development?  > BTW: I think that is the idea behind the Software Craftmanship movement:  ""Only Quality lets you go faster""  http://manifesto.softwarecraftsmanship.org/   Thanks a lot for the last statements. When watched from that angle, the hypothesis that TDD speeds up development is very straightforward.   To summarize it for me: first you have to learn how it works (learn to walk), then you become better and better (run faster and faster, even when you fall sometimes) until you really speed up and benefit from the exercise.   Any other opinions are still very welcome and appreciated. :)  Best regards,   Peter          Log in or register to post comments",5364
"10:55 am December 5, 2012                    The thing to consider here is the time taken to get a feature to an acceptable state (in scrum terms a part of a potentially shippable product).  If we take the myopic view that the development time is simply the raw time the coder spends banging keys until the feature is first visible then of course TDD doesnt on average help, but this is not consistent with a meaningful Definition of Done.    TDD helps us to ensure the quality and reduces the ""rework"", ""refactoring"" or ""bugfixing"" effort in actually reaching a usable product.  In this sense in does speed up the development time.  It also makes it much easier to be confident that the DoD is reached.          Log in or register to post comments",5364
"01:32 am December 10, 2012                    Hi James,   thanks for your thoughts on this topic. I agree with you if we are talking about a good team that really understands TDD and is experienced with it. But I was a bit sceptical about the generality of the statement:   TDD -> faster development  This causality is a bit dangerous in my opinion since it implies some kind of silver bullet (and we all know that Scrum is *not* a silver bullet, and I think the same goes for TDD).   Otherwise I agree with the statement, since I think that as an experienced TDD developer team, you will improve your quality and therefore become faster in development.   Best regards,   Peter          Log in or register to post comments",5364
"08:27 am December 13, 2012                    I'd just like to add one more angle to this topic.  If you consider ""The overall development process"" to include fixing bugs, then TDD really speeds up the process, because:  1. The released code will automatically contain fewer bugs, since (pretty much) all production code is covered by tests.  2. Locating the source of a bug in a codebase with a substantial test coverage is MUCH easier than without tests.  Just my 5 cents :-)  Kindest regards,  Mikkel          Log in or register to post comments",5364
Log in to reply,5364
Messages,5375
"08:51 pm December 10, 2012                             Dear all,  I read Scrum Guide to investigate scrum from a few of software development methodology concerns. But What made me confused is that, If I suppose Scrum to be a methodology, then why is that there are a dozen of topics that are not covered in scrum whilst software development methodologies are supposed to give a remedy for them?!  For example software testing is very vague in Scrum Guide, this guide only points out that at the end of each iteration product must be tested. But this never suggests any notion, tool or method to do so.  - for this specific purpose, is that the case that scrum doesn't got any test concept?  - and in addition, is scrum guide the only official document to be referenced to? I mean whenever people are talking about scrum, can we associate them with scrum guide or it has broader meaning?",5375
"02:20 am December 11, 2012                    Omid,  The ""Scrum Guide"" is the official document that defines Scrum and there are no specific guidelines for testing or any other engineering practices for that matter. However, in the section Definition of Done you will find the following:  ""... Each Increment is additive to all prior Increments and thoroughly tested, ensuring that all Increments work together""  Exactly how you define ""thoroughly tested"" is up to the team and will vary. A team working with space shuttle software may have a different definition of ""thoroughly tested"" than a team writing software for internal use.   Creating a potentially shippable product increment after each sprint is a challenge and it will make the need for good engineering practices highly visible. Exactly what techniques to use is up to the team.          Log in or register to post comments",5375
"12:17 pm December 11, 2012                    +1 to what Fredrik said, and I would only add that Scrum is not a methodology.  It is a framework within which multiple techniques, practices, and methodologies can be used.  The Scrum Guide, the official definition of Scrum, is simply a framework, with intentional gaps or variation points to let the implementer decide what is best for their team/product context.           Log in or register to post comments",5375
"12:51 pm December 11, 2012                    UNSUBSCRIBE  From: ScrumForum@scrum.org [mailto:ScrumForum@scrum.org]   Sent: dinsdag 11 december 2012 6:17  To: annemoni@ziggo.nl  Subject: RE: Scrum got specific ways for testing software? [00000235:00000807]           Log in or register to post comments",5375
"07:23 pm December 11, 2012                    Hi Omid,  As Charles has said, Scrum is not a methodology hence it is not prescriptive. You should find the missing pieces and find what is important for your software yourself and plug it in the Scrum framework.          Log in or register to post comments",5375
"03:51 am December 12, 2012                    +1 for Fredrik and Charles. The only thing I want to add to Charles is, that the last sentence gives me the feeling of having to decide for the team, what the should do as ""good engineering practices"", but for me it is the team, that should come up with those practices (with my help, for sure)  Br,          Log in or register to post comments",5375
"08:22 am December 12, 2012                    Philipp,  Is it really common for the team to drive this change? Especially if the team has not already adopted good practices before they try to adopt scrum. The SM should encourage the team to strive for technical excellence but I wonder how common it really is that this is driven by the team.          Log in or register to post comments",5375
"11:00 am December 12, 2012                    Thanks everyone for sharing your knowledge here.   Now I think I have a better understanding of what scrum is and how this can be helpful in transforming to agile processes, But still there are many questions to be answered.  Kind Regards  Omid Najaee          Log in or register to post comments",5375
"03:10 pm December 12, 2012                    Phillip, The only thing I want to add to Charles is, that the last sentence gives me the feeling of having to decide for the team, what the should do as ""good engineering practices"", but for me it is the team, that should come up with those practices  Good point, Phillip.  When I said ""Scrum implementer,"" I was referring to the Scrum team as implementers, not any one person.  In the specific case of testing, I would say that it's really up to the Dev Team as to how to handle it.  Fredrick but I wonder how common it really is that this is driven by the team.  This one is a bit tricky.  The Scrum team, if they are held accountable for quality and bugs escaping into production, will often drive better technical and testing practices.  It can also come from outside of the team as the organization realizes the lost business value due to low quality practices.  In the end, though, the org needs to give the Scrum team enough room to self organize and specify their own release dates and such so that they can take the time to meet and/or improve their Definition of Done.  If the org continues to hammer at the team for missing deadlines, then quality is usually the first thing to get sacrificed.  In fairness to the org, the team needs to get better at proposing realistic release dates, too.  OTOH, if the org doesn't listen to the team, then the (brow)""beatings will continue until morale improves.""           Log in or register to post comments",5375
Log in to reply,5375
Messages,5369
"09:02 am December 6, 2012                             Hello all!  This is my first post here ... and I would really like to get some opinions on this: What do you think about task estimation in ideal hours?       From my point of view, one task can be 2 ideal hours for 1 dev but lets say 4 ideal hours for a less experienced dev in the same team. How should they agree on a common estimation for the task?       And if they finally agree on the 2 ideal hours for the task (thinking probably that the experienced dev will implement it) but then the task has to be implemented by the less experienced dev (lets say the first one gets ill or there is some other reason he can not do it), wouldn't this estimation be a bit stresfull for the less experienced? Should he reestimate it to 4 hours?       I know that estimations are ""estimations"" and not a commitment that the task will really get done in 2 hours, but I've seen that there is still some pressure felt by the people having to implement the task ...   Would it be better to not estimate tasks at all? I think this might be also different from team to team, but .... what's your opinions?",5369
"02:54 pm December 6, 2012                    Ileana,  Have you asked the team?  If so, what do they want to do?  What is your role on the team?  Task estimation in ideal hours is a valid way to create a Sprint Backlog.  It is certainly not the only way to create a Sprint Backlog.  Some teams don't estimate tasks, and some teams don't even create tasks at all.  I won't go into the umpteen other ways to do it other than to say this:  Generally speaking, using ideal hours is often useful for teams/orgs relatively new to Scrum who have a past using hours to estimate tasks.  It also has downsides if the team is pressured in any way on their tasks, and if the team has too much waterfall type behavior.  As to your ""less experienced vs. more experienced,""... this is an interesting one.  I usually just tell teams to estimate all things for a mythical ""average developer"" on the team at Sprint Planning.  Then, I also remind the team that they are free to re-estimate tasks at any time, so maybe when the person who picks it up ""signs up"" for it in the sprint.  That person is now free to re-estimate it as soon as they pick it up.  This can create some challenges for how you construct your Sprint Progress Monitor(burndown), but it's usually fairly easy to handle.  Some considerations, in addition to the questions above, that might indicate different advice would be...  Has the team attended Scrum training?  If so, how recently?  How new is the team to Scrum?  How do they handle this challenge now?  Is your team meeting their Sprint forecasts?  Does your team do the typical sprint planning where most of the sprint is planned out in Sprint planning?  How often does your team currently re-estimate tasks?      *  For instance, some teams re-estimate every day(I call this the ""Daily Task Re-estimation"" pattern), while others make sure all of their tasks are small and they generally only re-estimate if there is a large change in estimates(I call this the ""Micro-Tasks"" pattern).    Anyway, hope this helps!           Log in or register to post comments",5369
"05:14 pm December 6, 2012                    Hi Lleana  Do your tasks stand by themselves, or are they tasks that are identified during sprint planning in order to satisfy user stories?  Some teams estimate user stories but not the tasks. Others estimate the tasks but not the stories. Some use points and others hours. Others do a mix. In some cases they do neither, and only track the actuals!  You don't mention whether or not stakeholders outside the team expect estimates. Some, such as customers or budget holders, often want to know *when* features will be delivered and how much they are likely to cost. For a project with an emergent scope, getting the team to estimate the work on the backlog provides a way to do this.  However, there is another advantage to estimation - it gets the team talking. The issues you mention (different team members having different views) is exactly the sort of debate you want to promote so that requirements can be understood. Techniques like planning poker can assist this further.  Often though, a team may prefer to estimate using ""relative sizing"" as opposed to estimates based on time. It can be more realistic to compare tasks (or user stories) against each other in terms of their complexity rather than attempting to say how long each will take. Also, time based estimates tend to become less reliable the higher they go, and they can lead certain stakeholders to expect every hour to be accounted for. But whatever you choose, don't forget that a team has a duty to regularly update their estimates throughout a sprint, and to renegotiate the scope with the product owner if it all starts to look too much.          Log in or register to post comments",5369
"01:41 am December 7, 2012                    However, there is another advantage to estimation - it gets the tea Abolutely agree with you. Often it's the most important benefit of the estimating.  Only mature Scrum teams (usually hyper-productive ones) would be able to create so small stories with so similar size that it would not be necessary to go on with breaking them further into the tasks.           Log in or register to post comments",5369
"06:38 am December 7, 2012                    Illya,  Only mature Scrum teams (usually hyper-productive ones) would be able to create so small stories with so similar size that it would not be necessary to go on with breaking them further into the tasks.  I tend to agree.  I have documented what I call the ""Micro-stories"" pattern further here:  http://www.scrumcrazy.com/User+Story+Pattern+-+Micro+Stories           Log in or register to post comments",5369
"06:45 am December 7, 2012                    Hi again ... and lots of thanks for your comments.  During the sprint planning meeting we are estimating User stories in story points using planning poker and this works very well (we have debates to clarify lots of stuff) .. .then we have the task splitting which also works well. We don't estimate tasks. We don't need to and until now we've been just fine with that .. .I don't see why we would change that.   The question related to the ideal hours estimations was because of all the articles I've read about it. I really think that we (my team) don't need them and I was trying to figure out why other teams do and why this ideal hours stuff works for them. I have also talked to the team about it and they came with the idea that this estimations would make them feel stressed to be sticking to the estimation ... so, for us, there are no ideal hours estimations.           Log in or register to post comments",5369
"07:04 am December 7, 2012                    Ileana,  Your strategy is also a viable one, if it's working.  Does your team usually finish all the stories it plans for a Sprint?  Do you track the Sprint progress via a story point burndown?    In terms of the background about ideal hours -- up until about 2010, the Scrum Guide strongly suggested estimating tasks in ideal hours, but that guidance became more flexible gradually until 2011, the Scrum Guide only requires that a) there is a Sprint Backlog (some sort of plan for the sprint), and b) that the work remaining in a sprint is summed and monitored daily.  More on that Scrum Guide change here:  https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…           Log in or register to post comments",5369
"08:16 am December 7, 2012                    Hi Charles,  We are tracking the progress via story point burndown .... the velocity of the team became a stable one I would say  (of course there is not equal story points done during each sprint, but the differences are pretty small). We are trying to focus on finishing one user story before starting another one (whenever this is possible). I can't say we always finish everything we plan for a sprint .... but we're still learning.          Log in or register to post comments",5369
"11:06 am December 7, 2012                    Ileana,  We are trying to focus on finishing one user story before starting another one (whenever this is possible) ^^ A very admirable pursuit!!  Swarming can be a wonderful practice!  It sounds like converting to ideal task hours would not serve your team well at this time.  The current technique seems to be working fine(assuming you're doing all the other good Scrummy things, of course), and the technique is very much in line with Scrum principles.  Congrats!  And best of luck with your team!           Log in or register to post comments",5369
"06:41 am December 10, 2012                    Yeah ... I think we are happy with no ideal task hours estimation.   Thanks Charles and very interesting stuff on scrumcrazy.com .  And thanks to everyone for your good comments!          Log in or register to post comments",5369
"11:49 am December 10, 2012                    Ileana,  As I look over my own posts, always looking to improve myself, it dawns upon me that I probably should have mentioned this from the Scrum Guide(section on Sprint Planning Part Two):  ""Work planned for the first days of the Sprint by the Development Team is decomposed to units of one day or  less by the end of this meeting.""  My guess is that your tasks are probably at or around that size, so no big deal.  I just wanted to mention it primarily because others may come later and read this thread.  Best of luck to you and your team, and please do not hesitate to come back!  The people on this forum truly enjoy helping others!          Log in or register to post comments",5369
Log in to reply,5369
Messages,5367
"10:22 am December 4, 2012                             My stream currently is responsible for a number of products that require different development disciplines (e.g. PHP, Java, Ruby).  I have the development resources in stream along with 1 x PO, 1 x SM, 1 x BA, 1 x UX, 1 x design, 3 x QA. In total there are 12 stream members excluding PO & SM (too many I know!).  I have been told that I can't split the stream as there are not enough resources to do that.  I am currently thinking of running daily stand-ups and sprint planning for each product consecutively so that team members can attend the ones for the products to which they are contributing. However, this is a bit onorous for the shared resources and gives me the challenge of keeping the 'one team' feeling. This might be addressed by holding a retrospective for all products.  Has anyone encountered this scenario before?  Does anyone have any words of wisdom regarding my thinking above or any suggestions of alternatives?",5367
"03:29 pm December 8, 2012                    Hi Kim  It's generally recognised that, in Scrum at least, the maximum practical team size is 9. A team of 12 people is uncomfortably large and would indicate a need to refactor into smaller teams. The Scrum Guide puts the minimum team size at 3, so (in theory at least) you could get as many as 4 new teams out of the one you already have.  Furthermore, Scrum only recognises 3 roles - the ScrumMaster, the Product Owner, and the Development Team. In Scrum you don't have separate QA testers, UX people, designers, BA's and coders. The Development Team is meant to be cross-functional and multi-skilled, and there aren't supposed to be any ""skill silos"" where people only do a particular job. Those silos are an invitation for team members to be waiting on each other instead of ""going to where the work is"" and getting the work done. In Agile terms skill silos are a type of waste, and one that needs to be optimised away by cross-training.  Now, that's all fine and good as far as Scrum theory goes. In practice though a great many...perhaps even most...organisations will merrily break these rules. In my experience it's very common (I would say normal) for a separate and distinct QA or tester role to be included in an Agile team. Separate BA's are also very common. Why? Because it is recognised across industry that Testing and Business Analysis are valid careers in their own right. All you have to do is to look at the jobs boards to confirm that. There are plenty of positions advertised for Testers and BA's, and for which some sort of ""agile experience"" is required. I'll leave you to work out how many of those organisations would *claim* to be following Scrum.  So the project you have described breaks Scrum rules, but if it is any consolation I certainly recognise the situation you are in. The question is, what can you do about it?  Breaking down those silos by cross-training all 12 people would be a huge challenge. Not only would it mean training QA experts to be developers, it would also require PHP developers to be Ruby programmers, vice-versa and contrariwise. It would be fantastic if you could get buy-in for all that, but the short to medium term hit would be huge, and the individuals concerned might not have the appetite to stray so far from their comfort zones.  But perhaps it would be possible to ""box clever"" and temper cross-skilling with some refactoring into 2 or 3 smaller development teams. Those development teams would then, in aggregate, comprise a Scrum of Scrums through which releases would be co-ordinated. The Product Owner and ScrumMaster would work across all development teams.  I'd try and keep the development teams focused on the technology area (1 for PHP, 1 for Java, 1 for Ruby). That would at least reduce the technical skill silos *within* each team. I'd think about having the QA, BA and UX experts assisting the PO so he or she can understand the product requirements and make credible decisions about it, including the acceptability of incremental releases.  This isn't ideal, because it means crafting a Definition of Done for each team that only takes an incremental release as far as deploying into a QA environment. There'd be a lot of work to do at a Scrum of Scrums level to manage the release train and to mitigate the risks around integration testing, and also to ensure that release feedback / lessons learned makes it to the relevant team for consideration.  I hope that the above is of at least some help to you. If not, I might refer you to the DSDM method which has a wider range of roles than Scrum, and supports larger team sizes. It's less operationally focused than Scrum but it could provide some initial process and role mappings. Whatever you decide, let me reassure you that your situation is by no means unusual, and that knowing how and when to compromise is half the battle in Agile transitioning.          Log in or register to post comments",5367
"08:00 am December 10, 2012                    Hi Ian,  Thank for the response.  As mentioned, at this point in time I'm unable to split the teams due to resource (it wouldn't just be the PO & SM that would be shared across stream, it would also be the BA, UX & design).  Splitting the team by development discipline is a good idea though and I'll bear that in mind for such a time as splitting is allowed.  As a development team we are well along the agile transition path. My main battle is with management outside of the development team and trying to keep them to agile principles.          Log in or register to post comments",5367
Log in to reply,5367
Messages,5304
"03:04 pm July 19, 2012                             Common Question:  How do we handle the situation in which members of the Development Team are not fully allocated to the work of the Sprint?",5304
"02:28 am July 21, 2012                    Scrum does not forbid this; but obviously it will cost you productivity and probably satisfaction of your developers.  Scrum is there to make things transparent. So the first thing to do is to make the impediment transparent: If you have a chance, compare your team velocity when allocating people full-time to your velocity when people are on it only part-time. You will probably notice that for each additional project the people are working on at the same time you will lose about 20% in productivity.  If you do not have a chance to try this, try to quantify your impediment in $ (because that is the language management understands). Try to measure the time your team is losing due to task switching - for example by asking your developers to give an estimate on that. Once you have some numbers, make the issue transparent to your management.  As to the situation itself: There is no ""golden rule"". Every team is different as is every project. So gather your team and let them figure out what to do about the situation. They most likely will come up with several ideas, some of which might be quite creative. Leave the decision with your team.          Log in or register to post comments",5304
"11:26 pm August 10, 2012                    As soon as daily standup has finished, spend a few more moments on inspect and adapt session in front of Scrum board. Ask Socratic questions on how things were finished and how the team view this. This information leveling will reach everyone including the part time team member. There are few things that emerge from daily standup including impediment list. As you expose everything in transparency, it is up to the part time team member to inspect and adapt, also to act in interest. There is a lot unspoken here and it depends on your context.  There's probably a reason why that team member is part time. Watch out! I smell management interference.  However, it is possible resource is scarce and this team member is shared (as agreed across multiple teams) across integration team and specialists needs.          Log in or register to post comments",5304
"09:59 am December 5, 2012                    There are different reasons for having partially allocated resources, and these each have different problems and/or solutions.  Some projects are not bit enough to have a full scrum team, there are two options, use partially allocated resources or dont use scrum.  or maybe reshape the project so that it can fill a whole team but this is often not possible.  Some resources bring specialist skills and are not needed full time on a project.  For example a security specialist or systems administrator might be required for only a few hours a week.  These can be treated as part time members or as an external resource the project uses.  Neither is perfect.  Some people actually work part time, perhaps because they have children.  And Im sure other reasons...          Log in or register to post comments",5304
"05:34 pm December 6, 2012                    If the team members are all split across the same projects, then you can combine all work into one backlog. This situation often happens with BAU maintenance and support, where there just isn't enough work to justify having a team dedicated to one application area.  If it is more scattered than that, with some team members being part time and on miscellaneous projects, the first thing to do is to make it transparent and see if there's a problem or not. Non-dedicated resources are rarely split evenly, their allocation tends to be on-demand and very lumpy, which creates an uneven burn. There is also the headache of knowing which project to bill for...the budget holders are likely to start tracking every penny if they know a developer isn't full time on ""their"" project.  Also, as Dominik says, there is task switching to be taken into account. As a rough guide, based on my experience, it takes between 30 minutes and an hour for a developer to switch from one task to another and it is usually not viable to split them between more than two projects. A developer split three ways is rarely productive at all.          Log in or register to post comments",5304
Log in to reply,5304
Messages,5365
"09:44 am November 30, 2012                             Hi all,  An interesting thing came up on our last retrospective that I'd like your thoughts on.   Our DoD for a story says that functionality needs to be documented in the end-user documentation. We're currently working on an epic that contains multiple stories and the epic spans several sprints. This epic will go into the next release. The developers that write documentation says it's unpractical/waste of time to update the documentation after each story because it will have to be rewritten later as new functionality is added. Instead they want to add a story like ""write documentation for feature X"" to the backlog. The team acknowledges that this conflicts with our DoD so they asked for advice on how to handle this situation. Observe that for ""normal"" stories that are not part of epics the team still want to have updated docs as part of DoD and they only want to defer documentation for epics.  What options do you see?  Modify the DoD like ""update documentation if it's a story, defer documentation for epics""  Remove documentation altogether from the DoD  Update documentation although it perceived as waste  Have a nice weekend all!  /Fredrik",5365
"11:27 am November 30, 2012                    Fredrik,  I'm assuming your epic spans several sprints.  In Scrum, teams deliver a potentially releasable increment each sprint.  What happens if, your team has completed 2 stories of the 5 story epic,and your PO decides to release the sprint increment?          Log in or register to post comments",5365
"12:38 pm November 30, 2012                    Why would the documentation need to be rewritten?  Smells as if the  functionality is not being written incrementally.  If it were, seems the  documentation would be incremental as well.  Let's say it does need to change with each incremental addition (it will),  wouldn't building it once make the next time easier, better?  What if they  find the next increment is not needed (as Charles says) and their good to  ship?  They can't, because they have undone documentation.  They put Docs in their DoD for a reason... they should stick to it or drop  it.  On Fri, Nov 30, 2012 at 9:44 AM, <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5365
"12:54 pm November 30, 2012                    Excellent points, Ryan.    One other thought occurred to me, as a former developer.  I never really liked writing documentation, so I'd much rather bite it off in small chunks.  Also, isn't the same argument true for code?  I mean:  1) Don't we have to rewrite/refactor code as the design evolves?  I mean, the alternative is to try to get all of the design ""right"" up front so we (theoretically -- though though the theory never proves true)never have to re-write any code?  If you're truly working incrementally and with decent design, very little will need to be 'updated'  2) In the same way that tests are validation for correct system behavior, isn't the end user docs also a sort of validation that is valuable?  And one more thought(I know, I said I only had one, and clearly had more)... The PO must also agree with the DoD -- does the PO like the idea of having incomplete documentation at the end of the sprint?          Log in or register to post comments",5365
"12:55 pm November 30, 2012                    Hi Frederik  It sounds as though the user stories comprising the epic might not be well formed. They should be independent (Google for the INVEST user story criteria if you haven't already done so). That means the user stories should be independent enough to support the Definition of Done, including any requisite documentation.  Also, as Charles says, each end-of-sprint increment should be potentially shippable.  Frankly though, I smell a rat even at this distance. If the developers are correct and documentation would have to be extensively reworked in each sprint, what does that tell you about the stability of the code they are generating? Won't that have to be extensively reworked in each sprint as well, including code comments and unit tests? Otherwise, why would the documentation for it be so inherently unstable?  If the documentation changes between sprints are truly considerable, what are the implications of that for architectural stability?           Log in or register to post comments",5365
"01:49 pm November 30, 2012                    ""tell you about the stability of the code they are generating""  I'd say it tells us they are in the realm of complexity.  As such, getting  to a point of being fully done in the context of their process will help  get them closer to a known world.  Scrum at it's best!  With this new  knowledge they can provide an updated forecast and use their definition of  done (and brains) to make their past creations sustainable through  refactoring in the context of delivering value.  Win Win!  On Fri, Nov 30, 2012 at 12:55 PM, <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5365
"04:47 pm December 2, 2012                    I'll try to answer all questions and comments in one post:  the epic spans several sprints and the release are a couple of months away, so for this reason the PO would be OK with not having a fully completed end user documentation after each sprint. There's a good split of functionality in the epic so the individual stories add value by themselves but the PO feels that to release we still need 2 more months of stories before release. We've received feedback from end users that confirms this  as well. So yes, the functionality is growing in small steps and could basically be released after any sprint but the team thinks rewriting the documentation is waste as new screenshots would need to be added etc after each story etc.          Log in or register to post comments",5365
Log in to reply,5365
Messages,5363
"04:00 am November 29, 2012                             Hello,  I have done a mistake when getting a password for the PSM1,   I have provided wrong email (meine@macadamian.com instead of the correct one - meline@macadamian.com).   Will you, please, help me to correct that information, so that I can get the password ?  I can contact you and provide all info about the order.  Looking forward for your reply.  Best Regards,  Meline",5363
"04:06 am November 29, 2012                    sorry, in title I should wrote - provided wrong email...          Log in or register to post comments",5363
"02:29 pm November 29, 2012                    I have the password now, the support re-sent it to my correct email.Thank you soooooooo much! :)          Log in or register to post comments",5363
Log in to reply,5363
Messages,5359
"10:06 am November 21, 2012                             Any best practices out there on how to use Scrum in an SAP geenfield implementation?",5359
"01:26 pm November 22, 2012                    Hi Louk,  It is hard to use Scrum in SAP implementation since the SAP Methodology is tightly coupled to the implementation process and it is very Waterfall. What you can do is to use Scrum on every phase and deliver incremental product which SAP Methodology ask for. On the first phase you might be only delivering data migration and documentation. You might not deliver a working software until the implementation phase but this is the best you can do.          Log in or register to post comments",5359
"10:35 am November 29, 2012                    SAP itself uses scrum with agile engineering techniques like TDD even in big ABAP Products. Customers of SAP too.          Log in or register to post comments",5359
"12:41 pm November 29, 2012                    SCRUM has been adopted by many organizations today to developing/implement complex software products. Although many can answer this question, personally i feel it is very effective because you can be creative with it.  As a scrum master your role is to foster the adoption of Scrum in your ogranisation. I would explore options of Component or feature based teams. Keep your team cross-functional and implement a process that will help for your team/organization.  My 2 cents.          Log in or register to post comments",5359
Log in to reply,5359
Messages,5362
"11:48 am November 28, 2012                             Hi all  There seem to be some differences between the latest Scrum Guide (Oct 2011) and the latest Scrum Primer  (version 2). These differences may cause confusion and annoyance, especially given that the subject matter has found its way into certification exams.  Example: The Scrum Guide says that only a Product Owner has the authority to cancel a Sprint, but the Scrum Primer  says the Product owner or the Team can cancel it. Even more confusingly, Ken Schwaber says in ""Agile Project Management with Scrum"" (2004), Appendix A, that the ScrumMaster can abnormally terminate a Sprint. This question appears in the Professional ScrumMaster self-assessment.  Example: The Scrum Guide says that the recommended Development Team size is 6 plus or minus 3, while the Scrum Primer puts it at 7 plus or minus 2. Again, this is a question that appears in the  Professional ScrumMaster self-assessment.  Example: The Scrum Guide says that the Product Backlog is an ordered list of everything needed, including ""all features, functions, requirements, enhancements, and fixes"". But the Scrum Primer says that it might ""possibly"" include known defects, ""if there are only a few problems""...otherwise they are usually handled by ""a separate defect tracking system"".  Do these differences represent a growing divergence in recommended practice between Scrum.org and the Scrum Alliance, or am I reading too much into the differences I see? I have the distinct impression that the Primer is more a product of the Alliance while the Guide is more a product of scrum.org. I'd welcome being corrected on that point.  Anyway, if anyone spots any other dissimilarities in this core material, please could they be posted here? I expect there will be others, and as I have pointed out, they might cause people to stumble in certification exams.",5362
"01:37 pm November 28, 2012                    >  > I have the distinct impression that the Primer is more a product of the  > Alliance while the Guide is more a product of scrum.org   Spot on.  On Wed, Nov 28, 2012 at 11:48 AM, <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5362
"02:23 pm November 28, 2012                    (Disclaimer -- I did a quick review of the 2.0 SP(Scrum Primer), but I'm familiar with previous versions)  At this point in the deviation between the two docs, I think it's very difficult and time consuming to do apples to apples comparisons.  The differences between ""SA Scrum"" and ""Scrum.org Scrum"" are also beginning to diverge in significant ways.  AFAIK, the SP is not an official part of the SA curriculum.  The one I found on the SA web site is version 1.2.  Of course, those of us affiliated with Scrum.org (I'm a Professional Scrum Trainer certified by Scrum.org) believe very strongly that the Scrum Guide is the official definition of Scrum.  I also happen to be believe it is the most advanced definition, as several updates and improvements/advancedments have occurred in recent years.           Log in or register to post comments",5362
"03:14 pm November 28, 2012                    > Spot on.  Oh dear, I was afraid you were going to say that.          Log in or register to post comments",5362
"03:19 pm November 28, 2012                      > I have the distinct impression that the Primer is more a product of the    > Alliance  Exactly. And even more - Prime is one of recommended sources for CSP preparation. But I agree it's not an official Scrum Alliance definition. Alliance has different strategy and vision - each CST has own Scrum which he/she brings to the official training class.  I have recently talked to one of the CST (Sergey Dmitriev) and he emphasized that point of view.  Scrum.org trainers (and Bradly can correct me if I'm wrong) can only teach the Ken's Scrum definition.  The good news is that many of the CSTs consider Scrum Guide to be an official version.  To prove that you can find several articles on ScrumAlliance with links to the Guide.  For example - http://scrumalliance.org/articles/367-its-ordered--not-prioritized  Next, have you read ""Essential Scrum"" written by  Kenneth (by the way, one of the best books I have ever read)?  Through the book you see the endless links to the Scrum Guide.   Maybe it's my own point of view, but the Scrum Guide has already become an official definition of the Scrum de facto.           Log in or register to post comments",5362
"03:41 pm November 28, 2012                    Hm... I have just noticed that Scrum Prime is owned by Scrum Foundation headed by Jeff Sutherland.  I thought Ken and Jeff are both the authors of the Scrum Guide.   The Scrum Foundation (formerly Scrum Training Institute) is the premier global provider of certified Scrum training and consulting. Founded by Jeff Sutherland, the co-creator of Scrum, and leading international Agile experts Gabrielle Benefield, Pete Deemer and Jens Scrum Foundation provides a complete solution for companies seeking high-impact results from Scrum and Agile development.   Therefore, it's not owned by ScrumAlliance.  Would be very helpful to hear what Ken would say about that.          Log in or register to post comments",5362
"07:37 pm November 28, 2012                    Prime is one of recommended sources for CSP preparation.  I think you meant: *The Scrum Primer* is one of recommended sources for CSP preparation.  Yes, and No.  The 2010 version of the SP is a recommended resource for the CSP prep.  Further, the current CSP examination is going away very soon, according to the Scrum Alliance -- there will supposedly will be a new cert program based on... you guessed it.... sitting through a class.           Log in or register to post comments",5362
"10:14 am November 29, 2012                    Although informative, I find the responses to this thread somewhat disturbing.  Ian’s question is more than valid, however, the tread moves quickly from the original inquiry about some differences, to who owns the official version of Scrum.  In my option, the more we as a community move towards “Donkeys and Elephants” when it comes to Scrum, the farther Scrum moves from an agile framework to a more rigid one.  We should be careful about how prescriptive we are as a training community in some areas.  Take for example the recommended team sizes.  Let’s re-ask ourselves: “What really determines a products proper team size (and the product should be considered when deciding this)?”  Several factors come to mind immediately:                 1.	Consensus in a Timely Manner:  We have basic general need to gain consensus, in a timely manner, on a regular basis within Scrum teams.  It’s been my experience over the last 5 years using Scrum (both properly and improperly) than any group with varying skillsets and subject matter expertise larger than nine makes gain consensus in a timely manner nearly impossible.  This is true for Scrum teams, stakeholder groups, groups of PO’s working on complex integration projects, and any other gathered group.  We have service groups, Enterprise Help Desk, Tier II Support, Release Management, and others who use Scrum to manage their work and perform their duties.  In these cases, the teams have been able to move forward quickly with a larger group since the members on the team are all of like background, skillset, and SME.  Again the focus is not just consensus, but consensus in a timely manner…remember we are time-boxed and need to deliver what we promise on-time.  Our most “productive” groups have been 5-7 people and no more...why?  They consistently provide more value to their customers on a regular basis with consistently high quality than teams which are larger.                 2.	The Team’s Skillsets:  Different products are going to require different skillsets.  Yes, utopian Scrum has every team member owning all the skillsets needed to do every task on the backlog themselves.  Ok, how many of you really live in this world today in your companies?  It’s something we all work for of course, but it’s like reaching infinity, or the speed of light, or the perfect golf game, you can always get a little closer to the goal, so “what is good enough”?  Team skillsets should be considered when determining proper team size for a product.                  3.	The Product: Depending on where a product is in its own lifecycle, and what the company/customer requests of the PO, different skill sets may or may not be necessary at different points in time.  Maintaining a consistent, focused team on the product is always the best way for function, but some products may require a specialist’s assistance for several or many sprints until either the products team is well-enough versed on what to do moving forward, or the specific requests needs are met, and further maintenance of the new functionality can be handled by the now more experienced original team.  Moreover, some of our Scrum Teams “products” are the services that they provide to the organization.  These teams have a narrower focus on what is needed to deliver a high quality service and have shown to not be affected as much by team size as development teams are.   So I believe just talking about the numbers without getting in deeper about what they represent is prescription without diagnosis and doesn’t carry much value on its own.  THIS is my concern with what Ian brings forward in this thread.  How do the two main bodies that exist today truly assess someone’s knowledge about some of these areas while keeping true to the essence of what we are all trying to achieve with this framework in the first place?  I think what is out there is a start, but we are nowhere near the perfect golf game yet…           Log in or register to post comments",5362
Log in to reply,5362
Messages,5334
"10:56 am September 29, 2012                             Hi All ,  I want to prepare for PSM 1 certification , I am very new to scrum . I would like to study from my own and go for the exam . Could you please share me the documents and any exam guide if available ?  Regards  Debajyoti",5334
"03:44 pm September 29, 2012                    Hi Debajyoti,  You said you are very new to Scrum, are you in a Scrum team already?          Log in or register to post comments",5334
"03:03 am September 30, 2012                    Hi Debajyoti,  You can find some information at http://scrumorakel.de/blog/index.php?/archives/30-How-to-prepare-for-th…  However, a certificate does not make you a good Scrum Master (or anything else). I strongly recommend you to live Scrum instead of just studying it. I assure you that living it is far more satisfactory than a sheet of paper on the wall can ever be.  Best          Log in or register to post comments",5334
"01:35 pm October 10, 2012                    Read as many books on it as you can, but study, study, study the Scrum Guide and take the open assessment multiple times.  Also you can take some prep tests on http://www.testtakeronline.com/welcome.htm          Log in or register to post comments",5334
"10:00 am November 29, 2012                    @Cathy: would you recommend testtaker?          Log in or register to post comments",5334
Log in to reply,5334
Messages,5331
"09:26 pm September 25, 2012                             I completed the PSM 1 assessment last Tuesday and I still haven't received the certificate. Can you please look in to it.  Thanks",5331
"12:03 pm September 27, 2012                    Hi Jeyaprakash, thanks for reaching out to us. Your PSM I certification should be on its way to your account. Please let us know that you have received it!     Best regards,    Daniel          Log in or register to post comments",5331
"04:58 pm October 4, 2012                    Hello. I have had the same thing happen to me. I completed the PSM 1 assessement almost 2 weeks ago and still haven't got my certificate. Could you please look into this?  Thanks          Log in or register to post comments",5331
"04:21 pm October 5, 2012                    Hi Alexander,  Your certification is on the way.  Best,  Daniel          Log in or register to post comments",5331
"10:16 am October 7, 2012                    Hello Daniel,  I think my certificate should also be on the way. PSM1-Assessment is done on 25th of September. Can you check it, please.   Thanks!   Regards,  Walter          Log in or register to post comments",5331
"09:08 am October 8, 2012                    Hey.   I  have completed my PSM 1 assessement  and still haven't got my certificate. Could you please look into this?   Thanks          Log in or register to post comments",5331
"07:34 am October 9, 2012                    Dear Scrum.org-Team,  passed the psm I assessment on Tue 2nd Oct 2012 2:24am. Since you updated your list of cert-holders on Oct 5th allow me to ask why my name hasn't been entered? TIA          Log in or register to post comments",5331
"08:37 am October 13, 2012                    Same story for me, i took the PSM I assessment on September 23th, 2012, i am on the list of certification holders but did not yet receive the certificate. Could you please look into this?  Kind regards  Emile Felix          Log in or register to post comments",5331
"01:21 pm October 15, 2012                    I have no idea why this is, but maybe this will help.  For some reason I cannot explain, Scrum.org emails end up in my (Yahoo) Spam Box.  I have no idea why.  Anyway, in case it helps.          Log in or register to post comments",5331
"04:12 pm October 18, 2012                    Hello. How long should it take for the certificate to arrive? I still haven't received it, and now its been about two weeks again. Any idea what happened?   Thanks, Alex          Log in or register to post comments",5331
"10:05 am October 24, 2012                    Hello.  I did the exam yesterday and I know that the certificate takes 2 weeks to be sent.  Therefore, I´d like to know if there´s another kind of document I could use to prove that I´ve passed in the exam before I get the certificate.  Thanks.          Log in or register to post comments",5331
"11:14 am October 30, 2012                    Hello,   I passed PSM1 certification on Oct 17, did not receive my certificate yet. Could you please let me know as of when to expect it?  Thanks.          Log in or register to post comments",5331
"01:55 pm November 11, 2012                    Just for everyone's information, you can always send a mail to support@scrum.org for not receiving your certificate. I think that's faster than the forum.          Log in or register to post comments",5331
"01:03 pm November 23, 2012                    Hi,  I took the PSM I assessment on October 26th, 2012, I am on the list of certification holders but did not yet receive the certificate. Any idea what happened?   Thanks.          Log in or register to post comments",5331
"10:37 pm November 25, 2012                    UNSUBSCRIBE            Log in or register to post comments",5331
"04:28 am November 29, 2012                    Hi Daniel,  I have provided wrong email when ordering a PSM1 exam. Now I need some help to adjust that info. Will you, please, help me? My email address is meline@macadamian.com, and I can provide full info about the order if needed. I just don't know who should I write ? Please, please, help me.  Thanks in advance.          Log in or register to post comments",5331
Log in to reply,5331
Messages,5361
"07:04 pm November 26, 2012                             First time posting here: so please, go easy.... :)  I have an interesting situation. My understanding is that stories selected for the Sprint are ""gold"": only adjustable by the team, in conjunction with PO. Nobody but the team make changes to them (however the PO can abort the sprint if it no longer makes sense). Is this correct?  To give you (excess!) background, after about 4 years working with Scrum I've just attended a ""PSM I"" course together with my manager.  Normally he acts as the Scrum Master, and often the surrogate Product Owner, as our PO is young in the role and not overly engaged (read: easily influenced!). Currently he and the PO are overseas at a client, and I've stepped up into the role (which is something I've done before). He's about 8 hours behind me, so we have daily communication. The client is not exceedingly happy, and performance (speed) of the application has been an issue.   I ran the Sprint Planning, including backlog grooming, estimation etc. All seemed to go very well (its not the first time I've done this). About half way through the team came to me and said they needed more work, so we did a mini-planning session together, and selected more stories - really just the ""next steps"" of what they were already working on.  This morning I got an email from my manager saying that he had created items and put them directly into the current Sprint, to deal with the performance issues. I understand that this is important work, and that he's probably getting hammered by the client. However his actions seem to directly conflict with what I understand to be the sanctity of sprint backlog.  Its not up to him (or me!) to add to or remove work from the sprint without discussion with the team.  By all means, add them to the Product Backlog, and order them near the top, just don't divert the team from their current goal.  I wonder if I'm taking too hard a line here on the Scrum rules, or whether this is something I need to bring up now or when he's back. How would you handle it?  Thanks in advance,   Phil",5361
"08:02 pm November 26, 2012                    No worries, Phil, thanks for posting!  I've stepped up into the role (which is something I've done before)  Which role?  PO or SM?  Here is how I generally handle such things, and this is just one way to handle such things and stay in alignment with Scrum principles.  If it's considered more of a bug, then use this chart:  http://www.scrumcrazy.com/bugs  If it's more like a totally new requirement(performance requirements often are), then use this chart:  http://www.scrumcrazy.com/scope  Be careful hammering your manager with Scrum rules when you are the SM -- sometimes you have to decide between being ""right"" and being ""employed.""... and there is lots of room in between.  Maybe you just ask the manager if he would like for you to handle it the ""scrum way"" to make sure the full scrum team is fully informed and following scrum.    In general, no, I don't like the idea that *anyone* has put items into the current Sprint Backlog without consulting the development team.  OTOH, there may be emergencies where inserting emergency PBI's or bug fixes/production support is necessary, so the link to the charts I gave you above can give you some guidance there -- but both charts will tell you that the Dev Team and PO must be involved in the decision.  Did I answer your question?  Have any follow ups?  Do the charts help at all?  Charles           Log in or register to post comments",5361
"08:08 pm November 26, 2012                      Maybe you just ask the manager if he would like for you to handle it the ""scrum way"" to make sure the full scrum team is fully informed and following scrum.  should read:  Maybe you just ask the manager if he would like for you to handle it the ""scrum way"" to make sure the full scrum team is fully informed and following scrum.  By giving him the chance to say ""yes"" or ""no"", you may be avoiding a job safety problem for yourself.  Remember, you *are* a servant leader to the Scrum Team.  Sometimes the best you can do is make the impediment visible(transparency).     While I always advocate following the Scrum principles, I also advocate for people to consider whether they want to be ""right"" or ""employed,"" and anything that jeopardizes your job safety, IMO, should be avoided if you value your job/role.  Sometimes you can make impediments visible in a very respectful way -- and sometimes doing even that threatens your job safety -- it' s a judgement call for you.           Log in or register to post comments",5361
"08:44 pm November 26, 2012                    Thanks for the reply, Charles.   The role I often step into is that combined PO / SM role. Its not a fun place to be, and I really appreciated it when I've had a separate PO. Dividing conflicting interests into separate roles does make getting a clearer ordering easier...   I take your point about job security. There are a number of things that my manager and I don't see the same way, these being one of them. So far I believe I've kept it amicable enough, whilst pointing out what I disagree with. It is a difficult, fine line to draw.   The charts were very interesting, and helped a lot, thanks.  The PBIs he'd added to the sprint are mostly fairly small, so should be relatively easy to incorporate into the sprint.  There is one in particular that is ill defined, so I'll discuss it with the team at the standup, and my manager when he comes on line again.   It occurs to me that this is where Scrum becomes more ""framework"", and less ""process""; it needs to be rigid enough to helpful, but flexible enough to deal with the unknowns.   Phil           Log in or register to post comments",5361
"08:44 pm November 26, 2012                    Thanks for the reply, Charles.   The role I often step into is that combined PO / SM role. Its not a fun place to be, and I really appreciated it when I've had a separate PO. Dividing conflicting interests into separate roles does make getting a clearer ordering easier...   I take your point about job security. There are a number of things that my manager and I don't see the same way, these being one of them. So far I believe I've kept it amicable enough, whilst pointing out what I disagree with. It is a difficult, fine line to draw.   The charts were very interesting, and helped a lot, thanks.  The PBIs he'd added to the sprint are mostly fairly small, so should be relatively easy to incorporate into the sprint.  There is one in particular that is ill defined, so I'll discuss it with the team at the standup, and my manager when he comes on line again.   It occurs to me that this is where Scrum becomes more ""framework"", and less ""process""; it needs to be rigid enough to helpful, but flexible enough to deal with the unknowns.   Phil           Log in or register to post comments",5361
"02:08 pm November 27, 2012                    The role I often step into is that combined PO / SM role. I generally recommend against combining those roles, but I imagine you already know that.  :-)    It occurs to me that this is where Scrum becomes more ""framework"", and less ""process""; it needs to be rigid enough to helpful, but flexible enough to deal with the unknowns.  Yes, exactly, you're definitely getting the gist of things.  What I find the trickiest is handling ""real life problems"" that are not specifically addressed in the Scrum Guide, and yet trying to still stay in line with Scrum principles and rules.  It's not always easy -- which is why I created the charts -- again as *one way* to handle those situations.  Please don't take the charts as the ""only"" way or in any way an official part of Scrum.  (I tried to put enough disclaimers on the chart to make that clear!)          Log in or register to post comments",5361
"12:42 pm November 28, 2012                    > My understanding is that stories selected for the Sprint are ""gold"":  > only adjustable by the team, in conjunction with PO. Nobody but the  > team make changes to them (however the PO can abort the sprint  > if it no longer makes sense). Is this correct?  That is correct, the Sprint Backlog is adjustable by the PO in conjunction with the team. No-one else, not even the ScrumMaster, is authorised to make that adjustment. It is almost always accepted that the PO can abort the sprint, but there are differences of opinion on this which do surface in various guides and books.  > Currently he and the PO are overseas at a client, and I've stepped up  > into the role (which is something I've done before)  An SM can stand in for a PO during Sprint Zero (before a PO may have been assigned) in order do things like populate a first-cut of the Product Backlog. However it is irregular for an SM to stand in for a PO once a PO has been assigned. To do so breaks the rules of Scrum...an SM and PO can't be the same person. However, I'd say it is reasonable for an SM to *proxy* for a PO on an exceptional basis if the PO is indisposed.  > ...his actions seem to directly conflict with what I understand to be  > the sanctity of sprint backlog. Its not up to him (or me!) to add to or  > remove work from the sprint without discussion with the team. By  > all means, add them to the Product Backlog, and order them near  > the top, just don't divert the team from their current goal  You are absolutely right. My response to such behaviour would be to abort the sprint (since you were proxying for the PO in his absence, you have that authority). A softer option (still agile, but not strictly Scrum) is to treat the sprint as a trading space, and to say ""OK, if that new stuff is going in, what do you want taken out to make room for it?"". Work of equivalent story points is potentially tradeable. Of course, this requires mid-sprint replanning involving the team, the time for which must *also* be taken into account during the re-estimation exercise. And don't forget the revision of the Sprint Goal. This is an opportunity to teach an important lesson, which is that failing to respect a sprint boundary incurs cost.          Log in or register to post comments",5361
"01:23 pm November 28, 2012                    ""by the PO in conjunction with the team""  The team wholly owns the Sprint Backlog.  ""An SM can stand in for a PO during Sprint Zero""  What about this mythical Sprint Zero makes the roles of SM and PO  interchangeable and eliminates the conflict of interest intrinsic in their  objectives?  On Wed, Nov 28, 2012 at 12:42 PM, <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5361
"02:33 pm November 28, 2012                    The team wholly owns the Sprint Backlog. The PO can't change it unilaterally, he or she can only progress a desired change in conjunction with the team. The authority lies with them.  Interchangeability of SM and PO roles is qualified by Ken Schwaber in his ""Agile Project Mangement with Scrum"". He points out (Appendix A) that ""In the absence of either the Product Owner or the Product Backlog, the ScrumMaster is required to construct an adequate Product Backlog prior to the [Sprint Planning] meeting and to stand in for the Product Owner.""  I suppose he actually means *any* sprint planning meeting at any point in the project. However, due to the conflicts of interest between SM and PO roles, I'd constrain it a bit further to sprint zero (no matter how mythical it may be) and to exceptional circumstances (e.g. PO sick/abroad) if it credibly allows an associated impediment to be managed.          Log in or register to post comments",5361
"02:47 pm November 28, 2012                    Ryan, The team wholly owns the Sprint Backlog.   By ""the team"", did you mean ""the Dev Team""?  If so, then I'm in 100% agreement with you on that.    On Ian's comments regarding the PO adding stuff directly to the Sprint Backlog, and scope changing mid spring, I would be very careful about aborting the sprint.  Aborting these sprint is a very rare event, and in my view, should only be done if some extraordinary event happens like: a company re-org or buyout/merger that means most of the current sprint work is useless, a large shift in business direction that means most of the current sprint work is useless, any action that significantly changes the ""Sprint Goal"", etc.  I think some Scrum principles here to follow is this line from the Scrum Guide:  ""During the Sprint...""  ""...Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned...""  ""...No changes are made that would affect the Sprint Goal...""           Log in or register to post comments",5361
"03:11 pm November 28, 2012                    Hi Charles  Yes, aborting a sprint is (or should be) a very rare thing. As the Guide points out it can be traumatic for the team. Hence my outlining of a softer option. I believe that a strict application of scrum rules would involve cancelling the sprint, but I base that on the (possibly incorrect) assumption that the interference would indeed have made the Sprint Goal obsolete.  Re-reading my post, I'd like to make the following clarification. It is just as much of a learning opportunity for the *team* as it is for the manager who interfered with the Sprint Backlog. Just because a manager wants to make a change to the backlog, it doesn't follow that the team should swallow it. Instead they should refer the matter to the PO.          Log in or register to post comments",5361
Log in to reply,5361
Messages,5355
"11:07 am November 12, 2012                             I'd like to get a feel about how other scrum teams define the word 'commitment'.  When we 'commit' to a sprint, we define that as 'it will be done no matter what'.  If that means working extra hours the last few days of the sprint, then that is what we do.  In talking to others, it seems like this is a bit of an outdated philosophy.  The term 'forecast' is now being used?  Maybe using a velocity range from the previous sprints?  The problem I have with our current definition of 'commitment' is that a basic philosophy of Agile is that humans are not good at estimating.  If so, how can we 'commit' to an exact set of items to get done in a 2 week time frame for 7 people?    How do other scrum teams define 'commitment'?  What do you do if not everything gets done in the sprint?",5355
"11:29 am November 12, 2012                    You are getting to the heart of why this word was replaced in the Scrum Guide.  You can find some context to the change here (http://www.scrum.org/About/All-Articles/articleType/ArticleView/article…). What do you do if not everything gets done in the sprint? As soon as this situation becomes a possibility we make sure to inform those who care.  Particularly the Product Owner so we can discuss our options.    We might also explore the why this occurred during our Retrospective (or any time really).  This is particularly important if the current process and environment doesn't surface this information with an opportunity to make adjustments.  For instance, if it only became clear in the last few days of the sprint that something might not be fully Done, what experiment can we come up with to surface this information more readily.  It may be a simple gut check during the Daily Scrum or it may be a change to reduce serial task execution.    Either way, you are right on: we cannot avoid the Cone of Uncertainty even within the Sprint.  For that reason, we do not use the word commitment with all of it's baggage.          Log in or register to post comments",5355
"10:51 am November 13, 2012                    Thanks for the comments, Ryan.  I definitely agree that 1) as soon as we see that items may not be done in the sprint that we let the appropriate people know, and 2) discuss this in the retro to learn from it.           Log in or register to post comments",5355
"10:10 am November 14, 2012                    I agree with what Ryan said, and the only thing I would add is to watch out for carrying over lots of items.  Sometimes(often, but not always) consistently carrying over more than 2 PBI's is a smell of something else that is not working well. (Examples: siloing, requirements churn, waterfall baggage, over committing, etc)          Log in or register to post comments",5355
"12:00 pm November 14, 2012                    My guess is that our velocity will probably increase by going away from a hard commitment to a 'forecast'.  I think it is human nature to lower your estimate if you are required to do a hard commitment.  There is always that Cone Of Uncertainty in the back of your mind.          Log in or register to post comments",5355
"12:09 pm November 14, 2012                    Be careful not to equate higher velocity with more value delivered.  This  is an easy and common mistake.  ------------------------------  From: ScrumForum@scrum.org  Sent: 11/14/2012 11:59 AM  To: ryan@echelontouch.com  Subject: RE: Sprint Commitment                           [00000209:00000672]           Log in or register to post comments",5355
"01:12 pm November 28, 2012                    As Ryan Cromwell points out, you are getting to the heart of why this word was replaced in the Scrum Guide. It has been a controversial change because:  1) It raises serious questions about Commitment-Based Planning, how it can be done, and even if such techniques are appropriate at all. Alternatives such as Velocity Based planning are arguably less suitable for new teams when they haven't established a velocity yet.  2) It potentially makes the application of agile contracts harder. If a contractual view is taken of a Sprint (i.e. that a supplier will supply X within timebox Y) then reducing this to a forecast may result in perceived breaches of contract, or at least in increased risk from the POV of the customer. This is a hot topic and there is a fortune to be made by lawyers out of it.          Log in or register to post comments",5355
Log in to reply,5355
Messages,5357
"12:17 am November 15, 2012                             Hello all,  I am sharing one of the problems that I do not have a definite answer so far. We develop Cloud products and the components are rather complicated, i.e. there are multiple teams, each focuses on one functional area, e.g. for backend teams: on the hypervisor alone, on featured software that will be deployed into VM via some enablement, etc., then, there are also API and UI teams (which can be merged).  As far as I understand Scrum,  a Story has to be completed. And given that these teams work at different functional areas, and the product dependencies are unbreakable or not-easily decoupled, they therefore, are running as separate teams and handle their own backlog items instead.  So, here's my problem, let me pick a sample User Story,    In order to prevent search engine to index the content    As a user    I want to have an option to block web crawler  The acceptance criteria/steps are straightforward for a site within the cloud product, a user can adjust a flag via the API or UI, and running a web crawler on this site won't be able to index anything.  This feature requires the API team to support a new flag and the backend team to make the web server to read the flag and perform the blockage.  If I have to force features to be completed end-to-end in each Sprint, the backend team may not be able to catch up as the work on API is relatively simpler. You may suggest that I should scale up the backend team instead?  Or should I split the Story, so that API stories can be accepted as early as possible, simply by verifying if the flag has been set? But that's bad because the Story is not considered really done, and we will have to come back to test it end-to-end, and it sounds like duplicating half of the work we have done earlier.  Or should I adjust the length of a Sprint so that the API and backend team can complete these Stories within the same Sprint?",5357
"08:01 am November 16, 2012                    Hi yclian,  if i underdestand you right you did split your teams in a horizontal way like an UI Team, an API Team, a Backend Team and so on. So you have developers in your team which focus on one specific layer of your product. According to the Scrum Guide a Team has to be cross functional in order to complete a user story by it's own. What about splitting your teams verticaly so you have at least one ""specialist"" of every layer in every team? This does not mean that those persons are forever responsible for their layer in the Team since every Team member in a Scrum Development Team should have the skills to do nearly every task but they could lead the discussion and help the rest of the Team.  Note that this is just my personal opinion :-)          Log in or register to post comments",5357
"02:33 pm November 16, 2012                    I just attended an Agile conference in Orlando last week, and I brought up this exact same issue with some of the experts.  They suggested, like Pascal above, to slice the teams vertically.  One expert even called them 'Dynamic Feature Teams'.    Sure, Scrum says to keep teams together as much as possible to build trust, stable velocities, etc.  But, adding a bit of Kanban flavor, go ahead and create/adjust these Dynamic Feature Teams as needed.   We are trying it right now in phase 2 of our application.  It does help.  It also brings up a few new issues.  But they aren't as bad as the issues with multiple horizontally sliced teams waiting on each other.   In phase 1 of our application, we had team C waiting on team B which was waiting on team A.  By the time team C got started, team A forgot what it had done because 3-5 sprints had passed.  So they had a hard time supporting teams B and C on that feature.  A lot of time was wasted.  So we're hoping these Dynamic Feature Teams are the answer.           Log in or register to post comments",5357
"07:27 am November 17, 2012                    I go with Pascal in his thought of having crossfunctional teams, is the best solution. But if there is no way to mix up your UI and your backend team may try to change the relation of the team, so you not get both of the parts as one feature to your customer. Let the UI-Team be the customer for the backend team, so you always have delivered parts of the implementation from the view of the the teams. You avoid having the done team hanging in an ""I don't know"" state while they are waiting for the other team. They are done, and have delivered (to their customer) and can go on.  It's not the optimal way (as a said before, I think the optimal way is to make the team crossfunctional over UI and backend) but this can be in some company-context a long way, and you can may use this to deliver between teams and keep every team in a state where they can follow scru,m.          Log in or register to post comments",5357
"04:07 am November 19, 2012                    Hello all,  Thanks a lot for the response. Yeap, I would go with vertical slicing the features too if I could, IMO, it's the matter of time to have the skill set required to work on HV to be shared across the team - and it can be a really long time.  What I see feasible are (at least within a shorter and predictable period of time)   - Have the backend team to learn the frontend API stuff as a start   - Choose a few team members and start setting up the dynamic team - it might sound too ambitious to make every one cross functional as a start?   - Make frontend the customers (but this is arguable, the backend can be the customer of frontend as they need data, maybe I just need to settle than arguing the direction)           Log in or register to post comments",5357
"08:10 pm November 21, 2012                    Yclian,  A few other things that might be important to know are:  1.  Have you asked the teams?  If so, what did they say?  2.  What is your role on the team?  3.  How big is each team that you're talking about?  4.  Are your teams co-located or distributed?  5.  Is the PO the same person on both teams?  6.  How would you describe the Scrum maturity of your teams?  7.  Do you do all other Scrum practices(besides cross functional teams)?  If not, which ones do you currently not do?    Some of the answers to these questions might lead me to suggest other ideas.  Here is an idea that ignores the above questions, but if I had the answers to the above questions, my advice might change dramatically, so reader beware.  :-)  1.  This is why feature teams are better.  I don't necessarily agree with the Dynamic Feature Team concept,but you can certainly begin building feature teams in an incremental way, with the goal of eventually achieving a cross functional, feature team.  See Cohn's  Succeeding With Agile... and http://www.mountaingoatsoftware.com/blog/the-benefits-of-feature-teams for more good info on feature teams vs. component teams.  This(not having fully cross functional teams) should be considered a fairly high priority impediment.  2.  If at all possible, I'd recommend getting a good Scrum coach because problems like these are not easily solved by practitioners.  It sounds like you could use a good re-org of your teams into specific feature and component teams in the short term, then move to full on feature teams in the longer term. Often a coach can help in this arena tremendously.  Keep in mind that this statement of mine is self serving in that I'm a professional Scrum coach.  :-)  3.  Now, if #1 and #2 is just not possible at all, I consider this to be a problem of ""external dependencies"" between Scrum teams.  In your situation, which is complex to convey over the internet using text, I think I would approach it this way:  The back end team is a ""component team.""  The API team is a ""feature team"".  Someone from the API team is either the PO or a *very* key stakeholder involved in the backend team.  It sounds like the dependency really only goes one way.  The API team depends on the back end team.  So, the back end team has one Story whose title is something like ""Add option to block web crawler.""  They consult with their PO and key stakeholders(the API team, among possibly others) as to how to define the *interface* between the API layer and the ""back end layer."" -- in other words, the ""what"".  The backend team finishes the story and demonstrates the functionality at a Sprint Review, where our API team PO or key stakeholder is present(as well as anyone else from the API team who wants to attend).  The API team now implements the story you speak of and performs end to end testing, and demonstrates that feature to it's key stakeholders(presumably the backend team is not a key stakeholder here on this story).  That is how you coordinate a story using what I call ""the sequential method"".    You can also do the ""parallel method"" like you described, where both teams take it on at the same time.  I only tend to favor the ""parallel"" method when I'm 95+% confident that both teams can finish their piece in the same sprint, and where both teams have a strong history of tight and happy collaboration.           Log in or register to post comments",5357
Log in to reply,5357
Messages,5356
"09:16 am November 13, 2012                             Hello everyone, I recently start going after SCRUM knowledge to apply it inside the company that I work for, but i noticed that there are certifications that can be done, such as PSM I/II and I don't know if there are others to, so, that makes thing more interesting, judging that I'll be aiming for something greater than just implement, it will raise my interest to study it.  My main question would be, where can I find/buy material to study for those certifications? I've read some materials here, but I'm still kind of lost, everything new to me.  Thanks  André Fróes",5356
"09:43 am November 13, 2012                    Hi Andre, Welcome to the world of SCRUM... a world where learning never stops and the amount of information you will read and understand will only serve to cause you to seek more information.   A good place to start is the SCRUM Guide (the official rules of scrum), however, it is important to understand that SCRUM is much more than rules, events, artifacts etc... There is the culture or mind-set to SCRUM, and for that, you would want to read up on AGILE and LEAN (in my opinion).   Alternatively, attend one of the excellent instructor facilitated courses that SCRUM.Org have certified. Last resource....this forum (and other like it), ask questions and most times, the peer experts will answer.          Log in or register to post comments",5356
"06:54 pm November 13, 2012                    Andre,   The main thing to study for the PSM I is the Scrum Guide.  After giving a thorough read of the Scrum Guide a few times, try your luck at the Scrum Open assessment (it's free, and you can take it multiple times).  The Professional Scrum Foundations(PSF) class also helps you prepare for PSM I, and the course includes a free try at the PSM I assessment.  You can find a list of PSF classes here:  http://courses.scrum.org/classes/title/professional-scrum-foundations  You can find the Scrum Open assessment here:   http://www.scrum.org/Assessments/Scrum-Open-Assessment          Log in or register to post comments",5356
"11:54 am November 15, 2012                    Thanks for the very useful information! I'll start reading it now and look for this knowledge.          Log in or register to post comments",5356
"01:19 am November 21, 2012                    I have scored 50%, 63% and 93% (today) in my PSM open assessments. Does this mean I now prepared for the certification exam?   I have also noticed that in PSM open assessments, questions are often repeated, at least 30% of the questions appeared in all three attempts.   Are there any other PSM mock exams that I can take before I appear for certification?            Log in or register to post comments",5356
"03:41 pm November 21, 2012                    Sunandajit,  As one person put it:   I strongly suggest that you do this open assessment as many times as you can until you consistently score 100%. You should also aim to complete it in less than 20 minutes.  This is to prepare you for the Professional Scrum Master I assessment which consists of 80 questions and a time limit of only one hour.  Some of the questions in the open assessment also appear in the Professional Scrum Master I assessment so, every time you take the open assessment it’s an investment in getting ready for the Professional Scrum Master I assessment.  Start at this link: http://blog.rueedlinger.ch/2011/04/how-to-pass-professional-scrum-maste…  Be sure and read all of the comments and other links in the comments on that first page.          Log in or register to post comments",5356
Log in to reply,5356
Messages,5311
"02:11 pm August 15, 2012                             Sometimes I feel that the team is bored with retrospective and planning meetings. How can we improve these meetings? And how can we keep these meetings interesting and useful?",5311
"07:28 am August 16, 2012                    It should be more interactive session rather than just one person reading down the points from each team. We should brain-storm on the improvements and things which puzzles and note down the action items. During next Retro we should revise all the open items from last retro. In this way, everyone will realise that we are paying attention to the suggestions and things which are beiing highlighted during this call.  I hope it will improve thier involvement.          Log in or register to post comments",5311
"09:45 am August 16, 2012                    I just wrote a short blog post yesterday about how to ""upgrade"" your Sprint Retrospective meetings.  Basically, I just linked about 15 of the more popular activities and exercises a Scrum Team can do during a Sprint Retrospective meeting. Some of them can be used during the other events as well.  http://blog.accentient.com/2012/08/14/UpgradeYourSprintRetrospectiveMee…          Log in or register to post comments",5311
"07:03 am August 17, 2012                    Thank you Richard for the great summary!  Personally I enjoy occasional special activities, but only use them for solving special problems or to increase trust between participants. Honest and open discussions and feedback should usually do, and each person should add the meeting's value by her own participation, not expecting to be ""entertained"" by SM or PO.  Instead of hiding the real communication problems under more entertaining activities, I would first make sure that the facilitator is listening more than talking, and that people openly discuss what's going on. Transparency requires trust and courage.          Log in or register to post comments",5311
"08:46 am August 18, 2012                    Besides what Richard has written on his blog, you also want to bring some food to the meeting. Foods are one of the most effective way to get people to talk during these meetings. :-)          Log in or register to post comments",5311
"08:57 am August 21, 2012                    I do agree with Richard about changing up your retro format.  So much so that I wrote an article on that topic a while back:  http://www.scrumcrazy.com/Best+Practice+-+Change+Up+Your+Retrospective+…  I also have a favorite retro format that I feel like works well in a lot contexts:  http://www.scrumcrazy.com/Scrum+Pattern+-+Plus+Delta+Hash%28PDH%29+Retr…  I also agree with Lare that one should be careful about having activities that hide communication problems.  In my experience, utilizing one of the retro formats listed on Richard's link actually reveals communication problems rather than hides them.          Log in or register to post comments",5311
"09:28 am August 21, 2012                    As to how to spice up Sprint Planning meetings, that one is a bit tougher in my view.  My advice would be to again change up the format, or maybe a better way to say this is, as a Scrum Team member, suggest that the team try a different format.  AFAIK, there are not a lot of well documented Sprint Planning Meeting formats.  I have one that I have not yet published, and it's very rough or I would give access to it.  One way to find out about different formats is to observe other teams, and then bring the new ideas to your team.  I've also found that people are less bored when they are all very involved in the planning session, and when the planning session is as short as possible.  You can try pairing people up to task out stories, etc.  Or, alternatively, you can give us a rough view of how your Sprint Planning normally flows and we can give you some ideas for different things to try.  Hope this helps!          Log in or register to post comments",5311
"12:14 pm September 21, 2012                    Thanks a lot!          Log in or register to post comments",5311
"01:59 pm September 21, 2012                    I, too, am a fan of switching up the Retro format.  The team likes to evaluate the different formats and we repeat ones that they like.  Once they even suggested their own format/game which provided lots of valuable feedback.  I don't think it is a way to entertain them but a way to take a repetitive event and make interesting...and also retain its value.  I think all the ones on Richard's blog are good to try.          Log in or register to post comments",5311
"02:20 pm September 21, 2012                    Giovanai,  You are most welcome.  Try to come back and tell us how it goes!  :-)          Log in or register to post comments",5311
"04:08 pm November 18, 2012                    Some ideas how to energize your restrospectives: [BR]   [LIST]  [*] vary your ways in the moderation. Use card walls or the floor, sticky notes or task cards  [*] use post cards as an opener  [*] Introduce your team's happieness index   [*] Show the importance of team work by some games -Play the NASA space game with your team - to show that the team is more than an individual; Play the Sin-Obelisk - to show the importance of moderation and teamwork   [/LIST]  [br] [br]More details on this are described on: [BR]  [URL]http://yascrum.blogspot.de/2012/11/evolving-retrospectives-variations-t…] [BR] [BR] How we do the retrospectives - maybe this already contains some other elements you use currently: [BR]  [URL]http://yascrum.blogspot.de/2012/11/evolving-retrospectives-inspect-adap…]          Log in or register to post comments",5311
"04:12 pm November 18, 2012                    Some ideas how to energize your restrospectives:  * vary your ways in the moderation. Use card walls or the floor, sticky notes or task cards  * use post cards as an opener   * Introduce your team's happieness index  * Show the importance of team work by some games -Play the NASA space game with your team - to show that the team is more than an individual; Play the Sin-Obelisk - to show the importance of moderation and teamwork  More details on this are described on:  http://yascrum.blogspot.de/2012/11/evolving-retrospectives-variations-t…  How we do the retrospectives - maybe this already contains some other elements you use currently:  http://yascrum.blogspot.de/2012/11/evolving-retrospectives-inspect-adap…           Log in or register to post comments",5311
Log in to reply,5311
Messages,5353
"11:07 am November 7, 2012                             What should I do if one of my Team-Members is Ill or in Holidays.  - Should I handle it as a PBI Illness or Holidays?  - Should I do nothing?  - Should I include it in the velocity calculation (how?)  - Extending the Sprint length is probably against the rules.  - Other solutions?",5353
"11:52 am November 7, 2012                    Hi Marco,  I like to let the team decide. They are asked to forecast a certain amount of work for their Sprint and should take holiday and sick time in to account. As a Scrum Master you can remind them of these obstacles, but it is ultimately up to the team. If they feel they can do just as much work, then let them rise to the occasion. But the odds are that it will impact your velocity, but so will a lot of other things along the way.  I would certainly avoid extending the Sprint or creating sicktime/holiday PBIs.  Does that make sense?  Don          Log in or register to post comments",5353
"12:15 pm November 7, 2012                    ""PBI Illness or Holidays""  How would this help?  ""Do nothing?""  Happy Holidays and get well are always welcome.  Other than that, I like  this option.  ""include it in the velocity calculation""  How would you do this?  If someone is sick or there is a holiday, can we  presume you have done less as a result?  By summing the features you *actually  complete* doesn't that reflect your *actual *velocity?  ""Extending the Sprint length""  This is evil.  The timebox is, among other things, a tool for inspection.   If you have a two week sprint and then go to a three week sprint, you  can't assume you'll do 2/3 of the work in your next two week sprint.  On Wed, Nov 7, 2012 at 11:07 AM, <ScrumForum@scrum.org> wrote:  >          Log in or register to post comments",5353
"12:45 pm November 7, 2012                    Marco,  When you said:  ""- Should I include it in the velocity calculation (how?) ""  Did you really mean this?  ""The team sometimes uses historical velocity as one of many tools for forecasting the amount of work possible in an upcoming sprint.  Once the team has estimated velocity(based on historical values, aka ""yesterday's weather), should the team adjust it down for planned time off or holidays?""  If you did, then my answer would be this:    That seems fine, so long as you remember that 'commitment based estimating' is also a very useful tool for forecasting the amount of work possible in an upcoming sprint.  Commitment based estimating is along the lines of ""gut feel"" or ""team consensus"" -- though there's more to it than that.  See ""commitment based planning"" in Cohn's _Agile Estimating and Planning_ for more details.  I coach most teams to do *both* velocity based and commitment based planning, but to, in the end, make a team consensus decision.  I should also mention that using historical velocity to forecast the amount of work in a single sprint is probably not as useful as using it for longer term milestones like releases.  Using it for longer term milestones is really what the concept of velocity was designed for.           Log in or register to post comments",5353
"04:44 am November 11, 2012                    Hello,    In our project, we estimate/plan for some buffer time (sufficient to absorb 1-2 unplanned leaves) and that is visible to the product owner as well. This is to ensure any unplanned/sick leaves don't impact the sprint outcome.     Also, we have something called 'stretch tasks' which are extra few (low priority) tasks and are only accommodated into the sprint when there is a smooth sailing without any leaves/impediments.          Log in or register to post comments",5353
"01:20 pm November 11, 2012                    Don't you feel like buffers decrease transparency? The progress of the Sprint will naturally show what is and is not possible. The outcome of the Sprint is a forecast and every day the Development Team checks on their forecast to update it via the Sprint Backlog, not?          Log in or register to post comments",5353
"05:23 am November 12, 2012                    Well, we are currently still adapting to the Agile/Scrum way of project execution, and haven't reached a point where we have confirmed the team's velocity and are able to navigate around unplanned leaves, etc. We have been executing the project in a traditional model for so long, that the timelines/deliverables are considered to be rigid.. hence the idea of buffer to maintain everyone's confidence levels..  But in the true sense of scrum, I agree we should learn from previous forecasts and take it from there. Hopefully in next 1-2 sprints, we will be there.          Log in or register to post comments",5353
Log in to reply,5353
Messages,5319
"12:51 pm September 3, 2012                             Hi,  I try to pay for PSM1 assessment  on mcssl.com (1stshoppingcart.com), but it seems that the system does not accept my debit card. I get:  ""Sorry, your credit card has been declined.  Please confirm your payment information and re-submit your order.""  I have debit card in non-USD currency. Is it possible to pay with it?  As I read on mcssl site, they accept debit cards and they have multi-currency payment support (probably not enabled on scrum.org)  Thanks",5319
"02:22 am September 4, 2012                    Hi,  Have you tried with a Credit Card instead? Some Visa debit card cannot be used for online transaction.          Log in or register to post comments",5319
"01:51 am September 7, 2012                    I had the same problem, I called my bank in Peru to activate the use of my credit card by internet.  Joel          Log in or register to post comments",5319
"02:12 pm November 11, 2012                    You were right, my Visa card had some limits regarding internet payments which I didn't know. I tried with another card (also non-USD) and everything worked fine. Thanks.          Log in or register to post comments",5319
Log in to reply,5319
Messages,5350
"02:55 am October 31, 2012                             My customer - large industrial company - does great using Scrum at the engineering level. However, they do not profit from Scrum as they could since they cannot involve the end user:  1.) A strong product management is shielding the end user from direct access using traditional upfront and document driven requirements engineering.  2.) The end user is not interested/not used to provide feedback. Despite several and personal invitations they are not attending the Sprint Reviews. The end user are very busy on their daily job and they do not get the features currently in development for at least another year.  Solutions are on the hand. But I'm seeking especially for similar situations and practically applied solutions.",5350
"05:08 pm November 2, 2012                    Dani,  I don't know if this would work for your org, but I saw one team who gave out gift cards to customers who came and participated in sprint reviews.  I think that these customers participated on their own time(i.e. not ""company time"").  I have no idea if something similar would work for you or not.  Maybe provide dinner just after work and do it after hours?  Best of luck!          Log in or register to post comments",5350
"12:16 pm November 6, 2012                    Hi Daniel,  My client is building products for service providers. They have similar situation as yours.   Instead of Sprint Reviews, they scheduled the feedback session into the project deep-dive meeting with ""key"" customers. The feedback would be discussed and prioritized by the product manager. This has helped them to address lots of  last-minute must-have requirement changes. The other thing we tried was to identify the ""key"" stakeholder/customer, who was actually responsible for the success of deploying the product/project. That person is usually interested in the progress and usefulness of the product  How your team deals the situation?  -Candi          Log in or register to post comments",5350
Log in to reply,5350
Messages,5348
"02:20 pm October 28, 2012                             Hi,  I'm new to Scrum and reading up about it. I have bought Schwaber and Sutherland's Software In 30 days and have hit a stumbling block. I am obviously missing something so wondered if one of you more experienced Scrum users could guide me and tell me what I have misunderstood.  On Page 23-25 it outlines and describes the Work Burndown. The textual descriptions are fine for me but when I look at figure 2.4 Work Burndown it does not make sense to me.  On page 23 the book states ""...The units are ordered by sequence in which you want them turned into usable functionality. Let's say the order top down is 2,3,5,3 and 8 still.""  On page 24 the book explains further and in paragraph 5 states. ""...The development team created 3,5 and 5 units of functionality in the first three periods of time. The resulting chart is shown in figure 2.4""  Now what confuses me is if I look at the y-axis (requirements) the units plotted are 21   8,3,5,3   8. My question is this how did these figures end up here? It is not the plan work burndown or I would expect 2,3,5,3 and 8. And, it is not the actual Work Breakdown of the development team doing 3,5,3 because where is the 8?  Am I making sense?  Any advice and clarrification much appreciated.  Regards,  David.",5348
"03:43 am October 30, 2012                    If the description is correct then the y-axis of the Work Burndown figure should state the following planned work (top down): 21 (total amount of work), 2 (not 8 as displayed now), 3, 5, 3 and 8.  Just be ware that in the Kindle version the numbers are misaligned on the y-axis. In addition, if the requirements are delivered in the planned order you would first deliver 2 (the first requirement) or subsequently maybe 5 when you're also able to complete the second requirement. Not 3 units of work as described because requirements are either done or not done.  Related to your issue I have encountered a few more inconsistencies later in the book for which I like a response from readers:  > page 72 - sprint meetings are proportionate to the length of a sprint but the numbers in Figure 6.6 imply that shorter sprints result in relative longer sprint meetings;  > page 84 - the Quality and Studio Return measurements in Figure 7.6 table don't match with the diagrams in Figure 7.4 and 7.5;  > page 84: I don't understand the high # of Projects (560?) in Figure 7.6.  Thanks, Chris          Log in or register to post comments",5348
"03:03 am November 2, 2012                    I think it would be best if Ken answered the questions here. I would have to rely on my personal interpretation for some of them.          Log in or register to post comments",5348
"07:30 am November 5, 2012                    Hi Chris,  i think i got an answer for your question related to figure 6.6 on page 72: You are right that the length (Timebox) of Scrum Meetings (expect Daily Scrum) are proportionate to the length of a sprint. But the table shows the number (not the time) of meetings you have on a project of a fixed length with X sprints. The more sprints you have the more meetings you got and more money is spend on this meetings.   Related to your second question i think this is just a failure or the graphs are net related.   On your last question I would say that # of Projects is an absolute number - not relative to the previous Quarter. So from Quarter 8 to Quarter 9 there where 300 new Projects beeing monitored.   But those are only my personal interpretations of the book :-)  I would also like to add another question: On page 176, Figure A3.2 shows three Subsystem Teams. Two of them are starting with ""Sprint 1"" on ""Month 1"" but Subsystem Team A starts with Sprint 4 on Month 1. Why? Did they work in Month -2, -1 and 0?          Log in or register to post comments",5348
Log in to reply,5348
Messages,5351
"08:18 pm November 2, 2012                             Hi to all. I'd like take PDS .NET certification. Can anyone reccomand me a book to prepare for the exam?  Bye,  Andrea",5351
"07:31 am November 3, 2012                    At this time the assessment is tied to the course, but Professional Scrum  Development with Visual Studio will be a great help.  http://www.amazon.com/gp/aw/d/073565798X/ref=redir_mdp_mobile/192-70009…  I'll be sure to reply here if/when the course and assessment are decoupled.  ------------------------------  From: ScrumForum@scrum.org  Sent: 11/2/2012 8:18 PM  To: ryan@echelontouch.com  Subject: PDS .NET                           [00000204:00000000]           Log in or register to post comments",5351
Log in to reply,5351
Messages,5347
"08:37 am October 27, 2012                             Hi,   I have successfully completed PSM1 assessment on 19th Oct 2012. Have not received my certificate yet.   Could you please look into this.   Thanks and Regards,  Saurabh Joshi",5347
"04:22 am October 31, 2012                    I have received it yesterday finally.. Thanks for the help..          Log in or register to post comments",5347
Log in to reply,5347
Messages,5346
"10:51 am October 25, 2012                             Hi!  I had registered for a scrum assessment test 5 days ago (Sunday) and chased via the online contact form 2 days ago but other than the email receipt confirmation for both the payment and the chase I have heard nothing.  Is there a phone contact for someone I can speak to? Is this normal that it takes so long, I am beginning to lose the revision edge!  Thanks!",5346
"10:53 am October 25, 2012                    Yeah - an extra s in there! Actually can't see where to edit a post!          Log in or register to post comments",5346
"10:55 am October 25, 2012                    On my word - appreciated          Log in or register to post comments",5346
"02:53 pm October 26, 2012                    Dear Al_Mo,  I have inquired about this and have been informed that we resent the password for your assessment. Did you receive this and are you now all set?          Log in or register to post comments",5346
Log in to reply,5346
Messages,5345
"11:42 am October 24, 2012                             Your team schedules defects into your iteration backlog in the same way that it schedules user stories. During the sprint, your team spends time on the defect. But then you reach the end of the iteration and the defect is not completely fixed. What does your team then do with that defect? Do you split it in the same way you might split a user story?",5345
"01:45 pm October 24, 2012                    Hello Thom,  If that defect is not completely resolved, then it is not considered done and should go back on the Product Backlog. The team gets no partial credit, but can bring the defect in to the next Sprint to complete it (if it is still important to the Product Owner).   However, if the Product Owner sees true value in part of the resolution, then they have the right to split it up. But ideally, that is something that should have been done when first identifying the defect or at the beginning of the Sprint.  Don          Log in or register to post comments",5345
Log in to reply,5345
Messages,5344
"05:40 pm October 19, 2012                             We're fairly early in adapting Scrum for a distributed team of SW and FW developers. One thing I see happening is that hard work gets avoided since the product owner(s) and individual scrum masters prefer to see the sprint goals met than working on hard, long-term technical hurdles. It's okay for starters but I'm afraid that too much of the hard stuff gets pushed back too far.  Have others experienced the same thing?",5344
"02:18 pm October 20, 2012                    Hi zwieback,  Can you please provide a concrete example of some of the long-term technical hurdles the team are avoiding?  Thank you.          Log in or register to post comments",5344
"12:56 pm October 22, 2012                    Zwieback,  A simple question you might ask is, ""What is causing the Product Owner to seemingly focus on short-term goals, rather than long term product success?"" Are their incentives in place that are reinforcing this behavior? Are there possibly things that you aren't aware of going on related to this larger technical challenges?  Whomever is responsible and accountable for the long-term success of the product likely understands the benefits that can come from surmounting large technical risks early on in a product's life-cycle. Is that person the current PO?  By the way, what is your role in this effort?  Alex          Log in or register to post comments",5344
"04:03 pm October 22, 2012                    Unfortunately, I can't be very specific due to confidentiality restrictions. I'll have to think about a way of rephrasing to avoid giving stuff away.  The general problem is that the individual teams understand long-term technical risks, e.g. HW issues or roadmap concerns that don't deliver immediate product owner or customer stories. At the level where user stories are generated they tend to focus on multiple, immediately useful but smaller issues.  Our current solution is to guess how to split up our time between R&D and implementation tasks but that has its own set of problems around velocity estimation and resource management.           Log in or register to post comments",5344
"04:09 pm October 22, 2012                    @Alex: I'm one of the scrum masters so I'm closer to the team than the overall product and marketing people.  ""What is causing the Product Owner to seemingly focus on short-term goals, rather than long term product success?""   Good question - that's probably what I need to figure out. I think it's a mixture of being new to the program and booting up the scrum process, which is a learning experience for everyone. A real challenge in a mixed program is that scrum works well for SW development, less so for FW development and not very well for HW and mechanical design.           Log in or register to post comments",5344
Log in to reply,5344
Messages,5343
"02:00 pm October 19, 2012                             Hi,  As a Product Owner, i have an line manager asking my team to ""absorb"" 3 new members, brining the total size up to 11 members!  Although i appreciate the thought, i'm worried about bringing new members into a scrum team that has already committed to a 3 week sprint.  Is this grounds for pushing the highly unpopular ""Sprint Cancel Button""?  Thanks for any feedback.",5343
"02:16 pm October 20, 2012                    Hi Oliver,  Yes ideally you would add team members when the Sprint has finished. The team will dislike the Sprint being cancelled. Is waiting until the end of the Sprint not an option?          Log in or register to post comments",5343
"03:51 pm October 20, 2012                    On top of Joshua's comment:  Did you educate the line manager about the inevitable new forming/storming phases? Is he willing to accept the lowered performance during the next couple of months?  Additionally, you should involve your Team as deeply as possible. If they WANT the new members, you will be fine. If they HAVE to absorb them, you should allow them to self-organize. Allow them to do anything necessary, including splitting up into several Teams, if that is what they want to do. Don't raise suggestions yourself but wait for the Team to come up with some - that way you make sure the decisions are committed to by everybody.  If you really have to bring in new members in mid-Sprint (which would be a violation of the Sprint and should be avoided), don't assume you will get anything done at all during the Iteration. Canceling the Sprint is difficult for your Team but on the other hand makes it for everybody very transparent what is happening there.  If I was you, I would describe all options to my Team and let them decide. No matter how hard the decision. It will pay off in the long run.  Best  Dominik          Log in or register to post comments",5343
"09:39 am October 22, 2012                    Thanks so much for the feedback Dominik and Josua.  I am extremely uncomfortable about absorbing 3 new members during a sprint, so i'll ""educate"" the line manager as to the potential impacts upon the ongoing sprint and team.  I would prefer they do not join until the next sprint (2 weeks from now), rather than interrupt the team momentum and dynamic.  It is good to have your feedback on top of the Sprint Rules to highlight the potential negative impacts of changing the team mid-sprint!  -Oliver.          Log in or register to post comments",5343
Log in to reply,5343
Messages,5342
"06:18 am October 16, 2012                             Hi everyone! I have recently become involved with Scrum and I'm very enthusiastic about it. It's a life saver. I intend to use it for my final year project but my instructor has asked me to provide him with a monthly schedule of what is to be done every month. My first initial approach was this:  November 2012:   Documentation needs, prioritizing and sequencing feature cards, plan n iterations,   get scope to 80%	  December 2012:   Iteration n-1: Requirements, Design, Development, Customer Preview, Test.  Adapt: Re-plan.  Early prototype  January 2013:   Iteration n-2: Requirements, Design, Development, Customer Preview, Test.  Adapt: Re-plan.	  April 2013:  Adapt: Final integration	  April 2013:  Go live  As you have understood I can't submit any Scrum artifacts. He just needs a simple schedule with tasks. But how do you present a simple schedule that makes sense to people who don't know Scrum and are more used to waterfall methodologies?  Thank you for your feedback. The advice of experienced professionals is very useful to me and I appreciate it.",5342
"10:22 am October 16, 2012                    What pieces of functionality do you foresee delivering in each iteration?  Find a way to present that information to him/her.  You might even share how you plan to do so in the first sprint.  Of course, after sprint 1 you'll have new insights and probably need to send him another revision of that plan.  Those last two items would make me nervous: Final Integration and Go Live.  That's an awful lot of hardwork put to the test at the last minute.  What kinds of crazy things can you concoct that practice those two things earlier?  What is your project focused on if you don't mind sharing?          Log in or register to post comments",5342
"02:51 pm October 16, 2012                    Hi Zoe,  in addition to Ryan's advice I suggest you create a Product Backlog, which focuses on delivering working (and done) functionality. You can chop down this Product Backlog into Sprints, which might reflect your monthly planning situation. However, you will be better off with shorter Sprints. You might also want to include some planning items each Sprint, which reflect the time you need to adapt to new insights.  Take special care about Ryan's hint of integrating constantly and early. There are companies failing out there because they don't heed that advice.  Best  Dominik          Log in or register to post comments",5342
"03:29 pm October 16, 2012                    To add to Ryan's reply, I would suggest you find ways to start integration in earlier iterations by providing maybe more basic functionalities sooner and more complete functionalities in the next iterations (in an incrmental manner). Not a critic but having sequence of sprints like 1- Documentation, prioritization, plan, 2- Iteration 1 - Prototype, 3- Iteration 2 - Product rel. 1, 4- Final integration and go live, it is still sounds a bit like waterfall paradygm.  For the communication aspect, I would suggest you start change as soon as you can and discuss SCRUM approach with your instructor. By trying to give him what he used to have will not force minset change in the organization.          Log in or register to post comments",5342
"06:26 pm October 16, 2012                    Hi everyone. Thank you again for your valuable feedback. Indeed, after reading Ryan's comment I focused on the product backlog and I planned a 21 day window for four sprints. I really felt I had no idea what I was doing. It was an overwhelming process. :) I can't agree more with all of you. Dominik and Michel, you are right, I should start with basic functionality, then add up - shorter sprints. Instead I have the four ""waterfalls"" (or should I say skyfalls??) over my head. :) I've read many books about Scrum and Agile but I was never part of a team that used Scrum and there are no mentors around. :) How did you learn Scrum?          Log in or register to post comments",5342
"03:45 pm October 18, 2012                    First, by reading books like you but practicing aspect is missing. There are courses where you can go through more practical exercises that could help to avoid pitfalls. Probably, you can be able to find some good courses near to your local area. Often, SCRUM training organizations also offer mentoring services.  And the last but not the least, try it and adjust (which is the basis of SCRUM by itself). You can inspect and adjust at each sprint and this also includes the way you use SCRUM framework.          Log in or register to post comments",5342
Log in to reply,5342
Messages,5339
"06:51 pm October 13, 2012                             We have a medium sized project that we are discussion how to split into multiple teams. I would like to get some feedback between the two options that are being contemplated.   Option 1: Split into 2 Scrum Teams  Overview:  * 7 Fully-dedicated development team members on each team (excluding PO and SM)  * 2 Team members split across both teams (due to specialization of skills, domain, and personality)  * 3 Specialization team members (UX, Data, Infrastructure) that report through other organizations split across both teams.  * Product Owner and Scrum Master split across both teams  Pros  * There is a logical breakdown such that we can define a consistent long range vision for each of the two teams independently.   * The breakdown would allow the teams to deliver larger coordinated organizational goals within roughly established timelines over the next 12-18 months with little or no change to team composition over time.  * There is a higher chance that certain specializations needed would have overlap on each of the teams.  Cons  * Size of the teams. Each development team would consist of 9-12 (depending on whether you count the specialist from other organizations)  * 2 Development team members split across multiple teams  Option 2: Split into 3 Scrum Teams  Overview:  * 5 Fully-dedicated development team members on each team (excluding PO and SM)  * 3 Specialization team members (UX, Data, Infrastructure) that report through other organizations split across all three teams.  * Product Owner and Scrum Master split across all three teams (at least for the near term)  Pros  * Size of the teams. Each development team would consist of 5-8 (again depending on whether you count the specialist).    Cons  * No logical breakdown of vision into 3 team exists (believe me we've tried).  * This will likely lead to the teams growing and shrinking between sprints in order to keep alignment of the dependency of those larger organizational goals.  * More coordination between the 3 teams  * The Product Owner and Scrum Master and the 3 other-organization specialist split across 3 teams.  Basically the only real pro for going to 3 teams is the size of the teams. However, that is a HUGE advantage. So now we need to figure out if that advantage is worth all of the cons that come with it in this particular situation. So I would appreciate any perspective from others, especially if you've ever had to make similar decisions.  Thanks in advance,  Jason Skidis",5339
"08:23 am October 14, 2012                    Hi Jason,  Have you tried both options already? Are these pros and cons based on inspection and adaptation?          Log in or register to post comments",5339
"01:25 pm October 15, 2012                    Jason,  What is your role on the team?  Have you asked the team members what they view would be the best formation?  Do you have the flexibility to let the teams self form and re-adjust based on inspection and adaptation as Joshua mentioned above?          Log in or register to post comments",5339
"03:37 pm October 16, 2012                    My role on the team was the guy that convinced our heavy waterflaw organization to ""allow"" 2 pilot agile teams, although not specifically Scrum as it WAS an politically charged term. My role then become being one of the half dozen folks to successfully convince our organizational leadership to move the organization (over 700 people) to an agile model, specifically Scrum, based in no small part on the success of those teams. My role going forward is to manage a group of Scrum teams, hopefully by keeping my pointy hair out of their way as much as possible and providing them with whatever their inspections reveal is needed to be successful .  The current team that I'm referring to was one of those pilot agile teams, and is currently one very large team. From an inspection standpoint that team has recognized that this is an impediment going forward. There is no consensus on the team whether splitting into 2 or 3 teams would likely be the best approach at this time. We will have some flexibility to adapt if the team determines that initial approach is not working (or does work for a while but needs to change later). However, we do have to work and align with the ""Product Owner"" group and other ""Foundation Teams"", so there will be a non-trivial cost with that type of change. So we don't HAVE to get it right out of the gate, but I would like them to have the most likely chance of success to start out with.  Thank you,  Jason Skidis           Log in or register to post comments",5339
"05:41 pm October 16, 2012                    Jason,  Thanks for the expanded context.  Something I failed to mention before but need to ask now is:  Would all the teams be working on delivering one product?  If so, and assuming that they've discussed all of this a fair amount already then my advice is to put them all in a room, have the next 2-3 sprints worth of Product Backlog handy, and give them 1-2 hours to decide for themselves, after you've presented all of the information that they don't already have.  This large team seems like they have enough Scrum and development experience to make decent decisions, and you yourself admit that there isn't one straight forward and obvious best solution.  It also sounds like you have enough leeway from the org to allow them to inspect and adapt in at least smaller ways going forward.  You might try using the ""Fist of Five"" technique rather than trying to a get a completely unanimous decision that everyone has to be ecstatic about.  Your situation is fairly unique.  I don't have a personal experience that matches close enough to contribute, I'm afraid.  Maybe others do.          Log in or register to post comments",5339
"12:26 am October 17, 2012                    ""Is it one product?"" is one of those questions that depends on what context your asking in. The team is working on one PROJECT. This project is composed of a back-end ""big data & analysis"" layer with regular user facing capability exposed through web portal content and a set of APIs and tools made available for ""external tool builders as users"" . In terms of ""deployable units"" (different sets of portal content, services/API vs. tools etc.) we can split on a number of axis, so depending on how we want to define a ""product"" there are a number of ways to answer that question.  Moving forward we can relatively easily split into 2 groups either by splitting core data + analysis vs. portal content, API and tools OR by splitting up by the domain area. The problem comes when we try to think of logical way of splitting into 3 groups that could be maintained with relative consistency (in terms of team size needed to be deliver the highest value backlog items of the project) over the next 12-24 months. As I mentioned there is some value in allowing teams to have ownership of some logical grouping that is consistent for a significant period of time. However, we could go to a model of one backlog across the multiple teams and is somewhat arbitrarily split up each sprint (or every few sprints) that would allow us achieve a smaller team size. There is a consensus that an approach where we split into 3 teams whose size is frequently changing to meet demands is not an option we would want to explore. The ""Product Owner"" group is pushing for the logically consistent grouping in 2 teams but aren't adamant and could be convinced otherwise if given good reasons to do so.   I was hoping, probably unrealistically, that I would get some feedback like ""Advantages of small teams almost always trump team ownership consistency or requiring certain specialists trying to focus on 3 or more teams at once"" or ""The team ownership principles and/or having specialist focused on fewer groups is almost always more important than having a team that is a little large than ideal.""  I appreciate the feedback I have received. I think we will likely move forward with the 2 team approach and make sure we are regularly assessing (inspecting) that decision and adapting it if we found that we need to.   Thanks,  Jason           Log in or register to post comments",5339
"01:41 pm October 17, 2012                    Jason,  Thanks for the extra context.  Defining ""product"" is sometimes difficult, and in your case, moderately complex (though I've seen similar products in my career)  I'm sorry you didn't get the straightforward answer that you're looking for.  I understand and feel your pain.  Your motivations are noble and genuine.  Having said that, this happens a lot in complex situations.  If your problem was simple, I might be able to give a simple answer.  Your problem is not simple.  Some things to consider:  * It's very difficult to communicate complex team/project context across the ""interwebs"" or ""not live.""  Ken Schwaber talks more about this in this post(and I tend to agree):  http://kenschwaber.wordpress.com/2012/08/04/i-have-a-quesstion/  ""...Forgive me for not giving quick answers. Surgeons don’t perform surgery over the phone, either (I think)...""  * There are other variables you did not and maybe could not describe.  Some examples:  Is your team co-located?  How truly co-located is it?  How good is your PO who might be split across 3 teams?  Is the PO 100% dedicated/allocated to working on this project and this project only?  How good is your SM who might be split across 3 teams?  Is the PO 100% dedicated/allocated to working on this project and this project only?  And then we come back to the meta issue at hand.    If what you're describing is a truly complex problem, then there is no easy/quick answer, AND furthermore, the accuracy of said answer is suspect.  Scrum and complexity theory (the Cynefin model, in particular) teach us that, for complex problems, it's usually better to ""Probe, Sense, Respond"" then try to ""Sense, Analyze, and Respond"".  Said another way, it's better to pick a path and test it out than it is to over-analyze which path to take.  I believe this is kind of what Joshua was alluding to above.  If I were you, I would work to convince your org something to the effect of ""All the easy problems are already solved.  The days of one size fit's all solutions and 'best practices' are over.  We live in a society with global competition and globally complex problems.  Software product development is a complex space that is not predictable by statistical analysis.  The best we can do, as a team, is to pick a decent path and then inspect and adapt towards a better path.  If anyone else thinks they can always pick a better path for complex problems, then they should get to Las Vegas or become a stock market investor, because they will get much richer in those arenas.  Or not.""          Log in or register to post comments",5339
Log in to reply,5339
Messages,5341
"05:13 am October 16, 2012                             Hi Friends,  I've been using Scrum & Agile over 5 yrs.  I attended 3 official Agile & Scrum training, most of them are 2 ~4 days.    Now, I'm acting as a scrum master in my teams.  My next target is to be a certified Agile & Scrum trainer. Any suggest from you?  Thanks!",5341
"02:54 pm October 16, 2012                    Hi Jess Chen,  a good start might be this section on the website: https://www.scrum.org/About/Work-With-Us/Trainers  One prerequisite to apply for becoming a Scrum Trainer is to pass the assessments (at least PSM I and PSM II) with more than 95%. Do you meet this requirement?  Best  Dominik          Log in or register to post comments",5341
Log in to reply,5341
Messages,5338
"05:34 am October 12, 2012                             During our sprint planning meeting the team decides how many stories to take on for the sprint, breaks stories down to tasks and then jointly estimate the tasks in ideal hours. No tasks are currently assigned/taken on by developers at the sprint planning.   This has the advantage of emphasizing that we take on the work as a team, not as a group of individuals that are only responsible for his/her tasks during the sprint.   However, creating a plan for the sprint is more difficult as you could end up with a lot of work that is depending on a few individuals, such as a database developer or QA engineer. The team is responsible for making a plan on how to deliver the stories in the sprint and this plan need to take into account the availability and workload of developers.  Would it be better to have developers sign up for tasks during sprint planning to make bottlenecks and dependencies visible? How do you do this in your sprint planning meetings?  I'll of course let the team decide how they want to track their progress and plan their work but I am still interested in your thoughts on this.  Thanks  Fredrik",5338
"11:45 am October 12, 2012                    Fredrik,  I coached a team that had similar challenges.  The way that team solved that was to do the following:  * Towards the end of sprint planning, the dev team looked for any ""critical paths"" or ""potential bottlenecks"" in the Sprint plan.  The team mark any tasks that met one of those two conditions with a red asterisk.  People would generally start work on the critical path type tasks first(or early) so as to reduce the bottlenecks.  The team would also keep a close eye on the critical path as the sprint progressed.  * (This team also did this)While I strongly prefer people to sign up for tasks as the sprint emerges, I think it's generally a good practice for developers, at the end of Sprint planning, to sign up for a task or two so everyone knows where everyone is starting.    In my experience, signing up for more than about two tasks early in the sprint usually creates more bottlenecks rather than less, as everyone views it as a static plan that cannot be changed.  As such, people end up saying ""Well, I can't work on task C because so and so is signed up for task B and he's still working on task X"".  I have some more material on Sprint tasking that you might be interested in here:  http://www.scrumcrazy.com/Sprint+Tasking+Tips           Log in or register to post comments",5338
"05:08 am October 15, 2012                    Hi Charles,  Thanks for your ideas. I'll suggest your idea about marking critical/bottleneck tasks. A minority of tasks should fall into this category and if there are too many that will be an indicator that we'll have problems delivering the stories.   A question about tip #22 in your sprint tasking tips. How does the idea of calculating available capacity and tracking remaining time work when pair programming? I guess you want to decide if you want to/should pair on a task when you start working with it, and not at the sprint planning. If the pairing is done for teaching/mentoring purposes the time for an 8 hour task would double from 8 to 16 hours, rendering the capacity planning at the sprint planning useless. What's your take on this?          Log in or register to post comments",5338
"01:12 pm October 15, 2012                    Fredrik,  If you know at Sprint Planning that you will pair, then estimate the task in person hours (See tip #13 for more on how to estimate paired tasks)  If a dev later decides to pair, then they should change the task estimate as soon as they know that the number of person hours will be materially higher.  One of the purposes of the capacity planning at Sprint Planning is to create a ""capacity line"" on your burndown.  By changing the task estimate as soon as the change is known, it will impact how the actual line in relation to the capacity line, thus reflecting the current reality.  I don't see how any of these ""changes to reflect reality"" render the Sprint capacity planning useless.  I think these changes increase transparency on reality.  I should also mention that the tips in that article are mainly for ""Shu""/Beginning level teams.  It sounds like your team is in that ""neighborhood,"" so the advice should probably still prove useful.          Log in or register to post comments",5338
"04:08 am October 16, 2012                    Charles,   My point with ""useless"" was that if it's unknown whether members will team on tasks the estimate can be off by 100% during sprint planning. The most important thing though is not to have a perfect plan to start with but to  inspect/adapt during the sprint so the remaining work is visible. I think your suggestion to increase the estimates when members decide to pair will work for us and will suggest we try it.  Thanks for your ideas.          Log in or register to post comments",5338
"11:46 am October 16, 2012                    Fredrik,  You're welcome.  I'm happy to help.    The other thing your team can start to observe is the rough amount of time that pairing happens, and then do new Sprint planning with that in mind.  For instance, the team could plan to pair about 20 hours in the next sprint, and take that into account in Sprint Planning.  You are correct -- the point is not to create a perfect plan - but one that is based on ""what we know now,"" then inspect and adapt forward as the sprint and future sprints progress.  Best of luck!          Log in or register to post comments",5338
Log in to reply,5338
Messages,5340
"08:29 am October 15, 2012                             Hello all,  I'd like to provide feedback in form of a comment on the definition of Scrum in the Scrum Guide. There it says:  >Scrum Overview  >Scrum (n): A framework within which people can address  >complex adaptive problems, while productively and creatively  >delivering products of the highest possible value.  The interesting part here is 'complex adaptive problems'. I understand that problems can be complex and that is logical to state or assume, but to me there is no sense in saying that problems are adaptive.  I'll copy/paste few relevant word definitions from the dictionary:  - Adaptive, adjective  Having a capacity for adaptation.  - Adaptation, noun  The process of adapting to something (such as environmental conditions).  - Adapt, verb  Make fit for, or change to suit a new purpose; Adapt or conform oneself to new or different conditions.  - Problem, noun  A state of difficulty that needs to be resolved; A question raised for consideration or solution; A source of difficulty  I'd say that the process of solving problems can be adaptive. When solving problems you can have adaptive approach and adaptive execution of it, but it makes no sense saying that problems itself are adaptive.  From my viewpoint the definition of Scrum as it is stated in the Scrum Guide is not completely logical and should be changed. I'd like to hear some feedback from the community on this.  Thanks",5340
"11:07 am October 15, 2012                    Whether successfully conveyed or not, I believe the intent is that complex problems are not always clearly understood.  As we approach and attempt to solve a complex problem, our understanding of that problem becomes clearer.  In this way we must reevaluate both the problem and the solution.  Continuous planning allows for this dynamic where a plan alone constrains learning.          Log in or register to post comments",5340
"06:12 am October 16, 2012                    I agree with you and that is how I see it too.  If one checks the blog posts about changes to Scrum Guide, one will see that they are trying to improve the Scrum Guide by changing some terms and wordings to more clear or accurate ones. It is very important that everything is as clear, concise, accurate and logical as possible. For a document containing definition of a process/framework (Scrum Guide) it is crucial that it is written in such way and effort from the organization to make it so is clearly visible.  I appreciate that and in such spirit I'm hoping to draw some attention to specific part of Scrum Guide where I can see possible improvements (definition of Scrum: '... adaptive problems...').          Log in or register to post comments",5340
"10:24 am October 16, 2012                    Agree.  It is up to Ken, Jeff and the rest of Scrum.org to synthesis this information and take action - if action is appropriate.  I'm not entirely sure it does, personally.          Log in or register to post comments",5340
Log in to reply,5340
Messages,5337
"01:32 am October 10, 2012                             Hi am Santhosh,  Have cleared my PSM 1 certification on 08.10.2012 and i have not received the certificate still,also my name is not updated in the certificate list on scrum.org portal.  Can any one explain me about how frequent the certification list gets updated in scrum.org portal.  I request scrum.org to send the certificate soon.  Thanks   Santhosh.J",5337
"01:33 pm October 10, 2012                    Does it say anywhere on the website how long it should take?          Log in or register to post comments",5337
"03:22 am October 11, 2012                    when you get the result of PSM 1 exam its wrriten there that certificate will emailed in 5-7 days.          Log in or register to post comments",5337
Log in to reply,5337
Messages,5320
"09:40 am September 4, 2012                             I am looking for some ROI calculation or business case to support the introduction of scrum practices into the company I work for. The technical and development teams immediately see hte benefits but I am having a hard time convincing the business usersated",5320
"12:23 pm September 4, 2012                    Have you taken a look at ""Software in 30 days""? The books is targeting Management.   Beyond that, there are a couple of case studies out there. For example, try to search for ""Sentinel"" - it was an FBI project that was quite successful with Scrum.  Hope that helps  Dominik          Log in or register to post comments",5320
"07:04 pm September 4, 2012                    Hi,  Chad Albrecht did a great talk about the dollars and sense of scrum.  It is up on youtube, and will help put a financially focussed viewpoint to the management.  http://www.youtube.com/watch?v=pLeSvduRPrQ  Regards  Simon          Log in or register to post comments",5320
"03:06 am September 5, 2012                    Thanks Gents this is most helpfull          Log in or register to post comments",5320
"07:43 pm September 5, 2012                    Hi Andre,  Dominik and Simon has given you great suggestions but I am going to give you a question. Why do you think the business people is still unconfident with Scrum?          Log in or register to post comments",5320
"01:05 am September 6, 2012                    Hi Joshua  It is more around the change required as an orginisation the business involvment in IT projects over the years have been limited and as such there was quite a few failures as you will understand. It is a change management effort but as always there need to be numbers to back this and get the requisite buy in. We are oly introducing scrum in the orginisation now the development teams are all on board and understand the concept the problem is around getting the business to own the product owner role, I introduced the mangement teams to the concepts and the business users now need the training the investment the training now need to be motivited. From my view there is way more up than down side hence my question around how i can get the message across better          Log in or register to post comments",5320
"08:17 am September 6, 2012                    Hi Andre,  And why do you think showing other people's number would make them more confident? Remember, it's not the number produced inside your organisation. I could just make up some random number for your managers and give it to them if you want. ;)          Log in or register to post comments",5320
"09:10 pm September 7, 2012                    I think Steve Denning makes a good business case for Scrum in his new book -- it really targets managers.  http://www.amazon.com/The-Leaders-Guide-Radical-Management/dp/0470548681  As to the ROI, my guess is that they don't measure ROI right now, so showing them an ROI somewhere else may not help.          Log in or register to post comments",5320
"07:31 pm September 20, 2012                    Charles,  Great points! Along with another book to add to my list!  :)  I agree that most people that ask for ROI typically don't use it today.  A simple conversation that I have found effective starts with ""Why can't we just keep doing what we are doing today?""  (Keep track of the responses)          Log in or register to post comments",5320
"10:29 am October 9, 2012                    JP> Why do you think the business people is still unconfident with Scrum?  Good morning, Joshua.  This is a question to which I have yet to find a satisfactory, or even marginally satisfying answer.  Most engineering and manufacturing companies, that aren't pure ""think tanks"", when they envision a new project to develop a new product, have a time and cost budget in mind beyond which it is no longer time-effective or cost-effective to develop the product. Maybe they have to get it out into the marketplace by a certain time or they lose their window of opportunity. Maybe the product has to sell at or below a certain price point or no one will buy it.  Most Agile (upper-case ""A"") processes emphasize the time to complete the next increment (the next ""sprint"" or whatever one wants to call it) and don't pay much attention to how long it is projected to take to complete the whole project. Ditto costs... most Agile processes don't seem to pay significant attention to development cost targets.  So, precisely HOW is it that one convinces senior management of the benefits of Agile processes when the managers' major focus (it's in their job descriptions) is on time-to-market and cost figures?  Note the difference between ""Agile"" (upper-case ""A"") and ""agile"" (lower case)... I consider the former to mean a defined process that conforms to the Agile Manifesto.  The latter is what most people, particularly software managers, mean when they use the term... at best, they take it to mean ""anything that is faster than how we have done it before"" including any of the iterative processes that have been in use for decades.  Eric Poole  www.rkt-tech.com           Log in or register to post comments",5320
Log in to reply,5320
Messages,5330
"03:49 pm September 24, 2012                             Hello,  I recently followed the PSD (not PSM) course, took the assessment afterwards and passed. For the PSD training, you get 2 free tries.  In order to be able to become a trainer however, one needs more than 95%. So my questions is, what happens when I use my password for a second time, in order to get more than 95%? If I get less than 90% on the second try (you never know :-)), will I lose my certificate?  Is it possible to do a third try after you first 2 tries? If yes, what will it cost?  Thanks in advance!  Chris",5330
"07:22 am October 1, 2012                    AFAIK passwords are one-time only, so you will have to pay for a second attempt.  regards,  StarLight          Log in or register to post comments",5330
"07:24 am October 1, 2012                    Whoops didn't read correctly that you have two attempts, sorry (for PSM course you get only one try).  regards,  StarLight          Log in or register to post comments",5330
"05:08 am October 8, 2012                    A colleague tried it, and after passing the first time, he was able to do the exam a second time. He passed again, and all is well. :-)          Log in or register to post comments",5330
Log in to reply,5330
Messages,5336
"04:28 am October 2, 2012                             Having taken and passed the PSM I course and assessment, I was wondering if this would be enough to pass the PSPO assessment?  There is a specific course for this, but wondered if it was required to pass the PSPO assessment?",5336
"10:26 am October 3, 2012                    Hi Andrec,  do you believe that Scrum Master and Product Owner need to know the same things? Are you working as a Product Owner?  Right now, the PSPO course is required in order to do the PSPO I assessment.  Best          Log in or register to post comments",5336
"10:34 am October 3, 2012                    No I know they are different, no I just want to increase my knowledge on the scrum roles.  Oh ok, I thought it was open just like the PSM I          Log in or register to post comments",5336
"10:39 am October 3, 2012                    It's not open yet.  On https://www.scrum.org/Assessments/Professional-Scrum-Product-Owner-Asse… it reads ""At present, the PSPO I assessment and certification is open only to those who have taken a Professional Scrum Product Owner course. Assessment is currently based on the body of knowledge contained in the courseware. Once the body of knowledge has been formalized as a Scrum Product Owner Guide, the assessment will be open to the public and anyone – including those who have not taken a Professional Scrum Product Owner course – will be able to assess themselves.""   I guess this means we should stay tuned on changes to this assessment. In the meanwhile I suggest you work closely with POs or try to fill the role yourself to increase your knowledge.  Best          Log in or register to post comments",5336
"10:44 am October 3, 2012                    Yeah I just noticed that, ok thanks for the heads up.          Log in or register to post comments",5336
Log in to reply,5336
Messages,5335
"06:49 am October 1, 2012                             When a member of a development team is not cooperating well with other members, is a scrum master responsible for this situation and allowed to remove the member from the team?",5335
"08:56 am October 1, 2012                    Hi:  I don't think that the Scrum Master is responsible for the situation...however given a Scrum team is a self-managing and collaborative, I think the Scrum Master could have a conversation with the team member to find out what's up and what possible barriers to cooperation exist.  Based on the discussion - and what the team member wants, you might get other team members involved to resolve the issue.  I would only consider removal if the barriers that exist cannot be resolved.          Log in or register to post comments",5335
"03:17 pm October 1, 2012                    Hi,   As I perceived from the definition, the scrum master should (timely) train the development team how to do self organization and how to manage cross functional responsibilities.   The definition gives us a hint how a Scrum Master could possibly handle your concern. He might try to figure out what in hindering for the team member in responding properly or what is hindering him to respond properly. The scum master can try to solve the problem together with the other team members or at least from his experience motivate them to reunion as before but he should not try to remove the team member from the development team.  One more thing, does the Scrum Master selects candidates for the development team? .... I believe NO. Then he should not be the one to remove the team member.  Finally, after all its the game of humans .....  handling with human behavior, misunderstandings, communication gapas will always have solutions :-)           Log in or register to post comments",5335
"04:06 pm October 1, 2012                    +1 to Jill's and Usman's answers, though the context by the original poster is small.  AMoni, if you could tell us more, perhaps we could help you more.  Scrum does not address this particular problem directly, which means that the users of Scrum are expected to come up with their own solution.    The Dev Team is self organizing, so my first questions would be:  Has this topic come up in a retro?  If so, what was said?  If not, why not?  Has it come up elsewhere?  What was said?  How many of the Dev Team feel this way?  If the Dev Team doesn't seem capable of resolving this impediment, then maybe the Scrum Master needs to help get it resolved.  However, the Scrum Master only has authority over the Scrum implementation, and removing a team member is not part of the Scrum implementation.  Further, by allowing the SM to have this ""fire"" authority, you will probably be encouraging the team towards a ""command and control"" approach instead of a self organizing one, so this is almost always a bad idea.  The only real authority the SM has here is to make sure that the impediment is removed.  I would conclude, again based on limited context, that the SM is responsible for ensuring that the ""impediment"" gets removed, but I would expect the SM to facilitate the impediment removal by others, rather than acting upon their own to do so.  Further, ""removing the impediment"" doesn't necessarily mean removing the team member, as Jill mentioned above.          Log in or register to post comments",5335
"08:37 pm October 1, 2012                    Well said Charles.  AMoni, remember that the Scrum Master serves the Development Team (& PO), while the Development Team serves the Product Owner.  That Product Owner has every right to expect the team to resolve their issues.  As much as we want to dance around with Development Teams ruling the roost, they had better act like professionals.  That PO may just find a new team.          Log in or register to post comments",5335
"05:17 am October 2, 2012                    Thanks everybody who gave a reaction. The question is just theoretical. I'm new at scrum and thinking about adopting scrum in our organization.   A lot of questions are entering my mind, like the one I put on the forum. I think scrum doesn't say explicitly something in this matter.  So it is up to the company how to work out these things. However it is the scrum masters' task to remove impediments. Can you speak of an impediment?  Is it the task of a scrum master to inform the management about the undesirable situation, so that management can undertake the necessary steps?          Log in or register to post comments",5335
"02:34 pm October 2, 2012                    AMoni,  I think your theoretical question was a valid and not uncommon impediment.  Did the answers not convey the purpose of the SM role?  What is it that you are trying to do with the answers?          Log in or register to post comments",5335
"02:44 pm October 2, 2012                    Hi AMoni:  I think your example was a great and common one.  With regard to your last question - I think the SM would work with the team to get the team to resolve the impediment - either individually or together and not have the manager resolve the impediment.  My manager is always saying ....figure it out yourselves....I know you can do it - if we 'forget' and bring things to him to resolve.   And I am constantly parroting this to the team....when they bring problems to me.  Deep down...I truly believe they can do it, too.          Log in or register to post comments",5335
"03:26 pm October 2, 2012                    Jill/Amoni,  That's not to say that Scrum Master's wouldn't actually resolve it, especially with teams new to self organization.  An objective would be to instill the skills necessary to resolve impediments in the team.  The best quote I've heard: ""Scrum Masters are constantly trying to put themselves out of a job.""    I would extend that to leaders as well.  Leaders should always be fostering new leaders; transferring their skill and knowledge.          Log in or register to post comments",5335
"07:02 pm October 2, 2012                    > ""Scrum Masters are constantly trying to put themselves out of a job.""  I've heard this quote before.  My concern is the implication that a Scrum Master is eventually un-needed or unhelpful to a Scrum Team.           Log in or register to post comments",5335
"02:29 am October 3, 2012                    Hi,  I think that the consensus is that the Scrum Master is acting in a facilitation and coaching role. In my experience this tends to be a little more directive during the initial adoption to help the team understand how to work in self organising way.  Over time there is a natural transition to a more coaching and facilitation role - in a similar manner to rubber duck debugging http://en.wikipedia.org/wiki/Rubber_duck_debugging.  That helps with the intellectual aspects - but for the human aspect we often need an unbiased third party to defuse any emotional context. This is where I have seen very effective conflict resolution in Retrospectives and after Daily Scrums, to help the team understand and then resolve the issue.  As such, I would suggest that a scrum master becomes redundant when there are no possible further improvements - which is a highly unlikely scenario!          Log in or register to post comments",5335
Log in to reply,5335
Messages,5327
"02:23 am September 17, 2012                             Hi,  I am a BA from the IIBA school and want to transition to Certified Scrum Product Owner.  I am stuck at taking the training from a value add training institute and getting certified.  But even before that, what should a BA keep in mind before the transition.  So the broader question being  1) What should the BA do while transition from BA to CSPO  2) What shouldnt the BA do while transition from BA to CSPO.",5327
"11:59 am September 17, 2012                    Hello Ambarish,     Thank you for your question.    You might be confusing our Scrum.org product ownership program (PSPO) with the Scrum Alliance (CSPO).     Even so, I think you are wondering about transitioning from the role of Business Analyst to a Scrum product ownership role. If this is the case and you are looking to learn more about Scrum Product Ownership in general, I recommend starting by reading the Scrum Guide,    http://scrum.org/Scrum-Guides    Checking out Ken Schwaber's book, Agile Project Management with Scrum,    http://www.amazon.com/Project-Management-Microsoft-Professional-ebook/d…     And having a look at the PSPO information.   http://scrum.org/Assessments/Professional-Scrum-Product-Owner-Assessmen…    I hope this helps!    Best,    Daniel          Log in or register to post comments",5327
"04:59 pm September 17, 2012                    Roman Pichlers book and blog are great resources for Scrum PO's:  http://www.romanpichler.com/          Log in or register to post comments",5327
Log in to reply,5327
Messages,5313
"08:23 am August 23, 2012                             Hi,  How long does it take to receive the certification after passing the exam?  Thanks",5313
"08:50 am August 23, 2012                    Hello Shauna,    It typically takes 2 business days to receive your certificate after passing your assessment, however, it may take up to 5 business days depending on when your assessment was completed.    I hope this helps!     Daniel          Log in or register to post comments",5313
"07:56 am August 24, 2012                    Thank you! I have received the certification. :)          Log in or register to post comments",5313
"11:10 am August 24, 2012                    Great!          Log in or register to post comments",5313
"10:58 am September 14, 2012                    I'm not that lucky.  I have passed the exam for more than 1 week, but have not yet received the certification.          Log in or register to post comments",5313
"11:29 am September 14, 2012                    Thanks support team for resending it to me.  I noticed that the certificate was indeed sent to me before, but was treated as Spam mail.  It was sent to me the next day after passing the exam.          Log in or register to post comments",5313
"03:53 pm September 14, 2012                    Hello Sam,   Thanks for your patience!   Please add @scrum.org to your email client's safe-sender's list to receive future communications from our support team.   Best,  Daniel          Log in or register to post comments",5313
Log in to reply,5313
Messages,5323
"04:34 am September 13, 2012                             Hello,  I want to know how long is the PSM1 certificate valid?  Kind regards,  Job",5323
"10:55 am September 13, 2012                    Hello Job,  At present there are no plans to expire PSM I certifications.  Best,  Daniel          Log in or register to post comments",5323
Log in to reply,5323
Messages,5305
"03:06 pm July 19, 2012                             Common Question:  The Sprint is over and some things did not get done. How do we handle that?",5305
"02:08 am July 20, 2012                    I've got a blog post on just this question at http://www.richard-banks.org/2012/03/what-do-i-do-with-partially-comple….  To save you clicking through to the link here's the short version:  1. Unfinished/UnDone items are placed back on the product backlog  2. The Product Owner re-orders the backlog. Typically unfinished items end up at the top, but not always.  3. Do not resize the items to represent only the remaining undone work.  4. Do not split the story to represent what was worked on and what wasn't.  An item is done or it isn't.  There's no i-between.  5. Do not include any effort spent on the unfinished items in the velocity calculation of the current sprint.  Velocity is a reflection of your rate of completion not your effort expended.  From an engineering perspective you should also consider approaches to development that will allow you to easily exclude unfinished code from the sprint's delivered increment.  Two common approaches are the use feature toggles in the application and using source control with a branch per story pattern.          Log in or register to post comments",5305
"07:47 am July 20, 2012                    I agree with Richard except on #3  I say re-estimate the effort to complete the item when it goes back to the product backlog. There are several reasons to that:  1. You want your backlog to be transparent  2. Velocity measures how much done software the team delivers in a sprint, so assuming the item will be completed the next sprint, only the left over part counts in the velocity of the next sprint  3. You want your product owner to easily assess the ROI of completing the undone item           Log in or register to post comments",5305
"01:16 pm July 30, 2012                    Same thinking as Vincent's  3. and 4. are perfectly fine if they make sense in the given context. If it becomes a pattern then it could be a smell to be addressed in a retrospective.   In the end it is about delivering value and to work with the Product Owner.          Log in or register to post comments",5305
"07:27 am August 9, 2012                    I'm with Vincent and Ralph here.  I'd also add that there are many cases where the team realizes that a PBI can be decomposed into even smaller chunks of done work.  For example, let's say that feature A can actually be broken down into chunks B, C and D.  The team realizes it can deliver B and C to done, but not D.  After talking with the Product Owner, they should return D to the Product Backlog (PB) and finish B and C.  D then gets estimated and ordered along with everything else on the PB.    Remember, if we can take some work to done so it can be inspected, do it!  Story Points, velocity and other estimation techniques are just that, estimation techniques.  They are to be used by the team to determine what they can deliver.          Log in or register to post comments",5305
"12:39 pm August 9, 2012                    I think Vincent, Ralph and Chad are right. I do agree that if the PBI is not DONE, then you can't claim it is, demonstrate it, etc. But work was done and we want to know how much work remains in the release. So, partially completed items should be estimated for work remaining. Otherwise, velocity is not meaningful.  I also totally agree with one branch per Product Backlog item worked in the Sprint. I wouldn't want to work any other way (but it's up to the team and the Product Owner).!  Scrum on!  Mark          Log in or register to post comments",5305
"06:23 am August 10, 2012                    Mark,  I want to be clear that I am not advocating the use of partially done work.  I am saying that there are cases where teams may be able to break a story down further into work that can be delivered as done.  If this is not the case, then it should go back on the PB wholesale.  The team may choose to re-estimate due to the new knowledge they now have.  What do you mean by ""one branch per Product Backlog item?""  Are you talking about a code branch?  If that's the case, this is pretty dysfunctional and does not promote good collaboration and CI practices.  Teams that I have seen do this (and there are many), typically spend a ton of time at the merge trying to figure out how everything is going to integrate.  A better (IMHO) practice is the use of Feature Toggles, extensive test automation, CI behavior (notice I said behavior not tools) and the idea that the product can be shipped at any time.  Thoughts?          Log in or register to post comments",5305
"07:12 pm August 12, 2012                    To avoid possible misunderstandings I just want to clarify the difference between ""unfinished"" and ""undone"" work. Unfinished work refers to Stories that weren't completed for the product increment according to the PO and DoD and what's discussed in this thread. However, undone work is any work that is required to release the product increment and must be transparent to the PO by capturing them in the Product Backlog as ""Undone Work"" or ""Implementation Work"" Stories (see also http://alistair.cockburn.us/Scrum+Guide).          Log in or register to post comments",5305
"09:54 am August 13, 2012                    For those of us using Visual Studio and Team Foundation Server, I've posted the a similar request (for tooling support) on UserVoice (http://bit.ly/PjpAZL).          Log in or register to post comments",5305
"11:06 am August 15, 2012                    Chad & Richard  I guess ideally if a story is not done during the sprint, everything should be reverted back to its original state so you can have a potentially shippable increment. This would include source code, scripts, documentation basically whatever was changed when working with the story. However, creating branches causes merge-hell and if the work is planned to be completed in the next sprint it's a lot of waste to revert the work already checked in.          Log in or register to post comments",5305
"12:31 pm August 15, 2012                    Another solution would be to use a FeatureToggle. http://martinfowler.com/bliki/FeatureToggle.html  Here's a (.NET) project on github: https://github.com/jason-roberts/FeatureToggle           Log in or register to post comments",5305
"09:41 am August 21, 2012                    I agree with most of the above, including Chris.  In short, do something like what Vincent suggests, and make a clear distinction between ""Undone Work"" and ""Unfinished Work.""  The term ""Undone Work"" was described in a previous Scrum Guide optional strategy as what Chris describes it as.  In 2011, the ""Undone Work"" strategy was removed from the Scrum Guide.  The removal of ""Undone work"" is briefly alluded to here:  https://www.scrum.org/About/All-Articles/articleType/ArticleView/articl…          Log in or register to post comments",5305
"09:42 am August 21, 2012                    Maybe this link will work? (removing the s in https)  http://www.scrum.org/About/All-Articles/articleType/ArticleView/article…          Log in or register to post comments",5305
"09:51 am August 26, 2012                    Chris,   Splitting hairs about ""undone"" and ""unfinished"" usually results in a dysfunction.  We have a Definition of Done and work is either Done or Not Done every Sprint.  The product is always in a ""potentially shippable"" state at the end of every Sprint so the use of other terms does not make sense.  The PO can decide at any Sprint Review that the product and feature set are fit for purpose and want to ship.  Certainly if more functionality is needed then the PB is ordered by the PO and more Sprints are performed. Similar to the forecasting we do every Sprint, the elements of a Release plan are also just a forecast.  We should never count on them being set in stone.          Log in or register to post comments",5305
"06:30 am September 5, 2012                    will the complexity of a undone/unfinished story be different to the complexity of the story before starting working on it? So why should the estimation changing when a story is started but not deliverable?  Maybe the estimation done in planing was wrong and this came clear after starting the work, but than you should redefine the story together with the PO?  regards  Carsten           Log in or register to post comments",5305
"07:24 pm September 12, 2012                    Technically any Undone work (ie. work that is required to release the product increment) could be considered a dysfunction because if the PO decides to go live then it should technically just be pushing the ""Go Live"" button. However considering from the PO, management and stakeholder perspective always more needs to happen to Go Live. Just consider activities like technical QA/QC gates & transports, data migration, communication, training, handover to support & maintenance.  So my suggestion would be to introduce a ""Definition of Go"" similar to Definition of Ready and Done. DoG defines the incremental release state and allows identification of Undone Work until ""Go Live"". It's the Go-Go between the Scrum Team and their project stakeholders including management, support & maintenance teams, operations, etc. It should not be limited to what the Scrum Team is required to do (eg. technically deployment) but include all other incremental release aspects of comms, training, etc. that the Scrum Team is dependent on.  Overall, the DoG:  > defines the incremental release state of complex products in a complex environment  > makes Go Live (work) transparent for the Scrum Team and project stakeholders  > allows for inspection & adaption!          Log in or register to post comments",5305
Log in to reply,5305
Messages,5318
"12:03 am August 31, 2012                             Hi guys,  I found an interesting article in an German IT magazine (iX) about technical debt.   In the article the actual CRASH-Report of the CAST Research Labs is referenced. They stated: to eliminate technical debt it cost round about 3,61 US$ per line of code which brings you to 1 Mio US$ for a product existing out of 300.000 lines of code.   You find the report at:  http://www.castsoftware.com/resources/cast-research-labs  cheers JP",5318
"07:59 am September 4, 2012                    Hi JP,  thanks for sharing the information. Do you know if the iX article is online visible?  Also, do you have the PDF of the CRASH-Report; I would rather not jump through the whole registering process.  Best,  Ralph          Log in or register to post comments",5318
"08:00 am September 4, 2012                    Guten Tag,Ich bin wieder am 10.09.2012 im Haus.Bitte wenden Sie sich bei Softwareproblemen an Frau Golubkov/Herr Beck bzw. verwenden Sie das Outlook-Formular ""IT-Störungsmeldung"". Ihre E-Mail wird nicht weitergeleitet.Mit freundlichen GrüßenJürgen Engemann24/7 IT-SERVICES GmbHLuisenring 49 / 68161 MannheimTel. +49 (0) 621 / 290 1377Fax +49 (0) 621 / 290 2209email: juergen.engemann@24-7-it-services.de=          Log in or register to post comments",5318
"09:56 am September 4, 2012                    You can find that article here  http://www.slideshare.net/Zuehlke_Engineering/ix-9-2012vorsichtzinsenkr…  It's a weird doc viewer on slideshare, but it seems to work OK...     .peter.gfader. (current mood = happy because of grooving reggae tunes)     http://blog.gfader.com           Log in or register to post comments",5318
"03:00 am September 12, 2012                    Ralph,  sorry I do not have the report yet. I think you can't get the iX article online. If you like I can scan it for you.  best JP          Log in or register to post comments",5318
Log in to reply,5318
Messages,5322
"11:28 am September 8, 2012                             Hi, I took a Scrum course and now I 'm preparing for the PSM I assesment.     I understood so far, that I have to pay 100 $ to do the test.     The question for me is: What if I fail to pass the test first try?    Do I have another try or do I have to pay another 100$.    Kind Regards     Joe",5322
"02:48 pm September 8, 2012                    Hi Joe,  if you did an official Scrum.org course (Professional Scrum Foundations or Professional Scrum Master), you get one try for free. Usually, you get your code a few days after you finished the course, depending on the speed of your trainer. :-)  If you did not complete an official Scrum.org course, you do not get any free attempts.  Every try costs 100 $ - so each time you fail, you have to purchase another attempt, if you want to try again.  Best  Dominik          Log in or register to post comments",5322
Log in to reply,5322
Messages,5321
"02:41 am September 5, 2012                             Dear Scrum.org,  I live in Viet Nam, I'm very want test PSM of org, but I do not know how to do it. Please read the detailed instruction.  -Payment Method (use credit card =vnd or usd)  -After the payment when I will receive key to test.  -Test online at Viet Nam or somewhere.  -when I receive key to test, Will I online test on around 14 days?  or please show me step by step, how to register to test PSM from Viet Nam?  Thanks.",5321
"06:10 pm September 5, 2012                    Hello,   The information you are looking for can be found here: http://www.scrum.org/Assessments/Professional-Scrum-Master-Assessments/…  You may pay by credit card, and after making your payment you can expect to receive your assessment password within (1) business day. You should be able to access the assessment from anywhere in the world.  I hope this helps!  Please let me know if you have any other questions.  Best,  Daniel          Log in or register to post comments",5321
"10:34 pm September 5, 2012                    Thanks Daniel so much,  Regards,  Uyen Huynh          Log in or register to post comments",5321
"10:08 am September 6, 2012                    Uyen, you are welcome!   Daniel          Log in or register to post comments",5321
Log in to reply,5321
Messages,5308
"04:40 am August 10, 2012                             I realized after taking the PSM 1 assessment that I am unclear about the priority of having a self managing team versus the practice of Scrum 'rules'.  Specifically - if the team does not want a retrospective what is to be done?  My personal reponse on this would be to question (challenge) the team on this, but if the team still didn't want it, I would comply with the teams wishes.  I would then question/challenge them again after running the sprint - specifically on their thoughts on continuous improvement.  Alas,.....this was not one of the answers.  So...what is correct in this scenario?",5308
"08:22 am August 10, 2012                    This type of behavior is usually a result of some larger dysfunction.  For example, the team does not value (or want) continuous improvement.  These dysfunctions can be worked on in Sprint and may lead the team to see the value in following the 'rules' of Scrum.  You may also have a team that values remaining hidden within the organization, in which case you have your work cut out for you.  Not having a retrospective is dysfunctional.  Call it out as such and continue to coach the team towards removing dysfunction.  How you do this is a bit of an art form but there are many techniques available.  Books, Scrum.org courses, seminars, etc.  Alternatively, I would be happy to discuss this with you more offline.          Log in or register to post comments",5308
"08:40 am August 10, 2012                    That would be great...my email is jill.graves@cra-arc.gc.ca.  I understand what you are saying....but the choices on the exam were:  Stop having retros...the team is self managing  Continue to faciliate positive, retrospectives  When push comes to shove...what wins?  Enforcing the rules or allowing the team to self manage?          Log in or register to post comments",5308
"04:06 am August 11, 2012                    I had that question too in the PSM I. If I recall right the question was about you being the Scrum Master. As Scrum Master your role is to manage the Scrum process. The scrum process is composed by events and artifacts, one of there events in the sprint retrospective meeting. If the development team refuses to have the retrospective they are outside the boundaries of scrum. Keep in mind that the team is self-managed but inside the scrum process. So your role as scrum master is to keep the scrum process running and healty facilitating the spring retrospective meeting. So I think that e correct answer is the second one. Let me add that the refusal of conducting a sprint retrospective meeting in my experience is a sign of some sudden problem in the development team, if this happens pay attention and try to understand the root cause of the situation maybe asking the five whys.          Log in or register to post comments",5308
"07:58 am August 11, 2012                    Are you sure Marcello? :-)          Log in or register to post comments",5308
"08:40 am August 11, 2012                    Never sure, just inspecting ad adapting :) do you think I'm wrong?          Log in or register to post comments",5308
"10:16 am August 26, 2012                    I wrote a little on this back in May:  http://blog.chadalbrecht.com/post.aspx?id=f13ffe3c-fdd9-44d1-944a-ce9a8…           Log in or register to post comments",5308
"11:58 am August 26, 2012                    If I'm taking the PSM I exam...  My answer is to continue to have retrospectives, but it's been a while since I took that exam and I don't know first hand what the ""correct"" answer is.  Also, I have always interpreted the ""self organizing"" aspect of the team to be ""self organizing to do the work"", not ""self organizing to change Scrum.""  In short, it is not the role of the Dev Team or PO to change Scrum.  It *is* the role of the SM to enforce the Scrum principles, roles, etc, and make sure Scrum is followed.  These sentences in the Scrum Guide seem relevant:  ""The Scrum Master is responsible for ensuring Scrum is understood and enacted.  Scrum Masters do this by ensuring that the Scrum Team adheres to Scrum theory, practices, and rules. The Scrum Master is a servant-leader for the Scrum Team.""  In practice...  I've always interpreted this is as: ""The Scrum Master makes *sure* that Scrum is followed, in the nicest way possible.""  If the team rebels against this, I would look for some underlying dysfunction or team level impediment and try to get it solved.  If that doesn't work, I'd escalate to someone higher up, in the nicest way possible.  :-)  I have always viewed the ""inspect and adapt"" motto to mean ""inspect and adapt, *within* the Scrum framework.""  Charles  http://www.ScrumCrazy.com           Log in or register to post comments",5308
"11:26 pm September 4, 2012                    I agree with Charles. ""Self-directed"" teams do not select what they will do, only how they will do it. As a Scrum Master, I would encourage the team to change retrospectives to be as useful as possible. The team doesn't get to ""choose"" not to have them.  Mark Noneman, PST          Log in or register to post comments",5308
"02:59 am September 5, 2012                    I have had this with several teams, for different reasons. The best way to address this issue was by conducting a retrospective :-)  Of course I didn't call it that, but I asked my Team to come together and explore the reasons why they didn't want to do a retrospective. In all cases, the underlying issues could be identified and solved (even though not right away). In my experience, a self-organizing team will never want to stop doing retrospectives as long as they have trust that they can change something for the better and they are not punished for making problems transparent. In my case, it always were ""beginner-Teams"", trying to opt out.          Log in or register to post comments",5308
"09:28 am September 5, 2012                    It's the brilliance that comes from Toyota where the Chief Engineer is responsible for the results of the product but has NO authority over the people doing the work! John Shook called it ""responsibility without authority"".  So if you have no authority you cannot force your team mates to do anything. You you have to coach them by presenting real facts, making them aware of the need for a retrospective , making them aware of potential improvements and make sure that when you have a retrospective it results in valuable, measurable improvements.  You know you're did a good job when your team members think they did it all themselves.          Log in or register to post comments",5308
Log in to reply,5308
Messages,5310
"09:25 am August 15, 2012                             Hi All,    What are your thoughts on how to handle folks who do not attend Scrum regularly? I tried to remind or chat with them offline to make them realise but after 15-20 days the same things get repeated?    Any views?",5310
"09:38 am August 16, 2012                    There must be a reason why people are not attending the Daily Scrum. Maybe it's because they do not get any value out of it, maybe people do not know what to say, maybe they feel not really part of the team, whatever it is you have to find the reason.  Until you figure out why people are not attending you are just guessing or forcing them and as you mention that does not work.  I would talk to them, ask questions and discuss honestly what is going on and then work with them.          Log in or register to post comments",5310
"02:14 am August 17, 2012                    ManishJ, I assume with 'do not attend Scrum' that you mean the Daily Scrum.  First let's look at the why and how of the Daily Scrum.  Why: In Scrum we want the Development Team to self-organize, to act on their own decisions but also to be responsibility for their actions. So my question is: How does your team self-orgainze if it doesn't leverage the possibility to do so.  How: The Daily Scrum is a daily just in time meeting were whole Dev Team gets together and plans (self-organizes) for the coming working day as a means of empirical process control. This is how they maximize their chances to reach the Sprint Goal.  My underlying question are the following:  1. Does the company allow self-organization  2. Has the Dev Team understood the power of self-organization  3. Are you as a Scrum Master enabling 1. and 2.  Don't make them do something, make them understand 'why' it is important and then assist them to do it right.  HTH,  Ralph          Log in or register to post comments",5310
"09:27 am August 17, 2012                    Cesario - I will surely try to more inputs from the folks and will see if I can help them anywhere and then they attend daily Scrum.  Ralph - In our project there is different scenario, we have deve team, BAs and QA folks in one scrum team. So they do self organize and even they have full independect to do this. But as teams are from different companies so they hesitate to share the reasons and where it makes SM's job difficult in resolving their issue.          Log in or register to post comments",5310
"08:44 am August 18, 2012                    ManishJ,  On top of what Ralph and Cesario has suggested, maybe he hasn't found the value of Daily Scrum because he hasn't been trained on Scrum before. Perhaps you would like to spend 30 minutes to quickly explain him the underlying principles of Scrum and all of its ceremonies.          Log in or register to post comments",5310
"09:31 am August 21, 2012                    I agree with others that say to do a ""Five Why's"" and find out what the root problem is.  Does this issue ever come up in your retrospectives?  If so, what is said?  If not, why do you think it never comes up?          Log in or register to post comments",5310
"09:59 am August 26, 2012                    I agree with Charles.  There is an ancillary problem that needs to be addressed.  The ""Five Whys"" is an excellent team exercise to determine a problem's root cause.  It will also get the team talking about issues which is always good.          Log in or register to post comments",5310
"07:15 am September 5, 2012                    Hi Manish,  I'd like to propose a different approach: will you share with us why you think it's a problem for this team not to attend their daily scrum regularly ?   I'm not asking you to repeat the Scrum guide here, but to share the evidences that you see, not only on a daily basis but on a sprint basis too.   And once you've shared these evidence with us, what if you share them with your team and ask it for help to understand why you should not care.  Cheers          Log in or register to post comments",5310
Log in to reply,5310
Messages,5317
"08:49 am August 28, 2012                             My company has an issue I've never heard anyone talk about or address directly, which I feel is inhibiting our ability to really get the most out of scrum. That is how do you handle a wide technology domain gap? We design hardware in verilog, keep a C++ simulator thereof and have a tool chain mainly written in python. The issue this causes is that the software developers (especially the python devs) can't really help the hardware developers in any meaningful way (hardware design is nothing like software design). This has caused stories to be divided into a specific hardware team (bad) or they have fallen on the hardware developer(s) in a cross-functional team - effectively creating a subteam (also bad).   What kind of strategies are useful for helping the teams work together as much as possible and finding ways of helping each other even when some of the developers don't have the skills necessary to implement a story? And perhaps more importantly, am I asking the right question?",5317
"02:55 am August 29, 2012                    Hi Per, And perhaps more importantly, am I asking the right question? I am not sure. Scrum just showed you that you have a major issue outside of Scrum, which you might want to address. Maybe you can sit together with your Team and find out if there are other ways of creating the product you are dealing with. After all, you most likely don't want Python, C++ and so on, but you want a working product at the end of the day. This has caused stories to be divided into a specific hardware team (bad) or they have fallen on the hardware developer(s) in a cross-functional team - effectively creating a subteam (also bad).  If you can't solve the underlying issue right away, think about the following: You will always have specialities in your Team. This won't change. However, the vision and goals should be the same for everybody. Now think about a Product Owner who makes sure everybody can grasp the vision with their hearts and heads: Would all of your teammembers then work together to achieve it? May there be a subteam or not, they would all follow the same goal. It could be possible that your ""User Stories"" are actually not horizontally cut right now.  In the past, I have had several Teams dealing with Hardware, Firmware and Software at the same time. They all ended up having their special skills and dividing their tasks accordingly. However, the good Teams self-organized this and always stayed on track. We just had to look out for the creeping waterfall: This happens if some people have to wait for other people to finish something (""I do the hardware this Sprint, you take care of the firmware next Sprint and the one after that we start with the Software...""). The Sprint goals, and most often the Product Backlog Items as well, were cross-functional and allowed the Teams to form around them.  By the way: After some time, the Teams always started to share skills, so non-experts could support the experts if there was a bottleneck. But again, this was something the Teams figured out themselves.  Hope that helps  Dominik          Log in or register to post comments",5317
Log in to reply,5317
Messages,5314
"09:21 am August 23, 2012                             Hi,  This is Daniel R. from Brazil, I have been studing about Scrum and some doubts arose.  Could you help me?  My doubts:  If I already have a requirements list, then when could I start to spell it?  I´ve got to create a specific Sprint to detail that? Or should I start the analyses along the development?  How can my Product Owner be ahead of the developers?  Thank you.  Regards,  Daniel",5314
"09:53 am August 23, 2012                    Hi Daniel,  Once you have your initial set of requirements, I have found it useful to have a workshop with the Product Owner and the Development Team to groom the backlog in to a reasonable state.You need to have a compelling vision to focus the team on what you are aiming to deliver - it helps bring everyone together to build a coherent product.  Ensure that the INVEST (Independant, Negotiable, Valuable, Estimateable, Small, Testable) are met, making it clearer what is required to get that PBI to Done..  It is very helpful to have a couple of Sprints worth of Product Backlog Items (PBIs) ready to be taken in to the next Sprint. This gives flexibility in Sprint Planning.  After the initial workshop, you should spend around 10% of your Sprint capacity for the Product Owner working  with the Development Team to maintain the Product Backlog in a healthy state. This will be adding new PBIs, reordering, breaking down big PBIs in to smaller PBIs, estimating etc.  The Product Owner will be adding and reviewing changes before any formal sessions. They also need to be working with any stakeholders and customers to reflect their desires to make sure that the most valuable (to the business and the customer) are at the top of the backlog and get done first.  They will need to set aside time on top of their other duties to focus on this, as it is a critical aspect to getting the best possible product released.  Regards  Simon          Log in or register to post comments",5314
"01:08 am August 24, 2012                    Daniel,  If I've understood your question correctly...  I generally coach teams to take a couple of days before starting their first sprint to:  a) Get the sprint to start on the day of the week they initially want, and  b) Bulid up and groom the product backlog, and  c) Do a retrospective.  You heard it -- a retro before you begin.  I find it very valuable to record the results of that retro and then refer back that a few sprints later after some improvements have been made.  Helps to see how far you've come.  As to how to get the PO ahead of your dev team, I recommend weekly, full Scrum Team backlog grooming.  I have a series of articles on my web site that detail the ins and outs Backlog Grooming.    Good to start here:  http://www.scrumcrazy.com/What+does+Product+Backlog+Grooming+Look+Like%…          Log in or register to post comments",5314
"04:25 am August 28, 2012                    Thanks,  Charles Bradley and Simon.  Hugs,  Daniel          Log in or register to post comments",5314
"01:14 pm August 28, 2012                    You're welcome.  I'm happy to help!  Feel free to contact me off-line for your requirements questions.  You can contact me by putting Charles before @ScrumCrazy.com          Log in or register to post comments",5314
Log in to reply,5314
Messages,5306
"03:02 am July 27, 2012                             Hi,  I have a clear understanding what the term ""Scrum of Scrums"" is. But I often collide with others. As the poll shows  http://twtpoll.com/dggc0r  There's a tendency, but the result is not clear. What's your opinion?  Andreas",5306
"01:55 pm July 31, 2012                    South Africa is well trained.          Log in or register to post comments",5306
"09:35 am August 9, 2012                    Andreas .. are you trying to sell your poll in this community?           Log in or register to post comments",5306
"09:52 am August 26, 2012                    +1. South Africa is well trained.          Log in or register to post comments",5306
Log in to reply,5306
Messages,5315
"01:46 pm August 24, 2012                             I took the PSF class this week and I'm reviewing materials to prepare for the assessment.  While reviewing the blogs on scrum.org, I noticed that some concepts (although still being taught) have been removed from the official scrum guide.  (IE...pigs vs.chickens, release planning & burndown)  Is it a fair assumption that those will not be covered in the assessment?",5315
"02:50 am August 25, 2012                    The assessments heavily, but not solely focus on the Scrumguide.  While the Scrumguide is the ""rule book"" for the game, you are not necessarily a good ""player"" just because you know them.  It is also important to know how to apply those rules in practice. Don't worry too much about the assessment, focus on becoming a good Scrum practitioner. Then you of course have to know about best practices.  Some more information about assessment preparation can be found here: <a href=""http://scrumorakel.de/blog/index.php?/archives/30-How-to-prepare-for-th…"">http://scrumorakel.de/blog/index.php?/archives/30-How-to-prepare-for-th…;          Log in or register to post comments",5315
Log in to reply,5315
Messages,5312
"11:13 pm August 18, 2012                             "" A properly functioning scrum team will have at least one release sprint and may well have several""    this sentence true or fals and why?",5312
"09:31 am August 20, 2012                    The sentence is false.    Any adjective in front of the word ""Sprint"" is invalid - there are NO Testing Sprints, Stabilization Sprints, Architecture Sprints, Rest Sprints, etc.    If the Increment - a potentially shippable piece of software - is an artifact that comes out of the Sprint, then any activity those adjectives describe would have to take place within every Sprint, by definition.          Log in or register to post comments",5312
"10:15 am August 20, 2012                    When you have software that has more than a small amount of work to get it into production Scrum Teams may opt to have a Sprint dedicated to that Sprint Goal.  Therefor you may have a Sprint Goal of ""Version 2 of our software runs in production"" with all of the stories needed to get there assigned to this single sprint.  While this is common your goal should be to minimise this as it detracts from the flow of delivering added value to the customers. If you find that this is taking up a lot of your time (more than one Sprint) then you should impress upon the product owner that you need to spend some time streamlining that process to minimise its impact on the team and increase the ""features"" that they build for him.  Ideally your entire deployment process should be able to be conducted as part of the sprint as well.          Log in or register to post comments",5312
"03:56 am August 21, 2012                    Hi fereydoun,  let me clarify it a bit further for you: If somebody asks you that question to improve his Scrum knowledge, the answer is of course ""false"" - if the team is properly functioning, it will product a ""Done"" increment every Sprint and not only every release.  However, there are some situations out there in the ugly world that require you to introduce such ""stabilization phases"" or ""release sprints"". For example in the automotive industry, you aren't really ""Done"" before you did proper summer- and winter-testing, which takes several weeks each. It's impossible to do that every Sprint, but it's required to deliver a fully integrated ""Done"" product.  If you view your question under this light, the words ""at least"" jump at you. This would imply that Scrum requires you to do release Sprints, which is obviously not correct, even though there may be certain circumstances where your team requires such.  Does this help you?          Log in or register to post comments",5312
"06:02 pm August 22, 2012                    While healthy discussion about the underlying rationale for questions and answer is highly encouraged, please try to stay away from directly posting questions and answers from the assessments. Doing so doesn't help anyone.  Thank you,  Alex          Log in or register to post comments",5312
Log in to reply,5312
